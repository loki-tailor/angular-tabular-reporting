(window.webpackJsonp = window.webpackJsonp || []).push([
  [1],
  {
    0: function (t, e, o) {
      t.exports = o("zUnb");
    },
    FyW3: function (t) {
      t.exports = JSON.parse(
        '["{csv.data}"]'
      );
    },
    WZ4y: function (t, e, o) {
      "use strict";
      Object.defineProperty(e, "__esModule", { value: !0 });
      var n,
        r,
        i = o("f7ga"),
        s =
          ((n = function (t, e) {
            return (n =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(t, e);
          }),
          function (t, e) {
            function o() {
              this.constructor = t;
            }
            n(t, e),
              (t.prototype =
                null === e
                  ? Object.create(e)
                  : ((o.prototype = e.prototype), new o()));
          }),
        a = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        l = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.watermarkMessage = void 0), e;
          }
          var o;
          return (
            s(e, t),
            (o = e),
            (e.prototype.validateLicense = function () {
              if (i._.missingOrEmpty(o.licenseKey))
                this.outputMissingLicenseKey();
              else if (o.licenseKey.length > 32) {
                var t = o.extractLicenseComponents(o.licenseKey),
                  e = t.license,
                  n = t.version,
                  r = t.isTrial;
                t.md5 === this.md5.md5(e)
                  ? i._.exists(n) && n
                    ? this.validateLicenseKeyForVersion(n, !!r, e)
                    : this.validateLegacyKey(e)
                  : this.outputInvalidLicenseKey();
              } else this.outputInvalidLicenseKey();
            }),
            (e.extractExpiry = function (t) {
              var e = t.substring(t.lastIndexOf("_") + 1, t.length);
              return new Date(parseInt(o.decode(e), 10));
            }),
            (e.extractLicenseComponents = function (t) {
              var e = t.replace(/[\u200B-\u200D\uFEFF]/g, ""),
                n = (e = e.replace(/\r?\n|\r/g, "")).length - 32,
                r = e.substring(n),
                i = e.substring(0, n),
                s = o.extractBracketedInformation(e);
              return { md5: r, license: i, version: s[0], isTrial: s[1] };
            }),
            (e.prototype.getLicenseDetails = function (t) {
              var e = o.extractLicenseComponents(t),
                n = e.license,
                r = e.version,
                i = e.isTrial,
                s = e.md5 === this.md5.md5(n),
                a = null;
              return (
                s && ((a = o.extractExpiry(n)), (s = !isNaN(a.getTime()))),
                {
                  licenseKey: t,
                  valid: s,
                  expiry: s ? o.formatDate(a) : null,
                  version: r || "legacy",
                  isTrial: i,
                }
              );
            }),
            (e.prototype.isDisplayWatermark = function () {
              return !i._.missingOrEmpty(this.watermarkMessage);
            }),
            (e.prototype.getWatermarkMessage = function () {
              return this.watermarkMessage || "";
            }),
            (e.formatDate = function (t) {
              var e = t.getDate(),
                o = t.getMonth(),
                n = t.getFullYear();
              return (
                e +
                " " +
                [
                  "January",
                  "February",
                  "March",
                  "April",
                  "May",
                  "June",
                  "July",
                  "August",
                  "September",
                  "October",
                  "November",
                  "December",
                ][o] +
                " " +
                n
              );
            }),
            (e.getGridReleaseDate = function () {
              return new Date(parseInt(o.decode(o.RELEASE_INFORMATION), 10));
            }),
            (e.decode = function (t) {
              for (
                var e,
                  n,
                  r,
                  i,
                  s,
                  a,
                  l =
                    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                  u = "",
                  p = 0,
                  c = t.replace(/[^A-Za-z0-9+/=]/g, "");
                p < c.length;

              )
                (r = l.indexOf(c.charAt(p++))),
                  (e =
                    ((15 & (i = l.indexOf(c.charAt(p++)))) << 4) |
                    ((s = l.indexOf(c.charAt(p++))) >> 2)),
                  (n = ((3 & s) << 6) | (a = l.indexOf(c.charAt(p++)))),
                  (u += String.fromCharCode((r << 2) | (i >> 4))),
                  64 != s && (u += String.fromCharCode(e)),
                  64 != a && (u += String.fromCharCode(n));
              return o.utf8_decode(u);
            }),
            (e.utf8_decode = function (t) {
              t = t.replace(/rn/g, "n");
              for (var e = "", o = 0; o < t.length; o++) {
                var n = t.charCodeAt(o);
                n < 128
                  ? (e += String.fromCharCode(n))
                  : n > 127 && n < 2048
                  ? ((e += String.fromCharCode((n >> 6) | 192)),
                    (e += String.fromCharCode((63 & n) | 128)))
                  : ((e += String.fromCharCode((n >> 12) | 224)),
                    (e += String.fromCharCode(((n >> 6) & 63) | 128)),
                    (e += String.fromCharCode((63 & n) | 128)));
              }
              return e;
            }),
            (e.setLicenseKey = function (t) {
              o.licenseKey = t;
            }),
            (e.extractBracketedInformation = function (t) {
              var e = t
                .split("[")
                .filter(function (t) {
                  return t.indexOf("]") > -1;
                })
                .map(function (t) {
                  return t.split("]")[0];
                });
              if (!e || 0 === e.length) return [null, null];
              var o =
                1 ===
                e.filter(function (t) {
                  return "TRIAL" === t;
                }).length;
              return [
                e
                  .filter(function (t) {
                    return 0 === t.indexOf("v");
                  })
                  .map(function (t) {
                    return t.replace(/^v/, "");
                  })[0],
                o,
              ];
            }),
            (e.prototype.validateLicenseKeyForVersion = function (t, e, o) {
              "2" === t &&
                (e ? this.validateForTrial(o) : this.validateLegacyKey(o));
            }),
            (e.prototype.validateLegacyKey = function (t) {
              var e = o.getGridReleaseDate(),
                n = o.extractExpiry(t),
                r = !1,
                i = !1;
              if ((isNaN(n.getTime()) || ((r = !0), (i = e < n)), r)) {
                if (!i) {
                  var s = o.formatDate(n),
                    a = o.formatDate(e);
                  this.outputIncompatibleVersion(s, a);
                }
              } else this.outputInvalidLicenseKey();
            }),
            (e.prototype.validateForTrial = function (t) {
              var e = o.extractExpiry(t),
                n = new Date(),
                r = !1,
                i = !1;
              if ((isNaN(e.getTime()) || ((r = !0), (i = e > n)), r)) {
                if (!i) {
                  var s = o.formatDate(e);
                  this.outputExpiredTrialKey(s);
                }
              } else this.outputInvalidLicenseKey();
            }),
            (e.prototype.outputInvalidLicenseKey = function () {
              console.error(
                "*****************************************************************************************************************"
              ),
                console.error(
                  "***************************************** AG Grid Enterprise License ********************************************"
                ),
                console.error(
                  "********************************************* Invalid License ***************************************************"
                ),
                console.error(
                  "* Your license for AG Grid Enterprise is not valid - please contact info@ag-grid.com to obtain a valid license. *"
                ),
                console.error(
                  "*****************************************************************************************************************"
                ),
                console.error(
                  "*****************************************************************************************************************"
                ),
                (this.watermarkMessage = "Invalid License");
            }),
            (e.prototype.outputExpiredTrialKey = function (t) {
              console.error(
                "****************************************************************************************************************"
              ),
                console.error(
                  "***************************************** AG Grid Enterprise License *******************************************"
                ),
                console.error(
                  "*****************************************   Trial Period Expired.    *******************************************"
                ),
                console.error(
                  "* Your license for AG Grid Enterprise expired on " +
                    t +
                    ".                                                *"
                ),
                console.error(
                  "* Please email info@ag-grid.com to purchase a license.                                                         *"
                ),
                console.error(
                  "****************************************************************************************************************"
                ),
                console.error(
                  "****************************************************************************************************************"
                ),
                (this.watermarkMessage = "Trial Period Expired");
            }),
            (e.prototype.outputMissingLicenseKey = function () {
              console.error(
                "****************************************************************************************************************"
              ),
                console.error(
                  "***************************************** AG Grid Enterprise License *******************************************"
                ),
                console.error(
                  "****************************************** License Key Not Found ***********************************************"
                ),
                console.error(
                  "* All AG Grid Enterprise features are unlocked.                                                                *"
                ),
                console.error(
                  "* This is an evaluation only version, it is not licensed for development projects intended for production.     *"
                ),
                console.error(
                  "* If you want to hide the watermark, please email info@ag-grid.com for a trial license.                        *"
                ),
                console.error(
                  "****************************************************************************************************************"
                ),
                console.error(
                  "****************************************************************************************************************"
                ),
                (this.watermarkMessage = "For Trial Use Only");
            }),
            (e.prototype.outputIncompatibleVersion = function (t, e) {
              console.error(
                "****************************************************************************************************************************"
              ),
                console.error(
                  "****************************************************************************************************************************"
                ),
                console.error(
                  "*                                             AG Grid Enterprise License                                                   *"
                ),
                console.error(
                  "*                           License not compatible with installed version of AG Grid Enterprise.                           *"
                ),
                console.error(
                  "*                                                                                                                          *"
                ),
                console.error(
                  "* Your AG Grid License entitles you to all versions of AG Grid that we release within the time covered by your license     *"
                ),
                console.error(
                  "* - typically we provide one year licenses which entitles you to all releases / updates of AG Grid within that year.       *"
                ),
                console.error(
                  "* Your license has an end (expiry) date which stops the license key working with versions of AG Grid released after the    *"
                ),
                console.error(
                  "* license end date. The license key that you have expires on " +
                    t +
                    ", however the version of AG Grid you    *"
                ),
                console.error(
                  "* are trying to use was released on " +
                    e +
                    ".                                                               *"
                ),
                console.error(
                  "*                                                                                                                          *"
                ),
                console.error(
                  "* Please contact info@ag-grid.com to renew your subscription to new versions and get a new license key to work with this   *"
                ),
                console.error(
                  "* version of AG Grid.                                                                                                      *"
                ),
                console.error(
                  "****************************************************************************************************************************"
                ),
                console.error(
                  "****************************************************************************************************************************"
                ),
                (this.watermarkMessage = "License Expired");
            }),
            (e.RELEASE_INFORMATION = "MTYxMzQ2MjUzMTEzNw=="),
            a([i.Autowired("md5")], e.prototype, "md5", void 0),
            a([i.PreConstruct], e.prototype, "validateLicense", null),
            (o = a([i.Bean("licenseManager")], e))
          );
        })(i.BeanStub),
        u = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        p = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        c = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.ieCompatibility = !1), e;
          }
          return (
            u(e, t),
            (e.prototype.init = function () {
              this.ieCompatibility =
                "5d41402abc4b2a76b9719d911017c592" != this.md5("hello");
            }),
            (e.prototype.md5cycle = function (t, e) {
              var o = t[0],
                n = t[1],
                r = t[2],
                i = t[3];
              (o = this.ff(o, n, r, i, e[0], 7, -680876936)),
                (i = this.ff(i, o, n, r, e[1], 12, -389564586)),
                (r = this.ff(r, i, o, n, e[2], 17, 606105819)),
                (n = this.ff(n, r, i, o, e[3], 22, -1044525330)),
                (o = this.ff(o, n, r, i, e[4], 7, -176418897)),
                (i = this.ff(i, o, n, r, e[5], 12, 1200080426)),
                (r = this.ff(r, i, o, n, e[6], 17, -1473231341)),
                (n = this.ff(n, r, i, o, e[7], 22, -45705983)),
                (o = this.ff(o, n, r, i, e[8], 7, 1770035416)),
                (i = this.ff(i, o, n, r, e[9], 12, -1958414417)),
                (r = this.ff(r, i, o, n, e[10], 17, -42063)),
                (n = this.ff(n, r, i, o, e[11], 22, -1990404162)),
                (o = this.ff(o, n, r, i, e[12], 7, 1804603682)),
                (i = this.ff(i, o, n, r, e[13], 12, -40341101)),
                (r = this.ff(r, i, o, n, e[14], 17, -1502002290)),
                (n = this.ff(n, r, i, o, e[15], 22, 1236535329)),
                (o = this.gg(o, n, r, i, e[1], 5, -165796510)),
                (i = this.gg(i, o, n, r, e[6], 9, -1069501632)),
                (r = this.gg(r, i, o, n, e[11], 14, 643717713)),
                (n = this.gg(n, r, i, o, e[0], 20, -373897302)),
                (o = this.gg(o, n, r, i, e[5], 5, -701558691)),
                (i = this.gg(i, o, n, r, e[10], 9, 38016083)),
                (r = this.gg(r, i, o, n, e[15], 14, -660478335)),
                (n = this.gg(n, r, i, o, e[4], 20, -405537848)),
                (o = this.gg(o, n, r, i, e[9], 5, 568446438)),
                (i = this.gg(i, o, n, r, e[14], 9, -1019803690)),
                (r = this.gg(r, i, o, n, e[3], 14, -187363961)),
                (n = this.gg(n, r, i, o, e[8], 20, 1163531501)),
                (o = this.gg(o, n, r, i, e[13], 5, -1444681467)),
                (i = this.gg(i, o, n, r, e[2], 9, -51403784)),
                (r = this.gg(r, i, o, n, e[7], 14, 1735328473)),
                (n = this.gg(n, r, i, o, e[12], 20, -1926607734)),
                (o = this.hh(o, n, r, i, e[5], 4, -378558)),
                (i = this.hh(i, o, n, r, e[8], 11, -2022574463)),
                (r = this.hh(r, i, o, n, e[11], 16, 1839030562)),
                (n = this.hh(n, r, i, o, e[14], 23, -35309556)),
                (o = this.hh(o, n, r, i, e[1], 4, -1530992060)),
                (i = this.hh(i, o, n, r, e[4], 11, 1272893353)),
                (r = this.hh(r, i, o, n, e[7], 16, -155497632)),
                (n = this.hh(n, r, i, o, e[10], 23, -1094730640)),
                (o = this.hh(o, n, r, i, e[13], 4, 681279174)),
                (i = this.hh(i, o, n, r, e[0], 11, -358537222)),
                (r = this.hh(r, i, o, n, e[3], 16, -722521979)),
                (n = this.hh(n, r, i, o, e[6], 23, 76029189)),
                (o = this.hh(o, n, r, i, e[9], 4, -640364487)),
                (i = this.hh(i, o, n, r, e[12], 11, -421815835)),
                (r = this.hh(r, i, o, n, e[15], 16, 530742520)),
                (n = this.hh(n, r, i, o, e[2], 23, -995338651)),
                (o = this.ii(o, n, r, i, e[0], 6, -198630844)),
                (i = this.ii(i, o, n, r, e[7], 10, 1126891415)),
                (r = this.ii(r, i, o, n, e[14], 15, -1416354905)),
                (n = this.ii(n, r, i, o, e[5], 21, -57434055)),
                (o = this.ii(o, n, r, i, e[12], 6, 1700485571)),
                (i = this.ii(i, o, n, r, e[3], 10, -1894986606)),
                (r = this.ii(r, i, o, n, e[10], 15, -1051523)),
                (n = this.ii(n, r, i, o, e[1], 21, -2054922799)),
                (o = this.ii(o, n, r, i, e[8], 6, 1873313359)),
                (i = this.ii(i, o, n, r, e[15], 10, -30611744)),
                (r = this.ii(r, i, o, n, e[6], 15, -1560198380)),
                (n = this.ii(n, r, i, o, e[13], 21, 1309151649)),
                (o = this.ii(o, n, r, i, e[4], 6, -145523070)),
                (i = this.ii(i, o, n, r, e[11], 10, -1120210379)),
                (r = this.ii(r, i, o, n, e[2], 15, 718787259)),
                (n = this.ii(n, r, i, o, e[9], 21, -343485551)),
                (t[0] = this.add32(o, t[0])),
                (t[1] = this.add32(n, t[1])),
                (t[2] = this.add32(r, t[2])),
                (t[3] = this.add32(i, t[3]));
            }),
            (e.prototype.cmn = function (t, e, o, n, r, i) {
              return (
                (e = this.add32(this.add32(e, t), this.add32(n, i))),
                this.add32((e << r) | (e >>> (32 - r)), o)
              );
            }),
            (e.prototype.ff = function (t, e, o, n, r, i, s) {
              return this.cmn((e & o) | (~e & n), t, e, r, i, s);
            }),
            (e.prototype.gg = function (t, e, o, n, r, i, s) {
              return this.cmn((e & n) | (o & ~n), t, e, r, i, s);
            }),
            (e.prototype.hh = function (t, e, o, n, r, i, s) {
              return this.cmn(e ^ o ^ n, t, e, r, i, s);
            }),
            (e.prototype.ii = function (t, e, o, n, r, i, s) {
              return this.cmn(o ^ (e | ~n), t, e, r, i, s);
            }),
            (e.prototype.md51 = function (t) {
              var e,
                o = t.length,
                n = [1732584193, -271733879, -1732584194, 271733878];
              for (e = 64; e <= t.length; e += 64)
                this.md5cycle(n, this.md5blk(t.substring(e - 64, e)));
              t = t.substring(e - 64);
              var r = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
              for (e = 0; e < t.length; e++)
                r[e >> 2] |= t.charCodeAt(e) << (e % 4 << 3);
              if (((r[e >> 2] |= 128 << (e % 4 << 3)), e > 55))
                for (this.md5cycle(n, r), e = 0; e < 16; e++) r[e] = 0;
              return (r[14] = 8 * o), this.md5cycle(n, r), n;
            }),
            (e.prototype.md5blk = function (t) {
              for (var e = [], o = 0; o < 64; o += 4)
                e[o >> 2] =
                  t.charCodeAt(o) +
                  (t.charCodeAt(o + 1) << 8) +
                  (t.charCodeAt(o + 2) << 16) +
                  (t.charCodeAt(o + 3) << 24);
              return e;
            }),
            (e.prototype.rhex = function (t) {
              for (
                var e = "0123456789abcdef".split(""), o = "", n = 0;
                n < 4;
                n++
              )
                o += e[(t >> (8 * n + 4)) & 15] + e[(t >> (8 * n)) & 15];
              return o;
            }),
            (e.prototype.hex = function (t) {
              for (var e = 0; e < t.length; e++) t[e] = this.rhex(t[e]);
              return t.join("");
            }),
            (e.prototype.md5 = function (t) {
              return this.hex(this.md51(t));
            }),
            (e.prototype.add32 = function (t, e) {
              return this.ieCompatibility
                ? this.add32Compat(t, e)
                : this.add32Std(t, e);
            }),
            (e.prototype.add32Std = function (t, e) {
              return (t + e) & 4294967295;
            }),
            (e.prototype.add32Compat = function (t, e) {
              var o = (65535 & t) + (65535 & e);
              return (((t >> 16) + (e >> 16) + (o >> 16)) << 16) | (65535 & o);
            }),
            p([i.PostConstruct], e.prototype, "init", null),
            p([i.Bean("md5")], e)
          );
        })(i.BeanStub),
        d = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        h = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        f = (function (t) {
          function e() {
            return (
              t.call(
                this,
                '<div class="ag-watermark">\n                    <div ref="eLicenseTextRef" class="ag-watermark-text"></div>\n               </div>'
              ) || this
            );
          }
          return (
            d(e, t),
            (e.prototype.postConstruct = function () {
              var t = this,
                e = this.shouldDisplayWatermark();
              i._.addOrRemoveCssClass(this.getGui(), "ag-hidden", !e),
                e &&
                  ((this.eLicenseTextRef.innerText =
                    this.licenseManager.getWatermarkMessage()),
                  window.setTimeout(function () {
                    return t.addCssClass("ag-opacity-zero");
                  }, 0),
                  window.setTimeout(function () {
                    return t.addCssClass("ag-hidden");
                  }, 5e3));
            }),
            (e.prototype.shouldDisplayWatermark = function () {
              var t = this.licenseManager.isDisplayWatermark(),
                e =
                  null !=
                  location.hostname.match(
                    "^127.0.0.1|localhost|www.ag-grid.com$"
                  );
              return (
                (!!location.pathname &&
                  -1 !== location.pathname.indexOf("forceWatermark")) ||
                (t && !e)
              );
            }),
            h(
              [i.Autowired("licenseManager")],
              e.prototype,
              "licenseManager",
              void 0
            ),
            h(
              [i.RefSelector("eLicenseTextRef")],
              e.prototype,
              "eLicenseTextRef",
              void 0
            ),
            h([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        g = {
          moduleName: i.ModuleNames.EnterpriseCoreModule,
          beans: [l, c],
          agStackComponents: [
            { componentName: "AgWatermark", componentClass: f },
          ],
        },
        y = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        m = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.EXPANDED = 0)] = "EXPANDED"),
          (t[(t.COLLAPSED = 1)] = "COLLAPSED"),
          (t[(t.INDETERMINATE = 2)] = "INDETERMINATE");
      })(r || (r = {}));
      var v = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            y(e, t),
            (e.prototype.postConstruct = function () {
              var t = this;
              this.createExpandIcons(),
                this.addManagedListener(
                  this.eExpand,
                  "click",
                  this.onExpandClicked.bind(this)
                ),
                this.addManagedListener(this.eExpand, "keydown", function (e) {
                  e.keyCode === i.KeyCode.SPACE && t.onExpandClicked();
                }),
                this.addManagedListener(
                  this.eSelect.getInputElement(),
                  "click",
                  this.onSelectClicked.bind(this)
                ),
                this.eFilterTextField.onValueChange(function () {
                  return t.onFilterTextChanged();
                }),
                this.addManagedListener(
                  this.eFilterTextField.getInputElement(),
                  "keypress",
                  this.onMiniFilterKeyPress.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  this.showOrHideOptions.bind(this)
                );
              var e = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eSelect.setInputAriaLabel(
                e("ariaColumnSelectAll", "Toggle Select All Columns")
              ),
                this.eFilterTextField.setInputAriaLabel(
                  e("ariaFilterColumnsInput", "Filter Columns Input")
                );
            }),
            (e.prototype.init = function (t) {
              (this.params = t),
                this.columnController.isReady() && this.showOrHideOptions();
            }),
            (e.prototype.createExpandIcons = function () {
              this.eExpand.appendChild(
                (this.eExpandChecked = i._.createIconNoSpan(
                  "columnSelectOpen",
                  this.gridOptionsWrapper
                ))
              ),
                this.eExpand.appendChild(
                  (this.eExpandUnchecked = i._.createIconNoSpan(
                    "columnSelectClosed",
                    this.gridOptionsWrapper
                  ))
                ),
                this.eExpand.appendChild(
                  (this.eExpandIndeterminate = i._.createIconNoSpan(
                    "columnSelectIndeterminate",
                    this.gridOptionsWrapper
                  ))
                ),
                this.setExpandState(r.EXPANDED);
            }),
            (e.prototype.showOrHideOptions = function () {
              var t = !this.params.suppressColumnFilter,
                e = !this.params.suppressColumnSelectAll,
                o = !this.params.suppressColumnExpandAll,
                n = this.columnController.isPrimaryColumnGroupsPresent(),
                r = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eFilterTextField.setInputPlaceholder(
                r("searchOoo", "Search...")
              ),
                i._.setDisplayed(this.eFilterTextField.getGui(), t),
                i._.setDisplayed(this.eSelect.getGui(), e),
                i._.setDisplayed(this.eExpand, o && n);
            }),
            (e.prototype.onFilterTextChanged = function () {
              var t = this;
              this.onFilterTextChangedDebounced ||
                (this.onFilterTextChangedDebounced = i._.debounce(function () {
                  var e = t.eFilterTextField.getValue();
                  t.dispatchEvent({ type: "filterChanged", filterText: e });
                }, e.DEBOUNCE_DELAY)),
                this.onFilterTextChangedDebounced();
            }),
            (e.prototype.onMiniFilterKeyPress = function (t) {
              var o = this;
              i._.isKeyPressed(t, i.KeyCode.ENTER) &&
                setTimeout(function () {
                  return o.onSelectClicked();
                }, e.DEBOUNCE_DELAY);
            }),
            (e.prototype.onSelectClicked = function () {
              this.dispatchEvent({
                type: this.selectState ? "unselectAll" : "selectAll",
              });
            }),
            (e.prototype.onExpandClicked = function () {
              this.dispatchEvent({
                type:
                  this.expandState === r.EXPANDED ? "collapseAll" : "expandAll",
              });
            }),
            (e.prototype.setExpandState = function (t) {
              (this.expandState = t),
                i._.setDisplayed(
                  this.eExpandChecked,
                  this.expandState === r.EXPANDED
                ),
                i._.setDisplayed(
                  this.eExpandUnchecked,
                  this.expandState === r.COLLAPSED
                ),
                i._.setDisplayed(
                  this.eExpandIndeterminate,
                  this.expandState === r.INDETERMINATE
                );
            }),
            (e.prototype.setSelectionState = function (t) {
              (this.selectState = t), this.eSelect.setValue(this.selectState);
            }),
            (e.DEBOUNCE_DELAY = 300),
            (e.TEMPLATE =
              '<div class="ag-column-select-header" role="presentation" tabindex="-1">\n            <div ref="eExpand" class="ag-column-select-header-icon" tabindex="0"></div>\n            <ag-checkbox ref="eSelect" class="ag-column-select-header-checkbox"></ag-checkbox>\n            <ag-input-text-field class="ag-column-select-header-filter-wrapper" ref="eFilterTextField"></ag-input-text-field>\n        </div>'),
            m(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            m([i.RefSelector("eExpand")], e.prototype, "eExpand", void 0),
            m([i.RefSelector("eSelect")], e.prototype, "eSelect", void 0),
            m(
              [i.RefSelector("eFilterTextField")],
              e.prototype,
              "eFilterTextField",
              void 0
            ),
            m([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        C = (function () {
          function t(t, e, o, n, r) {
            void 0 === n && (n = !1),
              (this.eventService = new i.EventService()),
              (this.displayName = t),
              (this.dept = o),
              (this.group = n),
              n
                ? ((this.columnGroup = e),
                  (this.expanded = r),
                  (this.children = []))
                : (this.column = e);
          }
          return (
            (t.prototype.isGroup = function () {
              return this.group;
            }),
            (t.prototype.getDisplayName = function () {
              return this.displayName;
            }),
            (t.prototype.getColumnGroup = function () {
              return this.columnGroup;
            }),
            (t.prototype.getColumn = function () {
              return this.column;
            }),
            (t.prototype.getDept = function () {
              return this.dept;
            }),
            (t.prototype.isExpanded = function () {
              return !!this.expanded;
            }),
            (t.prototype.getChildren = function () {
              return this.children;
            }),
            (t.prototype.isPassesFilter = function () {
              return this.passesFilter;
            }),
            (t.prototype.setExpanded = function (e) {
              e !== this.expanded &&
                ((this.expanded = e),
                this.eventService.dispatchEvent({
                  type: t.EVENT_EXPANDED_CHANGED,
                }));
            }),
            (t.prototype.setPassesFilter = function (t) {
              this.passesFilter = t;
            }),
            (t.prototype.addEventListener = function (t, e) {
              this.eventService.addEventListener(t, e);
            }),
            (t.prototype.removeEventListener = function (t, e) {
              this.eventService.removeEventListener(t, e);
            }),
            (t.EVENT_EXPANDED_CHANGED = "expandedChanged"),
            t
          );
        })(),
        w = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        b = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        E = (function (t) {
          function e(e, o, n, r) {
            var i = t.call(this) || this;
            return (
              (i.modelItem = e),
              (i.allowDragging = o),
              (i.eventType = n),
              (i.focusWrapper = r),
              (i.processingColumnStateChange = !1),
              (i.modelItem = e),
              (i.columnGroup = e.getColumnGroup()),
              (i.columnDept = e.getDept()),
              (i.allowDragging = o),
              i
            );
          }
          return (
            w(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE),
                (this.eDragHandle = i._.createIconNoSpan(
                  "columnDrag",
                  this.gridOptionsWrapper
                )),
                i._.addCssClass(this.eDragHandle, "ag-drag-handle"),
                i._.addCssClass(
                  this.eDragHandle,
                  "ag-column-select-column-group-drag-handle"
                ),
                this.cbSelect
                  .getGui()
                  .insertAdjacentElement("afterend", this.eDragHandle),
                (this.displayName =
                  this.columnController.getDisplayNameForOriginalColumnGroup(
                    null,
                    this.columnGroup,
                    this.eventType
                  )),
                i._.missing(this.displayName) && (this.displayName = ">>"),
                (this.eLabel.innerHTML = this.displayName
                  ? this.displayName
                  : ""),
                this.setupExpandContract(),
                this.addCssClass("ag-column-select-indent-" + this.columnDept),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  this.onColumnStateChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eLabel,
                  "click",
                  this.onLabelClicked.bind(this)
                ),
                this.addManagedListener(
                  this.cbSelect,
                  i.AgCheckbox.EVENT_CHANGED,
                  this.onCheckboxChanged.bind(this)
                ),
                this.addManagedListener(
                  this.modelItem,
                  C.EVENT_EXPANDED_CHANGED,
                  this.onExpandChanged.bind(this)
                ),
                this.addManagedListener(
                  this.focusWrapper,
                  "keydown",
                  this.handleKeyDown.bind(this)
                ),
                this.setOpenClosedIcons(),
                this.setupDragging(),
                this.onColumnStateChanged(),
                this.addVisibilityListenersToAllChildren(),
                this.refreshAriaExpanded(),
                this.refreshAriaLabel(),
                this.setupTooltip(),
                i.CssClassApplier.addToolPanelClassesFromColDef(
                  this.columnGroup.getColGroupDef(),
                  this.getGui(),
                  this.gridOptionsWrapper,
                  null,
                  this.columnGroup
                );
            }),
            (e.prototype.setupTooltip = function () {
              var t = this,
                e = this.columnGroup.getColGroupDef();
              if (e) {
                var o = function () {
                  t.setTooltip(e.headerTooltip);
                };
                o(),
                  this.addManagedListener(
                    this.eventService,
                    i.Events.EVENT_NEW_COLUMNS_LOADED,
                    o
                  );
              }
            }),
            (e.prototype.getTooltipParams = function () {
              var e = t.prototype.getTooltipParams.call(this);
              return (e.location = "columnToolPanelColumnGroup"), e;
            }),
            (e.prototype.handleKeyDown = function (t) {
              switch (t.keyCode) {
                case i.KeyCode.LEFT:
                  t.preventDefault(), this.modelItem.setExpanded(!1);
                  break;
                case i.KeyCode.RIGHT:
                  t.preventDefault(), this.modelItem.setExpanded(!0);
                  break;
                case i.KeyCode.SPACE:
                  t.preventDefault(),
                    this.isSelectable() &&
                      this.onSelectAllChanged(!this.isSelected());
              }
            }),
            (e.prototype.addVisibilityListenersToAllChildren = function () {
              var t = this;
              this.columnGroup.getLeafColumns().forEach(function (e) {
                t.addManagedListener(
                  e,
                  i.Column.EVENT_VISIBLE_CHANGED,
                  t.onColumnStateChanged.bind(t)
                ),
                  t.addManagedListener(
                    e,
                    i.Column.EVENT_VALUE_CHANGED,
                    t.onColumnStateChanged.bind(t)
                  ),
                  t.addManagedListener(
                    e,
                    i.Column.EVENT_PIVOT_CHANGED,
                    t.onColumnStateChanged.bind(t)
                  ),
                  t.addManagedListener(
                    e,
                    i.Column.EVENT_ROW_GROUP_CHANGED,
                    t.onColumnStateChanged.bind(t)
                  );
              });
            }),
            (e.prototype.setupDragging = function () {
              var t = this;
              if (this.allowDragging) {
                var e = {
                  type: i.DragSourceType.ToolPanel,
                  eElement: this.eDragHandle,
                  dragItemName: this.displayName,
                  getDragItem: function () {
                    return t.createDragItem();
                  },
                };
                this.dragAndDropService.addDragSource(e, !0),
                  this.addDestroyFunc(function () {
                    return t.dragAndDropService.removeDragSource(e);
                  });
              } else i._.setDisplayed(this.eDragHandle, !1);
            }),
            (e.prototype.createDragItem = function () {
              var t = {};
              return (
                this.columnGroup.getLeafColumns().forEach(function (e) {
                  t[e.getId()] = e.isVisible();
                }),
                { columns: this.columnGroup.getLeafColumns(), visibleState: t }
              );
            }),
            (e.prototype.setupExpandContract = function () {
              this.eGroupClosedIcon.appendChild(
                i._.createIcon(
                  "columnSelectClosed",
                  this.gridOptionsWrapper,
                  null
                )
              ),
                this.eGroupOpenedIcon.appendChild(
                  i._.createIcon(
                    "columnSelectOpen",
                    this.gridOptionsWrapper,
                    null
                  )
                ),
                this.addManagedListener(
                  this.eGroupClosedIcon,
                  "click",
                  this.onExpandOrContractClicked.bind(this)
                ),
                this.addManagedListener(
                  this.eGroupOpenedIcon,
                  "click",
                  this.onExpandOrContractClicked.bind(this)
                );
              var t = new i.TouchListener(this.eColumnGroupIcons, !0);
              this.addManagedListener(
                t,
                i.TouchListener.EVENT_TAP,
                this.onExpandOrContractClicked.bind(this)
              ),
                this.addDestroyFunc(t.destroy.bind(t));
            }),
            (e.prototype.onLabelClicked = function () {
              var t = !this.cbSelect.getValue();
              this.onChangeCommon(t);
            }),
            (e.prototype.onCheckboxChanged = function (t) {
              this.onChangeCommon(t.selected);
            }),
            (e.prototype.getVisibleLeafColumns = function () {
              var t = [],
                e = function (o) {
                  o.forEach(function (o) {
                    o.isPassesFilter() &&
                      (o.isGroup()
                        ? e(o.getChildren())
                        : t.push(o.getColumn()));
                  });
                };
              return e(this.modelItem.getChildren()), t;
            }),
            (e.prototype.onChangeCommon = function (t) {
              this.refreshAriaLabel(),
                this.processingColumnStateChange ||
                  this.modelItemUtils.selectAllChildren(
                    this.modelItem.getChildren(),
                    t,
                    this.eventType
                  );
            }),
            (e.prototype.refreshAriaLabel = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = this.cbSelect.getValue()
                  ? t("ariaVisible", "visible")
                  : t("ariaHidden", "hidden"),
                o = t(
                  "ariaColumnGroupToggleVisibility",
                  "column group toggle visibility"
                );
              i._.setAriaLabel(
                this.focusWrapper,
                this.displayName + " " + o + " (" + e + ")"
              );
            }),
            (e.prototype.onColumnStateChanged = function () {
              var t = this.workOutSelectedValue(),
                e = this.workOutReadOnlyValue();
              (this.processingColumnStateChange = !0),
                this.cbSelect.setValue(t),
                this.cbSelect.setReadOnly(e),
                i._.addOrRemoveCssClass(
                  this.getGui(),
                  "ag-column-select-column-group-readonly",
                  e
                ),
                (this.processingColumnStateChange = !1);
            }),
            (e.prototype.workOutSelectedValue = function () {
              var t = this,
                e = this.columnController.isPivotMode(),
                o = this.getVisibleLeafColumns(),
                n = 0,
                r = 0;
              return (
                o.forEach(function (o) {
                  (!e && o.getColDef().lockVisible) ||
                    (t.isColumnChecked(o, e) ? n++ : r++);
                }),
                n > 0 && r > 0 ? void 0 : n > 0
              );
            }),
            (e.prototype.workOutReadOnlyValue = function () {
              var t = this.columnController.isPivotMode(),
                e = 0;
              return (
                this.columnGroup.getLeafColumns().forEach(function (o) {
                  t
                    ? o.isAnyFunctionAllowed() && e++
                    : o.getColDef().lockVisible || e++;
                }),
                0 === e
              );
            }),
            (e.prototype.isColumnChecked = function (t, e) {
              if (e) {
                var o = t.isPivotActive(),
                  n = t.isRowGroupActive(),
                  r = t.isValueActive();
                return o || n || r;
              }
              return t.isVisible();
            }),
            (e.prototype.onExpandOrContractClicked = function () {
              var t = this.modelItem.isExpanded();
              this.modelItem.setExpanded(!t);
            }),
            (e.prototype.onExpandChanged = function () {
              this.setOpenClosedIcons(), this.refreshAriaExpanded();
            }),
            (e.prototype.setOpenClosedIcons = function () {
              var t = this.modelItem.isExpanded();
              i._.setDisplayed(this.eGroupClosedIcon, !t),
                i._.setDisplayed(this.eGroupOpenedIcon, t);
            }),
            (e.prototype.refreshAriaExpanded = function () {
              i._.setAriaExpanded(
                this.focusWrapper,
                this.modelItem.isExpanded()
              );
            }),
            (e.prototype.getDisplayName = function () {
              return this.displayName;
            }),
            (e.prototype.onSelectAllChanged = function (t) {
              var e = this.cbSelect.getValue();
              !this.cbSelect.isReadOnly() &&
                ((t && !e) || (!t && e)) &&
                this.cbSelect.toggle();
            }),
            (e.prototype.isSelected = function () {
              return this.cbSelect.getValue();
            }),
            (e.prototype.isSelectable = function () {
              return !this.cbSelect.isReadOnly();
            }),
            (e.prototype.setSelected = function (t) {
              this.cbSelect.setValue(t, !0);
            }),
            (e.TEMPLATE =
              '<div class="ag-column-select-column-group" aria-hidden="true">\n            <span class="ag-column-group-icons" ref="eColumnGroupIcons" >\n                <span class="ag-column-group-closed-icon" ref="eGroupClosedIcon"></span>\n                <span class="ag-column-group-opened-icon" ref="eGroupOpenedIcon"></span>\n            </span>\n            <ag-checkbox ref="cbSelect" class="ag-column-select-checkbox"></ag-checkbox>\n            <span class="ag-column-select-column-label" ref="eLabel"></span>\n        </div>'),
            b(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            b(
              [i.Autowired("dragAndDropService")],
              e.prototype,
              "dragAndDropService",
              void 0
            ),
            b(
              [i.Autowired("modelItemUtils")],
              e.prototype,
              "modelItemUtils",
              void 0
            ),
            b([i.RefSelector("cbSelect")], e.prototype, "cbSelect", void 0),
            b([i.RefSelector("eLabel")], e.prototype, "eLabel", void 0),
            b(
              [i.RefSelector("eGroupOpenedIcon")],
              e.prototype,
              "eGroupOpenedIcon",
              void 0
            ),
            b(
              [i.RefSelector("eGroupClosedIcon")],
              e.prototype,
              "eGroupClosedIcon",
              void 0
            ),
            b(
              [i.RefSelector("eColumnGroupIcons")],
              e.prototype,
              "eColumnGroupIcons",
              void 0
            ),
            b([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        S = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        O = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        _ = (function (t) {
          function e(e, o, n, r, i) {
            var s = t.call(this) || this;
            return (
              (s.column = e),
              (s.columnDept = o),
              (s.allowDragging = n),
              (s.groupsExist = r),
              (s.focusWrapper = i),
              (s.processingColumnStateChange = !1),
              s
            );
          }
          return (
            S(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE),
                (this.eDragHandle = i._.createIconNoSpan(
                  "columnDrag",
                  this.gridOptionsWrapper
                )),
                i._.addCssClass(this.eDragHandle, "ag-drag-handle"),
                i._.addCssClass(
                  this.eDragHandle,
                  "ag-column-select-column-drag-handle"
                ),
                this.cbSelect
                  .getGui()
                  .insertAdjacentElement("afterend", this.eDragHandle),
                (this.displayName =
                  this.columnController.getDisplayNameForColumn(
                    this.column,
                    "columnToolPanel"
                  ));
              var t = i._.escapeString(this.displayName);
              this.eLabel.innerHTML = t;
              var o = this.columnDept;
              this.groupsExist &&
                this.addCssClass("ag-column-select-add-group-indent"),
                this.addCssClass("ag-column-select-indent-" + o),
                this.setupDragging(),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  this.onColumnStateChanged.bind(this)
                ),
                this.addManagedListener(
                  this.column,
                  i.Column.EVENT_VALUE_CHANGED,
                  this.onColumnStateChanged.bind(this)
                ),
                this.addManagedListener(
                  this.column,
                  i.Column.EVENT_PIVOT_CHANGED,
                  this.onColumnStateChanged.bind(this)
                ),
                this.addManagedListener(
                  this.column,
                  i.Column.EVENT_ROW_GROUP_CHANGED,
                  this.onColumnStateChanged.bind(this)
                ),
                this.addManagedListener(
                  this.column,
                  i.Column.EVENT_VISIBLE_CHANGED,
                  this.onColumnStateChanged.bind(this)
                ),
                this.addManagedListener(
                  this.focusWrapper,
                  "keydown",
                  this.handleKeyDown.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  "functionsReadOnly",
                  this.onColumnStateChanged.bind(this)
                ),
                this.addManagedListener(
                  this.cbSelect,
                  i.AgCheckbox.EVENT_CHANGED,
                  this.onCheckboxChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eLabel,
                  "click",
                  this.onLabelClicked.bind(this)
                ),
                this.onColumnStateChanged(),
                this.refreshAriaLabel(),
                this.setupTooltip(),
                i.CssClassApplier.addToolPanelClassesFromColDef(
                  this.column.getColDef(),
                  this.getGui(),
                  this.gridOptionsWrapper,
                  this.column,
                  null
                );
            }),
            (e.prototype.setupTooltip = function () {
              var t = this,
                e = function () {
                  var e = t.column.getColDef().headerTooltip;
                  t.setTooltip(e);
                };
              e(),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  e
                );
            }),
            (e.prototype.getTooltipParams = function () {
              var e = t.prototype.getTooltipParams.call(this);
              return (
                (e.location = "columnToolPanelColumn"),
                (e.colDef = this.column.getColDef()),
                e
              );
            }),
            (e.prototype.handleKeyDown = function (t) {
              t.keyCode === i.KeyCode.SPACE &&
                (t.preventDefault(),
                this.isSelectable() &&
                  this.onSelectAllChanged(!this.isSelected()));
            }),
            (e.prototype.onLabelClicked = function () {
              if (!this.gridOptionsWrapper.isFunctionsReadOnly()) {
                var t = !this.cbSelect.getValue();
                this.onChangeCommon(t);
              }
            }),
            (e.prototype.onCheckboxChanged = function (t) {
              this.onChangeCommon(t.selected);
            }),
            (e.prototype.onChangeCommon = function (t) {
              this.cbSelect.isReadOnly() ||
                (this.refreshAriaLabel(),
                this.processingColumnStateChange ||
                  this.modelItemUtils.setColumn(this.column, t, "toolPanelUi"));
            }),
            (e.prototype.refreshAriaLabel = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = this.cbSelect.getValue()
                  ? t("ariaVisible", "visible")
                  : t("ariaHidden", "hidden"),
                o = t("ariaColumnToggleVisibility", "column toggle visibility");
              i._.setAriaLabel(
                this.focusWrapper,
                this.displayName + " " + o + " (" + e + ")"
              );
            }),
            (e.prototype.setupDragging = function () {
              var t = this;
              if (this.allowDragging) {
                var e = {
                  type: i.DragSourceType.ToolPanel,
                  eElement: this.eDragHandle,
                  dragItemName: this.displayName,
                  getDragItem: function () {
                    return t.createDragItem();
                  },
                };
                this.dragAndDropService.addDragSource(e, !0),
                  this.addDestroyFunc(function () {
                    return t.dragAndDropService.removeDragSource(e);
                  });
              } else i._.setDisplayed(this.eDragHandle, !1);
            }),
            (e.prototype.createDragItem = function () {
              var t = {};
              return (
                (t[this.column.getId()] = this.column.isVisible()),
                { columns: [this.column], visibleState: t }
              );
            }),
            (e.prototype.onColumnStateChanged = function () {
              this.processingColumnStateChange = !0;
              var t,
                e = this.columnController.isPivotMode();
              if (e) {
                var o = this.column.isAnyFunctionActive();
                this.cbSelect.setValue(o);
              } else this.cbSelect.setValue(this.column.isVisible());
              if (e) {
                var n = this.gridOptionsWrapper.isFunctionsReadOnly(),
                  r = !this.column.isAnyFunctionAllowed();
                t = n || r;
              } else t = !!this.column.getColDef().lockVisible;
              this.cbSelect.setReadOnly(t),
                i._.addOrRemoveCssClass(
                  this.getGui(),
                  "ag-column-select-column-readonly",
                  t
                );
              var s = e && this.gridOptionsWrapper.isFunctionsPassive();
              this.cbSelect.setPassive(s),
                (this.processingColumnStateChange = !1);
            }),
            (e.prototype.getDisplayName = function () {
              return this.displayName;
            }),
            (e.prototype.onSelectAllChanged = function (t) {
              t !== this.cbSelect.getValue() &&
                (this.cbSelect.isReadOnly() || this.cbSelect.toggle());
            }),
            (e.prototype.isSelected = function () {
              return this.cbSelect.getValue();
            }),
            (e.prototype.isSelectable = function () {
              return !this.cbSelect.isReadOnly();
            }),
            (e.prototype.isExpandable = function () {
              return !1;
            }),
            (e.prototype.setExpanded = function (t) {
              console.warn(
                "ag-grid: can not expand a column item that does not represent a column group header"
              );
            }),
            (e.TEMPLATE =
              '<div class="ag-column-select-column" aria-hidden="true">\n            <ag-checkbox ref="cbSelect" class="ag-column-select-checkbox"></ag-checkbox>\n            <span class="ag-column-select-column-label" ref="eLabel"></span>\n        </div>'),
            O(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            O(
              [i.Autowired("dragAndDropService")],
              e.prototype,
              "dragAndDropService",
              void 0
            ),
            O(
              [i.Autowired("modelItemUtils")],
              e.prototype,
              "modelItemUtils",
              void 0
            ),
            O([i.RefSelector("eLabel")], e.prototype, "eLabel", void 0),
            O([i.RefSelector("cbSelect")], e.prototype, "cbSelect", void 0),
            O([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        R = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        P = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        T = (function () {
          function t(t) {
            this.items = t;
          }
          return (
            (t.prototype.getRowCount = function () {
              return this.items.length;
            }),
            (t.prototype.getRow = function (t) {
              return this.items[t];
            }),
            t
          );
        })(),
        A = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (o.destroyColumnItemFuncs = []), o;
          }
          return (
            R(e, t),
            (e.prototype.destroyColumnTree = function () {
              (this.allColsTree = []),
                this.destroyColumnItemFuncs.forEach(function (t) {
                  return t();
                }),
                (this.destroyColumnItemFuncs = []);
            }),
            (e.prototype.init = function (t, e, o) {
              var n = this;
              (this.params = t),
                (this.allowDragging = e),
                (this.eventType = o),
                this.params.suppressSyncLayoutWithGrid ||
                  this.addManagedListener(
                    this.eventService,
                    i.Events.EVENT_COLUMN_MOVED,
                    this.onColumnsChanged.bind(this)
                  ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  this.onColumnsChanged.bind(this)
                ),
                [
                  i.Events.EVENT_COLUMN_PIVOT_CHANGED,
                  i.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  i.Events.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  i.Events.EVENT_COLUMN_VALUE_CHANGED,
                  i.Events.EVENT_COLUMN_VISIBLE,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                ].forEach(function (t) {
                  n.addManagedListener(
                    n.eventService,
                    t,
                    n.fireSelectionChangedEvent.bind(n)
                  );
                }),
                (this.expandGroupsByDefault =
                  !this.params.contractColumnSelection),
                (this.virtualList = this.createManagedBean(
                  new i.VirtualList("column-select", "tree")
                )),
                this.appendChild(this.virtualList.getGui()),
                this.virtualList.setComponentCreator(function (t, e) {
                  return n.createComponentFromItem(t, e);
                }),
                this.columnController.isReady() && this.onColumnsChanged();
            }),
            (e.prototype.createComponentFromItem = function (t, e) {
              if (t.isGroup()) {
                var o = new E(t, this.allowDragging, this.eventType, e);
                return this.getContext().createBean(o), o;
              }
              var n = new _(
                t.getColumn(),
                t.getDept(),
                this.allowDragging,
                this.groupsExist,
                e
              );
              return this.getContext().createBean(n), n;
            }),
            (e.prototype.onColumnsChanged = function () {
              var t = this.getExpandedStates(),
                e = this.columnController.isPivotMode();
              this.params.suppressSyncLayoutWithGrid || e
                ? this.buildTreeFromProvidedColumnDefs()
                : this.buildTreeFromWhatGridIsDisplaying(),
                this.setExpandedStates(t),
                this.markFilteredColumns(),
                this.flattenAndFilterModel();
            }),
            (e.prototype.getExpandedStates = function () {
              if (!this.allColsTree) return {};
              var t = {};
              return (
                this.forEachItem(function (e) {
                  if (e.isGroup()) {
                    var o = e.getColumnGroup();
                    o && (t[o.getId()] = e.isExpanded());
                  }
                }),
                t
              );
            }),
            (e.prototype.setExpandedStates = function (t) {
              this.allColsTree &&
                this.forEachItem(function (e) {
                  if (e.isGroup()) {
                    var o = e.getColumnGroup();
                    if (o) {
                      var n = t[o.getId()];
                      null != n && e.setExpanded(n);
                    }
                  }
                });
            }),
            (e.prototype.buildTreeFromWhatGridIsDisplaying = function () {
              this.colDefService.syncLayoutWithGrid(
                this.setColumnLayout.bind(this)
              );
            }),
            (e.prototype.setColumnLayout = function (t) {
              var e = this.colDefService.createColumnTree(t);
              this.buildListModel(e),
                (this.groupsExist = t.some(function (t) {
                  return t && void 0 !== t.children;
                })),
                this.markFilteredColumns(),
                this.flattenAndFilterModel();
            }),
            (e.prototype.buildTreeFromProvidedColumnDefs = function () {
              this.buildListModel(this.columnController.getPrimaryColumnTree()),
                (this.groupsExist =
                  this.columnController.isPrimaryColumnGroupsPresent());
            }),
            (e.prototype.buildListModel = function (t) {
              var e = this,
                o = this.onColumnExpanded.bind(this),
                n = function (t, e, o) {
                  t.forEach(function (t) {
                    t instanceof i.OriginalColumnGroup
                      ? r(t, e, o)
                      : s(t, e, o);
                  });
                },
                r = function (t, r, i) {
                  var s = t.getColGroupDef();
                  if (!s || !s.suppressColumnsToolPanel)
                    if (t.isPadding()) n(t.getChildren(), r, i);
                    else {
                      var a =
                          e.columnController.getDisplayNameForOriginalColumnGroup(
                            null,
                            t,
                            e.eventType
                          ),
                        l = new C(a, t, r, !0, e.expandGroupsByDefault);
                      i.push(l),
                        (function (t) {
                          t.addEventListener(C.EVENT_EXPANDED_CHANGED, o);
                          var n = t.removeEventListener.bind(
                            t,
                            C.EVENT_EXPANDED_CHANGED,
                            o
                          );
                          e.destroyColumnItemFuncs.push(n);
                        })(l),
                        n(t.getChildren(), r + 1, l.getChildren());
                    }
                },
                s = function (t, o, n) {
                  if (
                    !t.getColDef() ||
                    !t.getColDef().suppressColumnsToolPanel
                  ) {
                    var r = e.columnController.getDisplayNameForColumn(
                      t,
                      "columnToolPanel"
                    );
                    n.push(new C(r, t, o));
                  }
                };
              this.destroyColumnTree(), n(t, 0, this.allColsTree);
            }),
            (e.prototype.onColumnExpanded = function () {
              this.flattenAndFilterModel();
            }),
            (e.prototype.flattenAndFilterModel = function () {
              var t = this;
              this.displayedColsList = [];
              var e = function (o) {
                o.isPassesFilter() &&
                  (t.displayedColsList.push(o),
                  o.isGroup() && o.isExpanded() && o.getChildren().forEach(e));
              };
              this.allColsTree.forEach(e),
                this.virtualList.setModel(new T(this.displayedColsList));
              var o = this.virtualList.getLastFocusedRow();
              this.virtualList.refresh(),
                null != o && this.focusRowIfAlive(o),
                this.notifyListeners();
            }),
            (e.prototype.focusRowIfAlive = function (t) {
              var e = this;
              window.setTimeout(function () {
                e.isAlive() && e.virtualList.focusRow(t);
              }, 0);
            }),
            (e.prototype.forEachItem = function (t) {
              var e = function (o) {
                o.forEach(function (o) {
                  t(o), o.isGroup() && e(o.getChildren());
                });
              };
              e(this.allColsTree);
            }),
            (e.prototype.doSetExpandedAll = function (t) {
              this.forEachItem(function (e) {
                e.isGroup() && e.setExpanded(t);
              });
            }),
            (e.prototype.setGroupsExpanded = function (t, e) {
              if (e) {
                var o = [];
                this.forEachItem(function (n) {
                  if (n.isGroup()) {
                    var r = n.getColumnGroup().getId();
                    e.indexOf(r) >= 0 && (n.setExpanded(t), o.push(r));
                  }
                });
                var n = e.filter(function (t) {
                  return !i._.includes(o, t);
                });
                n.length > 0 &&
                  console.warn(
                    "AG Grid: unable to find group(s) for supplied groupIds:",
                    n
                  );
              } else this.doSetExpandedAll(t);
            }),
            (e.prototype.getExpandState = function () {
              var t = 0,
                e = 0;
              return (
                this.forEachItem(function (o) {
                  o.isGroup() && (o.isExpanded() ? t++ : e++);
                }),
                t > 0 && e > 0
                  ? r.INDETERMINATE
                  : e > 0
                  ? r.COLLAPSED
                  : r.EXPANDED
              );
            }),
            (e.prototype.doSetSelectedAll = function (t) {
              this.modelItemUtils.selectAllChildren(
                this.allColsTree,
                t,
                this.eventType
              );
            }),
            (e.prototype.getSelectionState = function () {
              var t = 0,
                e = 0,
                o = this.columnController.isPivotMode();
              if (
                (this.forEachItem(function (n) {
                  if (!n.isGroup() && n.isPassesFilter()) {
                    var r,
                      i = n.getColumn(),
                      s = i.getColDef();
                    if (o) {
                      if (
                        !i.isAllowPivot() &&
                        !i.isAllowRowGroup() &&
                        !i.isAllowValue()
                      )
                        return;
                      r =
                        i.isValueActive() ||
                        i.isPivotActive() ||
                        i.isRowGroupActive();
                    } else {
                      if (s.lockVisible) return;
                      r = i.isVisible();
                    }
                    r ? t++ : e++;
                  }
                }),
                !(t > 0 && e > 0))
              )
                return !(0 === t || e > 0);
            }),
            (e.prototype.setFilterText = function (t) {
              (this.filterText = i._.exists(t) ? t.toLowerCase() : null),
                this.markFilteredColumns(),
                this.flattenAndFilterModel();
            }),
            (e.prototype.markFilteredColumns = function () {
              var t = this,
                e = function (e) {
                  if (!i._.exists(t.filterText)) return !0;
                  var o = e.getDisplayName();
                  return (
                    null == o || -1 !== o.toLowerCase().indexOf(t.filterText)
                  );
                },
                o = function (t, n) {
                  var r = !1;
                  if (t.isGroup()) {
                    var i = e(t);
                    t.getChildren().forEach(function (t) {
                      var e = o(t, i || n);
                      e && (r = e);
                    });
                  }
                  var s = !(!n && !r) || e(t);
                  return t.setPassesFilter(s), s;
                };
              this.allColsTree.forEach(function (t) {
                return o(t, !1);
              });
            }),
            (e.prototype.notifyListeners = function () {
              this.fireGroupExpandedEvent(), this.fireSelectionChangedEvent();
            }),
            (e.prototype.fireGroupExpandedEvent = function () {
              var t = this.getExpandState();
              this.dispatchEvent({ type: "groupExpanded", state: t });
            }),
            (e.prototype.fireSelectionChangedEvent = function () {
              var t = this.getSelectionState();
              this.dispatchEvent({ type: "selectionChanged", state: t });
            }),
            (e.TEMPLATE =
              '<div class="ag-column-select-list" role="tree"></div>'),
            P(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            P(
              [i.Autowired("toolPanelColDefService")],
              e.prototype,
              "colDefService",
              void 0
            ),
            P([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            P(
              [i.Autowired("modelItemUtils")],
              e.prototype,
              "modelItemUtils",
              void 0
            ),
            P([i.PreDestroy], e.prototype, "destroyColumnTree", null),
            e
          );
        })(i.Component),
        D = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        x = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        F = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            D(e, t),
            (e.prototype.createTemplate = function () {
              return '<div class="ag-pivot-mode-panel">\n                <ag-toggle-button ref="cbPivotMode" class="ag-pivot-mode-select"></ag-toggle-button>\n            </div>';
            }),
            (e.prototype.init = function () {
              this.setTemplate(this.createTemplate()),
                this.cbPivotMode.setValue(this.columnController.isPivotMode());
              var t = this.gridOptionsWrapper.getLocaleTextFunc();
              this.cbPivotMode.setLabel(t("pivotMode", "Pivot Mode")),
                this.addManagedListener(
                  this.cbPivotMode,
                  i.AgCheckbox.EVENT_CHANGED,
                  this.onBtPivotMode.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  this.onPivotModeChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  this.onPivotModeChanged.bind(this)
                );
            }),
            (e.prototype.onBtPivotMode = function () {
              var t = !!this.cbPivotMode.getValue();
              if (t !== this.columnController.isPivotMode()) {
                this.columnController.setPivotMode(t, "toolPanelUi");
                var e = this.gridOptionsWrapper.getApi();
                e && e.refreshHeader();
              }
            }),
            (e.prototype.onPivotModeChanged = function () {
              var t = this.columnController.isPivotMode();
              this.cbPivotMode.setValue(t);
            }),
            x(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            x(
              [i.RefSelector("cbPivotMode")],
              e.prototype,
              "cbPivotMode",
              void 0
            ),
            x([i.PreConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        N = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        M = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        I = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            N(e, t),
            (e.prototype.execute = function (t) {
              var e = i._.missingOrEmpty(
                  this.columnController.getValueColumns()
                ),
                o = !this.gridOptionsWrapper.getGroupRowAggNodesFunc(),
                n = t.changedPath && t.changedPath.isActive();
              if (!(e && o && n)) {
                var r = this.createAggDetails(t);
                this.recursivelyCreateAggData(r);
              }
            }),
            (e.prototype.createAggDetails = function (t) {
              var e = this.columnController.isPivotActive(),
                o = this.columnController.getValueColumns(),
                n = e ? this.columnController.getPivotColumns() : [];
              return {
                changedPath: t.changedPath,
                valueColumns: o,
                pivotColumns: n,
              };
            }),
            (e.prototype.recursivelyCreateAggData = function (t) {
              var e = this;
              (this.filteredOnly =
                !this.gridOptionsWrapper.isSuppressAggFilteredOnly()),
                t.changedPath.forEachChangedNodeDepthFirst(function (o) {
                  if (o.hasChildren()) {
                    if (-1 === o.level) {
                      var n = !e.columnController.isPivotMode();
                      if (e.gridOptionsWrapper.isSuppressAggAtRootLevel() && n)
                        return;
                    }
                    e.aggregateRowNode(o, t);
                  } else o.aggData && o.setAggData(null);
                }, !0);
            }),
            (e.prototype.aggregateRowNode = function (t, e) {
              var o,
                n = 0 === e.valueColumns.length,
                r = 0 === e.pivotColumns.length,
                i = this.gridOptionsWrapper.getGroupRowAggNodesFunc();
              (o = i
                ? i(t.childrenAfterFilter)
                : n
                ? null
                : r
                ? this.aggregateRowNodeUsingValuesOnly(t, e)
                : this.aggregateRowNodeUsingValuesAndPivot(t)),
                t.setAggData(o),
                t.sibling && t.sibling.setAggData(o);
            }),
            (e.prototype.aggregateRowNodeUsingValuesAndPivot = function (t) {
              var e = this,
                o = {},
                n = this.pivotStage.getPivotColumnDefs();
              return (
                n
                  .filter(function (t) {
                    return !i._.exists(t.pivotTotalColumnIds);
                  })
                  .forEach(function (n) {
                    var r,
                      i = n.pivotValueColumn,
                      s = n.colId;
                    (r = t.leafGroup
                      ? e.getValuesFromMappedSet(
                          t.childrenMapped,
                          n.pivotKeys || [],
                          i
                        )
                      : e.getValuesPivotNonLeaf(t, s)),
                      (o[s] = e.aggregateValues(r, i.getAggFunc(), i, t));
                  }),
                n
                  .filter(function (t) {
                    return i._.exists(t.pivotTotalColumnIds);
                  })
                  .forEach(function (n) {
                    var r = [],
                      i = n.pivotValueColumn,
                      s = n.pivotTotalColumnIds,
                      a = n.colId;
                    s &&
                      s.length &&
                      (s.forEach(function (t) {
                        r.push(o[t]);
                      }),
                      (o[a] = e.aggregateValues(r, i.getAggFunc(), i, t)));
                  }),
                o
              );
            }),
            (e.prototype.aggregateRowNodeUsingValuesOnly = function (t, e) {
              var o = this,
                n = {},
                r = e.changedPath.isActive()
                  ? e.changedPath.getValueColumnsForNode(t, e.valueColumns)
                  : e.valueColumns,
                i = e.changedPath.isActive()
                  ? e.changedPath.getNotValueColumnsForNode(t, e.valueColumns)
                  : null,
                s = this.getValuesNormal(t, r),
                a = t.aggData;
              return (
                r.forEach(function (e, r) {
                  n[e.getId()] = o.aggregateValues(s[r], e.getAggFunc(), e, t);
                }),
                i &&
                  a &&
                  i.forEach(function (t) {
                    n[t.getId()] = a[t.getId()];
                  }),
                n
              );
            }),
            (e.prototype.getValuesPivotNonLeaf = function (t, e) {
              var o = [];
              return (
                t.childrenAfterFilter.forEach(function (t) {
                  o.push(t.aggData[e]);
                }),
                o
              );
            }),
            (e.prototype.getValuesFromMappedSet = function (t, e, o) {
              var n = this,
                r = t;
              if (
                (e.forEach(function (t) {
                  return (r = r ? r[t] : null);
                }),
                !r)
              )
                return [];
              var i = [];
              return (
                r.forEach(function (t) {
                  var e = n.valueService.getValue(o, t);
                  i.push(e);
                }),
                i
              );
            }),
            (e.prototype.getValuesNormal = function (t, e) {
              var o = [];
              e.forEach(function () {
                return o.push([]);
              });
              for (
                var n = e.length,
                  r = this.filteredOnly
                    ? t.childrenAfterFilter
                    : t.childrenAfterGroup,
                  i = r.length,
                  s = 0;
                s < i;
                s++
              )
                for (var a = r[s], l = 0; l < n; l++) {
                  var u = this.valueService.getValue(e[l], a);
                  o[l].push(u);
                }
              return o;
            }),
            (e.prototype.aggregateValues = function (t, e, o, n) {
              var r =
                "string" == typeof e ? this.aggFuncService.getAggFunc(e) : e;
              if ("function" != typeof r)
                return (
                  console.error(
                    "AG Grid: unrecognised aggregation function " + e
                  ),
                  null
                );
              var s = function () {
                i._.doOnce(function () {
                  console.warn(
                    "AG Grid: since v24.0, custom aggregation functions take a params object. Please alter your aggregation function to use params.values"
                  );
                }, "aggregationStage.aggregateValues Deprecation");
              };
              return r({
                values: t,
                column: o,
                colDef: o ? o.getColDef() : void 0,
                rowNode: n,
                data: n ? n.data : void 0,
                api: this.gridApi,
                columnApi: this.columnApi,
                context: this.gridOptionsWrapper.getContext(),
                forEach: function (e, o) {
                  return s(), t.forEach(e, o);
                },
                get length() {
                  return s(), t.length;
                },
                set length(e) {
                  s(), (t.length = e);
                },
              });
            }),
            M(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            M(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            M([i.Autowired("pivotStage")], e.prototype, "pivotStage", void 0),
            M(
              [i.Autowired("aggFuncService")],
              e.prototype,
              "aggFuncService",
              void 0
            ),
            M([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            M([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            M([i.Bean("aggregationStage")], e)
          );
        })(i.BeanStub),
        L = (function () {
          function t() {
            (this.allSets = {}), (this.allParents = []);
          }
          return (
            (t.prototype.removeFromChildrenAfterGroup = function (t, e) {
              this.getSet(t).removeFromChildrenAfterGroup[e.id] = !0;
            }),
            (t.prototype.removeFromAllLeafChildren = function (t, e) {
              this.getSet(t).removeFromAllLeafChildren[e.id] = !0;
            }),
            (t.prototype.getSet = function (t) {
              return (
                this.allSets[t.id] ||
                  ((this.allSets[t.id] = {
                    removeFromAllLeafChildren: {},
                    removeFromChildrenAfterGroup: {},
                  }),
                  this.allParents.push(t)),
                this.allSets[t.id]
              );
            }),
            (t.prototype.getAllParents = function () {
              return this.allParents;
            }),
            (t.prototype.flush = function () {
              var t = this;
              this.allParents.forEach(function (e) {
                var o = t.allSets[e.id];
                (e.childrenAfterGroup = e.childrenAfterGroup.filter(function (
                  t
                ) {
                  return !o.removeFromChildrenAfterGroup[t.id];
                })),
                  (e.allLeafChildren = e.allLeafChildren.filter(function (t) {
                    return !o.removeFromAllLeafChildren[t.id];
                  })),
                  e.updateHasChildren();
              }),
                (this.allSets = {}),
                (this.allParents.length = 0);
            }),
            t
          );
        })(),
        G = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        k = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        V = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.groupIdSequence = new i.NumberSequence()), e;
          }
          return (
            G(e, t),
            (e.prototype.postConstruct = function () {
              (this.usingTreeData = this.gridOptionsWrapper.isTreeData()),
                this.usingTreeData &&
                  (this.getDataPath =
                    this.gridOptionsWrapper.getDataPathFunc());
            }),
            (e.prototype.execute = function (t) {
              var e = this.createGroupingDetails(t);
              e.transactions
                ? this.handleTransaction(e)
                : this.shotgunResetEverything(e, !0 === t.afterColumnsChanged),
                this.sortGroupsWithComparator(e.rootNode),
                this.selectableService.updateSelectableAfterGrouping(
                  e.rootNode
                );
            }),
            (e.prototype.createGroupingDetails = function (t) {
              var e = t.rowNode,
                o = t.changedPath,
                n = t.rowNodeTransactions,
                r = t.rowNodeOrder,
                i = this.usingTreeData
                  ? null
                  : this.columnController.getRowGroupColumns();
              return {
                includeParents:
                  !this.gridOptionsWrapper.isSuppressParentsInRowNodes(),
                expandByDefault:
                  this.gridOptionsWrapper.getGroupDefaultExpanded(),
                groupedCols: i,
                rootNode: e,
                pivotMode: this.columnController.isPivotMode(),
                groupedColCount: this.usingTreeData || !i ? 0 : i.length,
                rowNodeOrder: r,
                transactions: n,
                changedPath: o,
              };
            }),
            (e.prototype.handleTransaction = function (t) {
              var e = this;
              t.transactions.forEach(function (o) {
                var n = e.usingTreeData ? void 0 : new L();
                if (
                  (i._.existsAndNotEmpty(o.remove) &&
                    e.removeNodes(o.remove, t, n),
                  i._.existsAndNotEmpty(o.update) &&
                    e.moveNodesInWrongPath(o.update, t, n),
                  i._.existsAndNotEmpty(o.add) && e.insertNodes(o.add, t, !1),
                  n)
                ) {
                  var r = n.getAllParents().slice();
                  n.flush(), e.removeEmptyGroups(r, t);
                }
              }),
                t.rowNodeOrder && this.sortChildren(t);
            }),
            (e.prototype.sortChildren = function (t) {
              t.changedPath.forEachChangedNodeDepthFirst(function (e) {
                i._.sortRowNodesByOrder(e.childrenAfterGroup, t.rowNodeOrder);
              });
            }),
            (e.prototype.sortGroupsWithComparator = function (t) {
              if (!this.usingTreeData) {
                var e = this.gridOptionsWrapper.getDefaultGroupSortComparator();
                i._.exists(e) &&
                  (function t(o) {
                    i._.exists(o.childrenAfterGroup) &&
                      !o.leafGroup &&
                      (o.childrenAfterGroup.sort(e),
                      o.childrenAfterGroup.forEach(function (e) {
                        return t(e);
                      }));
                  })(t);
              }
            }),
            (e.prototype.getExistingPathForNode = function (t, e) {
              for (
                var o = [], n = this.usingTreeData ? t : t.parent;
                n && n !== e.rootNode;

              )
                o.push({
                  key: n.key,
                  rowGroupColumn: n.rowGroupColumn,
                  field: n.field,
                }),
                  (n = n.parent);
              return o.reverse(), o;
            }),
            (e.prototype.moveNodesInWrongPath = function (t, e, o) {
              var n = this;
              t.forEach(function (t) {
                e.changedPath.isActive() &&
                  e.changedPath.addParentNode(t.parent);
                var r = function (t) {
                    return t.key;
                  },
                  s = n.getExistingPathForNode(t, e).map(r),
                  a = n.getGroupInfo(t, e).map(r);
                i._.areEqual(s, a) || n.moveNode(t, e, o);
              });
            }),
            (e.prototype.moveNode = function (t, e, o) {
              this.removeNodesInStages([t], e, o),
                this.insertOneNode(t, e, !0),
                t.setData(t.data),
                e.changedPath.isActive() &&
                  e.changedPath.addParentNode(t.parent);
            }),
            (e.prototype.removeNodes = function (t, e, o) {
              this.removeNodesInStages(t, e, o),
                e.changedPath.isActive() &&
                  t.forEach(function (t) {
                    return e.changedPath.addParentNode(t.parent);
                  });
            }),
            (e.prototype.removeNodesInStages = function (t, e, o) {
              if ((this.removeNodesFromParents(t, e, o), this.usingTreeData)) {
                this.postRemoveCreateFillerNodes(t, e);
                var n = t.map(function (t) {
                  return t.parent;
                });
                this.removeEmptyGroups(n, e);
              }
            }),
            (e.prototype.forEachParentGroup = function (t, e, o) {
              for (var n = e; n && n !== t.rootNode; ) o(n), (n = n.parent);
            }),
            (e.prototype.removeNodesFromParents = function (t, e, o) {
              var n = this,
                r = null == o,
                i = o || new L();
              t.forEach(function (t) {
                n.removeFromParent(t, i),
                  n.forEachParentGroup(e, t.parent, function (e) {
                    i.removeFromAllLeafChildren(e, t);
                  });
              }),
                r && i.flush();
            }),
            (e.prototype.postRemoveCreateFillerNodes = function (t, e) {
              var o = this;
              t.forEach(function (t) {
                if (t.hasChildren()) {
                  var n = o.getExistingPathForNode(t, e),
                    r = o.findParentForNode(t, n, e);
                  (r.expanded = t.expanded),
                    (r.allLeafChildren = t.allLeafChildren),
                    (r.childrenAfterGroup = t.childrenAfterGroup),
                    (r.childrenMapped = t.childrenMapped),
                    r.updateHasChildren(),
                    r.childrenAfterGroup.forEach(function (t) {
                      return (t.parent = r);
                    });
                }
              });
            }),
            (e.prototype.removeEmptyGroups = function (t, e) {
              for (
                var o = this,
                  n = !0,
                  r = function () {
                    n = !1;
                    var r = new L();
                    t.forEach(function (t) {
                      o.forEachParentGroup(e, t, function (t) {
                        (function (t) {
                          var e = o.getChildrenMappedKey(
                              t.key,
                              t.rowGroupColumn
                            ),
                            n = t.parent;
                          return !!(
                            n &&
                            n.childrenMapped &&
                            n.childrenMapped[e] &&
                            t.isEmptyRowGroupNode()
                          );
                        })(t) &&
                          ((n = !0),
                          o.removeFromParent(t, r),
                          t.setSelected(!1));
                      });
                    }),
                      r.flush();
                  };
                n;

              )
                r();
            }),
            (e.prototype.removeFromParent = function (t, e) {
              t.parent &&
                (e
                  ? e.removeFromChildrenAfterGroup(t.parent, t)
                  : (i._.removeFromArray(t.parent.childrenAfterGroup, t),
                    t.parent.updateHasChildren()));
              var o = this.getChildrenMappedKey(t.key, t.rowGroupColumn);
              t.parent &&
                t.parent.childrenMapped &&
                (t.parent.childrenMapped[o] = void 0),
                t.setRowTop(null),
                t.setRowIndex(null);
            }),
            (e.prototype.addToParent = function (t, e) {
              var o = this.getChildrenMappedKey(t.key, t.rowGroupColumn);
              e &&
                (e.childrenMapped && (e.childrenMapped[o] = t),
                e.childrenAfterGroup.push(t),
                e.updateHasChildren());
            }),
            (e.prototype.areGroupColsEqual = function (t, e) {
              return (
                null != t &&
                null != e &&
                t.pivotMode === e.pivotMode &&
                i._.areEqual(t.groupedCols, e.groupedCols)
              );
            }),
            (e.prototype.shotgunResetEverything = function (t, e) {
              var o =
                !!e &&
                (this.usingTreeData ||
                  this.areGroupColsEqual(t, this.oldGroupingDetails));
              (this.oldGroupingDetails = t),
                o ||
                  ((t.rootNode.leafGroup =
                    !this.usingTreeData && 0 === t.groupedCols.length),
                  (t.rootNode.childrenAfterGroup = []),
                  (t.rootNode.childrenMapped = {}),
                  t.rootNode.updateHasChildren(),
                  this.insertNodes(t.rootNode.allLeafChildren, t, !1));
            }),
            (e.prototype.insertNodes = function (t, e, o) {
              var n = this;
              t.forEach(function (t) {
                n.insertOneNode(t, e, o),
                  e.changedPath.isActive() &&
                    e.changedPath.addParentNode(t.parent);
              });
            }),
            (e.prototype.insertOneNode = function (t, e, o) {
              var n = this.getGroupInfo(t, e),
                r = this.findParentForNode(t, n, e);
              r.group ||
                console.warn(
                  "AG Grid: duplicate group keys for row data, keys should be unique",
                  [r.data, t.data]
                ),
                this.usingTreeData
                  ? this.swapGroupWithUserNode(r, t, o)
                  : ((t.parent = r),
                    (t.level = n.length),
                    r.childrenAfterGroup.push(t),
                    r.updateHasChildren());
            }),
            (e.prototype.findParentForNode = function (t, e, o) {
              var n = this,
                r = o.rootNode;
              return (
                e.forEach(function (e, i) {
                  (r = n.getOrCreateNextNode(r, e, i, o)).allLeafChildren.push(
                    t
                  );
                }),
                r
              );
            }),
            (e.prototype.swapGroupWithUserNode = function (t, e, o) {
              (e.parent = t.parent),
                (e.key = t.key),
                (e.field = t.field),
                (e.groupData = t.groupData),
                (e.level = t.level),
                o || (e.expanded = t.expanded),
                (e.leafGroup = t.leafGroup),
                (e.rowGroupIndex = t.rowGroupIndex),
                (e.allLeafChildren = t.allLeafChildren),
                (e.childrenAfterGroup = t.childrenAfterGroup),
                (e.childrenMapped = t.childrenMapped),
                e.updateHasChildren(),
                this.removeFromParent(t),
                e.childrenAfterGroup.forEach(function (t) {
                  return (t.parent = e);
                }),
                this.addToParent(e, t.parent);
            }),
            (e.prototype.getOrCreateNextNode = function (t, e, o, n) {
              var r = this.getChildrenMappedKey(e.key, e.rowGroupColumn),
                i = t.childrenMapped,
                s = i && i.hasOwnProperty(r) ? i[r] : void 0;
              return (
                s ||
                  ((s = this.createGroup(e, t, o, n)), this.addToParent(s, t)),
                s
              );
            }),
            (e.prototype.createGroup = function (t, e, o, n) {
              var r = this,
                s = new i.RowNode();
              return (
                this.context.createBean(s),
                (s.group = !0),
                (s.field = t.field),
                (s.rowGroupColumn = t.rowGroupColumn),
                (s.groupData = {}),
                this.columnController
                  .getGroupDisplayColumns()
                  .forEach(function (e) {
                    (r.usingTreeData ||
                      (s.rowGroupColumn &&
                        e.isRowGroupDisplayed(s.rowGroupColumn.getId()))) &&
                      (s.groupData[e.getColId()] = t.key);
                  }),
                (s.id =
                  i.RowNode.ID_PREFIX_ROW_GROUP + this.groupIdSequence.next()),
                (s.key = t.key),
                (s.level = o),
                (s.leafGroup =
                  !this.usingTreeData && o === n.groupedColCount - 1),
                (s.expanded =
                  (!n.pivotMode || !s.leafGroup) &&
                  this.isExpanded(n.expandByDefault, o)),
                (s.allLeafChildren = []),
                s.setAllChildrenCount(0),
                (s.rowGroupIndex = this.usingTreeData ? null : o),
                (s.childrenAfterGroup = []),
                (s.childrenMapped = {}),
                s.updateHasChildren(),
                (s.parent = n.includeParents ? e : null),
                s
              );
            }),
            (e.prototype.getChildrenMappedKey = function (t, e) {
              return e ? e.getId() + "-" + t : t;
            }),
            (e.prototype.isExpanded = function (t, e) {
              return -1 === t || e < t;
            }),
            (e.prototype.getGroupInfo = function (t, e) {
              return this.usingTreeData
                ? this.getGroupInfoFromCallback(t)
                : this.getGroupInfoFromGroupColumns(t, e);
            }),
            (e.prototype.getGroupInfoFromCallback = function (t) {
              var e = this.getDataPath ? this.getDataPath(t.data) : null;
              return (
                (null != e && 0 !== e.length) ||
                  i._.doOnce(function () {
                    return console.warn(
                      "getDataPath() should not return an empty path for data",
                      t.data
                    );
                  }, "groupStage.getGroupInfoFromCallback"),
                e
                  ? e.map(function (t) {
                      return { key: t, field: null, rowGroupColumn: null };
                    })
                  : []
              );
            }),
            (e.prototype.getGroupInfoFromGroupColumns = function (t, e) {
              var o = this,
                n = [];
              return (
                e.groupedCols.forEach(function (r) {
                  var i = o.valueService.getKeyForNode(r, t),
                    s = null != i;
                  if ((e.pivotMode && !s && ((i = " "), (s = !0)), s)) {
                    var a = {
                      key: i,
                      field: r.getColDef().field,
                      rowGroupColumn: r,
                    };
                    n.push(a);
                  }
                }),
                n
              );
            }),
            k(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            k(
              [i.Autowired("selectableService")],
              e.prototype,
              "selectableService",
              void 0
            ),
            k(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            k([i.PostConstruct], e.prototype, "postConstruct", null),
            k([i.Bean("groupStage")], e)
          );
        })(i.BeanStub),
        W = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        H = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        B = function () {
          for (var t = 0, e = 0, o = arguments.length; e < o; e++)
            t += arguments[e].length;
          var n = Array(t),
            r = 0;
          for (e = 0; e < o; e++)
            for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
              n[r] = i[s];
          return n;
        },
        j = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          var o;
          return (
            W(e, t),
            (o = e),
            (e.prototype.createPivotColumnDefs = function (t) {
              var e = [],
                o = [],
                n = this.columnController.getPivotColumns(),
                r = this.columnController.getValueColumns(),
                s = n.length,
                a = new i.NumberSequence();
              return (
                this.recursivelyAddGroup(e, o, 1, t, [], a, s, n),
                this.addRowGroupTotals(e, o, r, a),
                this.addExpandablePivotGroups(e, o, a),
                this.addPivotTotalsToGroups(e, o, a),
                {
                  pivotColumnGroupDefs: e,
                  pivotColumnDefs: o.map(function (t) {
                    return i._.cloneObject(t);
                  }),
                }
              );
            }),
            (e.prototype.recursivelyAddGroup = function (
              t,
              e,
              o,
              n,
              r,
              s,
              a,
              l
            ) {
              var u = this;
              i._.iterateObject(n, function (n, i) {
                var p = B(r, [n]);
                if (o !== a) {
                  var c = {
                    children: [],
                    headerName: n,
                    pivotKeys: p,
                    columnGroupShow: "open",
                    groupId: "pivot" + s.next(),
                  };
                  t.push(c),
                    u.recursivelyAddGroup(c.children, e, o + 1, i, p, s, a, l);
                } else {
                  var d = u.columnController.getValueColumns(),
                    h = {
                      children: [],
                      headerName: n,
                      pivotKeys: p,
                      columnGroupShow: "open",
                      groupId: "pivot" + s.next(),
                    };
                  if (0 === d.length) {
                    var f = u.createColDef(null, "-", p, s);
                    h.children.push(f), e.push(f);
                  } else
                    d.forEach(function (t) {
                      var o = u.columnController.getDisplayNameForColumn(
                          t,
                          "header"
                        ),
                        n = u.createColDef(t, o, p, s);
                      (n.columnGroupShow = "open"),
                        h.children.push(n),
                        e.push(n);
                    });
                  t.push(h);
                }
              });
              var p = l[o - 1].getColDef(),
                c = this.headerNameComparator.bind(this, p.pivotComparator);
              t.sort(c);
            }),
            (e.prototype.addExpandablePivotGroups = function (t, e, o) {
              var n = this;
              if (
                !this.gridOptionsWrapper.isSuppressExpandablePivotGroups() &&
                !this.gridOptionsWrapper.getPivotColumnGroupTotals()
              ) {
                var r = function (t, e, o, i) {
                  var s = t;
                  if (s.children) {
                    var a = new Map();
                    s.children.forEach(function (t) {
                      r(t, e, o, a);
                    });
                    var l = !s.children.some(function (t) {
                      return t.children;
                    });
                    n.columnController.getValueColumns().forEach(function (r) {
                      var i = n.columnController.getDisplayNameForColumn(
                          r,
                          "header"
                        ),
                        s = n.createColDef(r, i, t.pivotKeys, o);
                      (s.pivotTotalColumnIds = a.get(r.getColId())),
                        (s.columnGroupShow = "closed"),
                        (s.aggFunc = r.getAggFunc()),
                        l || (t.children.push(s), e.push(s));
                    }),
                      n.merge(i, a);
                  } else {
                    var u = t;
                    if (!u.pivotValueColumn) return;
                    var p = u.pivotValueColumn.getColId(),
                      c = i.has(p) ? i.get(p) : [];
                    c.push(u.colId), i.set(p, c);
                  }
                };
                t.forEach(function (t) {
                  r(t, e, o, new Map());
                });
              }
            }),
            (e.prototype.addPivotTotalsToGroups = function (t, e, o) {
              var n = this;
              if (this.gridOptionsWrapper.getPivotColumnGroupTotals()) {
                var r =
                    "after" ===
                    this.gridOptionsWrapper.getPivotColumnGroupTotals(),
                  i = this.columnController.getValueColumns(),
                  s = i.map(function (t) {
                    return t.getAggFunc();
                  });
                if (s && !(s.length < 1) && this.sameAggFuncs(s)) {
                  var a = i[0];
                  t.forEach(function (t) {
                    n.recursivelyAddPivotTotal(t, e, o, a, r);
                  });
                }
              }
            }),
            (e.prototype.recursivelyAddPivotTotal = function (t, e, o, n, r) {
              var i = this,
                s = t;
              if (!s.children) return t.colId ? [t.colId] : null;
              var a = [];
              if (
                (s.children.forEach(function (t) {
                  var s = i.recursivelyAddPivotTotal(t, e, o, n, r);
                  s && (a = a.concat(s));
                }),
                s.children.length > 1)
              ) {
                var l = this.createColDef(n, "Total", t.pivotKeys, o);
                (l.pivotTotalColumnIds = a), (l.aggFunc = n.getAggFunc());
                var u = t.children;
                r ? u.push(l) : u.unshift(l), e.push(l);
              }
              return a;
            }),
            (e.prototype.addRowGroupTotals = function (t, e, o, n) {
              var r = this;
              if (this.gridOptionsWrapper.getPivotRowTotals())
                for (
                  var i =
                      "after" === this.gridOptionsWrapper.getPivotRowTotals(),
                    s = i ? o.slice() : o.slice().reverse(),
                    a = function (o) {
                      var a = s[o],
                        u = [];
                      t.forEach(function (t) {
                        u = u.concat(r.extractColIdsForValueColumn(t, a));
                      }),
                        l.createRowGroupTotal(t, e, [], n, a, u, i);
                    },
                    l = this,
                    u = 0;
                  u < s.length;
                  u++
                )
                  a(u);
            }),
            (e.prototype.extractColIdsForValueColumn = function (t, e) {
              var o = this;
              if (!t.children)
                return t.pivotValueColumn === e && t.colId ? [t.colId] : [];
              var n = [];
              return (
                t.children.forEach(function (t) {
                  o.extractColIdsForValueColumn(t, e);
                  var r = o.extractColIdsForValueColumn(t, e);
                  n = n.concat(r);
                }),
                n
              );
            }),
            (e.prototype.createRowGroupTotal = function (t, e, n, r, i, s, a) {
              var l = n.slice(0),
                u = this.columnController.getValueColumns(),
                p = {
                  children: [],
                  pivotKeys: l,
                  groupId: o.PIVOT_ROW_TOTAL_PREFIX + r.next(),
                };
              if (0 === u.length) {
                var c = this.createColDef(null, "-", l, r);
                p.children.push(c), e.push(c);
              } else {
                var d = this.columnController.getDisplayNameForColumn(
                  i,
                  "header"
                );
                ((c = this.createColDef(i, d, l, r)).pivotTotalColumnIds = s),
                  p.children.push(c),
                  e.push(c);
              }
              a ? t.push(p) : t.unshift(p);
            }),
            (e.prototype.createColDef = function (t, e, o, n) {
              var r = {};
              if (t) {
                var s = t.getColDef();
                i._.assign(r, s), (r.hide = !1);
              }
              return (
                (r.headerName = e),
                (r.colId = "pivot_" + n.next()),
                (r.field = r.colId),
                (r.pivotKeys = o),
                (r.pivotValueColumn = t),
                (r.filter = !1),
                r
              );
            }),
            (e.prototype.sameAggFuncs = function (t) {
              if (1 == t.length) return !0;
              for (var e = 1; e < t.length; e++) if (t[e] !== t[0]) return !1;
              return !0;
            }),
            (e.prototype.headerNameComparator = function (t, e, o) {
              return t
                ? t(e.headerName, o.headerName)
                : e.headerName && !o.headerName
                ? 1
                : !e.headerName && o.headerName
                ? -1
                : e.headerName && o.headerName
                ? e.headerName < o.headerName
                  ? -1
                  : e.headerName > o.headerName
                  ? 1
                  : 0
                : 0;
            }),
            (e.prototype.merge = function (t, e) {
              e.forEach(function (e, o, n) {
                var r = t.has(o) ? t.get(o) : [],
                  i = B(r, e);
                t.set(o, i);
              });
            }),
            (e.PIVOT_ROW_TOTAL_PREFIX = "PivotRowTotal_"),
            H(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            (o = H([i.Bean("pivotColDefService")], e))
          );
        })(i.BeanStub),
        U = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        z = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        K = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.uniqueValues = {}), e;
          }
          return (
            U(e, t),
            (e.prototype.execute = function (t) {
              var e = t.rowNode,
                o = t.changedPath;
              this.columnController.isPivotActive()
                ? this.executePivotOn(e, o)
                : this.executePivotOff(o);
            }),
            (e.prototype.executePivotOff = function (t) {
              (this.aggregationColumnsHashLastTime = null),
                (this.uniqueValues = {}),
                this.columnController.isSecondaryColumnsPresent() &&
                  (this.columnController.setSecondaryColumns(
                    null,
                    "rowModelUpdated"
                  ),
                  t && t.setInactive());
            }),
            (e.prototype.executePivotOn = function (t, e) {
              var o = this.bucketUpRowNodes(t),
                n = this.setUniqueValues(o),
                r = this.columnController.getValueColumns(),
                i = r
                  .map(function (t) {
                    return t.getId();
                  })
                  .join("#"),
                s = r
                  .map(function (t) {
                    return t.getAggFunc().toString();
                  })
                  .join("#"),
                a = this.aggregationColumnsHashLastTime !== i,
                l = this.aggregationFuncsHashLastTime !== s;
              if (
                ((this.aggregationColumnsHashLastTime = i),
                (this.aggregationFuncsHashLastTime = s),
                n || a || l)
              ) {
                var u = this.pivotColDefService.createPivotColumnDefs(
                    this.uniqueValues
                  ),
                  p = u.pivotColumnGroupDefs;
                (this.pivotColumnDefs = u.pivotColumnDefs),
                  this.columnController.setSecondaryColumns(
                    p,
                    "rowModelUpdated"
                  ),
                  e && e.setInactive();
              }
            }),
            (e.prototype.setUniqueValues = function (t) {
              return !(
                JSON.stringify(t) === JSON.stringify(this.uniqueValues) ||
                ((this.uniqueValues = t), 0)
              );
            }),
            (e.prototype.bucketUpRowNodes = function (t) {
              var e = this,
                o = {},
                n = function (t) {
                  t.leafGroup
                    ? e.bucketRowNode(t, o)
                    : t.childrenAfterFilter.forEach(function (t) {
                        n(t);
                      });
                };
              return n(t), o;
            }),
            (e.prototype.bucketRowNode = function (t, e) {
              var o = this.columnController.getPivotColumns();
              t.childrenMapped =
                0 !== o.length
                  ? this.bucketChildren(t.childrenAfterFilter, o, 0, e)
                  : null;
            }),
            (e.prototype.bucketChildren = function (t, e, o, n) {
              var r = this,
                s = {},
                a = e[o];
              if (
                (t.forEach(function (t) {
                  var e = r.valueService.getKeyForNode(a, t);
                  i._.missing(e) && (e = ""),
                    n[e] || (n[e] = {}),
                    s[e] || (s[e] = []),
                    s[e].push(t);
                }),
                o === e.length - 1)
              )
                return s;
              var l = {};
              return (
                i._.iterateObject(s, function (t, i) {
                  l[t] = r.bucketChildren(i, e, o + 1, n[t]);
                }),
                l
              );
            }),
            (e.prototype.getPivotColumnDefs = function () {
              return this.pivotColumnDefs;
            }),
            z(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            z(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            z(
              [i.Autowired("pivotColDefService")],
              e.prototype,
              "pivotColDefService",
              void 0
            ),
            z([i.Bean("pivotStage")], e)
          );
        })(i.BeanStub),
        Y = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        X = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        q = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.aggFuncsMap = {}), (e.initialised = !1), e;
          }
          var o;
          return (
            Y(e, t),
            (o = e),
            (e.prototype.init = function () {
              this.initialised ||
                (this.initialiseWithDefaultAggregations(),
                this.addAggFuncs(this.gridOptionsWrapper.getAggFuncs()));
            }),
            (e.prototype.initialiseWithDefaultAggregations = function () {
              (this.aggFuncsMap[o.AGG_SUM] = Q),
                (this.aggFuncsMap[o.AGG_FIRST] = Z),
                (this.aggFuncsMap[o.AGG_LAST] = $),
                (this.aggFuncsMap[o.AGG_MIN] = J),
                (this.aggFuncsMap[o.AGG_MAX] = tt),
                (this.aggFuncsMap[o.AGG_COUNT] = et),
                (this.aggFuncsMap[o.AGG_AVG] = ot),
                (this.initialised = !0);
            }),
            (e.prototype.getDefaultAggFunc = function (t) {
              var e = this.getFuncNames(t),
                n = i._.includes(e, o.AGG_SUM),
                r = i._.exists(this.aggFuncsMap[o.AGG_SUM]);
              return n && r
                ? o.AGG_SUM
                : i._.existsAndNotEmpty(e)
                ? e[0]
                : null;
            }),
            (e.prototype.addAggFuncs = function (t) {
              i._.iterateObject(t, this.addAggFunc.bind(this));
            }),
            (e.prototype.addAggFunc = function (t, e) {
              this.init(), (this.aggFuncsMap[t] = e);
            }),
            (e.prototype.getAggFunc = function (t) {
              return this.init(), this.aggFuncsMap[t];
            }),
            (e.prototype.getFuncNames = function (t) {
              var e = t.getColDef().allowedAggFuncs;
              return null == e ? Object.keys(this.aggFuncsMap).sort() : e;
            }),
            (e.prototype.clear = function () {
              this.aggFuncsMap = {};
            }),
            (e.AGG_SUM = "sum"),
            (e.AGG_FIRST = "first"),
            (e.AGG_LAST = "last"),
            (e.AGG_MIN = "min"),
            (e.AGG_MAX = "max"),
            (e.AGG_COUNT = "count"),
            (e.AGG_AVG = "avg"),
            X([i.PostConstruct], e.prototype, "init", null),
            (o = X([i.Bean("aggFuncService")], e))
          );
        })(i.BeanStub);
      function Q(t) {
        for (var e = t.values, o = null, n = 0; n < e.length; n++) {
          var r = e[n];
          "number" == typeof r
            ? null === o
              ? (o = r)
              : (o += "number" == typeof o ? r : BigInt(r))
            : "bigint" == typeof r &&
              (o = null === o ? r : ("bigint" == typeof o ? o : BigInt(o)) + r);
        }
        return o;
      }
      function Z(t) {
        return t.values.length > 0 ? t.values[0] : null;
      }
      function $(t) {
        return t.values.length > 0 ? i._.last(t.values) : null;
      }
      function J(t) {
        for (var e = t.values, o = null, n = 0; n < e.length; n++) {
          var r = e[n];
          ("number" != typeof r && "bigint" != typeof r) ||
            !(null === o || o > r) ||
            (o = r);
        }
        return o;
      }
      function tt(t) {
        for (var e = t.values, o = null, n = 0; n < e.length; n++) {
          var r = e[n];
          ("number" != typeof r && "bigint" != typeof r) ||
            !(null === o || o < r) ||
            (o = r);
        }
        return o;
      }
      function et(t) {
        for (var e = t.values, o = 0, n = 0; n < e.length; n++) {
          var r = e[n];
          o += null != r && "number" == typeof r.value ? r.value : 1;
        }
        return {
          value: o,
          toString: function () {
            return this.value.toString();
          },
          toNumber: function () {
            return this.value;
          },
        };
      }
      function ot(t) {
        for (var e = t.values, o = 0, n = 0, r = 0; r < e.length; r++) {
          var i = e[r],
            s = null;
          "number" == typeof i || "bigint" == typeof i
            ? ((s = i), n++)
            : null == i ||
              ("number" != typeof i.value && "bigint" != typeof i.value) ||
              "number" != typeof i.count ||
              ((s =
                i.value *
                ("number" == typeof i.value ? i.count : BigInt(i.count))),
              (n += i.count)),
            "number" == typeof s
              ? (o += "number" == typeof o ? s : BigInt(s))
              : "bigint" == typeof s &&
                (o = ("bigint" == typeof o ? o : BigInt(o)) + s);
        }
        var a = null;
        return (
          n > 0 && (a = o / ("number" == typeof o ? n : BigInt(n))),
          {
            count: n,
            value: a,
            toString: function () {
              return "number" == typeof this.value ||
                "bigint" == typeof this.value
                ? this.value.toString()
                : "";
            },
            toNumber: function () {
              return this.value;
            },
          }
        );
      }
      var nt,
        rt,
        it,
        st,
        at,
        lt,
        ut,
        pt,
        ct,
        dt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ht = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ft = (function (t) {
          function e(e, o, n, r, i) {
            var s = t.call(this) || this;
            return (
              (s.column = e),
              (s.dragSourceDropTarget = o),
              (s.ghost = n),
              (s.valueColumn = r),
              (s.horizontal = i),
              (s.popupShowing = !1),
              s
            );
          }
          return (
            dt(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE),
                this.addElementClasses(this.getGui()),
                this.addElementClasses(this.eDragHandle, "drag-handle"),
                this.addElementClasses(this.eText, "text"),
                this.addElementClasses(this.eButton, "button"),
                this.eDragHandle.appendChild(
                  i._.createIconNoSpan("columnDrag", this.gridOptionsWrapper)
                ),
                this.eButton.appendChild(
                  i._.createIconNoSpan("cancel", this.gridOptionsWrapper)
                ),
                (this.displayName =
                  this.columnController.getDisplayNameForColumn(
                    this.column,
                    "columnDrop"
                  )),
                this.setupComponents(),
                this.ghost ||
                  this.gridOptionsWrapper.isFunctionsReadOnly() ||
                  this.addDragSource(),
                this.setupTooltip();
            }),
            (e.prototype.setupTooltip = function () {
              var t = this,
                e = function () {
                  var e = t.column.getColDef().headerTooltip;
                  t.setTooltip(e);
                };
              e(),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  e
                );
            }),
            (e.prototype.addDragSource = function () {
              var t = this,
                e = {
                  type: i.DragSourceType.ToolPanel,
                  eElement: this.eDragHandle,
                  defaultIconName: i.DragAndDropService.ICON_HIDE,
                  getDragItem: function () {
                    return t.createDragItem();
                  },
                  dragItemName: this.displayName,
                  dragSourceDropTarget: this.dragSourceDropTarget,
                };
              this.dragAndDropService.addDragSource(e, !0),
                this.addDestroyFunc(function () {
                  return t.dragAndDropService.removeDragSource(e);
                });
            }),
            (e.prototype.createDragItem = function () {
              var t = {};
              return (
                (t[this.column.getId()] = this.column.isVisible()),
                { columns: [this.column], visibleState: t }
              );
            }),
            (e.prototype.setupComponents = function () {
              this.setTextValue(),
                this.setupRemove(),
                this.ghost &&
                  i._.addCssClass(this.getGui(), "ag-column-drop-cell-ghost"),
                this.valueColumn &&
                  !this.gridOptionsWrapper.isFunctionsReadOnly() &&
                  this.addGuiEventListener(
                    "click",
                    this.onShowAggFuncSelection.bind(this)
                  );
            }),
            (e.prototype.setupRemove = function () {
              var t = this;
              i._.setDisplayed(
                this.eButton,
                !this.gridOptionsWrapper.isFunctionsReadOnly()
              ),
                this.addManagedListener(this.eButton, "click", function (o) {
                  t.dispatchEvent({ type: e.EVENT_COLUMN_REMOVE }),
                    o.stopPropagation();
                });
              var o = new i.TouchListener(this.eButton);
              this.addManagedListener(
                o,
                i.TouchListener.EVENT_TAP,
                function (o) {
                  t.dispatchEvent({ type: e.EVENT_COLUMN_REMOVE });
                }
              ),
                this.addDestroyFunc(o.destroy.bind(o));
            }),
            (e.prototype.setTextValue = function () {
              var t;
              if (this.valueColumn) {
                var e = this.column.getAggFunc(),
                  o = "string" == typeof e ? e : "agg";
                t =
                  this.gridOptionsWrapper.getLocaleTextFunc()(o, o) +
                  "(" +
                  this.displayName +
                  ")";
              } else t = this.displayName;
              var n = i._.escapeString(t);
              this.eText.innerHTML = n;
            }),
            (e.prototype.onShowAggFuncSelection = function () {
              var t = this;
              if (!this.popupShowing) {
                this.popupShowing = !0;
                var e = new i.VirtualList("select-agg-func"),
                  o = this.aggFuncService.getFuncNames(this.column);
                e.setModel({
                  getRow: function (t) {
                    return o[t];
                  },
                  getRowCount: function () {
                    return o.length;
                  },
                }),
                  this.getContext().createBean(e);
                var n = i._.loadTemplate(
                  '<div class="ag-select-agg-func-popup"></div>'
                );
                (n.style.top = "0px"),
                  (n.style.left = "0px"),
                  n.appendChild(e.getGui()),
                  (n.style.width = this.getGui().clientWidth + "px");
                var r = this.popupService.addPopup({
                  modal: !0,
                  eChild: n,
                  closeOnEsc: !0,
                  closedCallback: function () {
                    t.destroyBean(e), (t.popupShowing = !1);
                  },
                });
                r &&
                  e.setComponentCreator(
                    this.createAggSelect.bind(this, r.hideFunc)
                  ),
                  this.popupService.positionPopupUnderComponent({
                    type: "aggFuncSelect",
                    eventSource: this.getGui(),
                    ePopup: n,
                    keepWithinBounds: !0,
                    column: this.column,
                  }),
                  e.refresh();
              }
            }),
            (e.prototype.createAggSelect = function (t, e) {
              var o = this,
                n = this.gridOptionsWrapper.getLocaleTextFunc(),
                r = e.toString(),
                s = n(r, r);
              return new gt(function () {
                t(),
                  o.gridOptionsWrapper.isFunctionsPassive()
                    ? o.eventService.dispatchEvent({
                        type: i.Events.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST,
                        columns: [o.column],
                        aggFunc: e,
                        api: o.gridApi,
                        columnApi: o.columnApi,
                      })
                    : o.columnController.setColumnAggFunc(
                        o.column,
                        e,
                        "toolPanelDragAndDrop"
                      );
              }, s);
            }),
            (e.prototype.addElementClasses = function (t, e) {
              i._.addCssClass(
                t,
                "ag-column-drop-cell" + (e = e ? "-" + e : "")
              ),
                i._.addCssClass(
                  t,
                  "ag-column-drop-" +
                    (this.horizontal ? "horizontal" : "vertical") +
                    "-cell" +
                    e
                );
            }),
            (e.EVENT_COLUMN_REMOVE = "columnRemove"),
            (e.TEMPLATE =
              '<span>\n          <span ref="eDragHandle" class="ag-drag-handle ag-column-drop-cell-drag-handle"></span>\n          <span ref="eText" class="ag-column-drop-cell-text"></span>\n          <span ref="eButton" class="ag-column-drop-cell-button"></span>\n        </span>'),
            ht(
              [i.Autowired("dragAndDropService")],
              e.prototype,
              "dragAndDropService",
              void 0
            ),
            ht(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            ht(
              [i.Autowired("popupService")],
              e.prototype,
              "popupService",
              void 0
            ),
            ht(
              [i.Optional("aggFuncService")],
              e.prototype,
              "aggFuncService",
              void 0
            ),
            ht([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            ht([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            ht([i.RefSelector("eText")], e.prototype, "eText", void 0),
            ht(
              [i.RefSelector("eDragHandle")],
              e.prototype,
              "eDragHandle",
              void 0
            ),
            ht([i.RefSelector("eButton")], e.prototype, "eButton", void 0),
            ht([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        gt = (function (t) {
          function e(e, o) {
            var n =
              t.call(this, '<div class="ag-select-agg-func-item"/>') || this;
            return (
              (n.getGui().innerText = o),
              (n.value = o),
              n.addGuiEventListener("click", e),
              n
            );
          }
          return dt(e, t), e;
        })(i.Component),
        yt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        mt = (function (t) {
          function e(o, n) {
            var r = t.call(this, '<div class="ag-unselectable"></div>') || this;
            return (
              (r.horizontal = o),
              (r.valueColumn = n),
              (r.state = e.STATE_NOT_DRAGGING),
              (r.guiDestroyFunctions = []),
              (r.childColumnComponents = []),
              r.addElementClasses(r.getGui()),
              (r.eColumnDropList = document.createElement("div")),
              r.addElementClasses(r.eColumnDropList, "list"),
              r
            );
          }
          return (
            yt(e, t),
            (e.prototype.isHorizontal = function () {
              return this.horizontal;
            }),
            (e.prototype.setBeans = function (t) {
              this.beans = t;
            }),
            (e.prototype.destroy = function () {
              this.destroyGui(), t.prototype.destroy.call(this);
            }),
            (e.prototype.destroyGui = function () {
              this.guiDestroyFunctions.forEach(function (t) {
                return t();
              }),
                (this.guiDestroyFunctions.length = 0),
                (this.childColumnComponents.length = 0),
                i._.clearElement(this.getGui()),
                i._.clearElement(this.eColumnDropList);
            }),
            (e.prototype.init = function (t) {
              (this.params = t),
                this.addManagedListener(
                  this.beans.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  this.refreshGui.bind(this)
                ),
                this.addManagedListener(
                  this.beans.gridOptionsWrapper,
                  "functionsReadOnly",
                  this.refreshGui.bind(this)
                ),
                this.setupDropTarget(),
                this.refreshGui();
            }),
            (e.prototype.addElementClasses = function (t, e) {
              i._.addCssClass(t, "ag-column-drop" + (e = e ? "-" + e : "")),
                i._.addCssClass(
                  t,
                  "ag-column-drop-" +
                    (this.horizontal ? "horizontal" : "vertical") +
                    e
                );
            }),
            (e.prototype.setupDropTarget = function () {
              (this.dropTarget = {
                getContainer: this.getGui.bind(this),
                getIconName: this.getIconName.bind(this),
                onDragging: this.onDragging.bind(this),
                onDragEnter: this.onDragEnter.bind(this),
                onDragLeave: this.onDragLeave.bind(this),
                onDragStop: this.onDragStop.bind(this),
                isInterestedIn: this.isInterestedIn.bind(this),
              }),
                this.beans.dragAndDropService.addDropTarget(this.dropTarget);
            }),
            (e.prototype.isInterestedIn = function (t) {
              return (
                t === i.DragSourceType.HeaderCell ||
                t === i.DragSourceType.ToolPanel
              );
            }),
            (e.prototype.checkInsertIndex = function (t) {
              var e = this.horizontal
                ? this.getNewHorizontalInsertIndex(t)
                : this.getNewVerticalInsertIndex(t);
              if (e < 0) return !1;
              var o = e !== this.insertIndex;
              return o && (this.insertIndex = e), o;
            }),
            (e.prototype.getNewHorizontalInsertIndex = function (t) {
              if (i._.missing(t.hDirection)) return -1;
              var e = 0,
                o = t.event,
                n = this.beans.gridOptionsWrapper.isEnableRtl(),
                r = t.hDirection === i.HorizontalDirection.Left,
                s = o.clientX;
              return (
                this.childColumnComponents.forEach(function (t) {
                  var o = t.getGui().getBoundingClientRect(),
                    i = r ? o.right : o.left;
                  (n ? s <= i : s >= i) && e++;
                }),
                e
              );
            }),
            (e.prototype.getNewVerticalInsertIndex = function (t) {
              if (i._.missing(t.vDirection)) return -1;
              var e = 0,
                o = t.event;
              return (
                this.childColumnComponents.forEach(function (n) {
                  var r = n.getGui().getBoundingClientRect();
                  o.clientY >=
                    (t.vDirection === i.VerticalDirection.Down
                      ? r.top
                      : r.bottom) && e++;
                }),
                e
              );
            }),
            (e.prototype.checkDragStartedBySelf = function (t) {
              this.state === e.STATE_NOT_DRAGGING &&
                ((this.state = e.STATE_REARRANGE_COLUMNS),
                (this.potentialDndColumns =
                  t.dragSource.getDragItem().columns || []),
                this.refreshGui(),
                this.checkInsertIndex(t),
                this.refreshGui());
            }),
            (e.prototype.onDragging = function (t) {
              this.checkDragStartedBySelf(t),
                this.checkInsertIndex(t) && this.refreshGui();
            }),
            (e.prototype.onDragEnter = function (t) {
              var o = t.dragSource.getDragItem().columns || [];
              this.state = e.STATE_NEW_COLUMNS_IN;
              var n = o.filter(this.isColumnDroppable.bind(this));
              n.length > 0 &&
                ((this.potentialDndColumns = n),
                this.checkInsertIndex(t),
                this.refreshGui());
            }),
            (e.prototype.isPotentialDndColumns = function () {
              return i._.existsAndNotEmpty(this.potentialDndColumns);
            }),
            (e.prototype.onDragLeave = function (t) {
              if (this.state === e.STATE_REARRANGE_COLUMNS) {
                var o = t.dragSource.getDragItem().columns || [];
                this.removeColumns(o);
              }
              this.isPotentialDndColumns() &&
                ((this.potentialDndColumns = []), this.refreshGui()),
                (this.state = e.STATE_NOT_DRAGGING);
            }),
            (e.prototype.onDragStop = function () {
              if (this.isPotentialDndColumns()) {
                var t = !1;
                this.state === e.STATE_NEW_COLUMNS_IN
                  ? (this.addColumns(this.potentialDndColumns), (t = !0))
                  : (t = this.rearrangeColumns(this.potentialDndColumns)),
                  (this.potentialDndColumns = []),
                  (this.beans.gridOptionsWrapper.isFunctionsPassive() && t) ||
                    this.refreshGui();
              }
              this.state = e.STATE_NOT_DRAGGING;
            }),
            (e.prototype.removeColumns = function (t) {
              var e = this.getExistingColumns().filter(function (e) {
                return !i._.includes(t, e);
              });
              this.updateColumns(e);
            }),
            (e.prototype.addColumns = function (t) {
              if (t) {
                var e = this.getExistingColumns().slice(),
                  o = t.filter(function (t) {
                    return e.indexOf(t) < 0;
                  });
                i._.insertArrayIntoArray(e, o, this.insertIndex),
                  this.updateColumns(e);
              }
            }),
            (e.prototype.rearrangeColumns = function (t) {
              var e = this.getNonGhostColumns().slice();
              return (
                i._.insertArrayIntoArray(e, t, this.insertIndex),
                !i._.areEqual(e, this.getExistingColumns()) &&
                  (this.updateColumns(e), !0)
              );
            }),
            (e.prototype.refreshGui = function () {
              var t = this.eColumnDropList.scrollTop;
              this.destroyGui(),
                this.addIconAndTitleToGui(),
                this.addEmptyMessageToGui(),
                this.addColumnsToGui(),
                this.isHorizontal() || (this.eColumnDropList.scrollTop = t);
            }),
            (e.prototype.getNonGhostColumns = function () {
              var t = this,
                e = this.getExistingColumns();
              return this.isPotentialDndColumns()
                ? e.filter(function (e) {
                    return !i._.includes(t.potentialDndColumns, e);
                  })
                : e;
            }),
            (e.prototype.addColumnsToGui = function () {
              var t = this,
                e = this.getNonGhostColumns(),
                o = this.isPotentialDndColumns(),
                n = [];
              e.forEach(function (e, r) {
                if (!(o && r >= t.insertIndex)) {
                  var i = t.createColumnComponent(e, !1);
                  n.push(i);
                }
              }),
                this.isPotentialDndColumns() &&
                  (this.potentialDndColumns.forEach(function (e) {
                    var o = t.createColumnComponent(e, !0);
                    n.push(o);
                  }),
                  e.forEach(function (e, o) {
                    if (!(o < t.insertIndex)) {
                      var r = t.createColumnComponent(e, !1);
                      n.push(r);
                    }
                  })),
                this.getGui().appendChild(this.eColumnDropList),
                n.forEach(function (e, o) {
                  o > 0 && t.addArrow(t.eColumnDropList),
                    t.eColumnDropList.appendChild(e.getGui());
                });
            }),
            (e.prototype.createColumnComponent = function (t, e) {
              var o = this,
                n = new ft(
                  t,
                  this.dropTarget,
                  e,
                  this.valueColumn,
                  this.horizontal
                );
              return (
                n.addEventListener(
                  ft.EVENT_COLUMN_REMOVE,
                  this.removeColumns.bind(this, [t])
                ),
                this.beans.context.createBean(n),
                this.guiDestroyFunctions.push(function () {
                  return o.destroyBean(n);
                }),
                e || this.childColumnComponents.push(n),
                n
              );
            }),
            (e.prototype.addIconAndTitleToGui = function () {
              var t = this.params.icon,
                e = document.createElement("div");
              if (
                (this.addElementClasses(e, "title-bar"),
                this.addElementClasses(t, "icon"),
                i._.addOrRemoveCssClass(
                  this.getGui(),
                  "ag-column-drop-empty",
                  this.isExistingColumnsEmpty()
                ),
                e.appendChild(t),
                !this.horizontal)
              ) {
                var o = document.createElement("span");
                this.addElementClasses(o, "title"),
                  (o.innerHTML = this.params.title),
                  e.appendChild(o);
              }
              this.getGui().appendChild(e);
            }),
            (e.prototype.isExistingColumnsEmpty = function () {
              return 0 === this.getExistingColumns().length;
            }),
            (e.prototype.addEmptyMessageToGui = function () {
              if (
                this.isExistingColumnsEmpty() &&
                !this.isPotentialDndColumns()
              ) {
                var t = document.createElement("span");
                (t.innerHTML = this.params.emptyMessage),
                  this.addElementClasses(t, "empty-message"),
                  this.eColumnDropList.appendChild(t);
              }
            }),
            (e.prototype.addArrow = function (t) {
              if (this.horizontal) {
                var e = this.beans.gridOptionsWrapper.isEnableRtl(),
                  o = i._.createIconNoSpan(
                    e ? "smallLeft" : "smallRight",
                    this.beans.gridOptionsWrapper
                  );
                this.addElementClasses(o, "cell-separator"), t.appendChild(o);
              }
            }),
            (e.STATE_NOT_DRAGGING = "notDragging"),
            (e.STATE_NEW_COLUMNS_IN = "newColumnsIn"),
            (e.STATE_REARRANGE_COLUMNS = "rearrangeColumns"),
            e
          );
        })(i.Component),
        vt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ct = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        wt = (function (t) {
          function e(e) {
            return t.call(this, e, !1) || this;
          }
          return (
            vt(e, t),
            (e.prototype.passBeansUp = function () {
              t.prototype.setBeans.call(this, {
                gridOptionsWrapper: this.gridOptionsWrapper,
                eventService: this.eventService,
                context: this.getContext(),
                loggerFactory: this.loggerFactory,
                dragAndDropService: this.dragAndDropService,
              });
              var e = this.gridOptionsWrapper.getLocaleTextFunc(),
                o = e(
                  "rowGroupColumnsEmptyMessage",
                  "Drag here to set row groups"
                ),
                n = e("groups", "Row Groups");
              t.prototype.init.call(this, {
                dragAndDropIcon: i.DragAndDropService.ICON_GROUP,
                icon: i._.createIconNoSpan(
                  "rowGroupPanel",
                  this.gridOptionsWrapper,
                  null
                ),
                emptyMessage: o,
                title: n,
              }),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  this.refreshGui.bind(this)
                );
            }),
            (e.prototype.getTooltipParams = function () {
              var e = t.prototype.getTooltipParams.call(this);
              return (e.location = "rowGroupColumnsList"), e;
            }),
            (e.prototype.isColumnDroppable = function (t) {
              return (
                !(
                  this.gridOptionsWrapper.isFunctionsReadOnly() ||
                  !t.isPrimary()
                ) &&
                t.isAllowRowGroup() &&
                !t.isRowGroupActive()
              );
            }),
            (e.prototype.updateColumns = function (t) {
              this.gridOptionsWrapper.isFunctionsPassive()
                ? this.eventService.dispatchEvent({
                    type: i.Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST,
                    columns: t,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  })
                : this.columnController.setRowGroupColumns(t, "toolPanelUi");
            }),
            (e.prototype.getIconName = function () {
              return this.isPotentialDndColumns()
                ? i.DragAndDropService.ICON_GROUP
                : i.DragAndDropService.ICON_NOT_ALLOWED;
            }),
            (e.prototype.getExistingColumns = function () {
              return this.columnController.getRowGroupColumns();
            }),
            Ct(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Ct(
              [i.Autowired("loggerFactory")],
              e.prototype,
              "loggerFactory",
              void 0
            ),
            Ct(
              [i.Autowired("dragAndDropService")],
              e.prototype,
              "dragAndDropService",
              void 0
            ),
            Ct([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            Ct([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Ct([i.PostConstruct], e.prototype, "passBeansUp", null),
            e
          );
        })(mt),
        bt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Et = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        St = (function (t) {
          function e(e) {
            return t.call(this, e, !1) || this;
          }
          return (
            bt(e, t),
            (e.prototype.passBeansUp = function () {
              t.prototype.setBeans.call(this, {
                gridOptionsWrapper: this.gridOptionsWrapper,
                eventService: this.eventService,
                context: this.getContext(),
                loggerFactory: this.loggerFactory,
                dragAndDropService: this.dragAndDropService,
              });
              var e = this.gridOptionsWrapper.getLocaleTextFunc(),
                o = e(
                  "pivotColumnsEmptyMessage",
                  "Drag here to set column labels"
                ),
                n = e("pivots", "Column Labels");
              t.prototype.init.call(this, {
                dragAndDropIcon: i.DragAndDropService.ICON_GROUP,
                icon: i._.createIconNoSpan(
                  "pivotPanel",
                  this.gridOptionsWrapper,
                  null
                ),
                emptyMessage: o,
                title: n,
              }),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  this.refresh.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_CHANGED,
                  this.refresh.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  this.checkVisibility.bind(this)
                ),
                this.refresh();
            }),
            (e.prototype.getTooltipParams = function () {
              var e = t.prototype.getTooltipParams.call(this);
              return (e.location = "pivotColumnsList"), e;
            }),
            (e.prototype.refresh = function () {
              this.checkVisibility(), this.refreshGui();
            }),
            (e.prototype.checkVisibility = function () {
              var t = this.columnController.isPivotMode();
              if (this.isHorizontal())
                switch (this.gridOptionsWrapper.getPivotPanelShow()) {
                  case "always":
                    this.setDisplayed(t);
                    break;
                  case "onlyWhenPivoting":
                    var e = this.columnController.isPivotActive();
                    this.setDisplayed(t && e);
                    break;
                  default:
                    this.setDisplayed(!1);
                }
              else this.setDisplayed(t);
            }),
            (e.prototype.isColumnDroppable = function (t) {
              return (
                !(
                  this.gridOptionsWrapper.isFunctionsReadOnly() ||
                  !t.isPrimary()
                ) &&
                t.isAllowPivot() &&
                !t.isPivotActive()
              );
            }),
            (e.prototype.updateColumns = function (t) {
              this.gridOptionsWrapper.isFunctionsPassive()
                ? this.eventService.dispatchEvent({
                    type: i.Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST,
                    columns: t,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  })
                : this.columnController.setPivotColumns(t, "toolPanelUi");
            }),
            (e.prototype.getIconName = function () {
              return this.isPotentialDndColumns()
                ? i.DragAndDropService.ICON_PIVOT
                : i.DragAndDropService.ICON_NOT_ALLOWED;
            }),
            (e.prototype.getExistingColumns = function () {
              return this.columnController.getPivotColumns();
            }),
            Et(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Et(
              [i.Autowired("loggerFactory")],
              e.prototype,
              "loggerFactory",
              void 0
            ),
            Et(
              [i.Autowired("dragAndDropService")],
              e.prototype,
              "dragAndDropService",
              void 0
            ),
            Et([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            Et([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Et([i.PostConstruct], e.prototype, "passBeansUp", null),
            e
          );
        })(mt),
        Ot = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        _t = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Rt = (function (t) {
          function e() {
            return t.call(this) || this;
          }
          return (
            Ot(e, t),
            (e.prototype.postConstruct = function () {
              this.setGui(this.createNorthPanel()),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  this.onRowGroupChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  this.onRowGroupChanged.bind(this)
                ),
                this.onRowGroupChanged();
            }),
            (e.prototype.createNorthPanel = function () {
              var t = document.createElement("div"),
                e = this.onDropPanelVisible.bind(this);
              return (
                i._.addCssClass(t, "ag-column-drop-wrapper"),
                (this.rowGroupComp = new wt(!0)),
                this.createManagedBean(this.rowGroupComp),
                (this.pivotComp = new St(!0)),
                this.createManagedBean(this.pivotComp),
                t.appendChild(this.rowGroupComp.getGui()),
                t.appendChild(this.pivotComp.getGui()),
                this.addManagedListener(
                  this.rowGroupComp,
                  i.Component.EVENT_DISPLAYED_CHANGED,
                  e
                ),
                this.addManagedListener(
                  this.pivotComp,
                  i.Component.EVENT_DISPLAYED_CHANGED,
                  e
                ),
                this.onDropPanelVisible(),
                t
              );
            }),
            (e.prototype.onDropPanelVisible = function () {
              var t =
                this.rowGroupComp.isDisplayed() && this.pivotComp.isDisplayed();
              this.rowGroupComp.addOrRemoveCssClass(
                "ag-column-drop-horizontal-half-width",
                t
              ),
                this.pivotComp.addOrRemoveCssClass(
                  "ag-column-drop-horizontal-half-width",
                  t
                );
            }),
            (e.prototype.onRowGroupChanged = function () {
              if (this.rowGroupComp) {
                var t = this.gridOptionsWrapper.getRowGroupPanelShow();
                if (t === i.Constants.ALWAYS)
                  this.rowGroupComp.setDisplayed(!0);
                else if (t === i.Constants.ONLY_WHEN_GROUPING) {
                  var e = !this.columnController.isRowGroupEmpty();
                  this.rowGroupComp.setDisplayed(e);
                } else this.rowGroupComp.setDisplayed(!1);
              }
            }),
            _t(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            _t([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        Pt = {
          moduleName: i.ModuleNames.RowGroupingModule,
          beans: [I, V, j, K, q],
          agStackComponents: [
            { componentName: "AgGridHeaderDropZones", componentClass: Rt },
          ],
          dependantModules: [g],
        },
        Tt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        At = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Dt = (function (t) {
          function e(e) {
            return t.call(this, e, !0) || this;
          }
          return (
            Tt(e, t),
            (e.prototype.passBeansUp = function () {
              t.prototype.setBeans.call(this, {
                gridOptionsWrapper: this.gridOptionsWrapper,
                eventService: this.eventService,
                context: this.getContext(),
                loggerFactory: this.loggerFactory,
                dragAndDropService: this.dragAndDropService,
              });
              var e = this.gridOptionsWrapper.getLocaleTextFunc(),
                o = e("valueColumnsEmptyMessage", "Drag here to aggregate"),
                n = e("values", "Values");
              t.prototype.init.call(this, {
                dragAndDropIcon: i.DragAndDropService.ICON_AGGREGATE,
                icon: i._.createIconNoSpan(
                  "valuePanel",
                  this.gridOptionsWrapper,
                  null
                ),
                emptyMessage: o,
                title: n,
              }),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_VALUE_CHANGED,
                  this.refreshGui.bind(this)
                );
            }),
            (e.prototype.getTooltipParams = function () {
              var e = t.prototype.getTooltipParams.call(this);
              return (e.location = "valueColumnsList"), e;
            }),
            (e.prototype.getIconName = function () {
              return this.isPotentialDndColumns()
                ? i.DragAndDropService.ICON_AGGREGATE
                : i.DragAndDropService.ICON_NOT_ALLOWED;
            }),
            (e.prototype.isColumnDroppable = function (t) {
              return (
                !(
                  this.gridOptionsWrapper.isFunctionsReadOnly() ||
                  !t.isPrimary()
                ) &&
                t.isAllowValue() &&
                !t.isValueActive()
              );
            }),
            (e.prototype.updateColumns = function (t) {
              this.gridOptionsWrapper.isFunctionsPassive()
                ? this.eventService.dispatchEvent({
                    type: i.Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST,
                    columns: t,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  })
                : this.columnController.setValueColumns(t, "toolPanelUi");
            }),
            (e.prototype.getExistingColumns = function () {
              return this.columnController.getValueColumns();
            }),
            At(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            At(
              [i.Autowired("loggerFactory")],
              e.prototype,
              "loggerFactory",
              void 0
            ),
            At(
              [i.Autowired("dragAndDropService")],
              e.prototype,
              "dragAndDropService",
              void 0
            ),
            At([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            At([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            At([i.PostConstruct], e.prototype, "passBeansUp", null),
            e
          );
        })(mt),
        xt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ft = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Nt = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE, !0) || this;
          }
          return (
            xt(e, t),
            (e.prototype.init = function (t, e, o) {
              (this.allowDragging = t),
                (this.params = e),
                (this.eventType = o),
                this.primaryColsHeaderPanel.init(this.params),
                this.params.suppressColumnExpandAll &&
                  this.params.suppressColumnFilter &&
                  this.params.suppressColumnSelectAll &&
                  this.primaryColsHeaderPanel.setDisplayed(!1),
                this.addManagedListener(
                  this.primaryColsListPanel,
                  "groupExpanded",
                  this.onGroupExpanded.bind(this)
                ),
                this.addManagedListener(
                  this.primaryColsListPanel,
                  "selectionChanged",
                  this.onSelectionChange.bind(this)
                ),
                this.primaryColsListPanel.init(
                  this.params,
                  this.allowDragging,
                  this.eventType
                ),
                this.addManagedListener(
                  this.primaryColsHeaderPanel,
                  "expandAll",
                  this.onExpandAll.bind(this)
                ),
                this.addManagedListener(
                  this.primaryColsHeaderPanel,
                  "collapseAll",
                  this.onCollapseAll.bind(this)
                ),
                this.addManagedListener(
                  this.primaryColsHeaderPanel,
                  "selectAll",
                  this.onSelectAll.bind(this)
                ),
                this.addManagedListener(
                  this.primaryColsHeaderPanel,
                  "unselectAll",
                  this.onUnselectAll.bind(this)
                ),
                this.addManagedListener(
                  this.primaryColsHeaderPanel,
                  "filterChanged",
                  this.onFilterChanged.bind(this)
                );
            }),
            (e.prototype.onExpandAll = function () {
              this.primaryColsListPanel.doSetExpandedAll(!0);
            }),
            (e.prototype.onCollapseAll = function () {
              this.primaryColsListPanel.doSetExpandedAll(!1);
            }),
            (e.prototype.expandGroups = function (t) {
              this.primaryColsListPanel.setGroupsExpanded(!0, t);
            }),
            (e.prototype.collapseGroups = function (t) {
              this.primaryColsListPanel.setGroupsExpanded(!1, t);
            }),
            (e.prototype.setColumnLayout = function (t) {
              this.primaryColsListPanel.setColumnLayout(t);
            }),
            (e.prototype.onFilterChanged = function (t) {
              this.primaryColsListPanel.setFilterText(t.filterText);
            }),
            (e.prototype.syncLayoutWithGrid = function () {
              this.primaryColsListPanel.onColumnsChanged();
            }),
            (e.prototype.onSelectAll = function () {
              this.primaryColsListPanel.doSetSelectedAll(!0);
            }),
            (e.prototype.onUnselectAll = function () {
              this.primaryColsListPanel.doSetSelectedAll(!1);
            }),
            (e.prototype.onGroupExpanded = function (t) {
              this.primaryColsHeaderPanel.setExpandState(t.state);
            }),
            (e.prototype.onSelectionChange = function (t) {
              this.primaryColsHeaderPanel.setSelectionState(t.state);
            }),
            (e.TEMPLATE =
              '<div class="ag-column-select">\n            <ag-primary-cols-header ref="primaryColsHeaderPanel"></ag-primary-cols-header>\n            <ag-primary-cols-list ref="primaryColsListPanel"></ag-primary-cols-list>\n        </div>'),
            Ft(
              [i.RefSelector("primaryColsHeaderPanel")],
              e.prototype,
              "primaryColsHeaderPanel",
              void 0
            ),
            Ft(
              [i.RefSelector("primaryColsListPanel")],
              e.prototype,
              "primaryColsListPanel",
              void 0
            ),
            e
          );
        })(i.ManagedFocusComponent),
        Mt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        It = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Lt = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (o.initialised = !1), (o.childDestroyFuncs = []), o;
          }
          return (
            Mt(e, t),
            (e.prototype.setVisible = function (e) {
              t.prototype.setDisplayed.call(this, e),
                e && !this.initialised && this.init(this.params);
            }),
            (e.prototype.init = function (t) {
              var e = this,
                o = {
                  suppressSideButtons: !1,
                  suppressColumnSelectAll: !1,
                  suppressColumnFilter: !1,
                  suppressColumnExpandAll: !1,
                  contractColumnSelection: !1,
                  suppressPivotMode: !1,
                  suppressRowGroups: !1,
                  suppressValues: !1,
                  suppressPivots: !1,
                  suppressSyncLayoutWithGrid: !1,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                };
              if (
                (i._.mergeDeep(o, t),
                (this.params = o),
                this.isRowGroupingModuleLoaded() &&
                  !this.params.suppressPivotMode &&
                  ((this.pivotModePanel = this.createBean(new F())),
                  this.childDestroyFuncs.push(function () {
                    return e.destroyBean(e.pivotModePanel);
                  }),
                  this.appendChild(this.pivotModePanel)),
                (this.primaryColsPanel = this.createBean(new Nt())),
                this.childDestroyFuncs.push(function () {
                  return e.destroyBean(e.primaryColsPanel);
                }),
                this.primaryColsPanel.init(!0, this.params, "toolPanelUi"),
                i._.addCssClass(
                  this.primaryColsPanel.getGui(),
                  "ag-column-panel-column-select"
                ),
                this.appendChild(this.primaryColsPanel),
                this.isRowGroupingModuleLoaded())
              ) {
                this.params.suppressRowGroups ||
                  ((this.rowGroupDropZonePanel = this.createBean(new wt(!1))),
                  this.childDestroyFuncs.push(function () {
                    return e.destroyBean(e.rowGroupDropZonePanel);
                  }),
                  this.appendChild(this.rowGroupDropZonePanel)),
                  this.params.suppressValues ||
                    ((this.valuesDropZonePanel = this.createBean(new Dt(!1))),
                    this.childDestroyFuncs.push(function () {
                      return e.destroyBean(e.valuesDropZonePanel);
                    }),
                    this.appendChild(this.valuesDropZonePanel)),
                  this.params.suppressPivots ||
                    ((this.pivotDropZonePanel = this.createBean(new St(!1))),
                    this.childDestroyFuncs.push(function () {
                      return e.destroyBean(e.pivotDropZonePanel);
                    }),
                    this.appendChild(this.pivotDropZonePanel)),
                  this.setLastVisible();
                var n = this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  this.setLastVisible.bind(this)
                );
                this.childDestroyFuncs.push(function () {
                  return n();
                });
              }
              this.initialised = !0;
            }),
            (e.prototype.setPivotModeSectionVisible = function (t) {
              var e = this;
              this.isRowGroupingModuleLoaded() &&
                (this.pivotModePanel
                  ? this.pivotModePanel.setDisplayed(t)
                  : t &&
                    ((this.pivotModePanel = this.createBean(new F())),
                    this.getGui().insertBefore(
                      this.pivotModePanel.getGui(),
                      this.getGui().firstChild
                    ),
                    this.childDestroyFuncs.push(function () {
                      return e.destroyBean(e.pivotModePanel);
                    })),
                this.setLastVisible());
            }),
            (e.prototype.setRowGroupsSectionVisible = function (t) {
              this.isRowGroupingModuleLoaded() &&
                (this.rowGroupDropZonePanel
                  ? this.rowGroupDropZonePanel.setDisplayed(t)
                  : t &&
                    ((this.rowGroupDropZonePanel = this.createManagedBean(
                      new wt(!1)
                    )),
                    this.appendChild(this.rowGroupDropZonePanel)),
                this.setLastVisible());
            }),
            (e.prototype.setValuesSectionVisible = function (t) {
              this.isRowGroupingModuleLoaded() &&
                (this.valuesDropZonePanel
                  ? this.valuesDropZonePanel.setDisplayed(t)
                  : t &&
                    ((this.valuesDropZonePanel = this.createManagedBean(
                      new Dt(!1)
                    )),
                    this.appendChild(this.valuesDropZonePanel)),
                this.setLastVisible());
            }),
            (e.prototype.setPivotSectionVisible = function (t) {
              this.isRowGroupingModuleLoaded() &&
                (this.pivotDropZonePanel
                  ? this.pivotDropZonePanel.setDisplayed(t)
                  : t &&
                    ((this.pivotDropZonePanel = this.createManagedBean(
                      new St(!1)
                    )),
                    this.appendChild(this.pivotDropZonePanel),
                    this.pivotDropZonePanel.setDisplayed(t)),
                this.setLastVisible());
            }),
            (e.prototype.setLastVisible = function () {
              var t = this.getGui();
              Array.prototype.slice
                .call(t.querySelectorAll(".ag-column-drop"))
                .forEach(function (t) {
                  return i._.removeCssClass(t, "ag-last-column-drop");
                });
              var e = t.querySelectorAll(".ag-column-drop:not(.ag-hidden)"),
                o = i._.last(e);
              o && i._.addCssClass(o, "ag-last-column-drop");
            }),
            (e.prototype.isRowGroupingModuleLoaded = function () {
              return i.ModuleRegistry.assertRegistered(
                i.ModuleNames.RowGroupingModule,
                "Row Grouping"
              );
            }),
            (e.prototype.expandColumnGroups = function (t) {
              this.primaryColsPanel.expandGroups(t);
            }),
            (e.prototype.collapseColumnGroups = function (t) {
              this.primaryColsPanel.collapseGroups(t);
            }),
            (e.prototype.setColumnLayout = function (t) {
              this.primaryColsPanel.setColumnLayout(t);
            }),
            (e.prototype.syncLayoutWithGrid = function () {
              this.primaryColsPanel.syncLayoutWithGrid();
            }),
            (e.prototype.destroyChildren = function () {
              this.childDestroyFuncs.forEach(function (t) {
                return t();
              }),
                (this.childDestroyFuncs.length = 0),
                i._.clearElement(this.getGui());
            }),
            (e.prototype.refresh = function () {
              this.destroyChildren(), this.init(this.params);
            }),
            (e.prototype.destroy = function () {
              this.destroyChildren(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE = '<div class="ag-column-panel"></div>'),
            It([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            It([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            e
          );
        })(i.Component),
        Gt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        kt = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Vt = (function (t) {
          function e() {
            return (
              t.call(
                this,
                '<div class="ag-tool-panel-horizontal-resize"></div>'
              ) || this
            );
          }
          return (
            Gt(e, t),
            (e.prototype.setElementToResize = function (t) {
              this.elementToResize = t;
            }),
            (e.prototype.postConstruct = function () {
              var t = this.horizontalResizeService.addResizeBar({
                eResizeBar: this.getGui(),
                dragStartPixels: 1,
                onResizeStart: this.onResizeStart.bind(this),
                onResizing: this.onResizing.bind(this),
                onResizeEnd: this.onResizing.bind(this),
              });
              this.addDestroyFunc(t),
                this.setInverted(this.gridOptionsWrapper.isEnableRtl());
            }),
            (e.prototype.onResizeStart = function () {
              this.startingWidth = this.elementToResize.offsetWidth;
            }),
            (e.prototype.onResizing = function (t) {
              var e = Math.max(
                100,
                Math.floor(this.startingWidth - t * (this.inverted ? -1 : 1))
              );
              this.elementToResize.style.width = e + "px";
            }),
            (e.prototype.setInverted = function (t) {
              this.inverted = t;
            }),
            kt(
              [i.Autowired("horizontalResizeService")],
              e.prototype,
              "horizontalResizeService",
              void 0
            ),
            kt([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        Wt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ht = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Bt = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (o.buttonComps = []), o;
          }
          return (
            Wt(e, t),
            (e.prototype.postConstruct = function () {
              this.addManagedListener(
                this.getFocusableElement(),
                "keydown",
                this.handleKeyDown.bind(this)
              );
            }),
            (e.prototype.handleKeyDown = function (t) {
              if (
                t.keyCode === i.KeyCode.TAB &&
                t.shiftKey &&
                !this.focusController.findNextFocusableElement(
                  this.getFocusableElement(),
                  null,
                  !0
                )
              ) {
                var e = this.headerPositionUtils.findColAtEdgeForHeaderRow(
                  0,
                  "start"
                );
                if (!e) return;
                t.preventDefault(), this.focusController.focusHeaderPosition(e);
              }
            }),
            (e.prototype.setToolPanelDefs = function (t) {
              t.forEach(this.addButtonComp.bind(this));
            }),
            (e.prototype.setActiveButton = function (t) {
              this.buttonComps.forEach(function (e) {
                e.setSelected(t === e.getToolPanelId());
              });
            }),
            (e.prototype.addButtonComp = function (t) {
              var o = this,
                n = this.createBean(new jt(t));
              this.buttonComps.push(n),
                this.appendChild(n),
                n.addEventListener(jt.EVENT_TOGGLE_BUTTON_CLICKED, function () {
                  o.dispatchEvent({
                    type: e.EVENT_SIDE_BAR_BUTTON_CLICKED,
                    toolPanelId: t.id,
                  });
                });
            }),
            (e.prototype.clearButtons = function () {
              (this.buttonComps = this.destroyBeans(this.buttonComps)),
                i._.clearElement(this.getGui());
            }),
            (e.EVENT_SIDE_BAR_BUTTON_CLICKED = "sideBarButtonClicked"),
            (e.TEMPLATE = '<div class="ag-side-buttons"></div>'),
            Ht(
              [i.Autowired("focusController")],
              e.prototype,
              "focusController",
              void 0
            ),
            Ht(
              [i.Autowired("headerPositionUtils")],
              e.prototype,
              "headerPositionUtils",
              void 0
            ),
            Ht([i.PostConstruct], e.prototype, "postConstruct", null),
            Ht([i.PreDestroy], e.prototype, "clearButtons", null),
            e
          );
        })(i.Component),
        jt = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.toolPanelDef = e), o;
          }
          return (
            Wt(e, t),
            (e.prototype.getToolPanelId = function () {
              return this.toolPanelDef.id;
            }),
            (e.prototype.postConstruct = function () {
              var t = this.createTemplate();
              this.setTemplate(t),
                this.eIconWrapper.insertAdjacentElement(
                  "afterbegin",
                  i._.createIconNoSpan(
                    this.toolPanelDef.iconKey,
                    this.gridOptionsWrapper
                  )
                ),
                this.addManagedListener(
                  this.eToggleButton,
                  "click",
                  this.onButtonPressed.bind(this)
                );
            }),
            (e.prototype.createTemplate = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = this.toolPanelDef;
              return (
                '<div class="ag-side-button">\n                <button type="button" ref="eToggleButton" class="ag-side-button-button">\n                    <div ref="eIconWrapper" class="ag-side-button-icon-wrapper"></div>\n                    <span class="ag-side-button-label">' +
                t(e.labelKey, e.labelDefault) +
                "</span>\n                </button>\n            </div>"
              );
            }),
            (e.prototype.onButtonPressed = function () {
              this.dispatchEvent({ type: e.EVENT_TOGGLE_BUTTON_CLICKED });
            }),
            (e.prototype.setSelected = function (t) {
              this.addOrRemoveCssClass("ag-selected", t);
            }),
            (e.EVENT_TOGGLE_BUTTON_CLICKED = "toggleButtonClicked"),
            Ht(
              [i.RefSelector("eToggleButton")],
              e.prototype,
              "eToggleButton",
              void 0
            ),
            Ht(
              [i.RefSelector("eIconWrapper")],
              e.prototype,
              "eIconWrapper",
              void 0
            ),
            Ht([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        Ut = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        zt = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Kt = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            Ut(e, t),
            (e.prototype.getToolPanelId = function () {
              return this.toolPanelId;
            }),
            (e.prototype.setToolPanelDef = function (t) {
              this.toolPanelId = t.id;
              var e = {
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                },
                o = this.userComponentFactory.newToolPanelComponent(t, e);
              null != o
                ? o.then(this.setToolPanelComponent.bind(this))
                : console.warn(
                    "ag-grid: error processing tool panel component " +
                      t.id +
                      ". You need to specify either 'toolPanel' or 'toolPanelFramework'"
                  );
            }),
            (e.prototype.setupResize = function () {
              var t = (this.resizeBar = new Vt());
              this.getContext().createBean(t),
                t.setElementToResize(this.getGui()),
                this.appendChild(t);
            }),
            (e.prototype.setToolPanelComponent = function (t) {
              var e = this;
              (this.toolPanelCompInstance = t),
                this.appendChild(t.getGui()),
                this.addDestroyFunc(function () {
                  e.destroyBean(t);
                });
            }),
            (e.prototype.getToolPanelInstance = function () {
              return this.toolPanelCompInstance;
            }),
            (e.prototype.setResizerSizerSide = function (t) {
              var e = this.gridOptionsWrapper.isEnableRtl(),
                o = "left" === t;
              this.resizeBar.setInverted(e ? o : !o);
            }),
            (e.prototype.refresh = function () {
              this.toolPanelCompInstance.refresh();
            }),
            (e.TEMPLATE = '<div class="ag-tool-panel-wrapper"/>'),
            zt(
              [i.Autowired("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            zt([i.PostConstruct], e.prototype, "setupResize", null),
            e
          );
        })(i.Component),
        Yt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Xt = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        qt = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (o.toolPanelWrappers = []), o;
          }
          return (
            Yt(e, t),
            (e.prototype.postConstruct = function () {
              this.sideBarButtonsComp.addEventListener(
                Bt.EVENT_SIDE_BAR_BUTTON_CLICKED,
                this.onToolPanelButtonClicked.bind(this)
              ),
                this.setSideBarDef();
            }),
            (e.prototype.onToolPanelButtonClicked = function (t) {
              var e = t.toolPanelId,
                o = this.openedItem();
              this.openToolPanel(o === e ? void 0 : e);
            }),
            (e.prototype.clearDownUi = function () {
              this.sideBarButtonsComp.clearButtons(),
                this.destroyToolPanelWrappers();
            }),
            (e.prototype.setSideBarDef = function () {
              this.setDisplayed(!1);
              var t = this.gridOptionsWrapper.getSideBar(),
                e = !!t && !!t.toolPanels;
              if (e) {
                this.setDisplayed(e && !t.hiddenByDefault);
                var o = t.toolPanels;
                this.sideBarButtonsComp.setToolPanelDefs(o),
                  this.setupToolPanels(o),
                  this.setSideBarPosition(t.position),
                  t.hiddenByDefault || this.openToolPanel(t.defaultToolPanel);
              }
            }),
            (e.prototype.setSideBarPosition = function (t) {
              t || (t = "right");
              var e = "left" === t,
                o = e ? "right" : "left",
                n = this.getGui();
              return (
                i._.addOrRemoveCssClass(n, "ag-side-bar-left", e),
                i._.addOrRemoveCssClass(n, "ag-side-bar-right", !e),
                this.toolPanelWrappers.forEach(function (t) {
                  t.setResizerSizerSide(o);
                }),
                this
              );
            }),
            (e.prototype.setupToolPanels = function (t) {
              var e = this;
              t.forEach(function (t) {
                if (null != t.id) {
                  if (
                    "agColumnsToolPanel" === t.toolPanel &&
                    !i.ModuleRegistry.assertRegistered(
                      i.ModuleNames.ColumnToolPanelModule,
                      "Column Tool Panel"
                    )
                  )
                    return;
                  if (
                    "agFiltersToolPanel" === t.toolPanel &&
                    !i.ModuleRegistry.assertRegistered(
                      i.ModuleNames.FiltersToolPanelModule,
                      "Filters Tool Panel"
                    )
                  )
                    return;
                  var o = new Kt();
                  e.getContext().createBean(o),
                    o.setToolPanelDef(t),
                    o.setDisplayed(!1),
                    e.getGui().appendChild(o.getGui()),
                    e.toolPanelWrappers.push(o);
                } else console.warn("ag-grid: please review all your toolPanel components, it seems like at least one of them doesn't have an id");
              });
            }),
            (e.prototype.refresh = function () {
              this.toolPanelWrappers.forEach(function (t) {
                return t.refresh();
              });
            }),
            (e.prototype.openToolPanel = function (t) {
              var e = this.openedItem();
              e !== t &&
                (this.toolPanelWrappers.forEach(function (e) {
                  var o = t === e.getToolPanelId();
                  e.setDisplayed(o);
                }),
                e !== this.openedItem() &&
                  (this.sideBarButtonsComp.setActiveButton(t),
                  this.raiseToolPanelVisibleEvent(t)));
            }),
            (e.prototype.getToolPanelInstance = function (t) {
              var e = this.toolPanelWrappers.filter(function (e) {
                return e.getToolPanelId() === t;
              })[0];
              if (e) return e.getToolPanelInstance();
              console.warn(
                "ag-grid: unable to lookup Tool Panel as invalid key supplied: " +
                  t
              );
            }),
            (e.prototype.raiseToolPanelVisibleEvent = function (t) {
              var e = {
                type: i.Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED,
                source: t,
                api: this.gridOptionsWrapper.getApi(),
                columnApi: this.gridOptionsWrapper.getColumnApi(),
              };
              this.eventService.dispatchEvent(e);
            }),
            (e.prototype.close = function () {
              this.openToolPanel(void 0);
            }),
            (e.prototype.isToolPanelShowing = function () {
              return !!this.openedItem();
            }),
            (e.prototype.openedItem = function () {
              var t = null;
              return (
                this.toolPanelWrappers.forEach(function (e) {
                  e.isDisplayed() && (t = e.getToolPanelId());
                }),
                t
              );
            }),
            (e.prototype.reset = function () {
              this.clearDownUi(), this.setSideBarDef();
            }),
            (e.prototype.destroyToolPanelWrappers = function () {
              var t = this;
              this.toolPanelWrappers.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              }),
                (this.toolPanelWrappers.length = 0);
            }),
            (e.prototype.destroy = function () {
              this.destroyToolPanelWrappers(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div class="ag-side-bar ag-unselectable">\n            <ag-side-bar-buttons ref="sideBarButtons"></ag-side-bar-buttons>\n        </div>'),
            Xt(
              [i.RefSelector("sideBarButtons")],
              e.prototype,
              "sideBarButtonsComp",
              void 0
            ),
            Xt([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        Qt = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Zt = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        $t = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.isColGroupDef = function (t) {
                return t && void 0 !== t.children;
              }),
              (e.getId = function (t) {
                return e.isColGroupDef(t) ? t.groupId : t.colId;
              }),
              e
            );
          }
          return (
            Qt(e, t),
            (e.prototype.createColumnTree = function (t) {
              var e = this,
                o = [],
                n = function (t, r) {
                  if (e.isColGroupDef(t)) {
                    var s = t,
                      a = new i.OriginalColumnGroup(
                        s,
                        void 0 !== s.groupId ? s.groupId : s.headerName,
                        !1,
                        r
                      ),
                      l = [];
                    return (
                      s.children.forEach(function (t) {
                        var e = n(t, r + 1);
                        e && l.push(e);
                      }),
                      a.setChildren(l),
                      a
                    );
                  }
                  var u = t,
                    p = e.columnController.getPrimaryColumn(
                      u.colId ? u.colId : u.field
                    );
                  return p || o.push(u), p;
                },
                r = [];
              return (
                t.forEach(function (t) {
                  var e = n(t, 0);
                  e && r.push(e);
                }),
                o.length > 0 &&
                  console.warn(
                    "AG Grid: unable to find grid columns for the supplied colDef(s):",
                    o
                  ),
                r
              );
            }),
            (e.prototype.syncLayoutWithGrid = function (t) {
              var e = this.getLeafPathTrees();
              t(this.mergeLeafPathTrees(e));
            }),
            (e.prototype.getLeafPathTrees = function () {
              var t = function (e, o) {
                var n;
                if (e instanceof i.OriginalColumnGroup)
                  if (e.isPadding()) n = o;
                  else {
                    var r = i._.assign({}, e.getColGroupDef());
                    (r.groupId = e.getGroupId()), (r.children = [o]), (n = r);
                  }
                else {
                  var s = i._.assign({}, e.getColDef());
                  (s.colId = e.getColId()), (n = s);
                }
                var a = e.getOriginalParent();
                return a ? t(a, n) : n;
              };
              return this.columnController
                .getAllGridColumns()
                .filter(function (t) {
                  var e = t.getColDef();
                  return t.isPrimary() && !e.showRowGroup;
                })
                .map(function (e) {
                  return t(e, e.getColDef());
                });
            }),
            (e.prototype.mergeLeafPathTrees = function (t) {
              for (
                var e,
                  o,
                  n = this,
                  r = function (t, e) {
                    if (!n.isColGroupDef(e)) return t;
                    var o = t,
                      i = e;
                    return (
                      (i.children &&
                        i.groupId &&
                        n.addChildrenToGroup(o, i.groupId, i.children[0])) ||
                        i.children.forEach(function (t) {
                          return r(o, t);
                        }),
                      o
                    );
                  },
                  i = [],
                  s = 1;
                s <= t.length;
                s++
              ) {
                var a = t[s - 1],
                  l = t[s];
                (o = l),
                  n.isColGroupDef((e = a)) &&
                  n.isColGroupDef(o) &&
                  n.getId(e) === n.getId(o)
                    ? (t[s] = r(a, l))
                    : i.push(a);
              }
              return i;
            }),
            (e.prototype.addChildrenToGroup = function (t, e, o) {
              var n = this;
              if (!this.isColGroupDef(t)) return !0;
              var r = t,
                s = o;
              if (
                (function (t, e) {
                  var o = t.children.map(n.getId),
                    r = i._.includes(o, n.getId(e)),
                    s = i._.last(t.children),
                    a = s && n.getId(s) !== n.getId(e);
                  return r && a;
                })(r, s)
              )
                return r.children.push(s), !0;
              if (r.groupId === e) {
                var a = r.children.map(this.getId);
                if (!i._.includes(a, this.getId(s)))
                  return r.children.push(s), !0;
              }
              return (
                r.children.forEach(function (t) {
                  return n.addChildrenToGroup(t, e, o);
                }),
                !1
              );
            }),
            Zt(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Zt([i.Bean("toolPanelColDefService")], e)
          );
        })(i.BeanStub),
        Jt = {
          moduleName: i.ModuleNames.SideBarModule,
          beans: [$t],
          agStackComponents: [
            { componentName: "AgHorizontalResize", componentClass: Vt },
            { componentName: "AgSideBar", componentClass: qt },
            { componentName: "AgSideBarButtons", componentClass: Bt },
          ],
          dependantModules: [g],
        },
        te = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ee = (function () {
          function t() {}
          return (
            (t.prototype.selectAllChildren = function (t, e, o) {
              var n = this.extractAllLeafColumns(t);
              this.setAllColumns(n, e, o);
            }),
            (t.prototype.setColumn = function (t, e, o) {
              this.setAllColumns([t], e, o);
            }),
            (t.prototype.setAllColumns = function (t, e, o) {
              this.columnController.isPivotMode()
                ? this.setAllPivot(t, e, o)
                : this.setAllVisible(t, e, o);
            }),
            (t.prototype.extractAllLeafColumns = function (t) {
              var e = [],
                o = function (t) {
                  t.forEach(function (t) {
                    t.isPassesFilter() &&
                      (t.isGroup()
                        ? o(t.getChildren())
                        : e.push(t.getColumn()));
                  });
                };
              return o(t), e;
            }),
            (t.prototype.setAllVisible = function (t, e, o) {
              var n = [];
              t.forEach(function (t) {
                t.getColDef().lockVisible ||
                  (t.isVisible() != e &&
                    n.push({ colId: t.getId(), hide: !e }));
              }),
                n.length > 0 &&
                  this.columnController.applyColumnState({ state: n }, o);
            }),
            (t.prototype.setAllPivot = function (t, e, o) {
              this.gridOptionsWrapper.isFunctionsPassive()
                ? this.setAllPivotPassive(t, e)
                : this.setAllPivotActive(t, e, o);
            }),
            (t.prototype.setAllPivotPassive = function (t, e) {
              var o = this.columnController.getPivotColumns().slice(),
                n = this.columnController.getValueColumns().slice(),
                r = this.columnController.getRowGroupColumns().slice(),
                s = !1,
                a = !1,
                l = !1;
              t.forEach(
                e
                  ? function (t) {
                      t.isAnyFunctionActive() ||
                        (t.isAllowValue()
                          ? (n.push(t), (a = !0))
                          : t.isAllowRowGroup()
                          ? (r.push(t), (s = !0))
                          : t.isAllowPivot() && (o.push(t), (l = !0)));
                    }
                  : function (t) {
                      t.isAnyFunctionActive() &&
                        (o.indexOf(t) >= 0 &&
                          (i._.removeFromArray(o, t), (s = !0)),
                        n.indexOf(t) >= 0 &&
                          (i._.removeFromArray(n, t), (a = !0)),
                        r.indexOf(t) >= 0 &&
                          (i._.removeFromArray(r, t), (l = !0)));
                    }
              ),
                s &&
                  this.eventService.dispatchEvent({
                    type: i.Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST,
                    columns: o,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  }),
                l &&
                  this.eventService.dispatchEvent({
                    type: i.Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST,
                    columns: r,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  }),
                a &&
                  this.eventService.dispatchEvent({
                    type: i.Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST,
                    columns: r,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  });
            }),
            (t.prototype.setAllPivotActive = function (t, e, o) {
              var n = this,
                r = [];
              t.forEach(
                e
                  ? function (t) {
                      if (!t.isAnyFunctionActive())
                        if (t.isAllowValue()) {
                          var e =
                            "string" == typeof t.getAggFunc()
                              ? t.getAggFunc()
                              : n.aggFuncService.getDefaultAggFunc(t);
                          r.push({ colId: t.getId(), aggFunc: e });
                        } else
                          t.isAllowRowGroup()
                            ? r.push({ colId: t.getId(), rowGroup: !0 })
                            : t.isAllowPivot() &&
                              r.push({ colId: t.getId(), pivot: !0 });
                    }
                  : function (t) {
                      (t.isPivotActive() ||
                        t.isRowGroupActive() ||
                        t.isValueActive()) &&
                        r.push({
                          colId: t.getId(),
                          pivot: !1,
                          rowGroup: !1,
                          aggFunc: null,
                        });
                    }
              ),
                r.length > 0 &&
                  this.columnController.applyColumnState({ state: r }, o);
            }),
            te(
              [i.Autowired("aggFuncService")],
              t.prototype,
              "aggFuncService",
              void 0
            ),
            te(
              [i.Autowired("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            te(
              [i.Autowired("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            te([i.Autowired("columnApi")], t.prototype, "columnApi", void 0),
            te([i.Autowired("gridApi")], t.prototype, "gridApi", void 0),
            te(
              [i.Autowired("eventService")],
              t.prototype,
              "eventService",
              void 0
            ),
            te([i.Bean("modelItemUtils")], t)
          );
        })(),
        oe = {
          moduleName: i.ModuleNames.ColumnToolPanelModule,
          beans: [ee],
          agStackComponents: [
            { componentName: "AgPrimaryColsHeader", componentClass: v },
            { componentName: "AgPrimaryColsList", componentClass: A },
            { componentName: "AgPrimaryCols", componentClass: Nt },
          ],
          userComponents: [
            { componentName: "agColumnsToolPanel", componentClass: Lt },
          ],
          dependantModules: [g, Pt, Jt],
        },
        ne = function (t) {
          return {
            name: t.name,
            properties: {
              rawMap: {
                Extension: t.Extension,
                PartName: t.PartName,
                ContentType: t.ContentType,
              },
            },
          };
        },
        re = function (t) {
          return {
            name: "a:" + t[0],
            children: [
              {
                name: "a:" + t[1],
                properties: { rawMap: { val: t[2], lastClr: t[3] } },
              },
            ],
          };
        },
        ie = function (t) {
          return {
            name: "a:" + t[0],
            properties: {
              rawMap: { script: t[2], typeface: t[1], panose: t[3] },
            },
          };
        },
        se = function (t, e, o) {
          return {
            name: "a:" + t,
            properties: { rawMap: { val: e } },
            children: o,
          };
        },
        ae = function (t) {
          var e = t[0],
            o = t[1],
            n = t[3],
            r = t[4],
            i = t[5],
            s = [];
          return (
            s.push(se("satMod", t[2])),
            n && s.push(se("lumMod", n)),
            r && s.push(se("tint", r)),
            i && s.push(se("shade", i)),
            {
              name: "a:gs",
              properties: { rawMap: { pos: e } },
              children: [
                {
                  name: "a:schemeClr",
                  properties: { rawMap: { val: o } },
                  children: s,
                },
              ],
            }
          );
        },
        le = function (t, e) {
          return { name: "a:solidFill", children: [se("schemeClr", t, e)] };
        },
        ue = function (t) {
          var e = t[2],
            o = t[3],
            n = t[4],
            r = n[0],
            i = n[1];
          return {
            name: "a:gradFill",
            properties: { rawMap: { rotWithShape: t[0] } },
            children: [
              { name: "a:gsLst", children: [ae(t[1]), ae(e), ae(o)] },
              { name: "a:lin", properties: { rawMap: { ang: r, scaled: i } } },
            ],
          };
        },
        pe = function (t) {
          return {
            name: "a:ln",
            properties: {
              rawMap: { w: t[0], cap: t[1], cmpd: t[2], algn: t[3] },
            },
            children: [
              le("phClr"),
              se("prstDash", "solid"),
              { name: "a:miter", properties: { rawMap: { lim: "800000" } } },
            ],
          };
        },
        ce = function (t) {
          var e = [];
          return (
            t &&
              e.push({
                name: "a:outerShdw",
                properties: {
                  rawMap: {
                    blurRad: t[0],
                    dist: t[1],
                    dir: t[2],
                    algn: t[3],
                    rotWithShape: t[4],
                  },
                },
                children: [se("srgbClr", "000000", [se("alpha", "63000")])],
              }),
            {
              name: "a:effectStyle",
              children: [
                i._.assign(
                  {},
                  { name: "a:effectLst" },
                  e.length ? { children: e } : {}
                ),
              ],
            }
          );
        },
        de = function (t) {
          t = t.toString();
          var e = { name: "t", textNode: i._.utf8_encode(i._.escapeString(t)) };
          return (
            t.replace(/^\s*|\s*$/g, "").length !== t.length &&
              (e.properties = { rawMap: { "xml:space": "preserve" } }),
            { name: "si", children: [e] }
          );
        },
        he = function (t) {
          return {
            name: "numFmt",
            properties: {
              rawMap: { formatCode: t.formatCode, numFmtId: t.numFmtId },
            },
          };
        },
        fe = {
          0: 1,
          "0.00": 2,
          "#,##0": 3,
          "#,##0.00": 4,
          "0%": 9,
          "0.00%": 10,
          "0.00E+00": 11,
          "# ?/?": 12,
          "# ??/??": 13,
          "mm-dd-yy": 14,
          "d-mmm-yy": 15,
          "d-mmm": 16,
          "mmm-yy": 17,
          "h:mm AM/PM": 18,
          "h:mm:ss AM/PM": 19,
          "h:mm": 20,
          "h:mm:ss": 21,
          "m/d/yy h:mm": 22,
          "#,##0 ;(#,##0)": 37,
          "#,##0 ;[Red](#,##0)": 38,
          "#,##0.00;(#,##0.00)": 39,
          "#,##0.00;[Red](#,##0.00)": 40,
          "mm:ss": 45,
          "[h]:mm:ss": 46,
          "mmss.0": 47,
          "##0.0E+0": 48,
          "@": 49,
        },
        ge = function (t) {
          var e = t.size,
            o = t.color,
            n = t.name,
            r = t.family,
            i = t.scheme,
            s = t.italic,
            a = t.bold,
            l = t.strike,
            u = t.outline,
            p = t.shadow,
            c = t.underline,
            d = [
              {
                name: "sz",
                properties: { rawMap: { val: void 0 === e ? 14 : e } },
              },
              {
                name: "color",
                properties: {
                  rawMap: {
                    theme: t.colorTheme,
                    rgb: void 0 === o ? "00000000" : o,
                  },
                },
              },
              {
                name: "name",
                properties: { rawMap: { val: void 0 === n ? "Calibri" : n } },
              },
            ];
          if (
            (r &&
              d.push({ name: "family", properties: { rawMap: { val: r } } }),
            i && d.push({ name: "scheme", properties: { rawMap: { val: i } } }),
            s && d.push({ name: "i" }),
            a && d.push({ name: "b" }),
            l && d.push({ name: "strike" }),
            u && d.push({ name: "outline" }),
            p && d.push({ name: "shadow" }),
            c)
          ) {
            var h = c.toLocaleLowerCase();
            d.push({
              name: "u",
              properties: {
                rawMap: { val: "double" === h ? "double" : "single" },
              },
            });
          }
          return { name: "font", children: d };
        },
        ye = function (t) {
          var e = t.fgTheme,
            o = t.fgTint,
            n = t.fgRgb,
            r = t.bgRgb,
            i = t.bgIndexed,
            s = {
              name: "patternFill",
              properties: { rawMap: { patternType: t.patternType } },
            };
          return (
            (e || o || n) &&
              (s.children = [
                {
                  name: "fgColor",
                  properties: { rawMap: { theme: e, tint: o, rgb: n } },
                },
              ]),
            i &&
              (s.children || (s.children = []),
              s.children.push({
                name: "bgColor",
                properties: { rawMap: { indexed: i, rgb: r } },
              })),
            { name: "fill", children: [s] }
          );
        },
        me = function (t) {
          return {
            name: "color",
            properties: { rawMap: { rgb: Te(t || "#000000") } },
          };
        },
        ve = function (t) {
          var e = t.left,
            o = t.right,
            n = t.top,
            r = t.bottom,
            i = t.diagonal,
            s = e ? [me(e.color)] : void 0,
            a = o ? [me(o.color)] : void 0,
            l = n ? [me(n.color)] : void 0,
            u = r ? [me(r.color)] : void 0,
            p = i ? [me(i.color)] : void 0;
          return {
            name: "border",
            children: [
              {
                name: "left",
                properties: { rawMap: { style: e && e.style } },
                children: s,
              },
              {
                name: "right",
                properties: { rawMap: { style: o && o.style } },
                children: a,
              },
              {
                name: "top",
                properties: { rawMap: { style: n && n.style } },
                children: l,
              },
              {
                name: "bottom",
                properties: { rawMap: { style: r && r.style } },
                children: u,
              },
              {
                name: "diagonal",
                properties: { rawMap: { style: i && i.style } },
                children: p,
              },
            ],
          };
        },
        Ce = {
          None: "None",
          Dot: "Dotted",
          Dash: "Dashed",
          Double: "Double",
          DashDot: "DashDot",
          DashDotDot: "DashDotDot",
          SlantDashDot: "SlantDashDot",
        },
        we = ["Dashed", "DashDot", "DashDotDot"],
        be = function (t, e) {
          var o,
            n =
              1 === (o = e)
                ? "thin"
                : 2 === o
                ? "medium"
                : 3 === o
                ? "thick"
                : "hair",
            r = Ce[t];
          return t
            ? "Continuous" === t
              ? n
              : "medium" === n && -1 !== we.indexOf(r)
              ? "medium" + r
              : r.charAt(0).toLowerCase() + r.substr(1)
            : "thin";
        },
        Ee = function (t) {
          return (
            {
              Automatic: "general",
              Left: "left",
              Center: "center",
              Right: "right",
              Fill: "fill",
              Justify: "justify",
              CenterAcrossSelection: "centerContinuous",
              Distributed: "distributed",
              JustifyDistributed: "justify",
            }[t] || "general"
          );
        },
        Se = function (t) {
          return (
            {
              Automatic: void 0,
              Top: "top",
              Bottom: "bottom",
              Center: "center",
              Justify: "justify",
              Distributed: "distributed",
              JustifyDistributed: "justify",
            }[t] || void 0
          );
        },
        Oe = function (t) {
          var e = ["Context", "LeftToRight", "RightToLeft"].indexOf(t);
          return Math.max(e, 0);
        },
        _e = function (t) {
          var e = t.alignment,
            o = t.borderId,
            n = t.fillId,
            r = t.fontId,
            i = t.numFmtId,
            s = t.protection,
            a = t.xfId,
            l = [];
          return (
            e &&
              l.push(
                (function (t) {
                  var e = t.horizontal,
                    o = t.indent,
                    n = t.readingOrder,
                    r = t.rotate,
                    i = t.shrinkToFit,
                    s = t.vertical,
                    a = t.wrapText;
                  return {
                    name: "alignment",
                    properties: {
                      rawMap: {
                        horizontal: e && Ee(e),
                        indent: o,
                        readingOrder: n && Oe(n),
                        textRotation: r,
                        shrinkToFit: i,
                        vertical: s && Se(s),
                        wrapText: a,
                      },
                    },
                  };
                })(e)
              ),
            s &&
              l.push(
                (function (t) {
                  return {
                    name: "protection",
                    properties: {
                      rawMap: {
                        hidden: !0 === t.hideFormula ? 1 : 0,
                        locked: !1 === t.protected ? 0 : 1,
                      },
                    },
                  };
                })(s)
              ),
            {
              name: "xf",
              properties: {
                rawMap: {
                  applyAlignment: e ? 1 : void 0,
                  applyProtection: s ? 1 : void 0,
                  applyBorder: o ? 1 : void 0,
                  borderId: o,
                  fillId: n,
                  applyFont: r ? 1 : void 0,
                  fontId: r,
                  applyNumberFormat: i ? 1 : void 0,
                  numFmtId: i,
                  xfId: a,
                },
              },
              children: l.length ? l : void 0,
            }
          );
        },
        Re = function (t) {
          return {
            name: "cellStyle",
            properties: {
              rawMap: { builtinId: t.builtinId, name: t.name, xfId: t.xfId },
            },
          };
        },
        Pe = function () {
          (nt = { base: 0 }),
            (rt = []),
            (it = [
              {
                name: "Calibri",
                size: 14,
                colorTheme: "1",
                family: 2,
                scheme: "minor",
              },
            ]),
            (st = [{ patternType: "none" }, { patternType: "gray125" }]),
            (at = [
              {
                left: void 0,
                right: void 0,
                top: void 0,
                bottom: void 0,
                diagonal: void 0,
              },
            ]),
            (lt = [{ borderId: 0, fillId: 0, fontId: 0, numFmtId: 0 }]),
            (ut = [
              { borderId: 0, fillId: 0, fontId: 0, numFmtId: 0, xfId: 0 },
            ]),
            (pt = [{ builtinId: 0, name: "normal", xfId: 0 }]);
        },
        Te = function (t) {
          return null == t
            ? t
            : ("#" === t.charAt(0) && (t = t.substr(1)),
              6 === t.length ? "00" + t : t);
        },
        Ae = function (t) {
          var e,
            o,
            n,
            r,
            s,
            a,
            l = t.id,
            u = t.alignment,
            p = t.borders,
            c = t.font,
            d = t.interior,
            h = t.numberFormat,
            f = t.protection,
            g = 0,
            y = 0,
            m = 0,
            v = 0;
          l &&
            null == nt[l] &&
            (d &&
              ((n = (o = (e = d).pattern)
                ? {
                    None: "none",
                    Solid: "solid",
                    Gray50: "mediumGray",
                    Gray75: "darkGray",
                    Gray25: "lightGray",
                    HorzStripe: "darkHorizontal",
                    VertStripe: "darkVertical",
                    ReverseDiagStripe: "darkDown",
                    DiagStripe: "darkUp",
                    DiagCross: "darkGrid",
                    ThickDiagCross: "darkTrellis",
                    ThinHorzStripe: "lightHorizontal",
                    ThinVertStripe: "lightVertical",
                    ThinReverseDiagStripe: "lightDown",
                    ThinDiagStripe: "lightUp",
                    ThinHorzCross: "lightGrid",
                    ThinDiagCross: "lightTrellis",
                    Gray125: "gray125",
                    Gray0625: "gray0625",
                  }[o] || o
                : "none"),
              (r = Te(e.color)),
              (s = Te(e.patternColor)),
              -1 ===
                (a = i._.findIndex(st, function (t) {
                  return t.patternType == n && t.fgRgb == r && t.bgRgb == s;
                })) &&
                ((a = st.length),
                st.push({ patternType: n, fgRgb: r, bgRgb: s })),
              (g = a)),
            p &&
              (y = (function (t) {
                var e,
                  o,
                  n,
                  r,
                  s,
                  a,
                  l,
                  u,
                  p = t.borderBottom,
                  c = t.borderTop,
                  d = t.borderLeft,
                  h = t.borderRight;
                d && ((n = be(d.lineStyle, d.weight)), (l = Te(d.color))),
                  h && ((r = be(h.lineStyle, h.weight)), (u = Te(h.color))),
                  p && ((e = be(p.lineStyle, p.weight)), (s = Te(p.color))),
                  c && ((o = be(c.lineStyle, c.weight)), (a = Te(c.color)));
                var f = i._.findIndex(at, function (t) {
                  var i = t.left,
                    p = t.right,
                    c = t.top,
                    d = t.bottom;
                  if (!i && (n || l)) return !1;
                  if (!p && (r || u)) return !1;
                  if (!c && (o || a)) return !1;
                  if (!d && (e || s)) return !1;
                  var h = i || {},
                    f = p || {},
                    g = c || {},
                    y = d || {};
                  return (
                    h.style == n &&
                    h.color == l &&
                    f.style == r &&
                    f.color == u &&
                    g.style == o &&
                    g.color == a &&
                    y.style == e &&
                    y.color == s
                  );
                });
                return (
                  -1 === f &&
                    ((f = at.length),
                    at.push({
                      left: { style: n, color: l },
                      right: { style: r, color: u },
                      top: { style: o, color: a },
                      bottom: { style: e, color: s },
                      diagonal: { style: void 0, color: void 0 },
                    })),
                  f
                );
              })(p)),
            c &&
              (m = (function (t) {
                var e = t.fontName,
                  o = t.color,
                  n = t.size,
                  r = t.bold,
                  s = t.italic,
                  a = t.outline,
                  l = t.shadow,
                  u = t.strikeThrough,
                  p = t.underline,
                  c = t.family,
                  d = e ? i._.utf8_encode(e) : e,
                  h = Te(o),
                  f = (function (t) {
                    var e = [
                      "Automatic",
                      "Roman",
                      "Swiss",
                      "Modern",
                      "Script",
                      "Decorative",
                    ].indexOf(t || "Automatic");
                    return Math.max(e, 0);
                  })(c),
                  g = i._.findIndex(it, function (t) {
                    return (
                      t.name == d &&
                      t.color == h &&
                      t.size == n &&
                      t.bold == r &&
                      t.italic == s &&
                      t.outline == a &&
                      t.shadow == l &&
                      t.strike == u &&
                      t.underline == p &&
                      t.family == f
                    );
                  });
                return (
                  -1 === g &&
                    ((g = it.length),
                    it.push({
                      name: d,
                      color: h,
                      size: n,
                      bold: r,
                      italic: s,
                      outline: a,
                      shadow: l,
                      strike: u,
                      underline: p,
                      family: f,
                    })),
                  g
                );
              })(c)),
            h &&
              (v = (function (t) {
                if (((t = i._.utf8_encode(t)), fe[t])) return fe[t];
                var e = i._.findIndex(rt, function (e) {
                  return e.formatCode === t;
                });
                return (
                  -1 === e
                    ? rt.push({
                        formatCode: t,
                        numFmtId: (e = rt.length + 164),
                      })
                    : (e = rt[e].numFmtId),
                  e
                );
              })(h.format)),
            (nt[l] = ut.length),
            ut.push({
              alignment: u,
              borderId: y || 0,
              fillId: g || 0,
              fontId: m || 0,
              numFmtId: v || 0,
              protection: f,
              xfId: 0,
            }));
        },
        De = function (t, e) {
          var o = (e + 1).toString();
          return {
            name: "sheet",
            properties: { rawMap: { name: t, sheetId: o, "r:id": "rId" + o } },
          };
        },
        xe = function (t) {
          var e = t.min,
            o = t.max,
            n = t.s,
            r = t.width,
            i = t.hidden,
            s = t.bestFit,
            a = 1,
            l = "0";
          return (
            r > 1 &&
              ((a = (function (t) {
                return Math.ceil((t - 12) / 7 + 1);
              })(r)),
              (l = "1")),
            {
              name: "col",
              properties: {
                rawMap: {
                  min: e,
                  max: o,
                  width: a,
                  style: n,
                  hidden: i ? "1" : "0",
                  bestFit: s ? "1" : "0",
                  customWidth: l,
                },
              },
            }
          );
        },
        Fe = function (t) {
          var e = t.ref,
            o = t.data,
            n = t.styleId,
            r = o.type,
            s = o.value,
            a = r;
          r.charAt(0) === r.charAt(0).toUpperCase() &&
            (a = (function (t) {
              var e = t.charAt(0).toLowerCase();
              return "s" === e ? "inlineStr" : e;
            })(r));
          var l,
            u,
            p = {
              name: "c",
              properties: {
                rawMap: {
                  r: e,
                  t: "empty" === a ? void 0 : a,
                  s: n ? ((l = n), nt[l] || 0) : void 0,
                },
              },
            };
          return (
            (u =
              "inlineStr" === a
                ? [
                    {
                      name: "is",
                      children: [
                        {
                          name: "t",
                          textNode: i._.escapeString(i._.utf8_encode(s)),
                        },
                      ],
                    },
                  ]
                : [{ name: "v", textNode: s }]),
            i._.assign({}, p, { children: u })
          );
        },
        Ne = function () {
          for (var t = 0, e = 0, o = arguments.length; e < o; e++)
            t += arguments[e].length;
          var n = Array(t),
            r = 0;
          for (e = 0; e < o; e++)
            for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
              n[r] = i[s];
          return n;
        },
        Me = function (t, e) {
          var o = t.index,
            n = t.collapsed,
            r = t.hidden,
            i = t.height,
            s = t.s,
            a = t.cells,
            l = void 0 === a ? [] : a;
          return (
            (function (t, e) {
              for (var o = [], n = 0, r = 0; r < t.length; r++)
                (s = t[r]).mergeAcross &&
                  (o.push({ pos: r, excelPos: n }), (n += s.mergeAcross)),
                  n++;
              if (o.length)
                for (r = o.length - 1; r >= 0; r--) {
                  for (
                    var i = [], s = t[o[r].pos], a = 1;
                    a <= s.mergeAcross;
                    a++
                  )
                    i.push({
                      ref: "" + Le(o[r].excelPos + 1 + a) + (e + 1),
                      styleId: s.styleId,
                      data: { type: "empty", value: null },
                    });
                  i.length && t.splice.apply(t, Ne([o[r].pos + 1, 0], i));
                }
            })(l, e),
            {
              name: "row",
              properties: {
                rawMap: {
                  r: o,
                  collapsed: n,
                  hidden: r ? "1" : "0",
                  ht: i,
                  customHeight: null != i ? "1" : "0",
                  s: s,
                  customFormat: null != s ? "1" : "0",
                },
              },
              children: l.map(Fe),
            }
          );
        },
        Ie = function (t) {
          return { name: "mergeCell", properties: { rawMap: { ref: t } } };
        },
        Le = function (t) {
          var e = String.fromCharCode,
            o = Math.floor(t / 26),
            n = t % 26;
          return o && 26 !== t
            ? n
              ? o < 26
                ? e(65 + o - 1) + e(65 + n - 1)
                : Le(o) + e(65 + n - 1)
              : Le(o - 1) + "Z"
            : e(65 + t - 1);
        },
        Ge = function (t) {
          return {
            name: "Relationship",
            properties: {
              rawMap: { Id: t.Id, Type: t.Type, Target: t.Target },
            },
          };
        },
        ke = function (t) {
          return {
            name: "Relationships",
            properties: {
              rawMap: {
                xmlns:
                  "http://schemas.openxmlformats.org/package/2006/relationships",
              },
            },
            children: t.map(Ge),
          };
        },
        Ve = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        We = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        He = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.sharedStrings = []), e;
          }
          return (
            Ve(e, t),
            (e.prototype.createSharedStrings = function () {
              return this.createXmlPart({
                name: "sst",
                properties: {
                  rawMap: {
                    xmlns:
                      "http://schemas.openxmlformats.org/spreadsheetml/2006/main",
                    count: (t = this.sharedStrings).length,
                    uniqueCount: t.length,
                  },
                },
                children: t.map(de),
              });
              var t;
            }),
            (e.prototype.createXmlPart = function (t) {
              return (
                "" +
                this.xmlFactory.createHeader({
                  encoding: "UTF-8",
                  standalone: "yes",
                }) +
                this.xmlFactory.createXml(t)
              );
            }),
            (e.prototype.createExcel = function (t, e, o) {
              return (
                void 0 === o && (o = []),
                (this.sharedStrings = o),
                (this.sheetNames = e.map(function (t) {
                  return t.name;
                })),
                (function (t) {
                  Pe(), t.forEach(Ae);
                })(t),
                this.createWorksheet(e)
              );
            }),
            (e.prototype.createCore = function () {
              return this.createXmlPart({
                name: "cp:coreProperties",
                properties: {
                  prefixedAttributes: [
                    {
                      prefix: "xmlns:",
                      map: {
                        cp: "http://schemas.openxmlformats.org/package/2006/metadata/core-properties",
                        dc: "http://purl.org/dc/elements/1.1/",
                        dcterms: "http://purl.org/dc/terms/",
                        dcmitype: "http://purl.org/dc/dcmitype/",
                        xsi: "http://www.w3.org/2001/XMLSchema-instance",
                      },
                    },
                  ],
                },
                children: [
                  { name: "dc:creator", textNode: "AG Grid" },
                  { name: "dc:title", textNode: "Workbook" },
                  {
                    name: "dcterms:created",
                    properties: { rawMap: { "xsi:type": "dcterms:W3CDTF" } },
                    textNode: (t = new Date().toJSON()),
                  },
                  {
                    name: "dcterms:modified",
                    properties: { rawMap: { "xsi:type": "dcterms:W3CDTF" } },
                    textNode: t,
                  },
                ],
              });
              var t;
            }),
            (e.prototype.createContentTypes = function () {
              return this.createXmlPart({
                name: "Types",
                properties: {
                  rawMap: {
                    xmlns:
                      "http://schemas.openxmlformats.org/package/2006/content-types",
                  },
                },
                children: [
                  {
                    name: "Default",
                    Extension: "rels",
                    ContentType:
                      "application/vnd.openxmlformats-package.relationships+xml",
                  },
                  {
                    name: "Default",
                    ContentType: "application/xml",
                    Extension: "xml",
                  },
                  {
                    name: "Override",
                    ContentType:
                      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml",
                    PartName: "/xl/workbook.xml",
                  },
                  {
                    name: "Override",
                    ContentType:
                      "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml",
                    PartName: "/xl/worksheets/sheet1.xml",
                  },
                  {
                    name: "Override",
                    ContentType:
                      "application/vnd.openxmlformats-officedocument.theme+xml",
                    PartName: "/xl/theme/theme1.xml",
                  },
                  {
                    name: "Override",
                    ContentType:
                      "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml",
                    PartName: "/xl/styles.xml",
                  },
                  {
                    name: "Override",
                    ContentType:
                      "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml",
                    PartName: "/xl/sharedStrings.xml",
                  },
                  {
                    name: "Override",
                    ContentType:
                      "application/vnd.openxmlformats-package.core-properties+xml",
                    PartName: "/docProps/core.xml",
                  },
                ].map(ne),
              });
            }),
            (e.prototype.createRels = function () {
              var t = ke([
                {
                  Id: "rId1",
                  Type: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",
                  Target: "xl/workbook.xml",
                },
                {
                  Id: "rId2",
                  Type: "http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties",
                  Target: "docProps/core.xml",
                },
              ]);
              return this.createXmlPart(t);
            }),
            (e.prototype.createStylesheet = function () {
              return this.createXmlPart(
                (function () {
                  var t,
                    e = (function (t) {
                      return {
                        name: "numFmts",
                        properties: { rawMap: { count: t.length } },
                        children: t.map(he),
                      };
                    })(rt),
                    o = (function (t) {
                      return {
                        name: "fonts",
                        properties: { rawMap: { count: t.length } },
                        children: t.map(ge),
                      };
                    })(it),
                    n = (function (t) {
                      return {
                        name: "fills",
                        properties: { rawMap: { count: t.length } },
                        children: t.map(ye),
                      };
                    })(st),
                    r = (function (t) {
                      return {
                        name: "borders",
                        properties: { rawMap: { count: t.length } },
                        children: t.map(ve),
                      };
                    })(at),
                    i = {
                      name: "cellStyleXfs",
                      properties: { rawMap: { count: (t = lt).length } },
                      children: t.map(_e),
                    },
                    s = (function (t) {
                      return {
                        name: "cellXfs",
                        properties: { rawMap: { count: t.length } },
                        children: t.map(_e),
                      };
                    })(ut),
                    a = (function (t) {
                      return {
                        name: "cellStyles",
                        properties: { rawMap: { count: t.length } },
                        children: t.map(Re),
                      };
                    })(pt);
                  return (
                    Pe(),
                    {
                      name: "styleSheet",
                      properties: {
                        rawMap: {
                          xmlns:
                            "http://schemas.openxmlformats.org/spreadsheetml/2006/main",
                        },
                      },
                      children: [
                        e,
                        o,
                        n,
                        r,
                        i,
                        s,
                        a,
                        {
                          name: "tableStyles",
                          properties: {
                            rawMap: {
                              count: 0,
                              defaultPivotStyle: "PivotStyleLight16",
                              defaultTableStyle: "TableStyleMedium2",
                            },
                          },
                        },
                      ],
                    }
                  );
                })()
              );
            }),
            (e.prototype.createTheme = function () {
              return this.createXmlPart({
                name: "a:theme",
                properties: {
                  prefixedAttributes: [
                    {
                      prefix: "xmlns:",
                      map: {
                        a: "http://schemas.openxmlformats.org/drawingml/2006/main",
                      },
                    },
                  ],
                  rawMap: { name: "Office Theme" },
                },
                children: [
                  {
                    name: "a:themeElements",
                    children: [
                      {
                        name: "a:clrScheme",
                        properties: { rawMap: { name: "Office" } },
                        children: [
                          re(["dk1", "sysClr", "windowText", "000000"]),
                          re(["lt1", "sysClr", "window", "FFFFFF"]),
                          re(["dk2", "srgbClr", "44546A"]),
                          re(["lt2", "srgbClr", "E7E6E6"]),
                          re(["accent1", "srgbClr", "4472C4"]),
                          re(["accent2", "srgbClr", "ED7D31"]),
                          re(["accent3", "srgbClr", "A5A5A5"]),
                          re(["accent4", "srgbClr", "FFC000"]),
                          re(["accent5", "srgbClr", "5B9BD5"]),
                          re(["accent6", "srgbClr", "70AD47"]),
                          re(["hlink", "srgbClr", "0563C1"]),
                          re(["folHlink", "srgbClr", "954F72"]),
                        ],
                      },
                      ((t = i._.utf8_encode),
                      {
                        name: "a:fontScheme",
                        properties: { rawMap: { name: "Office" } },
                        children: [
                          {
                            name: "a:majorFont",
                            children: [
                              ie([
                                "latin",
                                "Calibri Light",
                                void 0,
                                "020F0302020204030204",
                              ]),
                              ie(["ea", ""]),
                              ie(["cs", ""]),
                              ie([
                                "font",
                                t("\u6e38\u30b4\u30b7\u30c3\u30af Light"),
                                "Jpan",
                              ]),
                              ie([
                                "font",
                                t("\ub9d1\uc740 \uace0\ub515"),
                                "Hang",
                              ]),
                              ie(["font", t("\u7b49\u7ebf Light"), "Hans"]),
                              ie([
                                "font",
                                t("\u65b0\u7d30\u660e\u9ad4"),
                                "Hant",
                              ]),
                              ie(["font", "Times New Roman", "Arab"]),
                              ie(["font", "Times New Roman", "Hebr"]),
                              ie(["font", "Tahoma", "Thai"]),
                              ie(["font", "Nyala", "Ethi"]),
                              ie(["font", "Vrinda", "Beng"]),
                              ie(["font", "Shruti", "Gujr"]),
                              ie(["font", "MoolBoran", "Khmr"]),
                              ie(["font", "Tunga", "Knda"]),
                              ie(["font", "Raavi", "Guru"]),
                              ie(["font", "Euphemia", "Cans"]),
                              ie(["font", "Plantagenet Cherokee", "Cher"]),
                              ie(["font", "Microsoft Yi Baiti", "Yiii"]),
                              ie(["font", "Microsoft Himalaya", "Tibt"]),
                              ie(["font", "MV Boli", "Thaa"]),
                              ie(["font", "Mangal", "Deva"]),
                              ie(["font", "Gautami", "Telu"]),
                              ie(["font", "Latha", "Taml"]),
                              ie(["font", "Estrangelo Edessa", "Syrc"]),
                              ie(["font", "Kalinga", "Orya"]),
                              ie(["font", "Kartika", "Mlym"]),
                              ie(["font", "DokChampa", "Laoo"]),
                              ie(["font", "Iskoola Pota", "Sinh"]),
                              ie(["font", "Mongolian Baiti", "Mong"]),
                              ie(["font", "Times New Roman", "Viet"]),
                              ie(["font", "Microsoft Uighur", "Uigh"]),
                              ie(["font", "Sylfaen", "Geor"]),
                              ie(["font", "Arial", "Armn"]),
                              ie(["font", "Leelawadee UI", "Bugi"]),
                              ie(["font", "Microsoft JhengHei", "Bopo"]),
                              ie(["font", "Javanese Text", "Java"]),
                              ie(["font", "Segoe UI", "Lisu"]),
                              ie(["font", "Myanmar Text", "Mymr"]),
                              ie(["font", "Ebrima", "Nkoo"]),
                              ie(["font", "Nirmala UI", "Olck"]),
                              ie(["font", "Ebrima", "Osma"]),
                              ie(["font", "Phagspa", "Phag"]),
                              ie(["font", "Estrangelo Edessa", "Syrn"]),
                              ie(["font", "Estrangelo Edessa", "Syrj"]),
                              ie(["font", "Estrangelo Edessa", "Syre"]),
                              ie(["font", "Nirmala UI", "Sora"]),
                              ie(["font", "Microsoft Tai Le", "Tale"]),
                              ie(["font", "Microsoft New Tai Lue", "Talu"]),
                              ie(["font", "Ebrima", "Tfng"]),
                            ],
                          },
                          {
                            name: "a:minorFont",
                            children: [
                              ie([
                                "latin",
                                "Calibri",
                                void 0,
                                "020F0502020204030204",
                              ]),
                              ie(["ea", ""]),
                              ie(["cs", ""]),
                              ie([
                                "font",
                                t("\u6e38\u30b4\u30b7\u30c3\u30af"),
                                "Jpan",
                              ]),
                              ie([
                                "font",
                                t("\ub9d1\uc740 \uace0\ub515"),
                                "Hang",
                              ]),
                              ie(["font", t("\u7b49\u7ebf"), "Hans"]),
                              ie([
                                "font",
                                t("\u65b0\u7d30\u660e\u9ad4"),
                                "Hant",
                              ]),
                              ie(["font", "Arial", "Arab"]),
                              ie(["font", "Arial", "Hebr"]),
                              ie(["font", "Tahoma", "Thai"]),
                              ie(["font", "Nyala", "Ethi"]),
                              ie(["font", "Vrinda", "Beng"]),
                              ie(["font", "Shruti", "Gujr"]),
                              ie(["font", "DaunPenh", "Khmr"]),
                              ie(["font", "Tunga", "Knda"]),
                              ie(["font", "Raavi", "Guru"]),
                              ie(["font", "Euphemia", "Cans"]),
                              ie(["font", "Plantagenet Cherokee", "Cher"]),
                              ie(["font", "Microsoft Yi Baiti", "Yiii"]),
                              ie(["font", "Microsoft Himalaya", "Tibt"]),
                              ie(["font", "MV Boli", "Thaa"]),
                              ie(["font", "Mangal", "Deva"]),
                              ie(["font", "Gautami", "Telu"]),
                              ie(["font", "Latha", "Taml"]),
                              ie(["font", "Estrangelo Edessa", "Syrc"]),
                              ie(["font", "Kalinga", "Orya"]),
                              ie(["font", "Kartika", "Mlym"]),
                              ie(["font", "DokChampa", "Laoo"]),
                              ie(["font", "Iskoola Pota", "Sinh"]),
                              ie(["font", "Mongolian Baiti", "Mong"]),
                              ie(["font", "Arial", "Viet"]),
                              ie(["font", "Microsoft Uighur", "Uigh"]),
                              ie(["font", "Sylfaen", "Geor"]),
                              ie(["font", "Arial", "Armn"]),
                              ie(["font", "Leelawadee UI", "Bugi"]),
                              ie(["font", "Microsoft JhengHei", "Bopo"]),
                              ie(["font", "Javanese Text", "Java"]),
                              ie(["font", "Segoe UI", "Lisu"]),
                              ie(["font", "Myanmar Text", "Mymr"]),
                              ie(["font", "Ebrima", "Nkoo"]),
                              ie(["font", "Nirmala UI", "Olck"]),
                              ie(["font", "Ebrima", "Osma"]),
                              ie(["font", "Phagspa", "Phag"]),
                              ie(["font", "Estrangelo Edessa", "Syrn"]),
                              ie(["font", "Estrangelo Edessa", "Syrj"]),
                              ie(["font", "Estrangelo Edessa", "Syre"]),
                              ie(["font", "Nirmala UI", "Sora"]),
                              ie(["font", "Microsoft Tai Le", "Tale"]),
                              ie(["font", "Microsoft New Tai Lue", "Talu"]),
                              ie(["font", "Ebrima", "Tfng"]),
                            ],
                          },
                        ],
                      }),
                      {
                        name: "a:fmtScheme",
                        properties: { rawMap: { name: "Office" } },
                        children: [
                          {
                            name: "a:fillStyleLst",
                            children: [
                              le("phClr"),
                              ue([
                                "1",
                                ["0", "phClr", "105000", "110000", "67000"],
                                ["50000", "phClr", "103000", "105000", "73000"],
                                [
                                  "100000",
                                  "phClr",
                                  "109000",
                                  "105000",
                                  "81000",
                                ],
                                ["5400000", "0"],
                              ]),
                              ue([
                                "1",
                                ["0", "phClr", "103000", "102000", "94000"],
                                [
                                  "50000",
                                  "phClr",
                                  "110000",
                                  "100000",
                                  void 0,
                                  "100000",
                                ],
                                [
                                  "100000",
                                  "phClr",
                                  "120000",
                                  "99000",
                                  void 0,
                                  "78000",
                                ],
                                ["5400000", "0"],
                              ]),
                            ],
                          },
                          {
                            name: "a:lnStyleLst",
                            children: [
                              pe(["6350", "flat", "sng", "ctr"]),
                              pe(["12700", "flat", "sng", "ctr"]),
                              pe(["19050", "flat", "sng", "ctr"]),
                            ],
                          },
                          {
                            name: "a:effectStyleLst",
                            children: [
                              ce(),
                              ce(),
                              ce(["57150", "19050", "5400000", "ctr", "0"]),
                            ],
                          },
                          {
                            name: "a:bgFillStyleLst",
                            children: [
                              le("phClr"),
                              le("phClr", [
                                se("tint", "95000"),
                                se("satMod", "170000"),
                              ]),
                              ue([
                                "1",
                                [
                                  "0",
                                  "phClr",
                                  "150000",
                                  "102000",
                                  "93000",
                                  "98000",
                                ],
                                [
                                  "50000",
                                  "phClr",
                                  "130000",
                                  "103000",
                                  "98000",
                                  "90000",
                                ],
                                [
                                  "100000",
                                  "phClr",
                                  "120000",
                                  void 0,
                                  void 0,
                                  "63000",
                                ],
                                ["5400000", "0"],
                              ]),
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  { name: "a:objectDefaults" },
                  { name: "a:extraClrSchemeLst" },
                ],
              });
              var t;
            }),
            (e.prototype.createWorkbook = function () {
              return this.createXmlPart({
                name: "workbook",
                properties: {
                  prefixedAttributes: [
                    {
                      prefix: "xmlns:",
                      map: {
                        r: "http://schemas.openxmlformats.org/officeDocument/2006/relationships",
                      },
                    },
                  ],
                  rawMap: {
                    xmlns:
                      "http://schemas.openxmlformats.org/spreadsheetml/2006/main",
                  },
                },
                children: [
                  ((t = this.sheetNames),
                  { name: "sheets", children: t.map(De) }),
                ],
              });
              var t;
            }),
            (e.prototype.createWorkbookRels = function () {
              var t = ke([
                {
                  Id: "rId1",
                  Type: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet",
                  Target: "worksheets/sheet1.xml",
                },
                {
                  Id: "rId2",
                  Type: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme",
                  Target: "theme/theme1.xml",
                },
                {
                  Id: "rId3",
                  Type: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles",
                  Target: "styles.xml",
                },
                {
                  Id: "rId4",
                  Type: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings",
                  Target: "sharedStrings.xml",
                },
              ]);
              return this.createXmlPart(t);
            }),
            (e.prototype.createWorksheet = function (t) {
              return this.createXmlPart(
                ((o = (e = t[0].table).rows),
                (r =
                  (n = e.columns) && n.length
                    ? (function (t, e) {
                        var o = [];
                        return (
                          t.forEach(function (t, n) {
                            var r,
                              i = t.cells,
                              s = 0;
                            (t.index = n + 1),
                              i.forEach(function (t, i) {
                                var a = i + s + 1,
                                  l = Le(a),
                                  u = n + 1;
                                if (t.mergeAcross) {
                                  var p = Le(i + (s += t.mergeAcross) + 1);
                                  o.push("" + l + u + ":" + p + u);
                                }
                                e[a - 1] || (e[a - 1] = {}),
                                  (function (t, e, o, n) {
                                    if (!t.min)
                                      return (t.min = e), void (t.max = e + o);
                                    var r = e;
                                    n && (r = Math.max(r, n.min)),
                                      (t.min = Math.max(t.min, r)),
                                      (t.max = Math.max(t.max, r + o));
                                  })(e[a - 1], a, s, r),
                                  (r = e[a - 1]),
                                  (t.ref = "" + l + u);
                              });
                          }),
                          o
                        );
                      })(o, n)
                    : []),
                (i = []),
                n.length && i.push({ name: "cols", children: n.map(xe) }),
                o.length && i.push({ name: "sheetData", children: o.map(Me) }),
                r.length &&
                  i.push({
                    name: "mergeCells",
                    properties: { rawMap: { count: r.length } },
                    children: r.map(Ie),
                  }),
                {
                  name: "worksheet",
                  properties: {
                    prefixedAttributes: [
                      {
                        prefix: "xmlns:",
                        map: {
                          r: "http://schemas.openxmlformats.org/officeDocument/2006/relationships",
                        },
                      },
                    ],
                    rawMap: {
                      xmlns:
                        "http://schemas.openxmlformats.org/spreadsheetml/2006/main",
                    },
                  },
                  children: i,
                })
              );
              var e, o, n, r, i;
            }),
            We([i.Autowired("xmlFactory")], e.prototype, "xmlFactory", void 0),
            We([i.Bean("excelXlsxFactory")], e)
          );
        })(i.BeanStub),
        Be = {
          getTemplate: function (t) {
            var e = t.alignment;
            return {
              name: "Alignment",
              properties: {
                prefixedAttributes: [
                  {
                    prefix: "ss:",
                    map: {
                      Vertical: e.vertical,
                      Horizontal: e.horizontal,
                      Indent: e.indent,
                      ReadingOrder: e.readingOrder,
                      Rotate: e.rotate,
                      ShrinkToFit: e.shrinkToFit,
                      VerticalText: e.verticalText,
                      WrapText: e.wrapText,
                    },
                  },
                ],
              },
            };
          },
        },
        je = {
          getTemplate: function (t) {
            var e = t.borders;
            return {
              name: "Borders",
              children: [
                e.borderBottom,
                e.borderLeft,
                e.borderRight,
                e.borderTop,
              ].map(function (t, e) {
                return {
                  name: "Border",
                  properties: {
                    prefixedAttributes: [
                      {
                        prefix: "ss:",
                        map: {
                          Position:
                            0 == e
                              ? "Bottom"
                              : 1 == e
                              ? "Left"
                              : 2 == e
                              ? "Right"
                              : "Top",
                          LineStyle: t.lineStyle,
                          Weight: t.weight,
                          Color: t.color,
                        },
                      },
                    ],
                  },
                };
              }),
            };
          },
        },
        Ue = {
          getTemplate: function (t) {
            var e = t.font;
            return {
              name: "Font",
              properties: {
                prefixedAttributes: [
                  {
                    prefix: "ss:",
                    map: {
                      Bold: e.bold,
                      FontName: e.fontName,
                      Italic: e.italic,
                      Color: e.color,
                      Outline: e.outline,
                      Shadow: e.shadow,
                      Size: e.size,
                      StrikeThrough: e.strikeThrough,
                      Underline: e.underline,
                      VerticalAlign: e.verticalAlign,
                    },
                  },
                  {
                    prefix: "x:",
                    map: { CharSet: e.charSet, Family: e.family },
                  },
                ],
              },
            };
          },
        },
        ze = {
          getTemplate: function (t) {
            var e = t.interior;
            return {
              name: "Interior",
              properties: {
                prefixedAttributes: [
                  {
                    prefix: "ss:",
                    map: {
                      Color: e.color,
                      Pattern: e.pattern,
                      PatternColor: e.patternColor,
                    },
                  },
                ],
              },
            };
          },
        },
        Ke = {
          getTemplate: function (t) {
            return {
              name: "Protection",
              properties: {
                prefixedAttributes: [
                  {
                    prefix: "ss:",
                    map: {
                      Protected: t.protection.protected,
                      HideFormula: t.protection.hideFormula,
                    },
                  },
                ],
              },
            };
          },
        },
        Ye = {
          getTemplate: function (t) {
            return {
              name: "NumberFormat",
              properties: {
                prefixedAttributes: [
                  { prefix: "ss:", map: { Format: t.numberFormat.format } },
                ],
              },
            };
          },
        },
        Xe = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        qe = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Qe = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Xe(e, t),
            (e.prototype.createExcel = function (t, e, o) {
              var n = this.excelXmlHeader(),
                r = this.workbook(
                  {
                    name: "DocumentProperties",
                    properties: {
                      rawMap: {
                        xmlns: "urn:schemas-microsoft-com:office:office",
                      },
                    },
                    children: [{ name: "Version", textNode: "12.00" }],
                  },
                  {
                    name: "ExcelWorkbook",
                    properties: {
                      rawMap: {
                        xmlns: "urn:schemas-microsoft-com:office:excel",
                      },
                    },
                    children: [
                      { name: "WindowHeight", textNode: "8130" },
                      { name: "WindowWidth", textNode: "15135" },
                      { name: "WindowHeight", textNode: "8130" },
                      { name: "WindowTopX", textNode: "120" },
                      { name: "WindowTopY", textNode: "45" },
                      { name: "ProtectStructure", textNode: "False" },
                      { name: "ProtectWindow", textNode: "False" },
                    ],
                  },
                  t,
                  e
                );
              return (
                "" +
                n +
                this.xmlFactory.createXml(r, function (t) {
                  return t ? "1" : "0";
                })
              );
            }),
            (e.prototype.workbook = function (t, e, o, n) {
              var r = [t, e, this.stylesXmlElement(o)].concat(
                n.map(function (t) {
                  return (
                    (n = (e = t).name),
                    (r = (o = e.table).rows),
                    (i = o.columns.map(function (t) {
                      return (function (t) {
                        return {
                          name: "Column",
                          properties: {
                            prefixedAttributes: [
                              { prefix: "ss:", map: { Width: t.width } },
                            ],
                          },
                        };
                      })(t);
                    })),
                    (s = r.map(function (t) {
                      return (function (t) {
                        return {
                          name: "Row",
                          children: t.cells.map(function (t) {
                            return (
                              (n = (e = t).styleId),
                              (r = e.data),
                              (i = {}),
                              (o = e.mergeAcross) && (i.MergeAcross = o),
                              n && (i.StyleID = n),
                              {
                                name: "Cell",
                                properties: {
                                  prefixedAttributes: [
                                    { prefix: "ss:", map: i },
                                  ],
                                },
                                children: [
                                  {
                                    name: "Data",
                                    properties: {
                                      prefixedAttributes: [
                                        {
                                          prefix: "ss:",
                                          map: { Type: r.type },
                                        },
                                      ],
                                    },
                                    textNode: r.value,
                                  },
                                ],
                              }
                            );
                            var e, o, n, r, i;
                          }),
                        };
                      })(t);
                    })),
                    {
                      name: "Worksheet",
                      children: [{ name: "Table", children: i.concat(s) }],
                      properties: {
                        prefixedAttributes: [
                          { prefix: "ss:", map: { Name: n } },
                        ],
                      },
                    }
                  );
                  var e, o, n, r, i, s;
                })
              );
              return i._.assign(
                {},
                {
                  name: "Workbook",
                  properties: {
                    prefixedAttributes: [
                      {
                        prefix: "xmlns:",
                        map: {
                          o: "urn:schemas-microsoft-com:office:office",
                          x: "urn:schemas-microsoft-com:office:excel",
                          ss: "urn:schemas-microsoft-com:office:spreadsheet",
                          html: "http://www.w3.org/TR/REC-html40",
                        },
                      },
                    ],
                    rawMap: {
                      xmlns: "urn:schemas-microsoft-com:office:spreadsheet",
                    },
                  },
                },
                { children: r }
              );
            }),
            (e.prototype.excelXmlHeader = function () {
              return '<?xml version="1.0" ?>\n        <?mso-application progid="Excel.Sheet" ?>\n        ';
            }),
            (e.prototype.stylesXmlElement = function (t) {
              var e = this;
              return {
                name: "Styles",
                children: t
                  ? t.map(function (t) {
                      return e.styleXmlElement(t);
                    })
                  : [],
              };
            }),
            (e.prototype.styleXmlElement = function (t) {
              var e = i._.compose(
                this.addProperty("alignment", t),
                this.addProperty("borders", t),
                this.addProperty("font", t),
                this.addProperty("interior", t),
                this.addProperty("protection", t),
                this.addProperty("numberFormat", t)
              )([]);
              return i._.assign(
                {},
                (function (t) {
                  var e = t.id;
                  return {
                    name: "Style",
                    properties: {
                      prefixedAttributes: [
                        { prefix: "ss:", map: { ID: e, Name: t.name || e } },
                      ],
                    },
                  };
                })(t),
                { children: e }
              );
            }),
            (e.prototype.addProperty = function (t, e) {
              return function (o) {
                return e[t]
                  ? o.concat(
                      {
                        alignment: Be,
                        borders: je,
                        font: Ue,
                        interior: ze,
                        numberFormat: Ye,
                        protection: Ke,
                      }[t].getTemplate(e)
                    )
                  : o;
              };
            }),
            qe([i.Autowired("xmlFactory")], e.prototype, "xmlFactory", void 0),
            qe([i.Bean("excelXmlFactory")], e)
          );
        })(i.BeanStub),
        Ze = (function () {
          function t() {}
          return (
            (t.prototype.setBeans = function (t) {
              this.beans = t;
            }),
            (t.prototype.export = function (t) {
              if (this.isExportSuppressed())
                return (
                  console.warn(
                    "ag-grid: Export cancelled. Export is not allowed as per your configuration."
                  ),
                  ""
                );
              var e = this.getMergedParamsAndData(t),
                o = e.mergedParams,
                n = e.data,
                r =
                  o && o.fileName && 0 !== o.fileName.length
                    ? o.fileName
                    : this.getDefaultFileName();
              return (
                -1 === r.indexOf(".") &&
                  (r = r + "." + this.getDefaultFileExtension()),
                this.beans.downloader.download(r, this.packageFile(n)),
                n
              );
            }),
            (t.prototype.getData = function (t) {
              return this.getMergedParamsAndData(t).data;
            }),
            (t.prototype.getMergedParamsAndData = function (t) {
              var e = this.mergeDefaultParams(t);
              return {
                mergedParams: e,
                data: this.beans.gridSerializer.serialize(
                  this.createSerializingSession(e),
                  e
                ),
              };
            }),
            (t.prototype.mergeDefaultParams = function (t) {
              var e = this.beans.gridOptionsWrapper.getDefaultExportParams(),
                o = {};
              return i._.assign(o, e), i._.assign(o, t), o;
            }),
            (t.prototype.packageFile = function (t) {
              return new Blob(["\ufeff", t], {
                type: window.navigator.msSaveOrOpenBlob
                  ? this.getMimeType()
                  : "octet/stream",
              });
            }),
            t
          );
        })(),
        $e = (function () {
          function t(t) {
            this.groupColumns = [];
            var e = t.valueService,
              o = t.gridOptionsWrapper,
              n = t.processCellCallback,
              r = t.processHeaderCallback,
              i = t.processGroupHeaderCallback,
              s = t.processRowGroupCallback;
            (this.columnController = t.columnController),
              (this.valueService = e),
              (this.gridOptionsWrapper = o),
              (this.processCellCallback = n),
              (this.processHeaderCallback = r),
              (this.processGroupHeaderCallback = i),
              (this.processRowGroupCallback = s);
          }
          return (
            (t.prototype.prepare = function (t) {
              this.groupColumns = i._.filter(t, function (t) {
                return !!t.getColDef().showRowGroup;
              });
            }),
            (t.prototype.extractHeaderValue = function (t) {
              var e = this.getHeaderName(this.processHeaderCallback, t);
              return null != e ? e : "";
            }),
            (t.prototype.extractRowCellValue = function (t, e, o, n) {
              var r,
                i = this.gridOptionsWrapper.isGroupMultiAutoColumn()
                  ? n.rowGroupIndex
                  : 0;
              r =
                n &&
                n.group &&
                ((e === i && -1 !== this.groupColumns.indexOf(t)) ||
                  (0 === e &&
                    this.gridOptionsWrapper.isGroupUseEntireRow(
                      this.columnController.isPivotMode()
                    )))
                  ? this.createValueForGroupNode(n)
                  : this.valueService.getValue(t, n);
              var s = this.processCell(n, t, r, this.processCellCallback, o);
              return null != s ? s : "";
            }),
            (t.prototype.getHeaderName = function (t, e) {
              return t
                ? t({
                    column: e,
                    api: this.gridOptionsWrapper.getApi(),
                    columnApi: this.gridOptionsWrapper.getColumnApi(),
                    context: this.gridOptionsWrapper.getContext(),
                  })
                : this.columnController.getDisplayNameForColumn(e, "csv", !0);
            }),
            (t.prototype.createValueForGroupNode = function (t) {
              if (this.processRowGroupCallback)
                return this.processRowGroupCallback({
                  node: t,
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                  context: this.gridOptionsWrapper.getContext(),
                });
              var e = [t.key];
              if (!this.gridOptionsWrapper.isGroupMultiAutoColumn())
                for (; t.parent; ) e.push((t = t.parent).key);
              return e.reverse().join(" -> ");
            }),
            (t.prototype.processCell = function (t, e, o, n, r) {
              return n
                ? n({
                    column: e,
                    node: t,
                    value: o,
                    api: this.gridOptionsWrapper.getApi(),
                    columnApi: this.gridOptionsWrapper.getColumnApi(),
                    context: this.gridOptionsWrapper.getContext(),
                    type: r,
                  })
                : o;
            }),
            t
          );
        })(),
        Je = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        to = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            (o.isFirstLine = !0), (o.result = "");
            var n = e.columnSeparator;
            return (
              (o.suppressQuotes = e.suppressQuotes), (o.columnSeparator = n), o
            );
          }
          return (
            Je(e, t),
            (e.prototype.addCustomContent = function (t) {
              var e = this;
              t &&
                ("string" == typeof t
                  ? (/^\s*\n/.test(t) || this.beginNewLine(),
                    (t = t.replace(/\r?\n/g, "\r\n")),
                    (this.result += t))
                  : t.forEach(function (t) {
                      e.beginNewLine(),
                        t.forEach(function (t, o) {
                          0 !== o && (e.result += e.columnSeparator),
                            (e.result += e.putInQuotes(t.data.value || "")),
                            t.mergeAcross && e.appendEmptyCells(t.mergeAcross);
                        });
                    }));
            }),
            (e.prototype.onNewHeaderGroupingRow = function () {
              return (
                this.beginNewLine(),
                { onColumn: this.onNewHeaderGroupingRowColumn.bind(this) }
              );
            }),
            (e.prototype.onNewHeaderGroupingRowColumn = function (t, e, o) {
              0 != e && (this.result += this.columnSeparator),
                (this.result += this.putInQuotes(t)),
                this.appendEmptyCells(o);
            }),
            (e.prototype.appendEmptyCells = function (t) {
              for (var e = 1; e <= t; e++)
                this.result += this.columnSeparator + this.putInQuotes("");
            }),
            (e.prototype.onNewHeaderRow = function () {
              return (
                this.beginNewLine(),
                { onColumn: this.onNewHeaderRowColumn.bind(this) }
              );
            }),
            (e.prototype.onNewHeaderRowColumn = function (t, e) {
              0 != e && (this.result += this.columnSeparator),
                (this.result += this.putInQuotes(this.extractHeaderValue(t)));
            }),
            (e.prototype.onNewBodyRow = function () {
              return (
                this.beginNewLine(),
                { onColumn: this.onNewBodyRowColumn.bind(this) }
              );
            }),
            (e.prototype.onNewBodyRowColumn = function (t, e, o) {
              0 != e && (this.result += this.columnSeparator),
                (this.result += this.putInQuotes(
                  this.extractRowCellValue(t, e, i.Constants.EXPORT_TYPE_CSV, o)
                ));
            }),
            (e.prototype.putInQuotes = function (t) {
              return this.suppressQuotes
                ? t
                : null == t
                ? '""'
                : ("string" == typeof t
                    ? (e = t)
                    : "function" == typeof t.toString
                    ? (e = t.toString())
                    : (console.warn("unknown value type during csv conversion"),
                      (e = "")),
                  '"' + e.replace(/"/g, '""') + '"');
              var e;
            }),
            (e.prototype.parse = function () {
              return this.result;
            }),
            (e.prototype.beginNewLine = function () {
              this.isFirstLine || (this.result += "\r\n"),
                (this.isFirstLine = !1);
            }),
            e
          );
        })($e),
        eo = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        oo = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        no = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            eo(e, t),
            (e.prototype.postConstruct = function () {
              this.setBeans({
                downloader: this.downloader,
                gridSerializer: this.gridSerializer,
                gridOptionsWrapper: this.gridOptionsWrapper,
              });
            }),
            (e.prototype.exportDataAsCsv = function (t) {
              return this.export(t);
            }),
            (e.prototype.getDataAsCsv = function (t) {
              return this.getData(t);
            }),
            (e.prototype.getMimeType = function () {
              return "text/csv;charset=utf-8;";
            }),
            (e.prototype.getDefaultFileName = function () {
              return "export.csv";
            }),
            (e.prototype.getDefaultFileExtension = function () {
              return "csv";
            }),
            (e.prototype.createSerializingSession = function (t) {
              var e = this;
              return new to({
                columnController: e.columnController,
                valueService: e.valueService,
                gridOptionsWrapper: e.gridOptionsWrapper,
                processCellCallback: t.processCellCallback || void 0,
                processHeaderCallback: t.processHeaderCallback || void 0,
                processGroupHeaderCallback:
                  t.processGroupHeaderCallback || void 0,
                processRowGroupCallback: t.processRowGroupCallback || void 0,
                suppressQuotes: t.suppressQuotes || !1,
                columnSeparator: t.columnSeparator || ",",
              });
            }),
            (e.prototype.isExportSuppressed = function () {
              return this.gridOptionsWrapper.isSuppressCsvExport();
            }),
            oo(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            oo(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            oo([i.Autowired("downloader")], e.prototype, "downloader", void 0),
            oo(
              [i.Autowired("gridSerializer")],
              e.prototype,
              "gridSerializer",
              void 0
            ),
            oo(
              [i.Autowired("gridOptionsWrapper")],
              e.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            oo([i.PostConstruct], e.prototype, "postConstruct", null),
            oo([i.Bean("csvCreator")], e)
          );
        })(Ze),
        ro = (function () {
          function t() {}
          return (
            (t.prototype.download = function (t, e) {
              if (window.navigator.msSaveOrOpenBlob)
                window.navigator.msSaveOrOpenBlob(e, t);
              else {
                var o = document.createElement("a"),
                  n = window.URL.createObjectURL(e);
                o.setAttribute("href", n),
                  o.setAttribute("download", t),
                  (o.style.display = "none"),
                  document.body.appendChild(o),
                  o.dispatchEvent(
                    new MouseEvent("click", {
                      bubbles: !1,
                      cancelable: !0,
                      view: window,
                    })
                  ),
                  document.body.removeChild(o),
                  window.setTimeout(function () {
                    window.URL.revokeObjectURL(n);
                  }, 0);
              }
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([i.Bean("downloader")], t)
          );
        })(),
        io = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        so = "\r\n",
        ao = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            io(e, t),
            (e.prototype.createHeader = function (t) {
              void 0 === t && (t = {});
              var e = ["version"];
              return (
                t.version || (t.version = "1.0"),
                t.encoding && e.push("encoding"),
                t.standalone && e.push("standalone"),
                "<?xml " +
                  e
                    .map(function (e) {
                      return e + '="' + t[e] + '"';
                    })
                    .join(" ") +
                  " ?>"
              );
            }),
            (e.prototype.createXml = function (t, e) {
              var o = this,
                n = "";
              t.properties &&
                (t.properties.prefixedAttributes &&
                  t.properties.prefixedAttributes.forEach(function (t) {
                    Object.keys(t.map).forEach(function (r) {
                      n += o.returnAttributeIfPopulated(
                        t.prefix + r,
                        t.map[r],
                        e
                      );
                    });
                  }),
                t.properties.rawMap &&
                  Object.keys(t.properties.rawMap).forEach(function (r) {
                    n += o.returnAttributeIfPopulated(
                      r,
                      t.properties.rawMap[r],
                      e
                    );
                  }));
              var r = "<" + t.name + n;
              return t.children || null != t.textNode
                ? null != t.textNode
                  ? r + ">" + t.textNode + "</" + t.name + ">" + so
                  : ((r += ">\r\n"),
                    t.children &&
                      t.children.forEach(function (t) {
                        r += o.createXml(t, e);
                      }),
                    r + "</" + t.name + ">" + so)
                : r + "/>" + so;
            }),
            (e.prototype.returnAttributeIfPopulated = function (t, e, o) {
              if (!e && "" !== e && 0 !== e) return "";
              var n = e;
              return (
                "boolean" == typeof e && o && (n = o(e)),
                " " + t + '="' + n + '"'
              );
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([i.Bean("xmlFactory")], e)
          );
        })(i.BeanStub),
        lo = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        uo = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        po = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            lo(e, t),
            (e.prototype.serialize = function (t, e) {
              void 0 === e && (e = {});
              var o =
                  e.shouldRowBeSkipped ||
                  function () {
                    return !1;
                  },
                n = this.gridOptionsWrapper,
                r = n.getApi(),
                s = n.getColumnApi(),
                a = n.isGroupRemoveSingleChildren(),
                l = n.isGroupRemoveLowestSingleChildren(),
                u = n.isGroupHideOpenParents(),
                p = n.getContext(),
                c = this.columnController.isPivotMode(),
                d =
                  this.rowModel.getType() ===
                  i.Constants.ROW_MODEL_TYPE_CLIENT_SIDE,
                h = !d && e.onlySelected,
                f = [];
              if (
                ((f = i._.existsAndNotEmpty(e.columnKeys)
                  ? this.columnController.getGridColumns(e.columnKeys)
                  : e.allColumns && !c
                  ? (f = n.isTreeData()
                      ? this.columnController.getGridColumns([
                          i.Constants.GROUP_AUTO_COLUMN_ID,
                        ])
                      : []).concat(
                      this.columnController.getAllPrimaryColumns() || []
                    )
                  : this.columnController.getAllDisplayedColumns()),
                e.customHeader && t.addCustomContent(e.customHeader),
                t.prepare(f),
                e.columnGroups)
              ) {
                var g = new i.GroupInstanceIdCreator(),
                  y = this.displayedGroupCreator.createDisplayedGroups(
                    f,
                    this.columnController.getGridBalancedTree(),
                    g,
                    null
                  );
                this.recursivelyAddHeaderGroups(
                  y,
                  t,
                  e.processGroupHeaderCallback
                );
              }
              if (!e.skipHeader) {
                var m = t.onNewHeaderRow();
                f.forEach(function (t, e) {
                  m.onColumn(t, e, void 0);
                });
              }
              this.pinnedRowModel.forEachPinnedTopRow(w);
              var v = this.rowModel,
                C = this.rowModel;
              function w(n) {
                if (
                  (!n.group ||
                    !(
                      e.skipGroups ||
                      (1 === n.allChildrenCount && (a || (l && n.leafGroup))) ||
                      u
                    )) &&
                  (!e.skipFooters || !n.footer) &&
                  (!e.onlySelected || n.isSelected()) &&
                  (!e.skipPinnedTop || "top" !== n.rowPinned) &&
                  (!e.skipPinnedBottom || "bottom" !== n.rowPinned) &&
                  (-1 !== n.level || n.leafGroup) &&
                  !o({ node: n, api: r, context: p })
                ) {
                  var i = t.onNewBodyRow();
                  if (
                    (f.forEach(function (t, e) {
                      i.onColumn(t, e, n);
                    }),
                    e.getCustomContentBelowRow)
                  ) {
                    var c = e.getCustomContentBelowRow({
                      node: n,
                      api: r,
                      columnApi: s,
                      context: p,
                    });
                    c && t.addCustomContent(c);
                  }
                }
              }
              return (
                c
                  ? C.forEachPivotNode
                    ? C.forEachPivotNode(w)
                    : v.forEachNode(w)
                  : e.onlySelectedAllPages || h
                  ? this.selectionController
                      .getSelectedNodes()
                      .forEach(function (t) {
                        w(t);
                      })
                  : d
                  ? C.forEachNodeAfterFilterAndSort(w)
                  : v.forEachNode(w),
                this.pinnedRowModel.forEachPinnedBottomRow(w),
                e.customFooter && t.addCustomContent(e.customFooter),
                t.parse()
              );
            }),
            (e.prototype.recursivelyAddHeaderGroups = function (t, e, o) {
              var n = [];
              t.forEach(function (t) {
                t.getChildren &&
                  t.getChildren().forEach(function (t) {
                    return n.push(t);
                  });
              }),
                t.length > 0 &&
                  t[0] instanceof i.ColumnGroup &&
                  this.doAddHeaderHeader(e, t, o),
                n && n.length > 0 && this.recursivelyAddHeaderGroups(n, e, o);
            }),
            (e.prototype.doAddHeaderHeader = function (t, e, o) {
              var n = this,
                r = t.onNewHeaderGroupingRow(),
                i = 0;
              e.forEach(function (t) {
                var e,
                  s = t;
                (e = o
                  ? o({
                      columnGroup: s,
                      api: n.gridOptionsWrapper.getApi(),
                      columnApi: n.gridOptionsWrapper.getColumnApi(),
                      context: n.gridOptionsWrapper.getContext(),
                    })
                  : n.columnController.getDisplayNameForColumnGroup(
                      s,
                      "header"
                    )),
                  r.onColumn(e || "", i++, s.getLeafColumns().length - 1);
              });
            }),
            uo(
              [i.Autowired("displayedGroupCreator")],
              e.prototype,
              "displayedGroupCreator",
              void 0
            ),
            uo(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            uo([i.Autowired("rowModel")], e.prototype, "rowModel", void 0),
            uo(
              [i.Autowired("pinnedRowModel")],
              e.prototype,
              "pinnedRowModel",
              void 0
            ),
            uo(
              [i.Autowired("selectionController")],
              e.prototype,
              "selectionController",
              void 0
            ),
            uo([i.Bean("gridSerializer")], e)
          );
        })(i.BeanStub);
      !(function (t) {
        (t[(t.HEADER_GROUPING = 0)] = "HEADER_GROUPING"),
          (t[(t.HEADER = 1)] = "HEADER"),
          (t[(t.BODY = 2)] = "BODY");
      })(ct || (ct = {}));
      var co,
        ho = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        fo = [
          0, 1996959894, -301047508, -1727442502, 124634137, 1886057615,
          -379345611, -1637575261, 249268274, 2044508324, -522852066,
          -1747789432, 162941995, 2125561021, -407360249, -1866523247,
          498536548, 1789927666, -205950648, -2067906082, 450548861, 1843258603,
          -187386543, -2083289657, 325883990, 1684777152, -43845254,
          -1973040660, 335633487, 1661365465, -99664541, -1928851979, 997073096,
          1281953886, -715111964, -1570279054, 1006888145, 1258607687,
          -770865667, -1526024853, 901097722, 1119000684, -608450090,
          -1396901568, 853044451, 1172266101, -589951537, -1412350631,
          651767980, 1373503546, -925412992, -1076862698, 565507253, 1454621731,
          -809855591, -1195530993, 671266974, 1594198024, -972236366,
          -1324619484, 795835527, 1483230225, -1050600021, -1234817731,
          1994146192, 31158534, -1731059524, -271249366, 1907459465, 112637215,
          -1614814043, -390540237, 2013776290, 251722036, -1777751922,
          -519137256, 2137656763, 141376813, -1855689577, -429695999,
          1802195444, 476864866, -2056965928, -228458418, 1812370925, 453092731,
          -2113342271, -183516073, 1706088902, 314042704, -1950435094,
          -54949764, 1658658271, 366619977, -1932296973, -69972891, 1303535960,
          984961486, -1547960204, -725929758, 1256170817, 1037604311,
          -1529756563, -740887301, 1131014506, 879679996, -1385723834,
          -631195440, 1141124467, 855842277, -1442165665, -586318647,
          1342533948, 654459306, -1106571248, -921952122, 1466479909, 544179635,
          -1184443383, -832445281, 1591671054, 702138776, -1328506846,
          -942167884, 1504918807, 783551873, -1212326853, -1061524307,
          -306674912, -1698712650, 62317068, 1957810842, -355121351,
          -1647151185, 81470997, 1943803523, -480048366, -1805370492, 225274430,
          2053790376, -468791541, -1828061283, 167816743, 2097651377,
          -267414716, -2029476910, 503444072, 1762050814, -144550051,
          -2140837941, 426522225, 1852507879, -19653770, -1982649376, 282753626,
          1742555852, -105259153, -1900089351, 397917763, 1622183637,
          -690576408, -1580100738, 953729732, 1340076626, -776247311,
          -1497606297, 1068828381, 1219638859, -670225446, -1358292148,
          906185462, 1090812512, -547295293, -1469587627, 829329135, 1181335161,
          -882789492, -1134132454, 628085408, 1382605366, -871598187,
          -1156888829, 570562233, 1426400815, -977650754, -1296233688,
          733239954, 1555261956, -1026031705, -1244606671, 752459403,
          1541320221, -1687895376, -328994266, 1969922972, 40735498,
          -1677130071, -351390145, 1913087877, 83908371, -1782625662,
          -491226604, 2075208622, 213261112, -1831694693, -438977011,
          2094854071, 198958881, -2032938284, -237706686, 1759359992, 534414190,
          -2118248755, -155638181, 1873836001, 414664567, -2012718362,
          -15766928, 1711684554, 285281116, -1889165569, -127750551, 1634467795,
          376229701, -1609899400, -686959890, 1308918612, 956543938,
          -1486412191, -799009033, 1231636301, 1047427035, -1362007478,
          -640263460, 1088359270, 936918e3, -1447252397, -558129467, 1202900863,
          817233897, -1111625188, -893730166, 1404277552, 615818150,
          -1160759803, -841546093, 1423857449, 601450431, -1285129682,
          -1000256840, 1567103746, 711928724, -1274298825, -1022587231,
          1510334235, 755167117,
        ],
        go = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.folders = []),
              (e.files = []),
              (e.addFolder = function (t) {
                e.folders.push({ path: t, created: new Date() });
              }),
              e
            );
          }
          return (
            ho(e, t),
            (e.prototype.addFolders = function (t) {
              t.forEach(this.addFolder);
            }),
            (e.prototype.addFile = function (t, e) {
              this.files.push({ path: t, created: new Date(), content: e });
            }),
            (e.prototype.clearStream = function () {
              (this.folders = []), (this.files = []);
            }),
            (e.prototype.getContent = function (t) {
              void 0 === t && (t = "application/zip");
              var e = this.buildFileStream(),
                o = this.buildUint8Array(e);
              return this.clearStream(), new Blob([o], { type: t });
            }),
            (e.prototype.buildFileStream = function (t) {
              void 0 === t && (t = "");
              for (
                var e = this.folders.concat(this.files),
                  o = e.length,
                  n = "",
                  r = 0,
                  i = 0,
                  s = 0,
                  a = e;
                s < a.length;
                s++
              ) {
                var l = this.getHeader(a[s], r),
                  u = l.fileHeader,
                  p = l.folderHeader,
                  c = l.content;
                (r += u.length + c.length),
                  (i += p.length),
                  (t += u + c),
                  (n += p);
              }
              return t + n + this.buildFolderEnd(o, i, r);
            }),
            (e.prototype.getHeader = function (t, e) {
              var o = t.content,
                n = t.path,
                r = t.created,
                s = i._.decToHex,
                a = (0, i._.utf8_encode)(n),
                l = a !== n,
                u = this.convertTime(r),
                p = this.convertDate(r),
                c = "";
              if (l) {
                var d = s(1, 1) + s(this.getFromCrc32Table(a), 4) + a;
                c = "up" + s(d.length, 2) + d;
              }
              var h =
                "\n\0" +
                (l ? "\0\b" : "\0\0") +
                "\0\0" +
                s(u, 2) +
                s(p, 2) +
                s(o ? this.getFromCrc32Table(o) : 0, 4) +
                s(o ? o.length : 0, 4) +
                s(o ? o.length : 0, 4) +
                s(a.length, 2) +
                s(c.length, 2);
              return {
                fileHeader: "PK\x03\x04" + h + a + c,
                folderHeader:
                  "PK\x01\x02\x14\0" +
                  h +
                  "\0\0\0\0\0\0" +
                  (o ? "\0\0\0\0" : "\x10\0\0\0") +
                  s(e, 4) +
                  a +
                  c,
                content: o || "",
              };
            }),
            (e.prototype.buildFolderEnd = function (t, e, o) {
              var n = i._.decToHex;
              return (
                "PK\x05\x06\0\0\0\0" +
                n(t, 2) +
                n(t, 2) +
                n(e, 4) +
                n(o, 4) +
                "\0\0"
              );
            }),
            (e.prototype.buildUint8Array = function (t) {
              for (var e = new Uint8Array(t.length), o = 0; o < e.length; o++)
                e[o] = t.charCodeAt(o);
              return e;
            }),
            (e.prototype.getFromCrc32Table = function (t, e) {
              if ((void 0 === e && (e = 0), !t.length)) return 0;
              e ^= -1;
              for (var o = 0, n = 0; n < t.length; n++)
                (o = t.charCodeAt(n)), (e = (e >>> 8) ^ fo[255 & (e ^ o)]);
              return -1 ^ e;
            }),
            (e.prototype.convertTime = function (t) {
              var e = t.getHours();
              return (
                (e <<= 6),
                (e |= t.getMinutes()),
                (e <<= 5) | (t.getSeconds() / 2)
              );
            }),
            (e.prototype.convertDate = function (t) {
              var e = t.getFullYear() - 1980;
              return (
                (e <<= 4), (e |= t.getMonth() + 1), (e <<= 5) | t.getDate()
              );
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([i.Bean("zipContainer")], e)
          );
        })(i.BeanStub),
        yo = {
          moduleName: i.ModuleNames.CsvExportModule,
          beans: [no, ro, ao, po, go],
        },
        mo = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        vo = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return (
              (o.mixedStyles = {}),
              (o.mixedStyleCounter = 0),
              (o.rows = []),
              (o.config = i._.assign({}, e)),
              (o.stylesByIds = {}),
              o.config.baseExcelStyles.forEach(function (t) {
                o.stylesByIds[t.id] = t;
              }),
              (o.excelStyles = (function () {
                for (var t = 0, e = 0, o = arguments.length; e < o; e++)
                  t += arguments[e].length;
                var n = Array(t),
                  r = 0;
                for (e = 0; e < o; e++)
                  for (
                    var i = arguments[e], s = 0, a = i.length;
                    s < a;
                    s++, r++
                  )
                    n[r] = i[s];
                return n;
              })(o.config.baseExcelStyles)),
              o
            );
          }
          return (
            mo(e, t),
            (e.prototype.addCustomContent = function (t) {
              var e = this;
              t.forEach(function (t) {
                return e.rows.push({ cells: t });
              });
            }),
            (e.prototype.prepare = function (e) {
              var o = this;
              t.prototype.prepare.call(this, e),
                (this.cols = e.map(function (t, e) {
                  return o.convertColumnToExcel(t, e);
                }));
            }),
            (e.prototype.onNewHeaderGroupingRow = function () {
              var t = this,
                e = [];
              return (
                this.rows.push({
                  cells: e,
                  height: this.config.headerRowHeight,
                }),
                {
                  onColumn: function (o, n, r) {
                    var i = t.config.styleLinker(
                      ct.HEADER_GROUPING,
                      1,
                      n,
                      "grouping-" + o,
                      void 0,
                      void 0
                    );
                    e.push(
                      t.createMergedCell(
                        i && i.length > 0 ? i[0] : void 0,
                        "String",
                        o,
                        r
                      )
                    );
                  },
                }
              );
            }),
            (e.prototype.onNewHeaderRow = function () {
              return this.onNewRow(
                this.onNewHeaderColumn,
                this.config.headerRowHeight
              );
            }),
            (e.prototype.onNewBodyRow = function () {
              return this.onNewRow(this.onNewBodyColumn, this.config.rowHeight);
            }),
            (e.prototype.onNewRow = function (t, e) {
              var o = [];
              return (
                this.rows.push({ cells: o, height: e }),
                { onColumn: t.bind(this, this.rows.length, o)() }
              );
            }),
            (e.prototype.onNewHeaderColumn = function (t, e) {
              var o = this;
              return function (n, r) {
                var i = o.extractHeaderValue(n),
                  s = o.config.styleLinker(ct.HEADER, t, r, i, n, void 0);
                e.push(
                  o.createCell(s && s.length > 0 ? s[0] : void 0, "String", i)
                );
              };
            }),
            (e.prototype.parse = function () {
              for (
                var t = this.rows.reduce(function (t, e) {
                  return Math.max(t, e.cells.length);
                }, 0);
                this.cols.length < t;

              )
                this.cols.push(
                  this.convertColumnToExcel(null, this.cols.length + 1)
                );
              return this.createExcel([
                {
                  name: this.config.sheetName,
                  table: { columns: this.cols, rows: this.rows },
                },
              ]);
            }),
            (e.prototype.createExcel = function (t) {
              return this.config.excelFactory.createExcel(
                this.excelStyles,
                t,
                []
              );
            }),
            (e.prototype.onNewBodyColumn = function (t, e) {
              var o = this;
              return function (n, r, s) {
                var a,
                  l = o.extractRowCellValue(
                    n,
                    r,
                    i.Constants.EXPORT_TYPE_EXCEL,
                    s
                  ),
                  u = o.config.styleLinker(ct.BODY, t, r, l, n, s);
                if (u && 1 == u.length) a = u[0];
                else if (u && u.length > 1) {
                  var p = u.join("-");
                  o.mixedStyles[p] || o.addNewMixedStyle(u),
                    (a = o.mixedStyles[p].excelID);
                }
                e.push(o.createCell(a, o.getDataTypeForValue(l), l));
              };
            }),
            (e.prototype.getDataTypeForValue = function (t) {
              return i._.isNumeric(t) ? "Number" : "String";
            }),
            (e.prototype.addNewMixedStyle = function (t) {
              var e = this;
              this.mixedStyleCounter += 1;
              var o = "mixedStyle" + this.mixedStyleCounter,
                n = {};
              t.forEach(function (t) {
                e.excelStyles.forEach(function (e) {
                  e.id === t && i._.mergeDeep(n, i._.deepCloneObject(e));
                });
              }),
                (n.id = o),
                (n.name = o);
              var r = t.join("-");
              (this.mixedStyles[r] = { excelID: o, key: r, result: n }),
                this.excelStyles.push(n),
                (this.stylesByIds[o] = n);
            }),
            (e.prototype.styleExists = function (t) {
              return null != t && this.stylesByIds[t];
            }),
            (e.prototype.createCell = function (t, e, o) {
              var n,
                r = this,
                s = t && this.stylesByIds[t],
                a = void 0 !== s,
                l = (function () {
                  if (a && s.dataType)
                    switch (s.dataType) {
                      case "string":
                        return "String";
                      case "number":
                        return "Number";
                      case "dateTime":
                        return "DateTime";
                      case "error":
                        return "Error";
                      case "boolean":
                        return "Boolean";
                      default:
                        console.warn(
                          "ag-grid: Unrecognized data type for excel export [" +
                            s.id +
                            ".dataType=" +
                            s.dataType +
                            "]"
                        );
                    }
                  return e;
                })();
              return {
                styleId: a ? t : void 0,
                data: {
                  type: l,
                  value:
                    "String" === l
                      ? (function (t) {
                          if (r.config.suppressTextAsCDATA)
                            return i._.escapeString(t);
                          var e = new RegExp("]]>", "g");
                          return (
                            "<![CDATA[" +
                            String(t).replace(e, "]]]]><![CDATA[>") +
                            "]]>"
                          );
                        })(o)
                      : "Number" === l
                      ? Number(o).valueOf() + ""
                      : "Boolean" === l
                      ? ((n = o), n && "0" !== n && "false" !== n ? "1" : "0")
                      : o,
                },
              };
            }),
            (e.prototype.createMergedCell = function (t, e, o, n) {
              return {
                styleId: this.styleExists(t) ? t : void 0,
                data: { type: e, value: o },
                mergeAcross: n,
              };
            }),
            (e.prototype.convertColumnToExcel = function (t, e) {
              var o = this.config.columnWidth;
              return o
                ? "number" == typeof o
                  ? { width: o }
                  : { width: o({ column: t, index: e }) }
                : t
                ? { width: Math.max(t.getActualWidth(), 75) }
                : {};
            }),
            e
          );
        })($e),
        Co = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wo = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.stringList = []), (e.stringMap = {}), e;
          }
          return (
            Co(e, t),
            (e.prototype.onNewHeaderGroupingRow = function () {
              var t = this,
                e = [];
              return (
                this.rows.push({
                  cells: e,
                  height: this.config.headerRowHeight,
                }),
                {
                  onColumn: function (o, n, r) {
                    var i = t.config.styleLinker(
                      ct.HEADER_GROUPING,
                      1,
                      n,
                      "grouping-" + o,
                      void 0,
                      void 0
                    );
                    e.push(
                      t.createMergedCell(
                        i && i.length > 0 ? i[0] : void 0,
                        "s",
                        o,
                        r
                      )
                    );
                  },
                }
              );
            }),
            (e.prototype.onNewHeaderColumn = function (t, e) {
              var o = this;
              return function (n, r, i) {
                var s = o.extractHeaderValue(n),
                  a = o.config.styleLinker(ct.HEADER, t, r, s, n, void 0);
                e.push(o.createCell(a && a.length > 0 ? a[0] : void 0, "s", s));
              };
            }),
            (e.prototype.createExcel = function (t) {
              return this.config.excelFactory.createExcel(
                this.excelStyles,
                t,
                this.stringList
              );
            }),
            (e.prototype.getDataTypeForValue = function (t) {
              return i._.isNumeric(t) ? "n" : "s";
            }),
            (e.prototype.getStringPosition = function (t) {
              var e = this.stringMap[t];
              return (
                void 0 === e &&
                  ((e = this.stringMap[t] = this.stringList.length),
                  this.stringList.push(t)),
                e
              );
            }),
            (e.prototype.createCell = function (t, e, o) {
              var n = t && this.stylesByIds[t],
                r = void 0 !== n,
                i = (function () {
                  if (r && n.dataType)
                    switch (n.dataType) {
                      case "string":
                        return "s";
                      case "number":
                        return "n";
                      case "dateTime":
                        return "d";
                      case "error":
                        return "e";
                      case "boolean":
                        return "b";
                      default:
                        console.warn(
                          "ag-grid: Unrecognized data type for excel export [" +
                            n.id +
                            ".dataType=" +
                            n.dataType +
                            "]"
                        );
                    }
                  return e;
                })();
              return {
                styleId: r ? t : void 0,
                data: {
                  type: i,
                  value:
                    "s" === i
                      ? this.getStringPosition(null == o ? "" : o).toString()
                      : "n" === i
                      ? Number(o).toString()
                      : o,
                },
              };
            }),
            (e.prototype.createMergedCell = function (t, e, o, n) {
              return {
                styleId: this.styleExists(t) ? t : void 0,
                data: {
                  type: e,
                  value:
                    "s" === e
                      ? this.getStringPosition(null == o ? "" : o).toString()
                      : o,
                },
                mergeAcross: n,
              };
            }),
            e
          );
        })(vo),
        bo = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Eo = function () {
          return (Eo =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        So = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Oo = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            bo(e, t),
            (e.prototype.postConstruct = function () {
              this.setBeans({
                downloader: this.downloader,
                gridSerializer: this.gridSerializer,
                gridOptionsWrapper: this.gridOptionsWrapper,
              });
            }),
            (e.prototype.exportDataAsExcel = function (t) {
              return (
                this.setExportMode(t ? t.exportMode : void 0), this.export(t)
              );
            }),
            (e.prototype.getDataAsExcel = function (t) {
              var e = this.getData(t || {});
              return t && "xml" === t.exportMode ? e : this.packageFile(e);
            }),
            (e.prototype.getMimeType = function () {
              return "xml" === this.getExportMode()
                ? "application/vnd.ms-excel"
                : "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
            }),
            (e.prototype.getDefaultFileName = function () {
              return "export." + this.getExportMode();
            }),
            (e.prototype.getDefaultFileExtension = function () {
              return this.getExportMode();
            }),
            (e.prototype.createSerializingSession = function (t) {
              var e = this,
                o = e.columnController,
                n = e.valueService,
                r = e.gridOptionsWrapper,
                s = "xlsx" === this.getExportMode(),
                a = s ? this.xlsxFactory : this.excelXmlFactory,
                l = "ag-grid";
              i._.exists(t.sheetName) &&
                (l = i._.utf8_encode(t.sheetName.toString().substr(0, 31)));
              var u = Eo(Eo({}, t), {
                columnController: o,
                valueService: n,
                gridOptionsWrapper: r,
                headerRowHeight: t.headerRowHeight || t.rowHeight,
                sheetName: l,
                excelFactory: a,
                baseExcelStyles: this.gridOptions.excelStyles || [],
                styleLinker: this.styleLinker.bind(this),
              });
              return new (s ? wo : vo)(u);
            }),
            (e.prototype.styleLinker = function (t, e, o, n, r, i) {
              if (t === ct.HEADER || t === ct.HEADER_GROUPING)
                return ["header"];
              var s = this.gridOptions.excelStyles;
              if (!s || !s.length) return null;
              var a = s.map(function (t) {
                  return t.id;
                }),
                l = [];
              return (
                this.stylingService.processAllCellClasses(
                  r.getColDef(),
                  {
                    value: n,
                    data: i.data,
                    node: i,
                    colDef: r.getColDef(),
                    rowIndex: e,
                    api: this.gridOptionsWrapper.getApi(),
                    columnApi: this.gridOptionsWrapper.getColumnApi(),
                    $scope: null,
                    context: this.gridOptionsWrapper.getContext(),
                  },
                  function (t) {
                    a.indexOf(t) > -1 && l.push(t);
                  }
                ),
                l.sort(function (t, e) {
                  return a.indexOf(t) < a.indexOf(e) ? -1 : 1;
                })
              );
            }),
            (e.prototype.isExportSuppressed = function () {
              return this.gridOptionsWrapper.isSuppressExcelExport();
            }),
            (e.prototype.setExportMode = function (t) {
              this.exportMode = t;
            }),
            (e.prototype.getExportMode = function () {
              return this.exportMode || "xlsx";
            }),
            (e.prototype.packageFile = function (e) {
              if ("xml" === this.getExportMode())
                return t.prototype.packageFile.call(this, e);
              var o = this.zipContainer,
                n = this.xlsxFactory;
              return (
                o.addFolders([
                  "xl/worksheets/",
                  "xl/",
                  "xl/theme/",
                  "xl/_rels/",
                  "docProps/",
                  "_rels/",
                ]),
                o.addFile("xl/worksheets/sheet1.xml", e),
                o.addFile("xl/workbook.xml", n.createWorkbook()),
                o.addFile("xl/styles.xml", n.createStylesheet()),
                o.addFile("xl/sharedStrings.xml", n.createSharedStrings()),
                o.addFile("xl/theme/theme1.xml", n.createTheme()),
                o.addFile("xl/_rels/workbook.xml.rels", n.createWorkbookRels()),
                o.addFile("docProps/core.xml", n.createCore()),
                o.addFile("[Content_Types].xml", n.createContentTypes()),
                o.addFile("_rels/.rels", n.createRels()),
                o.getContent(
                  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                )
              );
            }),
            So(
              [i.Autowired("excelXmlFactory")],
              e.prototype,
              "excelXmlFactory",
              void 0
            ),
            So(
              [i.Autowired("excelXlsxFactory")],
              e.prototype,
              "xlsxFactory",
              void 0
            ),
            So(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            So(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            So(
              [i.Autowired("gridOptions")],
              e.prototype,
              "gridOptions",
              void 0
            ),
            So(
              [i.Autowired("stylingService")],
              e.prototype,
              "stylingService",
              void 0
            ),
            So([i.Autowired("downloader")], e.prototype, "downloader", void 0),
            So(
              [i.Autowired("gridSerializer")],
              e.prototype,
              "gridSerializer",
              void 0
            ),
            So(
              [i.Autowired("gridOptionsWrapper")],
              e.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            So(
              [i.Autowired("zipContainer")],
              e.prototype,
              "zipContainer",
              void 0
            ),
            So([i.PostConstruct], e.prototype, "postConstruct", null),
            So([i.Bean("excelCreator")], e)
          );
        })(Ze),
        _o = {
          moduleName: i.ModuleNames.ExcelExportModule,
          beans: [Oo, Qe, He, po, go, ao, ro, no],
          dependantModules: [yo, g],
        },
        Ro = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Po = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.EXPANDED = 0)] = "EXPANDED"),
          (t[(t.COLLAPSED = 1)] = "COLLAPSED"),
          (t[(t.INDETERMINATE = 2)] = "INDETERMINATE");
      })(co || (co = {}));
      var To,
        Ao = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ro(e, t),
            (e.prototype.preConstruct = function () {
              this.setTemplate(
                '<div class="ag-filter-toolpanel-search" role="presentation">\n                <div ref="eExpand" class="ag-filter-toolpanel-expand"></div>\n                <ag-input-text-field ref="eFilterTextField" class="ag-filter-toolpanel-search-input"></ag-input-text-field>\n            </div>'
              );
            }),
            (e.prototype.postConstruct = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eFilterTextField.onValueChange(
                this.onSearchTextChanged.bind(this)
              ),
                this.eFilterTextField.setInputAriaLabel(
                  t("ariaSearch", "Search")
                ),
                this.createExpandIcons(),
                this.setExpandState(co.EXPANDED),
                this.addManagedListener(
                  this.eExpand,
                  "click",
                  this.onExpandClicked.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  this.showOrHideOptions.bind(this)
                );
            }),
            (e.prototype.init = function (t) {
              (this.params = t),
                this.columnController.isReady() && this.showOrHideOptions();
            }),
            (e.prototype.createExpandIcons = function () {
              this.eExpand.appendChild(
                (this.eExpandChecked = i._.createIconNoSpan(
                  "columnSelectOpen",
                  this.gridOptionsWrapper
                ))
              ),
                this.eExpand.appendChild(
                  (this.eExpandUnchecked = i._.createIconNoSpan(
                    "columnSelectClosed",
                    this.gridOptionsWrapper
                  ))
                ),
                this.eExpand.appendChild(
                  (this.eExpandIndeterminate = i._.createIconNoSpan(
                    "columnSelectIndeterminate",
                    this.gridOptionsWrapper
                  ))
                );
            }),
            (e.prototype.showOrHideOptions = function () {
              var t = !this.params.suppressFilterSearch,
                e = !this.params.suppressExpandAll,
                o = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eFilterTextField.setInputPlaceholder(
                o("searchOoo", "Search...")
              );
              var n = this.columnController
                .getAllGridColumns()
                .some(function (t) {
                  return t.getOriginalParent() && t.isFilterAllowed();
                });
              i._.setDisplayed(this.eFilterTextField.getGui(), t),
                i._.setDisplayed(this.eExpand, e && n);
            }),
            (e.prototype.onSearchTextChanged = function () {
              var t = this;
              this.onSearchTextChangedDebounced ||
                (this.onSearchTextChangedDebounced = i._.debounce(function () {
                  t.dispatchEvent({
                    type: "searchChanged",
                    searchText: t.eFilterTextField.getValue(),
                  });
                }, 300)),
                this.onSearchTextChangedDebounced();
            }),
            (e.prototype.onExpandClicked = function () {
              this.dispatchEvent(
                this.currentExpandState === co.EXPANDED
                  ? { type: "collapseAll" }
                  : { type: "expandAll" }
              );
            }),
            (e.prototype.setExpandState = function (t) {
              (this.currentExpandState = t),
                i._.setDisplayed(
                  this.eExpandChecked,
                  this.currentExpandState === co.EXPANDED
                ),
                i._.setDisplayed(
                  this.eExpandUnchecked,
                  this.currentExpandState === co.COLLAPSED
                ),
                i._.setDisplayed(
                  this.eExpandIndeterminate,
                  this.currentExpandState === co.INDETERMINATE
                );
            }),
            Po(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Po([i.RefSelector("eExpand")], e.prototype, "eExpand", void 0),
            Po(
              [i.RefSelector("eFilterTextField")],
              e.prototype,
              "eFilterTextField",
              void 0
            ),
            Po([i.PreConstruct], e.prototype, "preConstruct", null),
            Po([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        Do = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        xo = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Fo = (function (t) {
          function e(o) {
            void 0 === o && (o = !1);
            var n = t.call(this, e.TEMPLATE) || this;
            return (n.expanded = !1), (n.hideHeader = o), n;
          }
          return (
            Do(e, t),
            (e.prototype.postConstruct = function () {
              (this.eExpandChecked = i._.createIconNoSpan(
                "columnSelectOpen",
                this.gridOptionsWrapper
              )),
                (this.eExpandUnchecked = i._.createIconNoSpan(
                  "columnSelectClosed",
                  this.gridOptionsWrapper
                )),
                this.eExpand.appendChild(this.eExpandChecked),
                this.eExpand.appendChild(this.eExpandUnchecked);
            }),
            (e.prototype.setColumn = function (t) {
              var e = this;
              (this.column = t),
                (this.eFilterName.innerText =
                  this.columnController.getDisplayNameForColumn(
                    this.column,
                    "filterToolPanel",
                    !1
                  ) || ""),
                this.addManagedListener(
                  this.eFilterToolPanelHeader,
                  "click",
                  this.toggleExpanded.bind(this)
                ),
                this.addManagedListener(
                  this.eFilterToolPanelHeader,
                  "keydown",
                  function (t) {
                    t.keyCode === i.KeyCode.ENTER && e.toggleExpanded();
                  }
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_FILTER_OPENED,
                  this.onFilterOpened.bind(this)
                ),
                this.addInIcon("filter", this.eFilterIcon, this.column),
                i._.addOrRemoveCssClass(
                  this.eFilterIcon,
                  "ag-hidden",
                  !this.isFilterActive()
                ),
                i._.addCssClass(this.eExpandChecked, "ag-hidden"),
                this.hideHeader
                  ? (i._.addOrRemoveCssClass(
                      this.eFilterToolPanelHeader,
                      "ag-hidden",
                      !0
                    ),
                    this.eFilterToolPanelHeader.removeAttribute("tabindex"))
                  : this.eFilterToolPanelHeader.setAttribute("tabindex", "0"),
                this.addManagedListener(
                  this.column,
                  i.Column.EVENT_FILTER_CHANGED,
                  this.onFilterChanged.bind(this)
                );
            }),
            (e.prototype.getColumn = function () {
              return this.column;
            }),
            (e.prototype.getColumnFilterName = function () {
              return this.columnController.getDisplayNameForColumn(
                this.column,
                "filterToolPanel",
                !1
              );
            }),
            (e.prototype.addCssClassToTitleBar = function (t) {
              i._.addCssClass(this.eFilterToolPanelHeader, t);
            }),
            (e.prototype.addInIcon = function (t, e, o) {
              if (null != e) {
                var n = i._.createIconNoSpan(t, this.gridOptionsWrapper, o);
                e.appendChild(n);
              }
            }),
            (e.prototype.isFilterActive = function () {
              return this.filterManager.isFilterActive(this.column);
            }),
            (e.prototype.onFilterChanged = function () {
              i._.addOrRemoveCssClass(
                this.eFilterIcon,
                "ag-hidden",
                !this.isFilterActive()
              ),
                this.dispatchEvent({ type: i.Column.EVENT_FILTER_CHANGED });
            }),
            (e.prototype.toggleExpanded = function () {
              this.expanded ? this.collapse() : this.expand();
            }),
            (e.prototype.expand = function () {
              var t = this;
              if (!this.expanded) {
                this.expanded = !0;
                var e = i._.loadTemplate(
                    '<div class="ag-filter-toolpanel-instance-filter"></div>'
                  ),
                  o = this.filterManager.getOrCreateFilterWrapper(
                    this.column,
                    "TOOLBAR"
                  ).filterPromise;
                o &&
                  o.then(function (o) {
                    (t.underlyingFilter = o),
                      o &&
                        (e.appendChild(o.getGui()),
                        t.agFilterToolPanelBody.appendChild(e),
                        o.afterGuiAttached &&
                          o.afterGuiAttached({ container: "toolPanel" }));
                  }),
                  i._.setDisplayed(this.eExpandChecked, !0),
                  i._.setDisplayed(this.eExpandUnchecked, !1);
              }
            }),
            (e.prototype.collapse = function () {
              this.expanded &&
                ((this.expanded = !1),
                this.agFilterToolPanelBody.removeChild(
                  this.agFilterToolPanelBody.children[0]
                ),
                i._.setDisplayed(this.eExpandChecked, !1),
                i._.setDisplayed(this.eExpandUnchecked, !0));
            }),
            (e.prototype.refreshFilter = function () {
              if (this.expanded) {
                var t = this.underlyingFilter;
                t &&
                  "function" == typeof t.refreshVirtualList &&
                  t.refreshVirtualList();
              }
            }),
            (e.prototype.onFilterOpened = function (t) {
              "COLUMN_MENU" === t.source &&
                t.column === this.column &&
                this.expanded &&
                this.collapse();
            }),
            (e.TEMPLATE =
              '\n        <div class="ag-filter-toolpanel-instance">\n            <div class="ag-filter-toolpanel-header ag-filter-toolpanel-instance-header" ref="eFilterToolPanelHeader">\n                <div ref="eExpand" class="ag-filter-toolpanel-expand"></div>\n                <span ref="eFilterName" class="ag-header-cell-text"></span>\n                <span ref="eFilterIcon" class="ag-header-icon ag-filter-icon ag-filter-toolpanel-instance-header-icon" aria-hidden="true"></span>\n            </div>\n            <div class="ag-filter-toolpanel-instance-body ag-filter" ref="agFilterToolPanelBody"></div>\n        </div>'),
            xo(
              [i.RefSelector("eFilterToolPanelHeader")],
              e.prototype,
              "eFilterToolPanelHeader",
              void 0
            ),
            xo(
              [i.RefSelector("eFilterName")],
              e.prototype,
              "eFilterName",
              void 0
            ),
            xo(
              [i.RefSelector("agFilterToolPanelBody")],
              e.prototype,
              "agFilterToolPanelBody",
              void 0
            ),
            xo(
              [i.RefSelector("eFilterIcon")],
              e.prototype,
              "eFilterIcon",
              void 0
            ),
            xo([i.RefSelector("eExpand")], e.prototype, "eExpand", void 0),
            xo(
              [i.Autowired("filterManager")],
              e.prototype,
              "filterManager",
              void 0
            ),
            xo(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            xo([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        No = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Mo = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Io = (function (t) {
          function e(e, o, n, r, i) {
            var s = t.call(this) || this;
            return (
              (s.columnGroup = e),
              (s.childFilterComps = o),
              (s.depth = r),
              (s.expandedCallback = n),
              (s.showingColumn = i),
              s
            );
          }
          return (
            No(e, t),
            (e.prototype.preConstruct = function () {
              this.setTemplate(e.TEMPLATE, {
                filterGroupComp: {
                  cssIdentifier: "filter-toolpanel",
                  direction: "vertical",
                },
              });
            }),
            (e.prototype.init = function () {
              var t = this;
              this.setGroupTitle(),
                this.filterGroupComp.setAlignItems("stretch"),
                i._.addCssClass(
                  this.filterGroupComp.getGui(),
                  "ag-filter-toolpanel-group-level-" + this.depth
                ),
                this.filterGroupComp.addCssClassToTitleBar(
                  "ag-filter-toolpanel-group-level-" + this.depth + "-header"
                ),
                this.childFilterComps.forEach(function (e) {
                  t.filterGroupComp.addItem(e),
                    e.addCssClassToTitleBar(
                      "ag-filter-toolpanel-group-level-" +
                        (t.depth + 1) +
                        "-header"
                    );
                }),
                this.addExpandCollapseListeners(),
                this.addFilterChangedListeners(),
                this.setupTooltip();
            }),
            (e.prototype.setupTooltip = function () {
              var t = this;
              if (this.showingColumn) {
                var e = function () {
                  var e = t.columnGroup.getColDef().headerTooltip;
                  t.setTooltip(e);
                };
                e(),
                  this.addManagedListener(
                    this.eventService,
                    i.Events.EVENT_NEW_COLUMNS_LOADED,
                    e
                  );
              }
            }),
            (e.prototype.getTooltipParams = function () {
              var e = t.prototype.getTooltipParams.call(this);
              return (e.location = "filterToolPanelColumnGroup"), e;
            }),
            (e.prototype.addCssClassToTitleBar = function (t) {
              this.filterGroupComp.addCssClassToTitleBar(t);
            }),
            (e.prototype.refreshFilters = function () {
              this.childFilterComps.forEach(function (t) {
                t instanceof e ? t.refreshFilters() : t.refreshFilter();
              });
            }),
            (e.prototype.isColumnGroup = function () {
              return this.columnGroup instanceof i.OriginalColumnGroup;
            }),
            (e.prototype.isExpanded = function () {
              return this.filterGroupComp.isExpanded();
            }),
            (e.prototype.getChildren = function () {
              return this.childFilterComps;
            }),
            (e.prototype.getFilterGroupName = function () {
              return this.filterGroupName ? this.filterGroupName : "";
            }),
            (e.prototype.getFilterGroupId = function () {
              return this.columnGroup.getId();
            }),
            (e.prototype.hideGroupItem = function (t, e) {
              this.filterGroupComp.hideItem(t, e);
            }),
            (e.prototype.hideGroup = function (t) {
              i._.addOrRemoveCssClass(this.getGui(), "ag-hidden", t);
            }),
            (e.prototype.forEachToolPanelFilterChild = function (t) {
              i._.forEach(this.childFilterComps, function (e) {
                e instanceof Fo && t(e);
              });
            }),
            (e.prototype.addExpandCollapseListeners = function () {
              var t = this,
                e = this.isColumnGroup()
                  ? function () {
                      return t.expandedCallback();
                    }
                  : function () {
                      return t.forEachToolPanelFilterChild(function (t) {
                        return t.expand();
                      });
                    },
                o = this.isColumnGroup()
                  ? function () {
                      return t.expandedCallback();
                    }
                  : function () {
                      return t.forEachToolPanelFilterChild(function (t) {
                        return t.collapse();
                      });
                    };
              this.addManagedListener(
                this.filterGroupComp,
                i.AgGroupComponent.EVENT_EXPANDED,
                e
              ),
                this.addManagedListener(
                  this.filterGroupComp,
                  i.AgGroupComponent.EVENT_COLLAPSED,
                  o
                );
            }),
            (e.prototype.addFilterChangedListeners = function () {
              var t = this;
              if (this.columnGroup instanceof i.OriginalColumnGroup) {
                var e = this.columnGroup;
                e.getLeafColumns().forEach(function (o) {
                  t.addManagedListener(
                    o,
                    i.Column.EVENT_FILTER_CHANGED,
                    function () {
                      i._.addOrRemoveCssClass(
                        t.filterGroupComp.getGui(),
                        "ag-has-filter",
                        e.getLeafColumns().some(function (t) {
                          return t.isFilterActive();
                        })
                      );
                    }
                  );
                });
              } else {
                var o = this.columnGroup;
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_FILTER_OPENED,
                  this.onFilterOpened.bind(this)
                ),
                  this.addManagedListener(
                    o,
                    i.Column.EVENT_FILTER_CHANGED,
                    function () {
                      i._.addOrRemoveCssClass(
                        t.filterGroupComp.getGui(),
                        "ag-has-filter",
                        o.isFilterActive()
                      );
                    }
                  );
              }
            }),
            (e.prototype.onFilterOpened = function (t) {
              "COLUMN_MENU" === t.source &&
                t.column === this.columnGroup &&
                this.isExpanded() &&
                this.collapse();
            }),
            (e.prototype.expand = function () {
              this.filterGroupComp.toggleGroupExpand(!0);
            }),
            (e.prototype.collapse = function () {
              this.filterGroupComp.toggleGroupExpand(!1);
            }),
            (e.prototype.setGroupTitle = function () {
              (this.filterGroupName =
                this.columnGroup instanceof i.OriginalColumnGroup
                  ? this.getColumnGroupName(this.columnGroup)
                  : this.getColumnName(this.columnGroup)),
                this.filterGroupComp.setTitle(this.filterGroupName || "");
            }),
            (e.prototype.getColumnGroupName = function (t) {
              return this.columnController.getDisplayNameForOriginalColumnGroup(
                null,
                t,
                "filterToolPanel"
              );
            }),
            (e.prototype.getColumnName = function (t) {
              return this.columnController.getDisplayNameForColumn(
                t,
                "filterToolPanel",
                !1
              );
            }),
            (e.prototype.destroyFilters = function () {
              (this.childFilterComps = this.destroyBeans(
                this.childFilterComps
              )),
                i._.clearElement(this.getGui());
            }),
            (e.prototype.destroy = function () {
              this.destroyFilters(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div class="ag-filter-toolpanel-group-wrapper">\n            <ag-group-component ref="filterGroupComp"></ag-group-component>\n        </div>'),
            Mo(
              [i.RefSelector("filterGroupComp")],
              e.prototype,
              "filterGroupComp",
              void 0
            ),
            Mo(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Mo([i.PreConstruct], e.prototype, "preConstruct", null),
            Mo([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Lo = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Go = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ko = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (o.initialised = !1), (o.filterGroupComps = []), o;
          }
          return (
            Lo(e, t),
            (e.prototype.init = function (t) {
              var e = this;
              this.initialised = !0;
              var o = {
                suppressExpandAll: !1,
                suppressFilterSearch: !1,
                suppressSyncLayoutWithGrid: !1,
                api: this.gridApi,
                columnApi: this.columnApi,
              };
              i._.mergeDeep(o, t),
                (this.params = o),
                this.params.suppressSyncLayoutWithGrid ||
                  this.addManagedListener(
                    this.eventService,
                    i.Events.EVENT_COLUMN_MOVED,
                    function () {
                      return e.onColumnsChanged();
                    }
                  ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  function () {
                    return e.onColumnsChanged();
                  }
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED,
                  function (t) {
                    "filters" === t.source && e.refreshFilters();
                  }
                ),
                this.columnController.isReady() && this.onColumnsChanged();
            }),
            (e.prototype.onColumnsChanged = function () {
              var t = this.columnController.isPivotMode();
              this.params.suppressSyncLayoutWithGrid || t
                ? this.buildTreeFromProvidedColumnDefs()
                : this.syncFilterLayout();
            }),
            (e.prototype.syncFilterLayout = function () {
              this.toolPanelColDefService.syncLayoutWithGrid(
                this.setFiltersLayout.bind(this)
              );
            }),
            (e.prototype.buildTreeFromProvidedColumnDefs = function () {
              var t = this;
              this.destroyFilters();
              var e = this.columnController.getPrimaryColumnTree();
              this.filterGroupComps = this.recursivelyAddComps(e, 0);
              var o = this.filterGroupComps.length;
              o &&
                (this.filterGroupComps.forEach(function (e) {
                  return t.appendChild(e);
                }),
                this.setFirstAndLastVisible(0, o - 1)),
                i._.exists(this.searchFilterText) &&
                  this.searchFilters(this.searchFilterText),
                this.fireExpandedEvent();
            }),
            (e.prototype.setFiltersLayout = function (t) {
              var e = this;
              this.destroyFilters();
              var o = this.toolPanelColDefService.createColumnTree(t);
              this.filterGroupComps = this.recursivelyAddComps(o, 0);
              var n = this.filterGroupComps.length;
              n &&
                (this.filterGroupComps.forEach(function (t) {
                  return e.appendChild(t);
                }),
                this.setFirstAndLastVisible(0, n - 1)),
                i._.exists(this.searchFilterText) &&
                  this.searchFilters(this.searchFilterText),
                this.fireExpandedEvent();
            }),
            (e.prototype.recursivelyAddComps = function (t, e) {
              var o = this;
              return i._.flatten(
                t.map(function (t) {
                  if (t instanceof i.OriginalColumnGroup)
                    return i._.flatten(o.recursivelyAddFilterGroupComps(t, e));
                  var n = t;
                  if (!o.shouldDisplayFilter(n)) return [];
                  var r = new Fo(0 === e);
                  if ((o.getContext().createBean(r), r.setColumn(n), e > 0))
                    return r;
                  var s = o.createBean(
                    new Io(n, [r], o.onGroupExpanded.bind(o), e, !0)
                  );
                  return (
                    s.addCssClassToTitleBar("ag-filter-toolpanel-header"),
                    s.collapse(),
                    s
                  );
                })
              );
            }),
            (e.prototype.recursivelyAddFilterGroupComps = function (t, e) {
              if (this.filtersExistInChildren(t.getChildren())) {
                var o = t.getColGroupDef();
                if (o && o.suppressFiltersToolPanel) return [];
                var n = t.isPadding() ? e : e + 1,
                  r = i._.flatten(this.recursivelyAddComps(t.getChildren(), n));
                if (t.isPadding()) return r;
                var s = new Io(t, r, this.onGroupExpanded.bind(this), e, !1);
                return (
                  this.getContext().createBean(s),
                  s.addCssClassToTitleBar("ag-filter-toolpanel-header"),
                  [s]
                );
              }
            }),
            (e.prototype.filtersExistInChildren = function (t) {
              var e = this;
              return t.some(function (t) {
                return t instanceof i.OriginalColumnGroup
                  ? e.filtersExistInChildren(t.getChildren())
                  : e.shouldDisplayFilter(t);
              });
            }),
            (e.prototype.shouldDisplayFilter = function (t) {
              var e = t.getColDef() && t.getColDef().suppressFiltersToolPanel;
              return t.isFilterAllowed() && !e;
            }),
            (e.prototype.refresh = function () {}),
            (e.prototype.setVisible = function (e) {
              t.prototype.setDisplayed.call(this, e),
                e && !this.initialised && this.init(this.params);
            }),
            (e.prototype.expandFilterGroups = function (t, e) {
              var o = [],
                n = function (r) {
                  var s = r.getFilterGroupId();
                  (!e || i._.includes(e, s)) &&
                    (t && r.isColumnGroup() ? r.expand() : r.collapse(),
                    o.push(s)),
                    r.getChildren().forEach(function (t) {
                      t instanceof Io && n(t);
                    });
                };
              if (
                (this.filterGroupComps.forEach(n), this.onGroupExpanded(), e)
              ) {
                var r = e.filter(function (t) {
                  return o.indexOf(t) < 0;
                });
                r.length > 0 &&
                  console.warn(
                    "AG Grid: unable to find groups for these supplied groupIds:",
                    r
                  );
              }
            }),
            (e.prototype.expandFilters = function (t, e) {
              var o = [],
                n = function (r) {
                  if (r instanceof Io) {
                    var s = !1;
                    return (
                      r.getChildren().forEach(function (e) {
                        n(e) &&
                          (t
                            ? (r.expand(), (s = !0))
                            : r.isColumnGroup() || r.collapse());
                      }),
                      s
                    );
                  }
                  var a = r.getColumn().getColId(),
                    l = !e || i._.includes(e, a);
                  return l && (t ? r.expand() : r.collapse(), o.push(a)), l;
                };
              if (
                (this.filterGroupComps.forEach(n), this.onGroupExpanded(), e)
              ) {
                var r = e.filter(function (t) {
                  return o.indexOf(t) < 0;
                });
                r.length > 0 &&
                  console.warn(
                    "AG Grid: unable to find columns for these supplied colIds:",
                    r
                  );
              }
            }),
            (e.prototype.onGroupExpanded = function () {
              this.fireExpandedEvent();
            }),
            (e.prototype.fireExpandedEvent = function () {
              var t = 0,
                e = 0,
                o = function (n) {
                  n.isColumnGroup() &&
                    (n.isExpanded() ? t++ : e++,
                    n.getChildren().forEach(function (t) {
                      t instanceof Io && o(t);
                    }));
                };
              this.filterGroupComps.forEach(o),
                this.dispatchEvent({
                  type: "groupExpanded",
                  state:
                    t > 0 && e > 0
                      ? co.INDETERMINATE
                      : e > 0
                      ? co.COLLAPSED
                      : co.EXPANDED,
                });
            }),
            (e.prototype.performFilterSearch = function (t) {
              (this.searchFilterText = i._.exists(t) ? t.toLowerCase() : null),
                this.searchFilters(this.searchFilterText);
            }),
            (e.prototype.searchFilters = function (t) {
              var e,
                o,
                n = function (e) {
                  return !i._.exists(t) || -1 !== e.toLowerCase().indexOf(t);
                },
                r = function (t, e) {
                  if (!(t instanceof Io))
                    return n(t.getColumnFilterName() || "");
                  var o = t.getChildren(),
                    i = n(t.getFilterGroupName()),
                    s = e || i;
                  if (s) {
                    t.hideGroup(!1);
                    for (var a = 0; a < o.length; a++)
                      r(o[a], s), t.hideGroupItem(!1, a);
                    return !0;
                  }
                  var l = !1;
                  return (
                    o.forEach(function (o, n) {
                      var i = r(o, e);
                      t.hideGroupItem(!i, n), i && (l = !0);
                    }),
                    t.hideGroup(!l),
                    l
                  );
                };
              this.filterGroupComps.forEach(function (t, n) {
                r(t, !1),
                  void 0 === e
                    ? i._.containsClass(t.getGui(), "ag-hidden") ||
                      ((e = n), (o = n))
                    : i._.containsClass(t.getGui(), "ag-hidden") ||
                      o === n ||
                      (o = n);
              }),
                this.setFirstAndLastVisible(e, o);
            }),
            (e.prototype.setFirstAndLastVisible = function (t, e) {
              this.filterGroupComps.forEach(function (o, n) {
                i._.removeCssClass(o.getGui(), "ag-first-group-visible"),
                  i._.removeCssClass(o.getGui(), "ag-last-group-visible"),
                  n === t &&
                    i._.addCssClass(o.getGui(), "ag-first-group-visible"),
                  n === e &&
                    i._.addCssClass(o.getGui(), "ag-last-group-visible");
              });
            }),
            (e.prototype.refreshFilters = function () {
              this.filterGroupComps.forEach(function (t) {
                return t.refreshFilters();
              });
            }),
            (e.prototype.destroyFilters = function () {
              (this.filterGroupComps = this.destroyBeans(
                this.filterGroupComps
              )),
                i._.clearElement(this.getGui());
            }),
            (e.prototype.destroy = function () {
              this.destroyFilters(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE = '<div class="ag-filter-list-panel"></div>'),
            Go([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Go([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            Go(
              [i.Autowired("toolPanelColDefService")],
              e.prototype,
              "toolPanelColDefService",
              void 0
            ),
            Go(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            e
          );
        })(i.Component),
        Vo = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Wo = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ho = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (o.initialised = !1), (o.listenerDestroyFuncs = []), o;
          }
          return (
            Vo(e, t),
            (e.prototype.init = function (t) {
              this.initialised &&
                (this.listenerDestroyFuncs.forEach(function (t) {
                  return t();
                }),
                (this.listenerDestroyFuncs = [])),
                (this.initialised = !0);
              var e = {
                suppressExpandAll: !1,
                suppressFilterSearch: !1,
                suppressSyncLayoutWithGrid: !1,
                api: this.gridApi,
                columnApi: this.columnApi,
              };
              i._.mergeDeep(e, t),
                (this.params = e),
                this.filtersToolPanelHeaderPanel.init(this.params),
                this.filtersToolPanelListPanel.init(this.params),
                this.params.suppressExpandAll &&
                  this.params.suppressFilterSearch &&
                  this.filtersToolPanelHeaderPanel.setDisplayed(!1),
                this.listenerDestroyFuncs.push(
                  this.addManagedListener(
                    this.filtersToolPanelHeaderPanel,
                    "expandAll",
                    this.onExpandAll.bind(this)
                  ),
                  this.addManagedListener(
                    this.filtersToolPanelHeaderPanel,
                    "collapseAll",
                    this.onCollapseAll.bind(this)
                  ),
                  this.addManagedListener(
                    this.filtersToolPanelHeaderPanel,
                    "searchChanged",
                    this.onSearchChanged.bind(this)
                  ),
                  this.addManagedListener(
                    this.filtersToolPanelListPanel,
                    "groupExpanded",
                    this.onGroupExpanded.bind(this)
                  )
                );
            }),
            (e.prototype.setVisible = function (e) {
              t.prototype.setDisplayed.call(this, e),
                e && !this.initialised && this.init(this.params);
            }),
            (e.prototype.onExpandAll = function () {
              this.filtersToolPanelListPanel.expandFilterGroups(!0);
            }),
            (e.prototype.onCollapseAll = function () {
              this.filtersToolPanelListPanel.expandFilterGroups(!1);
            }),
            (e.prototype.onSearchChanged = function (t) {
              this.filtersToolPanelListPanel.performFilterSearch(t.searchText);
            }),
            (e.prototype.setFilterLayout = function (t) {
              this.filtersToolPanelListPanel.setFiltersLayout(t);
            }),
            (e.prototype.onGroupExpanded = function (t) {
              this.filtersToolPanelHeaderPanel.setExpandState(t.state);
            }),
            (e.prototype.expandFilterGroups = function (t) {
              this.filtersToolPanelListPanel.expandFilterGroups(!0, t);
            }),
            (e.prototype.collapseFilterGroups = function (t) {
              this.filtersToolPanelListPanel.expandFilterGroups(!1, t);
            }),
            (e.prototype.expandFilters = function (t) {
              this.filtersToolPanelListPanel.expandFilters(!0, t);
            }),
            (e.prototype.collapseFilters = function (t) {
              this.filtersToolPanelListPanel.expandFilters(!1, t);
            }),
            (e.prototype.syncLayoutWithGrid = function () {
              this.filtersToolPanelListPanel.syncFilterLayout();
            }),
            (e.prototype.refresh = function () {
              this.init(this.params);
            }),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div class="ag-filter-toolpanel">\n            <ag-filters-tool-panel-header ref="filtersToolPanelHeaderPanel"></ag-filters-tool-panel-header>\n            <ag-filters-tool-panel-list ref="filtersToolPanelListPanel"></ag-filters-tool-panel-list>\n         </div>'),
            Wo(
              [i.RefSelector("filtersToolPanelHeaderPanel")],
              e.prototype,
              "filtersToolPanelHeaderPanel",
              void 0
            ),
            Wo(
              [i.RefSelector("filtersToolPanelListPanel")],
              e.prototype,
              "filtersToolPanelListPanel",
              void 0
            ),
            Wo([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Wo([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            e
          );
        })(i.Component),
        Bo = {
          moduleName: i.ModuleNames.FiltersToolPanelModule,
          beans: [],
          agStackComponents: [
            { componentName: "AgFiltersToolPanelHeader", componentClass: Ao },
            { componentName: "AgFiltersToolPanelList", componentClass: ko },
          ],
          userComponents: [
            { componentName: "agFiltersToolPanel", componentClass: Ho },
          ],
          dependantModules: [Jt, g],
        },
        jo = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Uo = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        zo = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            jo(e, t),
            (e.prototype.getData = function (t) {
              if (t.crossFiltering) {
                if (t.grouping)
                  return (
                    console.warn(
                      "ag-grid: crossing filtering with row grouping is not supported."
                    ),
                    { data: [], columnNames: {} }
                  );
                if (!this.gridOptionsWrapper.isRowModelDefault())
                  return (
                    console.warn(
                      "ag-grid: crossing filtering is only supported in the client side row model."
                    ),
                    { data: [], columnNames: {} }
                  );
              }
              this.gridOptionsWrapper.isRowModelServerSide() &&
                t.pivoting &&
                this.updatePivotKeysForSSRM();
              var e = this.extractRowsFromGridRowModel(t);
              return (e.data = this.aggregateRowsByDimension(t, e.data)), e;
            }),
            (e.prototype.extractRowsFromGridRowModel = function (t) {
              var o,
                n = this,
                r = [],
                s = {},
                a = {},
                l = {},
                u = {},
                p = [];
              if (t.crossFiltering)
                (u = this.getFilteredRowNodes()),
                  (o = (p = this.getAllRowNodes()).length);
              else {
                var c = this.gridRowModel.getRowCount() - 1;
                o =
                  (t.endRow >= 0 ? Math.min(t.endRow, c) : c) - t.startRow + 1;
              }
              for (
                var d = function (o) {
                    var i = {},
                      c = t.crossFiltering
                        ? p[o]
                        : h.gridRowModel.getRow(o + t.startRow);
                    t.dimensionCols.forEach(function (r) {
                      var s = r.colId,
                        u = n.columnController.getGridColumn(s);
                      if (u) {
                        var p = n.valueService.getValue(u, c);
                        if (t.grouping) {
                          var d = p && p.toString ? String(p.toString()) : "",
                            h = e.getGroupLabels(c, d);
                          (i[s] = {
                            labels: h,
                            toString: function () {
                              return this.labels
                                .filter(function (t) {
                                  return !!t;
                                })
                                .reverse()
                                .join(" - ");
                            },
                          }),
                            c.group && (a[h.toString()] = o);
                          var f = h.slice(1, h.length).toString();
                          f && (l[f] = a[f]);
                        } else i[s] = p;
                      } else i[qo.DEFAULT_CATEGORY] = o + 1;
                    }),
                      t.valueCols.forEach(function (e) {
                        var o = [],
                          r = e.getColDef().pivotKeys;
                        r && (o = r.slice());
                        var a = e.getColDef().headerName;
                        a && o.push(a), o.length > 0 && (s[e.getId()] = o);
                        var l = e.getColId();
                        if (t.crossFiltering) {
                          var p = l + "-filtered-out",
                            d =
                              null != (h = n.valueService.getValue(e, c)) &&
                              "function" == typeof h.toNumber
                                ? h.toNumber()
                                : h;
                          u[c.id]
                            ? ((i[l] = d),
                              (i[p] = t.aggFunc || t.isScatter ? void 0 : 0))
                            : ((i[l] = t.aggFunc || t.isScatter ? void 0 : 0),
                              (i[p] = d));
                        } else {
                          var h = n.valueService.getValue(e, c);
                          i[l] =
                            null != h && "function" == typeof h.toNumber
                              ? h.toNumber()
                              : h;
                        }
                      }),
                      r.push(i);
                  },
                  h = this,
                  f = 0;
                f < o;
                f++
              )
                d(f);
              if (t.grouping) {
                var g = i._.values(l);
                r = r.filter(function (t, e) {
                  return !i._.includes(g, e);
                });
              }
              return { data: r, columnNames: s };
            }),
            (e.prototype.aggregateRowsByDimension = function (t, e) {
              var o = this,
                n = t.dimensionCols;
              if (!t.aggFunc || 0 === n.length) return e;
              var r = i._.last(n),
                s = r && r.colId,
                a = {},
                l = [];
              return (
                e.forEach(function (t) {
                  var e = a;
                  n.forEach(function (o) {
                    var r = o.colId,
                      i = t[r];
                    if (r === s) {
                      var a = e[i];
                      a ||
                        ((a = { __children: [] }),
                        n.forEach(function (e) {
                          var o = e.colId;
                          a[o] = t[o];
                        }),
                        (e[i] = a),
                        l.push(a)),
                        a.__children.push(t);
                    } else e[i] || (e[i] = {}), (e = e[i]);
                  });
                }),
                i.ModuleRegistry.assertRegistered(
                  i.ModuleNames.RowGroupingModule,
                  "Charting Aggregation"
                ) &&
                  l.forEach(function (e) {
                    return t.valueCols.forEach(function (n) {
                      if (t.crossFiltering)
                        t.valueCols.forEach(function (n) {
                          var r = e.__children
                              .filter(function (t) {
                                return void 0 !== t[n.getColId()];
                              })
                              .map(function (t) {
                                return t[n.getColId()];
                              }),
                            i = o.aggregationStage.aggregateValues(
                              r,
                              t.aggFunc
                            );
                          e[n.getId()] = i && void 0 !== i.value ? i.value : i;
                          var s = n.getId() + "-filtered-out",
                            a = e.__children
                              .filter(function (t) {
                                return void 0 !== t[s];
                              })
                              .map(function (t) {
                                return t[s];
                              }),
                            l = o.aggregationStage.aggregateValues(
                              a,
                              t.aggFunc
                            );
                          e[s] = l && void 0 !== l.value ? l.value : l;
                        });
                      else {
                        var r = e.__children.map(function (t) {
                            return t[n.getId()];
                          }),
                          s = 0;
                        i.ModuleRegistry.assertRegistered(
                          i.ModuleNames.RowGroupingModule,
                          "Charting Aggregation"
                        ) &&
                          (s = o.aggregationStage.aggregateValues(
                            r,
                            t.aggFunc
                          )),
                          (e[n.getId()] =
                            s && void 0 !== s.value ? s.value : s);
                      }
                    });
                  }),
                l
              );
            }),
            (e.prototype.updatePivotKeysForSSRM = function () {
              var t = this.columnController.getSecondaryColumns();
              if (t) {
                var e = this.extractPivotKeySeparator(t);
                t.forEach(function (t) {
                  var o = t.getColId().split(e);
                  t.getColDef().pivotKeys = o.slice(0, o.length - 1);
                });
              }
            }),
            (e.prototype.extractPivotKeySeparator = function (t) {
              if (0 === t.length) return "";
              var e = function (t, o) {
                  var n = t.getGroupId();
                  return t.getParent() ? e(t.getParent(), n) : o.split(n)[1][0];
                },
                o = t[0];
              return e(o.getParent(), o.getColId());
            }),
            (e.getGroupLabels = function (t, e) {
              for (var o = [e]; t && 0 !== t.level; )
                (t = t.parent) && o.push(t.key);
              return o;
            }),
            (e.prototype.getFilteredRowNodes = function () {
              var t = {};
              return (
                this.gridRowModel.forEachNodeAfterFilterAndSort(function (e) {
                  t[e.id] = e;
                }),
                t
              );
            }),
            (e.prototype.getAllRowNodes = function () {
              var t = [];
              return (
                this.gridRowModel.forEachNode(function (e) {
                  t.push(e);
                }),
                this.sortRowNodes(t)
              );
            }),
            (e.prototype.sortRowNodes = function (t) {
              var e = this.sortController.getSortOptions();
              return e && 0 != e.length
                ? this.rowNodeSorter.doFullSort(t, e)
                : t;
            }),
            Uo([i.Autowired("rowModel")], e.prototype, "gridRowModel", void 0),
            Uo(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            Uo(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Uo(
              [i.Autowired("rowNodeSorter")],
              e.prototype,
              "rowNodeSorter",
              void 0
            ),
            Uo(
              [i.Autowired("sortController")],
              e.prototype,
              "sortController",
              void 0
            ),
            Uo(
              [i.Optional("aggregationStage")],
              e.prototype,
              "aggregationStage",
              void 0
            ),
            e
          );
        })(i.BeanStub),
        Ko = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Yo = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Xo = function () {
          for (var t = 0, e = 0, o = arguments.length; e < o; e++)
            t += arguments[e].length;
          var n = Array(t),
            r = 0;
          for (e = 0; e < o; e++)
            for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
              n[r] = i[s];
          return n;
        },
        qo = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (
              (o.dimensionColState = []),
              (o.valueColState = []),
              (o.unlinked = !1),
              (o.grouping = !1),
              (o.crossFiltering = !1),
              (o.columnNames = {}),
              (o.pivotChart = e.pivotChart),
              (o.chartType = e.chartType),
              (o.chartThemeName = e.chartThemeName),
              (o.aggFunc = e.aggFunc),
              (o.referenceCellRange = e.cellRange),
              (o.suppliedCellRange = e.cellRange),
              (o.suppressChartRanges = e.suppressChartRanges),
              (o.unlinked = !!e.unlinkChart),
              (o.crossFiltering = !!e.crossFiltering),
              (o.chartId = o.generateId()),
              o
            );
          }
          return (
            Ko(e, t),
            (e.prototype.init = function () {
              (this.datasource = this.createManagedBean(new zo())),
                this.updateCellRanges();
            }),
            (e.prototype.updateCellRanges = function (t) {
              this.valueCellRange &&
                (this.referenceCellRange = this.valueCellRange);
              var e = this.getAllChartColumns(),
                o = e.dimensionCols,
                n = e.valueCols,
                r = this.getAllColumnsFromRanges();
              t && this.updateColumnState(t),
                this.setDimensionCellRange(o, r, t),
                this.setValueCellRange(n, r, t),
                t || (this.resetColumnState(), this.syncDimensionCellRange()),
                this.updateData();
            }),
            (e.prototype.getData = function () {
              return this.chartData;
            }),
            (e.prototype.isGroupActive = function () {
              var t = this.gridOptionsWrapper.isTreeData(),
                e = t ? null : this.columnController.getRowGroupColumns();
              return t || (e && e.length > 0);
            }),
            (e.prototype.isGrouping = function () {
              var t = this.getSelectedDimension().colId,
                e = this.columnController
                  .getGroupDisplayColumns()
                  .map(function (t) {
                    return t.getColId();
                  })
                  .some(function (e) {
                    return e === t;
                  });
              return !!this.isGroupActive() && e;
            }),
            (e.prototype.isPivotActive = function () {
              return this.columnController.isPivotActive();
            }),
            (e.prototype.isPivotMode = function () {
              return this.columnController.isPivotMode();
            }),
            (e.prototype.isPivotChart = function () {
              return this.pivotChart;
            }),
            (e.prototype.getChartId = function () {
              return this.chartId;
            }),
            (e.prototype.getValueColState = function () {
              return this.valueColState.map(this.displayNameMapper.bind(this));
            }),
            (e.prototype.getDimensionColState = function () {
              return this.dimensionColState;
            }),
            (e.prototype.getCellRanges = function () {
              return [this.dimensionCellRange, this.valueCellRange].filter(
                function (t) {
                  return t;
                }
              );
            }),
            (e.prototype.getCellRangeParams = function () {
              var t = this.getCellRanges(),
                e = t[0],
                o = (e && e.startRow) || null,
                n = (e && e.endRow) || null;
              return {
                rowStartIndex: o && o.rowIndex,
                rowStartPinned: o && o.rowPinned,
                rowEndIndex: n && n.rowIndex,
                rowEndPinned: n && n.rowPinned,
                columns: t.reduce(function (t, e) {
                  return t.concat(
                    e.columns.map(function (t) {
                      return t.getId();
                    })
                  );
                }, []),
              };
            }),
            (e.prototype.setChartType = function (t) {
              this.chartType = t;
            }),
            (e.prototype.getChartType = function () {
              return this.chartType;
            }),
            (e.prototype.setChartThemeName = function (t) {
              this.chartThemeName = t;
            }),
            (e.prototype.getChartThemeName = function () {
              return this.chartThemeName;
            }),
            (e.prototype.isSuppressChartRanges = function () {
              return this.suppressChartRanges;
            }),
            (e.prototype.isUnlinked = function () {
              return this.unlinked;
            }),
            (e.prototype.toggleUnlinked = function () {
              this.unlinked = !this.unlinked;
            }),
            (e.prototype.getAggFunc = function () {
              return this.aggFunc;
            }),
            (e.prototype.getSelectedValueColState = function () {
              return this.getValueColState().filter(function (t) {
                return t.selected;
              });
            }),
            (e.prototype.getSelectedValueCols = function () {
              return this.valueColState
                .filter(function (t) {
                  return t.selected;
                })
                .map(function (t) {
                  return t.column;
                });
            }),
            (e.prototype.getSelectedDimension = function () {
              return this.dimensionColState.filter(function (t) {
                return t.selected;
              })[0];
            }),
            (e.prototype.createCellRange = function (t) {
              for (var e = [], o = 1; o < arguments.length; o++)
                e[o - 1] = arguments[o];
              return {
                id: this.chartId,
                startRow: this.referenceCellRange.startRow,
                endRow: this.referenceCellRange.endRow,
                columns: e,
                startColumn:
                  t === i.CellRangeType.DIMENSION
                    ? e[0]
                    : this.referenceCellRange.startColumn,
                type: t,
              };
            }),
            (e.prototype.getAllColumnsFromRanges = function () {
              if (this.pivotChart)
                return i._.convertToSet(
                  this.columnController.getAllDisplayedColumns()
                );
              var t =
                this.dimensionCellRange || this.valueCellRange
                  ? []
                  : this.referenceCellRange.columns;
              return (
                this.dimensionCellRange &&
                  t.push.apply(t, this.dimensionCellRange.columns),
                this.valueCellRange &&
                  t.push.apply(t, this.valueCellRange.columns),
                i._.convertToSet(t)
              );
            }),
            (e.prototype.getColDisplayName = function (t) {
              return this.columnController.getDisplayNameForColumn(t, "chart");
            }),
            (e.prototype.getRowIndexes = function () {
              var t = 0,
                e = 0,
                o = this.rangeController,
                n = this.valueCellRange;
              return (
                o &&
                  n &&
                  ((t = o.getRangeStartRow(n).rowIndex),
                  (e = o.getRangeEndRow(n).rowIndex)),
                { startRow: t, endRow: e }
              );
            }),
            (e.prototype.getAllChartColumns = function () {
              var t = this,
                e = this.columnController.getAllDisplayedColumns(),
                o = new Set(),
                n = new Set();
              return (
                e.forEach(function (e) {
                  var r = e.getColDef(),
                    i = r.chartDataType;
                  if (i)
                    switch (i) {
                      case "category":
                      case "time":
                        return void o.add(e);
                      case "series":
                        return void n.add(e);
                      case "excluded":
                        return;
                      default:
                        console.warn(
                          "AG Grid: unexpected chartDataType value '" +
                            i +
                            "' supplied, instead use 'category', 'series' or 'excluded'"
                        );
                    }
                  "ag-Grid-AutoColumn" !== r.colId
                    ? e.isPrimary()
                      ? (t.isNumberCol(e) ? n : o).add(e)
                      : n.add(e)
                    : o.add(e);
                }),
                { dimensionCols: o, valueCols: n }
              );
            }),
            (e.prototype.isNumberCol = function (t) {
              if ("ag-Grid-AutoColumn" === t.getColId()) return !1;
              var e = this.rowRenderer.getRowNode({
                rowIndex: 0,
                rowPinned: void 0,
              });
              if (!e) return !1;
              var o = this.valueService.getValue(t, e);
              return (
                null == o && (o = this.extractLeafData(e, t)),
                null != o &&
                  "function" == typeof o.toNumber &&
                  (o = o.toNumber()),
                "number" == typeof o
              );
            }),
            (e.prototype.extractLeafData = function (t, e) {
              if (!t.allLeafChildren) return null;
              for (var o = 0; o < t.allLeafChildren.length; o++) {
                var n = this.valueService.getValue(e, t.allLeafChildren[o]);
                if (null != n) return n;
              }
              return null;
            }),
            (e.prototype.displayNameMapper = function (t) {
              var e = this.columnNames[t.colId];
              return (
                (t.displayName = e
                  ? e.join(" - ")
                  : this.getColDisplayName(t.column)),
                t
              );
            }),
            (e.prototype.generateId = function () {
              return "id-" + Math.random().toString(36).substr(2, 16);
            }),
            (e.prototype.updateData = function () {
              var t = this.getRowIndexes(),
                e = t.startRow,
                o = t.endRow;
              this.pivotChart && this.resetColumnState(),
                (this.grouping = this.isGrouping());
              var n = {
                  aggFunc: this.aggFunc,
                  dimensionCols: [this.getSelectedDimension()],
                  grouping: this.grouping,
                  pivoting: this.isPivotActive(),
                  crossFiltering: this.crossFiltering,
                  valueCols: this.getSelectedValueCols(),
                  startRow: e,
                  endRow: o,
                  isScatter: i._.includes(
                    [i.ChartType.Scatter, i.ChartType.Bubble],
                    this.chartType
                  ),
                },
                r = this.datasource.getData(n);
              (this.chartData = r.data), (this.columnNames = r.columnNames);
            }),
            (e.prototype.resetColumnState = function () {
              var t = this,
                o = this.getAllChartColumns(),
                n = o.dimensionCols,
                r = o.valueCols,
                s = this.getAllColumnsFromRanges(),
                a = this.valueColState.length < 1;
              (this.dimensionColState = []), (this.valueColState = []);
              var l = !1,
                u = 1,
                p = this.suppliedCellRange.columns[0];
              n.forEach(function (e) {
                var o = "ag-Grid-AutoColumn" === e.getColId(),
                  n = !1;
                t.crossFiltering && t.aggFunc
                  ? p.getColId() === e.getColId() && (n = !0)
                  : (n = !!o || (!l && s.has(e))),
                  t.dimensionColState.push({
                    column: e,
                    colId: e.getColId(),
                    displayName: t.getColDisplayName(e),
                    selected: n,
                    order: u++,
                  }),
                  n && (l = !0);
              });
              var c = {
                colId: e.DEFAULT_CATEGORY,
                displayName: this.chartTranslator.translate("defaultCategory"),
                selected: !l,
                order: 0,
              };
              this.dimensionColState.unshift(c);
              var d = this.referenceCellRange.columns.filter(function (t) {
                return r.has(t);
              });
              r.forEach(function (e) {
                a &&
                  i._.includes(t.referenceCellRange.columns, e) &&
                  (e = d.shift()),
                  t.valueColState.push({
                    column: e,
                    colId: e.getColId(),
                    displayName: t.getColDisplayName(e),
                    selected: s.has(e),
                    order: u++,
                  });
              });
            }),
            (e.prototype.updateColumnState = function (t) {
              var e = function (e) {
                  return e.colId === t.colId;
                },
                o = this.dimensionColState,
                n = this.valueColState;
              o.filter(e).length > 0
                ? o.forEach(function (t) {
                    return (t.selected = e(t));
                  })
                : n.filter(e).forEach(function (e) {
                    return (e.selected = t.selected);
                  });
              var r = Xo(o, n),
                i = [];
              r.forEach(function (e, o) {
                o === t.order && i.push(t.colId),
                  e.colId !== t.colId && i.push(e.colId);
              }),
                r.forEach(function (t) {
                  var e = i.indexOf(t.colId);
                  t.order = e >= 0 ? i.indexOf(t.colId) : r.length - 1;
                }),
                this.reorderColState();
            }),
            (e.prototype.reorderColState = function () {
              var t = this.valueColState;
              this.dimensionColState.sort(function (t, e) {
                return t.order - e.order;
              }),
                t.sort(function (t, e) {
                  return t.order - e.order;
                });
            }),
            (e.prototype.setDimensionCellRange = function (t, o, n) {
              var r = this;
              if (
                ((this.dimensionCellRange = void 0),
                n || this.dimensionColState.length)
              ) {
                var s = n;
                if (this.crossFiltering && this.aggFunc) {
                  var a = this.suppliedCellRange.columns[0];
                  s = this.dimensionColState.filter(function (t) {
                    return t.colId === a.getColId();
                  })[0];
                } else
                  (s && t.has(s.column)) ||
                    (s = this.dimensionColState.filter(function (t) {
                      return t.selected;
                    })[0]);
                s &&
                  s.colId !== e.DEFAULT_CATEGORY &&
                  (this.dimensionCellRange = this.createCellRange(
                    i.CellRangeType.DIMENSION,
                    s.column
                  ));
              } else
                t.forEach(function (t) {
                  !r.dimensionCellRange &&
                    o.has(t) &&
                    (r.dimensionCellRange = r.createCellRange(
                      i.CellRangeType.DIMENSION,
                      t
                    ));
                });
            }),
            (e.prototype.setValueCellRange = function (t, e, o) {
              this.valueCellRange = void 0;
              var n = [];
              if (
                (t.forEach(function (t) {
                  o && o.colId === t.getColId()
                    ? o.selected && n.push(o.column)
                    : e.has(t) && n.push(t);
                }),
                n.length > 0)
              ) {
                var r = [];
                this.valueColState.length > 0
                  ? (r = this.valueColState.map(function (t) {
                      return t.colId;
                    }))
                  : e.forEach(function (t) {
                      return r.push(t.getColId());
                    }),
                  n.sort(function (t, e) {
                    return r.indexOf(t.getColId()) - r.indexOf(e.getColId());
                  }),
                  (this.valueCellRange = this.createCellRange.apply(
                    this,
                    Xo([i.CellRangeType.VALUE], n)
                  ));
              }
            }),
            (e.prototype.syncDimensionCellRange = function () {
              var t = this.getSelectedDimension();
              t &&
                t.column &&
                (this.dimensionCellRange = this.createCellRange(
                  i.CellRangeType.DIMENSION,
                  t.column
                ));
            }),
            (e.DEFAULT_CATEGORY = "AG-GRID-DEFAULT-CATEGORY"),
            Yo(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Yo(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            Yo(
              [i.Autowired("rangeController")],
              e.prototype,
              "rangeController",
              void 0
            ),
            Yo(
              [i.Autowired("rowRenderer")],
              e.prototype,
              "rowRenderer",
              void 0
            ),
            Yo(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Yo([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.BeanStub),
        Qo = (function () {
          function t(t, e, o, n) {
            void 0 === t && (t = 0),
              void 0 === e && (e = t),
              void 0 === o && (o = t),
              void 0 === n && (n = e),
              (this.top = t),
              (this.right = e),
              (this.bottom = o),
              (this.left = n);
          }
          return (
            (t.prototype.clear = function () {
              this.top = this.right = this.bottom = this.left = 0;
            }),
            t
          );
        })(),
        Zo = (function () {
          function t(t, e, o, n) {
            (this.x = t), (this.y = e), (this.width = o), (this.height = n);
          }
          return (
            (t.prototype.isValid = function () {
              return (
                isFinite(this.x) &&
                isFinite(this.y) &&
                isFinite(this.width) &&
                isFinite(this.height)
              );
            }),
            (t.prototype.dilate = function (t) {
              (this.x -= t),
                (this.y -= t),
                (this.width += 2 * t),
                (this.height += 2 * t);
            }),
            (t.prototype.containsPoint = function (t, e) {
              return (
                t >= this.x &&
                t <= this.x + this.width &&
                e >= this.y &&
                e <= this.y + this.height
              );
            }),
            (t.prototype.render = function (e, o) {
              void 0 === o && (o = t.noParams),
                e.save(),
                o.resetTransform && e.setTransform(1, 0, 0, 1, 0, 0),
                (e.strokeStyle = o.strokeStyle || "cyan"),
                (e.lineWidth = o.lineWidth || 1),
                e.strokeRect(this.x, this.y, this.width, this.height),
                o.label &&
                  ((e.fillStyle = o.fillStyle || "black"),
                  (e.textBaseline = "bottom"),
                  e.fillText(o.label, this.x, this.y)),
                e.restore();
            }),
            (t.noParams = {}),
            t
          );
        })(),
        $o = (function () {
          function t(t) {
            void 0 === t && (t = [1, 0, 0, 1, 0, 0]), (this.elements = t);
          }
          return (
            (t.prototype.setElements = function (t) {
              var e = this.elements;
              return (
                (e[0] = t[0]),
                (e[1] = t[1]),
                (e[2] = t[2]),
                (e[3] = t[3]),
                (e[4] = t[4]),
                (e[5] = t[5]),
                this
              );
            }),
            (t.prototype.setIdentityElements = function () {
              var t = this.elements;
              return (
                (t[0] = 1),
                (t[1] = 0),
                (t[2] = 0),
                (t[3] = 1),
                (t[4] = 0),
                (t[5] = 0),
                this
              );
            }),
            Object.defineProperty(t.prototype, "identity", {
              get: function () {
                var t = this.elements;
                return (
                  1 === t[0] &&
                  0 === t[1] &&
                  0 === t[2] &&
                  1 === t[3] &&
                  0 === t[4] &&
                  0 === t[5]
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "a", {
              get: function () {
                return this.elements[0];
              },
              set: function (t) {
                this.elements[0] = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "b", {
              get: function () {
                return this.elements[1];
              },
              set: function (t) {
                this.elements[1] = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "c", {
              get: function () {
                return this.elements[2];
              },
              set: function (t) {
                this.elements[2] = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "d", {
              get: function () {
                return this.elements[3];
              },
              set: function (t) {
                this.elements[3] = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "e", {
              get: function () {
                return this.elements[4];
              },
              set: function (t) {
                this.elements[4] = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "f", {
              get: function () {
                return this.elements[5];
              },
              set: function (t) {
                this.elements[5] = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.AxB = function (t, e, o) {
              var n = t[0],
                r = t[1],
                i = t[2],
                s = t[3],
                a = t[4],
                l = t[5],
                u = e[0],
                p = e[1],
                c = e[2],
                d = e[3],
                h = e[4],
                f = e[5];
              ((o = o || t)[0] = n * u + i * p),
                (o[1] = r * u + s * p),
                (o[2] = n * c + i * d),
                (o[3] = r * c + s * d),
                (o[4] = n * h + i * f + a),
                (o[5] = r * h + s * f + l);
            }),
            (t.prototype.multiplySelf = function (t) {
              return this.AxB(this.elements, t.elements), this;
            }),
            (t.prototype.multiply = function (e) {
              var o = new Array(6);
              return this.AxB(this.elements, e.elements, o), new t(o);
            }),
            (t.prototype.preMultiplySelf = function (t) {
              return this.AxB(t.elements, this.elements, this.elements), this;
            }),
            (t.prototype.inverse = function () {
              var e = this.elements,
                o = e[0],
                n = e[1],
                r = e[2],
                i = e[3],
                s = e[4],
                a = e[5],
                l = 1 / (o * i - n * r);
              return new t([
                (i *= l),
                -(n *= l),
                -(r *= l),
                (o *= l),
                r * a - i * s,
                n * s - o * a,
              ]);
            }),
            (t.prototype.inverseTo = function (t) {
              var e = this.elements,
                o = e[0],
                n = e[1],
                r = e[2],
                i = e[3],
                s = e[4],
                a = e[5],
                l = 1 / (o * i - n * r);
              return (
                t.setElements([
                  (i *= l),
                  -(n *= l),
                  -(r *= l),
                  (o *= l),
                  r * a - i * s,
                  n * s - o * a,
                ]),
                this
              );
            }),
            (t.prototype.invertSelf = function () {
              var t = this.elements,
                e = t[0],
                o = t[1],
                n = t[2],
                r = t[3],
                i = t[4],
                s = t[5],
                a = 1 / (e * r - o * n);
              return (
                (e *= a),
                (o *= a),
                (n *= a),
                (t[0] = r *= a),
                (t[1] = -o),
                (t[2] = -n),
                (t[3] = e),
                (t[4] = n * s - r * i),
                (t[5] = o * i - e * s),
                this
              );
            }),
            (t.prototype.clone = function () {
              return new t(this.elements.slice());
            }),
            (t.prototype.transformPoint = function (t, e) {
              var o = this.elements;
              return {
                x: t * o[0] + e * o[2] + o[4],
                y: t * o[1] + e * o[3] + o[5],
              };
            }),
            (t.prototype.transformBBox = function (t, e, o) {
              void 0 === e && (e = 0);
              var n,
                r,
                i = this.elements,
                s = i[0],
                a = i[1],
                l = i[2],
                u = i[3],
                p = 0.5 * t.width,
                c = 0.5 * t.height,
                d = t.x + p,
                h = t.y + c;
              if (e) {
                (p -= e), (c -= e);
                var f = Math.sqrt(s * s + l * l),
                  g = Math.sqrt(a * a + u * u);
                (n = Math.abs(p * s) + Math.abs(c * l) + Math.abs(f * e)),
                  (r = Math.abs(p * a) + Math.abs(c * u) + Math.abs(g * e));
              } else
                (n = Math.abs(p * s) + Math.abs(c * l)),
                  (r = Math.abs(p * a) + Math.abs(c * u));
              return (
                o || (o = new Zo(0, 0, 0, 0)),
                (o.x = d * s + h * l + i[4] - n),
                (o.y = d * a + h * u + i[5] - r),
                (o.width = n + n),
                (o.height = r + r),
                o
              );
            }),
            (t.prototype.toContext = function (t) {
              if (!this.identity) {
                var e = this.elements;
                t.transform(e[0], e[1], e[2], e[3], e[4], e[5]);
              }
            }),
            (t.flyweight = function (e) {
              return (
                e
                  ? t.matrix.setElements(e instanceof t ? e.elements : e)
                  : t.matrix.setIdentityElements(),
                t.matrix
              );
            }),
            (t.matrix = new t()),
            t
          );
        })();
      function Jo(t) {
        var e = t.constructor,
          o = e.className;
        if (!o)
          throw new Error("The " + e + " is missing the 'className' property.");
        return o + "-" + (e.id = (e.id || 0) + 1);
      }
      !(function (t) {
        (t[(t.All = 0)] = "All"), (t[(t.None = 1)] = "None");
      })(To || (To = {}));
      var tn = (function () {
        function t() {
          (this.id = Jo(this)),
            (this.tag = NaN),
            (this.isContainerNode = !1),
            (this._children = []),
            (this.childSet = {}),
            (this.matrix = new $o()),
            (this.inverseMatrix = new $o()),
            (this._dirtyTransform = !1),
            (this._scalingX = 1),
            (this._scalingY = 1),
            (this._scalingCenterX = null),
            (this._scalingCenterY = null),
            (this._rotationCenterX = null),
            (this._rotationCenterY = null),
            (this._rotation = 0),
            (this._translationX = 0),
            (this._translationY = 0),
            (this._dirty = !0),
            (this._visible = !0),
            (this.pointerEvents = To.All);
        }
        return (
          (t.isNode = function (t) {
            return !!t && void 0 !== t.matrix;
          }),
          (t.prototype._setScene = function (t) {
            this._scene = t;
            for (var e = this.children, o = e.length, n = 0; n < o; n++)
              e[n]._setScene(t);
          }),
          Object.defineProperty(t.prototype, "scene", {
            get: function () {
              return this._scene;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (t.prototype._setParent = function (t) {
            this._parent = t;
          }),
          Object.defineProperty(t.prototype, "parent", {
            get: function () {
              return this._parent;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "children", {
            get: function () {
              return this._children;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (t.prototype.countChildren = function (e) {
            if ((void 0 === e && (e = t.MAX_SAFE_INTEGER), e <= 0)) return 0;
            for (var o = this.children, n = o.length, r = n, i = 0; i < n; i++)
              r += o[i].countChildren(e - 1);
            return r;
          }),
          (t.prototype.append = function (e) {
            t.isNode(e) && (e = [e]);
            for (var o = e.length, n = 0; n < o; n++) {
              var r = e[n];
              if (r.parent)
                throw new Error(
                  r + " already belongs to another parent: " + r.parent + "."
                );
              if (r.scene)
                throw new Error(
                  r + " already belongs a scene: " + r.scene + "."
                );
              if (this.childSet[r.id])
                throw new Error(
                  "Duplicate " + r.constructor.name + " node: " + r
                );
              this._children.push(r),
                (this.childSet[r.id] = !0),
                r._setParent(this),
                r._setScene(this.scene);
            }
            this.dirty = !0;
          }),
          (t.prototype.appendChild = function (t) {
            if (t.parent)
              throw new Error(
                t + " already belongs to another parent: " + t.parent + "."
              );
            if (t.scene)
              throw new Error(t + " already belongs a scene: " + t.scene + ".");
            if (this.childSet[t.id])
              throw new Error(
                "Duplicate " + t.constructor.name + " node: " + t
              );
            return (
              this._children.push(t),
              (this.childSet[t.id] = !0),
              t._setParent(this),
              t._setScene(this.scene),
              (this.dirty = !0),
              t
            );
          }),
          (t.prototype.removeChild = function (t) {
            if (t.parent === this) {
              var e = this.children.indexOf(t);
              if (e >= 0)
                return (
                  this._children.splice(e, 1),
                  delete this.childSet[t.id],
                  t._setParent(),
                  t._setScene(),
                  (this.dirty = !0),
                  t
                );
            }
            throw new Error(
              "The node to be removed is not a child of this node."
            );
          }),
          (t.prototype.insertBefore = function (t, e) {
            var o = t.parent;
            if ((t.parent && t.parent.removeChild(t), e && e.parent === this)) {
              var n = this.children.indexOf(e);
              if (!(n >= 0))
                throw new Error(
                  e +
                    " has " +
                    o +
                    " as the parent, but is not in its list of children."
                );
              this._children.splice(n, 0, t),
                (this.childSet[t.id] = !0),
                t._setParent(this),
                t._setScene(this.scene),
                (this.dirty = !0);
            } else this.append(t);
            return t;
          }),
          Object.defineProperty(t.prototype, "nextSibling", {
            get: function () {
              var t = this.parent;
              if (t) {
                var e = t.children,
                  o = e.indexOf(this);
                if (o >= 0 && o <= e.length - 1) return e[o + 1];
              }
            },
            enumerable: !0,
            configurable: !0,
          }),
          (t.prototype.transformPoint = function (t, e) {
            for (var o = $o.flyweight(this.matrix), n = this.parent; n; )
              o.preMultiplySelf(n.matrix), (n = n.parent);
            return o.invertSelf().transformPoint(t, e);
          }),
          (t.prototype.inverseTransformPoint = function (t, e) {
            for (var o = $o.flyweight(this.matrix), n = this.parent; n; )
              o.preMultiplySelf(n.matrix), (n = n.parent);
            return o.transformPoint(t, e);
          }),
          Object.defineProperty(t.prototype, "dirtyTransform", {
            get: function () {
              return this._dirtyTransform;
            },
            set: function (t) {
              (this._dirtyTransform = t), t && (this.dirty = !0);
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "scalingX", {
            get: function () {
              return this._scalingX;
            },
            set: function (t) {
              this._scalingX !== t &&
                ((this._scalingX = t), (this.dirtyTransform = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "scalingY", {
            get: function () {
              return this._scalingY;
            },
            set: function (t) {
              this._scalingY !== t &&
                ((this._scalingY = t), (this.dirtyTransform = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "scalingCenterX", {
            get: function () {
              return this._scalingCenterX;
            },
            set: function (t) {
              this._scalingCenterX !== t &&
                ((this._scalingCenterX = t), (this.dirtyTransform = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "scalingCenterY", {
            get: function () {
              return this._scalingCenterY;
            },
            set: function (t) {
              this._scalingCenterY !== t &&
                ((this._scalingCenterY = t), (this.dirtyTransform = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "rotationCenterX", {
            get: function () {
              return this._rotationCenterX;
            },
            set: function (t) {
              this._rotationCenterX !== t &&
                ((this._rotationCenterX = t), (this.dirtyTransform = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "rotationCenterY", {
            get: function () {
              return this._rotationCenterY;
            },
            set: function (t) {
              this._rotationCenterY !== t &&
                ((this._rotationCenterY = t), (this.dirtyTransform = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "rotation", {
            get: function () {
              return this._rotation;
            },
            set: function (t) {
              this._rotation !== t &&
                ((this._rotation = t), (this.dirtyTransform = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "rotationDeg", {
            get: function () {
              return (this.rotation / Math.PI) * 180;
            },
            set: function (t) {
              this.rotation = (t / 180) * Math.PI;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "translationX", {
            get: function () {
              return this._translationX;
            },
            set: function (t) {
              this._translationX !== t &&
                ((this._translationX = t), (this.dirtyTransform = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "translationY", {
            get: function () {
              return this._translationY;
            },
            set: function (t) {
              this._translationY !== t &&
                ((this._translationY = t), (this.dirtyTransform = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          (t.prototype.containsPoint = function (t, e) {
            return !1;
          }),
          (t.prototype.pickNode = function (t, e) {
            if (
              this.visible &&
              this.pointerEvents !== To.None &&
              this.containsPoint(t, e)
            ) {
              var o = this.children;
              if (o.length)
                for (var n = o.length - 1; n >= 0; n--) {
                  var r = o[n].pickNode(t, e);
                  if (r) return r;
                }
              else if (!this.isContainerNode) return this;
            }
          }),
          (t.prototype.computeBBox = function () {}),
          (t.prototype.computeBBoxCenter = function () {
            var t = this.computeBBox && this.computeBBox();
            return t ? [t.x + 0.5 * t.width, t.y + 0.5 * t.height] : [0, 0];
          }),
          (t.prototype.computeTransformMatrix = function () {
            var t,
              e,
              o = [0, 0],
              n = o[0],
              r = o[1],
              i = this.scalingX,
              s = this.scalingY;
            1 === i && 1 === s
              ? ((t = 0), (e = 0))
              : ((t = null === this.scalingCenterX ? n : this.scalingCenterX),
                (e = null === this.scalingCenterY ? r : this.scalingCenterY));
            var a,
              l,
              u = this.rotation,
              p = Math.cos(u),
              c = Math.sin(u);
            0 === u
              ? ((a = 0), (l = 0))
              : ((a = null === this.rotationCenterX ? n : this.rotationCenterX),
                (l = null === this.rotationCenterY ? r : this.rotationCenterY));
            var d = this.translationX,
              h = this.translationY,
              f = t * (1 - i) - a,
              g = e * (1 - s) - l;
            (this.dirtyTransform = !1),
              this.matrix
                .setElements([
                  p * i,
                  c * i,
                  -c * s,
                  p * s,
                  p * f - c * g + a + d,
                  c * f + p * g + l + h,
                ])
                .inverseTo(this.inverseMatrix);
          }),
          Object.defineProperty(t.prototype, "dirty", {
            get: function () {
              return this._dirty;
            },
            set: function (t) {
              (this._dirty = t),
                t &&
                  (this.parent
                    ? (this.parent.dirty = !0)
                    : this.scene && (this.scene.dirty = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(t.prototype, "visible", {
            get: function () {
              return this._visible;
            },
            set: function (t) {
              this._visible !== t && ((this._visible = t), (this.dirty = !0));
            },
            enumerable: !0,
            configurable: !0,
          }),
          (t.MAX_SAFE_INTEGER = Math.pow(2, 53) - 1),
          t
        );
      })();
      function en(t, e) {
        var o = Object.create(t);
        for (var n in e) e.hasOwnProperty(n) && (o[n] = e[n]);
        return o;
      }
      function on(t, e) {
        var o = Array.isArray(e) ? e : e.split("."),
          n = t;
        return (
          o.forEach(function (t) {
            n = n[t];
          }),
          n
        );
      }
      function nn(t, e) {
        return !1 !== e.clone && e.isMergeableObject(t)
          ? un(
              (function (t) {
                return Array.isArray(t) ? [] : {};
              })(t),
              t,
              e
            )
          : t;
      }
      function rn(t, e, o) {
        return t.concat(e).map(function (t) {
          return nn(t, o);
        });
      }
      function sn(t) {
        return Object.keys(t).concat(
          (function (t) {
            return Object.getOwnPropertySymbols
              ? Object.getOwnPropertySymbols(t).filter(function (e) {
                  return t.propertyIsEnumerable(e);
                })
              : [];
          })(t)
        );
      }
      function an(t, e) {
        try {
          return e in t;
        } catch (o) {
          return !1;
        }
      }
      function ln(t) {
        return (
          (function (t) {
            return !!t && "object" == typeof t;
          })(t) &&
          !(function (t) {
            var e = Object.prototype.toString.call(t);
            return "[object RegExp]" === e || "[object Date]" === e;
          })(t)
        );
      }
      function un(t, e, o) {
        ((o = o || {}).arrayMerge = o.arrayMerge || rn),
          (o.isMergeableObject = o.isMergeableObject || ln),
          (o.cloneUnlessOtherwiseSpecified = nn);
        var n = Array.isArray(e);
        return n === Array.isArray(t)
          ? n
            ? o.arrayMerge(t, e, o)
            : (function (t, e, o) {
                var n = {};
                return (
                  o.isMergeableObject(t) &&
                    sn(t).forEach(function (e) {
                      n[e] = nn(t[e], o);
                    }),
                  sn(e).forEach(function (r) {
                    (function (t, e) {
                      return (
                        an(t, e) &&
                        !(
                          Object.hasOwnProperty.call(t, e) &&
                          Object.propertyIsEnumerable.call(t, e)
                        )
                      );
                    })(t, r) ||
                      (n[r] =
                        an(t, r) && o.isMergeableObject(e[r])
                          ? (function (t, e) {
                              if (!e.customMerge) return un;
                              var o = e.customMerge(t);
                              return "function" == typeof o ? o : un;
                            })(r, o)(t[r], e[r], o)
                          : nn(e[r], o));
                  }),
                  n
                );
              })(t, e, o)
          : nn(e, o);
      }
      function pn(t) {
        return "object" == typeof t && !Array.isArray(t);
      }
      var cn = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        dn = (function (t) {
          function e() {
            var o = (null !== t && t.apply(this, arguments)) || this;
            return (
              (o.lastInstanceId = 0),
              (o._fillOpacity = 1),
              (o._strokeOpacity = 1),
              (o._fill = e.defaultStyles.fill),
              (o._stroke = e.defaultStyles.stroke),
              (o._strokeWidth = e.defaultStyles.strokeWidth),
              (o._lineDash = e.defaultStyles.lineDash),
              (o._lineDashOffset = e.defaultStyles.lineDashOffset),
              (o._lineCap = e.defaultStyles.lineCap),
              (o._lineJoin = e.defaultStyles.lineJoin),
              (o._opacity = e.defaultStyles.opacity),
              (o.onShadowChange = function () {
                o.dirty = !0;
              }),
              (o._fillShadow = e.defaultStyles.fillShadow),
              (o._strokeShadow = e.defaultStyles.strokeShadow),
              o
            );
          }
          return (
            cn(e, t),
            (e.createInstance = function (t) {
              var e = Object.create(t);
              return (
                e._setParent(void 0),
                (e.id = t.id + "-Instance-" + String(++t.lastInstanceId)),
                e
              );
            }),
            (e.prototype.restoreOwnStyles = function () {
              for (
                var t = this.constructor.defaultStyles,
                  e = Object.getOwnPropertyNames(t),
                  o = 0,
                  n = e.length;
                o < n;
                o++
              ) {
                var r = e[o];
                this[r] = t[r];
              }
            }),
            (e.prototype.restoreAllStyles = function () {
              var t = this.constructor.defaultStyles;
              for (var e in t) this[e] = t[e];
            }),
            (e.prototype.restoreOverriddenStyles = function () {
              var t = this.constructor.defaultStyles,
                e = Object.getPrototypeOf(t);
              for (var o in t)
                t.hasOwnProperty(o) && e.hasOwnProperty(o) && (this[o] = t[o]);
            }),
            Object.defineProperty(e.prototype, "fillOpacity", {
              get: function () {
                return this._fillOpacity;
              },
              set: function (t) {
                this._fillOpacity !== t &&
                  ((this._fillOpacity = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokeOpacity", {
              get: function () {
                return this._strokeOpacity;
              },
              set: function (t) {
                this._strokeOpacity !== t &&
                  ((this._strokeOpacity = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fill", {
              get: function () {
                return this._fill;
              },
              set: function (t) {
                this._fill !== t && ((this._fill = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "stroke", {
              get: function () {
                return this._stroke;
              },
              set: function (t) {
                this._stroke !== t && ((this._stroke = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokeWidth", {
              get: function () {
                return this._strokeWidth;
              },
              set: function (t) {
                this._strokeWidth !== t &&
                  ((this._strokeWidth = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "alignment", {
              get: function () {
                return (Math.floor(this.strokeWidth) % 2) / 2;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.align = function (t, e, o) {
              return null != o
                ? Math.floor(o) + Math.floor((e % 1) + (o % 1))
                : Math.floor(e) + t;
            }),
            Object.defineProperty(e.prototype, "lineDash", {
              get: function () {
                return this._lineDash;
              },
              set: function (t) {
                var e = this._lineDash;
                if (e !== t) {
                  if (e && t && e.length === t.length) {
                    for (var o = !0, n = t.length, r = 0; r < n; r++)
                      if (e[r] !== t[r]) {
                        o = !1;
                        break;
                      }
                    if (o) return;
                  }
                  (this._lineDash = t), (this.dirty = !0);
                }
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "lineDashOffset", {
              get: function () {
                return this._lineDashOffset;
              },
              set: function (t) {
                this._lineDashOffset !== t &&
                  ((this._lineDashOffset = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "lineCap", {
              get: function () {
                return this._lineCap;
              },
              set: function (t) {
                this._lineCap !== t && ((this._lineCap = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "lineJoin", {
              get: function () {
                return this._lineJoin;
              },
              set: function (t) {
                this._lineJoin !== t &&
                  ((this._lineJoin = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "opacity", {
              get: function () {
                return this._opacity;
              },
              set: function (t) {
                (t = Math.min(1, Math.max(0, t))),
                  this._opacity !== t &&
                    ((this._opacity = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fillShadow", {
              get: function () {
                return this._fillShadow;
              },
              set: function (t) {
                var e = this._fillShadow;
                e !== t &&
                  (e && e.removeEventListener("change", this.onShadowChange),
                  t && t.addEventListener("change", this.onShadowChange),
                  (this._fillShadow = t),
                  (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokeShadow", {
              get: function () {
                return this._strokeShadow;
              },
              set: function (t) {
                var e = this._strokeShadow;
                e !== t &&
                  (e && e.removeEventListener("change", this.onShadowChange),
                  t && t.addEventListener("change", this.onShadowChange),
                  (this._strokeShadow = t),
                  (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.fillStroke = function (t) {
              if (this.scene) {
                var e = this.scene.canvas.pixelRatio || 1;
                if (this.fill) {
                  (t.fillStyle = this.fill),
                    (t.globalAlpha = this.opacity * this.fillOpacity);
                  var o = this.fillShadow;
                  o &&
                    o.enabled &&
                    ((t.shadowColor = o.color),
                    (t.shadowOffsetX = o.xOffset * e),
                    (t.shadowOffsetY = o.yOffset * e),
                    (t.shadowBlur = o.blur * e)),
                    t.fill();
                }
                if (
                  ((t.shadowColor = "rgba(0, 0, 0, 0)"),
                  this.stroke && this.strokeWidth)
                ) {
                  (t.strokeStyle = this.stroke),
                    (t.globalAlpha = this.opacity * this.strokeOpacity),
                    (t.lineWidth = this.strokeWidth),
                    this.lineDash && t.setLineDash(this.lineDash),
                    this.lineDashOffset &&
                      (t.lineDashOffset = this.lineDashOffset),
                    this.lineCap && (t.lineCap = this.lineCap),
                    this.lineJoin && (t.lineJoin = this.lineJoin);
                  var n = this.strokeShadow;
                  n &&
                    n.enabled &&
                    ((t.shadowColor = n.color),
                    (t.shadowOffsetX = n.xOffset * e),
                    (t.shadowOffsetY = n.yOffset * e),
                    (t.shadowBlur = n.blur * e)),
                    t.stroke();
                }
              }
            }),
            (e.prototype.containsPoint = function (t, e) {
              return this.isPointInPath(t, e);
            }),
            (e.defaultStyles = en(
              {},
              {
                fill: "black",
                stroke: void 0,
                strokeWidth: 0,
                lineDash: void 0,
                lineDashOffset: 0,
                lineCap: void 0,
                lineJoin: void 0,
                opacity: 1,
                fillShadow: void 0,
                strokeShadow: void 0,
              }
            )),
            e
          );
        })(tn),
        hn = (function () {
          function t(t, e, o) {
            void 0 === t && (t = window.document),
              void 0 === e && (e = 600),
              void 0 === o && (o = 300),
              (this._container = void 0),
              (this._pixelRatio = NaN),
              (this.document = t),
              (this.element = t.createElement("canvas")),
              (this.context = this.element.getContext("2d")),
              (this.element.style.userSelect = "none"),
              (this.element.style.display = "block"),
              this.setPixelRatio(),
              this.resize(e, o);
          }
          return (
            Object.defineProperty(t.prototype, "container", {
              get: function () {
                return this._container;
              },
              set: function (t) {
                this._container !== t &&
                  (this.remove(),
                  t && t.appendChild(this.element),
                  (this._container = t));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.remove = function () {
              var t = this.element.parentNode;
              null != t && t.removeChild(this.element);
            }),
            (t.prototype.destroy = function () {
              this.element.remove(),
                (this._canvas = void 0),
                Object.freeze(this);
            }),
            (t.prototype.toImage = function () {
              var t = this.document.createElement("img");
              return (t.src = this.getDataURL()), t;
            }),
            (t.prototype.getDataURL = function (t) {
              return this.element.toDataURL(t);
            }),
            (t.prototype.download = function (t) {
              t = ((t || "").trim() || "image") + ".png";
              var e = "image/png",
                o = this.getDataURL(e),
                n = this.document;
              if (navigator.msSaveOrOpenBlob) {
                for (
                  var r = atob(o.split(",")[1]), i = [], s = 0, a = r.length;
                  s < a;
                  s++
                )
                  i.push(r.charCodeAt(s));
                var l = new Blob([new Uint8Array(i)], { type: e });
                navigator.msSaveOrOpenBlob(l, t);
              } else {
                var u = n.createElement("a");
                (u.href = o),
                  (u.download = t),
                  (u.style.display = "none"),
                  n.body.appendChild(u),
                  u.click(),
                  n.body.removeChild(u);
              }
            }),
            Object.defineProperty(t.prototype, "pixelRatio", {
              get: function () {
                return this._pixelRatio;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.setPixelRatio = function (e) {
              var o = e || window.devicePixelRatio;
              o !== this.pixelRatio &&
                (t.overrideScale(this.context, o),
                (this._pixelRatio = o),
                this.resize(this.width, this.height));
            }),
            Object.defineProperty(t.prototype, "pixelated", {
              get: function () {
                return "pixelated" === this.element.style.imageRendering;
              },
              set: function (t) {
                this.element.style.imageRendering = t ? "pixelated" : "auto";
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "width", {
              get: function () {
                return this._width;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "height", {
              get: function () {
                return this._height;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.resize = function (t, e) {
              var o = this,
                n = o.element,
                r = o.context,
                i = o.pixelRatio;
              (n.width = Math.round(t * i)),
                (n.height = Math.round(e * i)),
                (n.style.width = t + "px"),
                (n.style.height = e + "px"),
                r.resetTransform(),
                (this._width = t),
                (this._height = e);
            }),
            Object.defineProperty(t, "textMeasuringContext", {
              get: function () {
                if (this._textMeasuringContext)
                  return this._textMeasuringContext;
                var t = document.createElement("canvas");
                return (this._textMeasuringContext = t.getContext("2d"));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t, "svgText", {
              get: function () {
                if (this._svgText) return this._svgText;
                var t = "http://www.w3.org/2000/svg",
                  e = document.createElementNS(t, "svg");
                e.setAttribute("width", "100"),
                  e.setAttribute("height", "100"),
                  e.classList
                    ? e.classList.add("text-measuring-svg")
                    : e.setAttribute("class", "text-measuring-svg"),
                  (e.style.position = "absolute"),
                  (e.style.top = "-1000px"),
                  (e.style.visibility = "hidden");
                var o = document.createElementNS(t, "text");
                return (
                  o.setAttribute("x", "0"),
                  o.setAttribute("y", "30"),
                  o.setAttribute("text", "black"),
                  e.appendChild(o),
                  document.body.appendChild(e),
                  (this._svgText = o),
                  o
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t, "has", {
              get: function () {
                return this._has
                  ? this._has
                  : (this._has = Object.freeze({
                      textMetrics:
                        void 0 !==
                          this.textMeasuringContext.measureText("test")
                            .actualBoundingBoxDescent &&
                        !/Firefox\/\d+(.\d)+/.test(window.navigator.userAgent),
                      getTransform:
                        void 0 !== this.textMeasuringContext.getTransform,
                    }));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.measureText = function (t, e, o, n) {
              var r = this.textMeasuringContext;
              return (
                (r.font = e),
                (r.textBaseline = o),
                (r.textAlign = n),
                r.measureText(t)
              );
            }),
            (t.getTextSize = function (t, e) {
              if (this.has.textMetrics) {
                var o = this.textMeasuringContext;
                o.font = e;
                var n = o.measureText(t);
                return {
                  width: n.width,
                  height:
                    n.actualBoundingBoxAscent + n.actualBoundingBoxDescent,
                };
              }
              return this.measureSvgText(t, e);
            }),
            (t.measureSvgText = function (t, e) {
              var o = this.textSizeCache,
                n = o[e];
              if (n) {
                var r = n[t];
                if (r) return r;
              } else o[e] = {};
              var i = this.svgText;
              (i.style.font = e), (i.textContent = t);
              var s = i.getBBox(),
                a = { width: s.width, height: s.height };
              return (o[e][t] = a), a;
            }),
            (t.overrideScale = function (t, e) {
              var o = 0,
                n = {
                  save: function () {
                    this.$save(), o++;
                  },
                  restore: function () {
                    o > 0 && (this.$restore(), o--);
                  },
                  setTransform: function (t, o, n, r, i, s) {
                    this.$setTransform(
                      t * e,
                      o * e,
                      n * e,
                      r * e,
                      i * e,
                      s * e
                    );
                  },
                  resetTransform: function () {
                    this.$setTransform(e, 0, 0, e, 0, 0), this.save(), (o = 0);
                  },
                };
              for (var r in n)
                n.hasOwnProperty(r) &&
                  (t["$" + r] || (t["$" + r] = t[r]), (t[r] = n[r]));
            }),
            (t.textSizeCache = {}),
            t
          );
        })(),
        fn = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        gn = (function (t) {
          function e() {
            var o = (null !== t && t.apply(this, arguments)) || this;
            return (
              (o._x = 0),
              (o._y = 0),
              (o.lineBreakRegex = /\r?\n/g),
              (o.lines = []),
              (o._text = ""),
              (o._dirtyFont = !0),
              (o._fontSize = 10),
              (o._fontFamily = "sans-serif"),
              (o._textAlign = e.defaultStyles.textAlign),
              (o._textBaseline = e.defaultStyles.textBaseline),
              (o._lineHeight = 14),
              o
            );
          }
          return (
            fn(e, t),
            Object.defineProperty(e.prototype, "x", {
              get: function () {
                return this._x;
              },
              set: function (t) {
                this._x !== t && ((this._x = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "y", {
              get: function () {
                return this._y;
              },
              set: function (t) {
                this._y !== t && ((this._y = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.splitText = function () {
              this.lines = this._text.split(this.lineBreakRegex);
            }),
            Object.defineProperty(e.prototype, "text", {
              get: function () {
                return this._text;
              },
              set: function (t) {
                var e = String(t);
                this._text !== e &&
                  ((this._text = e), this.splitText(), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "font", {
              get: function () {
                return (
                  this.dirtyFont &&
                    ((this.dirtyFont = !1),
                    (this._font = [
                      this.fontStyle || "",
                      this.fontWeight || "",
                      this.fontSize + "px",
                      this.fontFamily,
                    ]
                      .join(" ")
                      .trim())),
                  this._font
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "dirtyFont", {
              get: function () {
                return this._dirtyFont;
              },
              set: function (t) {
                this._dirtyFont !== t &&
                  ((this._dirtyFont = t), t && (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontStyle", {
              get: function () {
                return this._fontStyle;
              },
              set: function (t) {
                this._fontStyle !== t &&
                  ((this._fontStyle = t), (this.dirtyFont = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontWeight", {
              get: function () {
                return this._fontWeight;
              },
              set: function (t) {
                this._fontWeight !== t &&
                  ((this._fontWeight = t), (this.dirtyFont = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontSize", {
              get: function () {
                return this._fontSize;
              },
              set: function (t) {
                isFinite(t) || (t = 10),
                  this._fontSize !== t &&
                    ((this._fontSize = t), (this.dirtyFont = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontFamily", {
              get: function () {
                return this._fontFamily;
              },
              set: function (t) {
                this._fontFamily !== t &&
                  ((this._fontFamily = t), (this.dirtyFont = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "textAlign", {
              get: function () {
                return this._textAlign;
              },
              set: function (t) {
                this._textAlign !== t &&
                  ((this._textAlign = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "textBaseline", {
              get: function () {
                return this._textBaseline;
              },
              set: function (t) {
                this._textBaseline !== t &&
                  ((this._textBaseline = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "lineHeight", {
              get: function () {
                return this._lineHeight;
              },
              set: function (t) {
                this._lineHeight !== t &&
                  ((this._lineHeight = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.computeBBox = function () {
              return hn.has.textMetrics
                ? this.getPreciseBBox()
                : this.getApproximateBBox();
            }),
            (e.prototype.getPreciseBBox = function () {
              var t = hn.measureText(
                this.text,
                this.font,
                this.textBaseline,
                this.textAlign
              );
              return new Zo(
                this.x - t.actualBoundingBoxLeft,
                this.y - t.actualBoundingBoxAscent,
                t.width,
                t.actualBoundingBoxAscent + t.actualBoundingBoxDescent
              );
            }),
            (e.prototype.getApproximateBBox = function () {
              var t = hn.getTextSize(this.text, this.font),
                e = this.x,
                o = this.y;
              switch (this.textAlign) {
                case "end":
                case "right":
                  e -= t.width;
                  break;
                case "center":
                  e -= t.width / 2;
              }
              switch (this.textBaseline) {
                case "alphabetic":
                  o -= 0.7 * t.height;
                  break;
                case "middle":
                  o -= 0.45 * t.height;
                  break;
                case "ideographic":
                  o -= t.height;
                  break;
                case "hanging":
                  o -= 0.2 * t.height;
                  break;
                case "bottom":
                  o -= t.height;
              }
              return new Zo(e, o, t.width, t.height);
            }),
            (e.prototype.isPointInPath = function (t, e) {
              var o = this.transformPoint(t, e),
                n = this.computeBBox();
              return !!n && n.containsPoint(o.x, o.y);
            }),
            (e.prototype.isPointInStroke = function (t, e) {
              return !1;
            }),
            (e.prototype.render = function (t) {
              if (this.lines.length && this.scene) {
                this.dirtyTransform && this.computeTransformMatrix(),
                  this.matrix.toContext(t);
                var e = this,
                  o = e.fill,
                  n = e.stroke,
                  r = e.strokeWidth;
                (t.font = this.font),
                  (t.textAlign = this.textAlign),
                  (t.textBaseline = this.textBaseline);
                var i = this.scene.canvas.pixelRatio || 1;
                if (o) {
                  (t.fillStyle = o),
                    (t.globalAlpha = this.opacity * this.fillOpacity);
                  var s = this,
                    a = s.fillShadow,
                    l = s.text,
                    u = s.x,
                    p = s.y;
                  a &&
                    a.enabled &&
                    ((t.shadowColor = a.color),
                    (t.shadowOffsetX = a.xOffset * i),
                    (t.shadowOffsetY = a.yOffset * i),
                    (t.shadowBlur = a.blur * i)),
                    t.fillText(l, u, p);
                }
                if (n && r) {
                  (t.strokeStyle = n),
                    (t.lineWidth = r),
                    (t.globalAlpha = this.opacity * this.strokeOpacity);
                  var c = this,
                    d = c.lineDash,
                    h = c.lineDashOffset,
                    f = c.lineCap,
                    g = c.lineJoin,
                    y = c.strokeShadow;
                  (l = c.text),
                    (u = c.x),
                    (p = c.y),
                    d && t.setLineDash(d),
                    h && (t.lineDashOffset = h),
                    f && (t.lineCap = f),
                    g && (t.lineJoin = g),
                    y &&
                      y.enabled &&
                      ((t.shadowColor = y.color),
                      (t.shadowOffsetX = y.xOffset * i),
                      (t.shadowOffsetY = y.yOffset * i),
                      (t.shadowBlur = y.blur * i)),
                    t.strokeText(l, u, p);
                }
                this.dirty = !1;
              }
            }),
            (e.className = "Text"),
            (e.defaultStyles = en(dn.defaultStyles, {
              textAlign: "start",
              fontStyle: void 0,
              fontWeight: void 0,
              fontSize: 10,
              fontFamily: "sans-serif",
              textBaseline: "alphabetic",
            })),
            e
          );
        })(dn),
        yn = function () {
          return (yn =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        mn = (function () {
          function t() {
            (this.allPropertyListeners = new Map()),
              (this.allEventListeners = new Map());
          }
          return (
            (t.prototype.addPropertyListener = function (t, e, o) {
              void 0 === o && (o = this);
              var n = this.allPropertyListeners,
                r = n.get(t);
              if ((r || ((r = new Map()), n.set(t, r)), !r.has(e))) {
                var i = new Set();
                r.set(e, i);
              }
              var s = r.get(e);
              s && s.add(o);
            }),
            (t.prototype.removePropertyListener = function (t, e, o) {
              void 0 === o && (o = this);
              var n = this.allPropertyListeners.get(t);
              if (n)
                if (e) {
                  var r = n.get(e);
                  r && (r.delete(o), r.size || n.delete(e));
                } else n.clear();
            }),
            (t.prototype.notifyPropertyListeners = function (t, e, o) {
              var n = this,
                r = this.allPropertyListeners.get(t);
              r &&
                r.forEach(function (r, i) {
                  r.forEach(function (r) {
                    return i.call(r, {
                      type: t,
                      source: n,
                      value: o,
                      oldValue: e,
                    });
                  });
                });
            }),
            (t.prototype.addEventListener = function (t, e, o) {
              void 0 === o && (o = this);
              var n = this.allEventListeners,
                r = n.get(t);
              if ((r || ((r = new Map()), n.set(t, r)), !r.has(e))) {
                var i = new Set();
                r.set(e, i);
              }
              var s = r.get(e);
              s && s.add(o);
            }),
            (t.prototype.removeEventListener = function (t, e, o) {
              void 0 === o && (o = this);
              var n = this.allEventListeners.get(t);
              if (n)
                if (e) {
                  var r = n.get(e);
                  r && (r.delete(o), r.size || n.delete(e));
                } else n.clear();
            }),
            (t.prototype.notifyEventListeners = function (t) {
              var e = this,
                o = this.allEventListeners;
              t.forEach(function (t) {
                var n = o.get(t);
                n &&
                  n.forEach(function (o, n) {
                    o.forEach(function (o) {
                      return n.call(o, { type: t, source: e });
                    });
                  });
              });
            }),
            (t.prototype.fireEvent = function (t) {
              var e = this,
                o = this.allEventListeners.get(t.type);
              o &&
                o.forEach(function (o, n) {
                  o.forEach(function (o) {
                    return n.call(o, yn(yn({}, t), { source: e }));
                  });
                });
            }),
            (t.privateKeyPrefix = "_"),
            t
          );
        })();
      function vn() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        return function (e, o) {
          var n = mn.privateKeyPrefix + o,
            r = n + "Events";
          e[o] ||
            (t && (e[r] = t),
            Object.defineProperty(e, o, {
              set: function (t) {
                var e = this[n];
                if (t !== e || ("object" == typeof t && null !== t)) {
                  (this[n] = t), this.notifyPropertyListeners(o, e, t);
                  var i = this[r];
                  i && this.notifyEventListeners(i);
                }
              },
              get: function () {
                return this[n];
              },
              enumerable: !0,
              configurable: !0,
            }));
        };
      }
      var Cn = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wn = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        bn = (function (t) {
          function e() {
            var e = t.call(this) || this;
            (e.node = new gn()), (e.enabled = !1), (e.padding = new Qo(10));
            var o = e.node;
            return (
              (o.textAlign = "center"),
              (o.textBaseline = "top"),
              (o.pointerEvents = To.None),
              e
            );
          }
          return (
            Cn(e, t),
            Object.defineProperty(e.prototype, "text", {
              get: function () {
                return this.node.text;
              },
              set: function (t) {
                this.node.text !== t &&
                  ((this.node.text = t), this.fireEvent({ type: "change" }));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontStyle", {
              get: function () {
                return this.node.fontStyle;
              },
              set: function (t) {
                this.node.fontStyle !== t &&
                  ((this.node.fontStyle = t),
                  this.fireEvent({ type: "change" }));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontWeight", {
              get: function () {
                return this.node.fontWeight;
              },
              set: function (t) {
                this.node.fontWeight !== t &&
                  ((this.node.fontWeight = t),
                  this.fireEvent({ type: "change" }));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontSize", {
              get: function () {
                return this.node.fontSize;
              },
              set: function (t) {
                this.node.fontSize !== t &&
                  ((this.node.fontSize = t),
                  this.fireEvent({ type: "change" }));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontFamily", {
              get: function () {
                return this.node.fontFamily;
              },
              set: function (t) {
                this.node.fontFamily !== t &&
                  ((this.node.fontFamily = t),
                  this.fireEvent({ type: "change" }));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "color", {
              get: function () {
                return this.node.fill;
              },
              set: function (t) {
                this.node.fill !== t &&
                  ((this.node.fill = t), this.fireEvent({ type: "change" }));
              },
              enumerable: !0,
              configurable: !0,
            }),
            wn([vn("change")], e.prototype, "enabled", void 0),
            wn([vn("change")], e.prototype, "padding", void 0),
            e
          );
        })(mn);
      function En(t, e) {
        return (
          (t = +t),
          (e = +e),
          function (o) {
            return t * (1 - o) + e * o;
          }
        );
      }
      var Sn = (function () {
        function t(t, e, o, n) {
          void 0 === n && (n = 1),
            (this.r = Math.min(1, Math.max(0, t || 0))),
            (this.g = Math.min(1, Math.max(0, e || 0))),
            (this.b = Math.min(1, Math.max(0, o || 0))),
            (this.a = Math.min(1, Math.max(0, n || 0)));
        }
        return (
          (t.fromString = function (e) {
            if (e.indexOf("#") >= 0) return t.fromHexString(e);
            var o = t.nameToHex[e];
            if (o) return t.fromHexString(o);
            if (e.indexOf("rgb") >= 0) return t.fromRgbaString(e);
            throw new Error("Invalid color string: '" + e + "'");
          }),
          (t.fromHexString = function (e) {
            var o = e.match(t.hexRe);
            if (o)
              return new t(
                (n = parseInt(o[1], 16)) / 255,
                (r = parseInt(o[2], 16)) / 255,
                (i = parseInt(o[3], 16)) / 255,
                (s = void 0 !== o[4] ? parseInt(o[4], 16) : 255) / 255
              );
            if ((o = e.match(t.shortHexRe))) {
              var n = parseInt(o[1], 16),
                r = parseInt(o[2], 16),
                i = parseInt(o[3], 16),
                s = void 0 !== o[4] ? parseInt(o[4], 16) : 15;
              return new t(
                (n += 16 * n) / 255,
                (r += 16 * r) / 255,
                (i += 16 * i) / 255,
                (s += 16 * s) / 255
              );
            }
            throw new Error("Malformed hexadecimal color string: '" + e + "'");
          }),
          (t.fromRgbaString = function (e) {
            var o = e.match(t.rgbRe);
            if (o) return new t(+o[1] / 255, +o[2] / 255, +o[3] / 255);
            if ((o = e.match(t.rgbaRe)))
              return new t(+o[1] / 255, +o[2] / 255, +o[3] / 255, +o[4]);
            throw new Error("Malformed rgb/rgba color string: '" + e + "'");
          }),
          (t.fromArray = function (e) {
            if (4 === e.length) return new t(e[0], e[1], e[2], e[3]);
            if (3 === e.length) return new t(e[0], e[1], e[2]);
            throw new Error(
              "The given array should contain 3 or 4 color components (numbers)."
            );
          }),
          (t.fromHSB = function (e, o, n, r) {
            void 0 === r && (r = 1);
            var i = t.HSBtoRGB(e, o, n);
            return new t(i[0], i[1], i[2], r);
          }),
          (t.padHex = function (t) {
            return 1 === t.length ? "0" + t : t;
          }),
          (t.prototype.toHexString = function () {
            var e =
              "#" +
              t.padHex(Math.round(255 * this.r).toString(16)) +
              t.padHex(Math.round(255 * this.g).toString(16)) +
              t.padHex(Math.round(255 * this.b).toString(16));
            return (
              this.a < 1 &&
                (e += t.padHex(Math.round(255 * this.a).toString(16))),
              e
            );
          }),
          (t.prototype.toRgbaString = function (t) {
            void 0 === t && (t = 3);
            var e = [
                Math.round(255 * this.r),
                Math.round(255 * this.g),
                Math.round(255 * this.b),
              ],
              o = Math.pow(10, t);
            return 1 !== this.a
              ? (e.push(Math.round(this.a * o) / o),
                "rgba(" + e.join(", ") + ")")
              : "rgb(" + e.join(", ") + ")";
          }),
          (t.prototype.toString = function () {
            return 1 === this.a ? this.toHexString() : this.toRgbaString();
          }),
          (t.prototype.toHSB = function () {
            return t.RGBtoHSB(this.r, this.g, this.b);
          }),
          (t.RGBtoHSB = function (t, e, o) {
            var n = Math.min(t, e, o),
              r = Math.max(t, e, o),
              i = NaN;
            if (n !== r) {
              var s = r - n,
                a = (r - t) / s,
                l = (r - e) / s,
                u = (r - o) / s;
              (i = t === r ? u - l : e === r ? 2 + a - u : 4 + l - a),
                (i /= 6) < 0 && (i += 1);
            }
            return [360 * i, 0 !== r ? (r - n) / r : 0, r];
          }),
          (t.HSBtoRGB = function (t, e, o) {
            isNaN(t) && (t = 0), (t = (((t % 360) + 360) % 360) / 360);
            var n = 0,
              r = 0,
              i = 0;
            if (0 === e) n = r = i = o;
            else {
              var s = 6 * (t - Math.floor(t)),
                a = s - Math.floor(s),
                l = o * (1 - e),
                u = o * (1 - e * a),
                p = o * (1 - e * (1 - a));
              switch (s >> 0) {
                case 0:
                  (n = o), (r = p), (i = l);
                  break;
                case 1:
                  (n = u), (r = o), (i = l);
                  break;
                case 2:
                  (n = l), (r = o), (i = p);
                  break;
                case 3:
                  (n = l), (r = u), (i = o);
                  break;
                case 4:
                  (n = p), (r = l), (i = o);
                  break;
                case 5:
                  (n = o), (r = l), (i = u);
              }
            }
            return [n, r, i];
          }),
          (t.prototype.derive = function (e, o, n, r) {
            var i = t.RGBtoHSB(this.r, this.g, this.b),
              s = i[2];
            0 == s && n > 1 && (s = 0.05);
            var a = (((i[0] + e) % 360) + 360) % 360,
              l = Math.max(Math.min(i[1] * o, 1), 0);
            s = Math.max(Math.min(s * n, 1), 0);
            var u = Math.max(Math.min(this.a * r, 1), 0),
              p = t.HSBtoRGB(a, l, s);
            return p.push(u), t.fromArray(p);
          }),
          (t.prototype.brighter = function () {
            return this.derive(0, 1, 1 / 0.7, 1);
          }),
          (t.prototype.darker = function () {
            return this.derive(0, 1, 0.7, 1);
          }),
          (t.hexRe =
            /\s*#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?\s*$/),
          (t.shortHexRe =
            /\s*#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])?\s*$/),
          (t.rgbRe = /\s*rgb\((\d+),\s*(\d+),\s*(\d+)\)\s*/),
          (t.rgbaRe = /\s*rgba\((\d+),\s*(\d+),\s*(\d+),\s*([.\d]+)\)\s*/),
          (t.nameToHex = Object.freeze({
            aliceblue: "#F0F8FF",
            antiquewhite: "#FAEBD7",
            aqua: "#00FFFF",
            aquamarine: "#7FFFD4",
            azure: "#F0FFFF",
            beige: "#F5F5DC",
            bisque: "#FFE4C4",
            black: "#000000",
            blanchedalmond: "#FFEBCD",
            blue: "#0000FF",
            blueviolet: "#8A2BE2",
            brown: "#A52A2A",
            burlywood: "#DEB887",
            cadetblue: "#5F9EA0",
            chartreuse: "#7FFF00",
            chocolate: "#D2691E",
            coral: "#FF7F50",
            cornflowerblue: "#6495ED",
            cornsilk: "#FFF8DC",
            crimson: "#DC143C",
            cyan: "#00FFFF",
            darkblue: "#00008B",
            darkcyan: "#008B8B",
            darkgoldenrod: "#B8860B",
            darkgray: "#A9A9A9",
            darkgreen: "#006400",
            darkgrey: "#A9A9A9",
            darkkhaki: "#BDB76B",
            darkmagenta: "#8B008B",
            darkolivegreen: "#556B2F",
            darkorange: "#FF8C00",
            darkorchid: "#9932CC",
            darkred: "#8B0000",
            darksalmon: "#E9967A",
            darkseagreen: "#8FBC8F",
            darkslateblue: "#483D8B",
            darkslategray: "#2F4F4F",
            darkslategrey: "#2F4F4F",
            darkturquoise: "#00CED1",
            darkviolet: "#9400D3",
            deeppink: "#FF1493",
            deepskyblue: "#00BFFF",
            dimgray: "#696969",
            dimgrey: "#696969",
            dodgerblue: "#1E90FF",
            firebrick: "#B22222",
            floralwhite: "#FFFAF0",
            forestgreen: "#228B22",
            fuchsia: "#FF00FF",
            gainsboro: "#DCDCDC",
            ghostwhite: "#F8F8FF",
            gold: "#FFD700",
            goldenrod: "#DAA520",
            gray: "#808080",
            green: "#008000",
            greenyellow: "#ADFF2F",
            grey: "#808080",
            honeydew: "#F0FFF0",
            hotpink: "#FF69B4",
            indianred: "#CD5C5C",
            indigo: "#4B0082",
            ivory: "#FFFFF0",
            khaki: "#F0E68C",
            lavender: "#E6E6FA",
            lavenderblush: "#FFF0F5",
            lawngreen: "#7CFC00",
            lemonchiffon: "#FFFACD",
            lightblue: "#ADD8E6",
            lightcoral: "#F08080",
            lightcyan: "#E0FFFF",
            lightgoldenrodyellow: "#FAFAD2",
            lightgray: "#D3D3D3",
            lightgreen: "#90EE90",
            lightgrey: "#D3D3D3",
            lightpink: "#FFB6C1",
            lightsalmon: "#FFA07A",
            lightseagreen: "#20B2AA",
            lightskyblue: "#87CEFA",
            lightslategray: "#778899",
            lightslategrey: "#778899",
            lightsteelblue: "#B0C4DE",
            lightyellow: "#FFFFE0",
            lime: "#00FF00",
            limegreen: "#32CD32",
            linen: "#FAF0E6",
            magenta: "#FF00FF",
            maroon: "#800000",
            mediumaquamarine: "#66CDAA",
            mediumblue: "#0000CD",
            mediumorchid: "#BA55D3",
            mediumpurple: "#9370DB",
            mediumseagreen: "#3CB371",
            mediumslateblue: "#7B68EE",
            mediumspringgreen: "#00FA9A",
            mediumturquoise: "#48D1CC",
            mediumvioletred: "#C71585",
            midnightblue: "#191970",
            mintcream: "#F5FFFA",
            mistyrose: "#FFE4E1",
            moccasin: "#FFE4B5",
            navajowhite: "#FFDEAD",
            navy: "#000080",
            oldlace: "#FDF5E6",
            olive: "#808000",
            olivedrab: "#6B8E23",
            orange: "#FFA500",
            orangered: "#FF4500",
            orchid: "#DA70D6",
            palegoldenrod: "#EEE8AA",
            palegreen: "#98FB98",
            paleturquoise: "#AFEEEE",
            palevioletred: "#DB7093",
            papayawhip: "#FFEFD5",
            peachpuff: "#FFDAB9",
            peru: "#CD853F",
            pink: "#FFC0CB",
            plum: "#DDA0DD",
            powderblue: "#B0E0E6",
            purple: "#800080",
            rebeccapurple: "#663399",
            red: "#FF0000",
            rosybrown: "#BC8F8F",
            royalblue: "#4169E1",
            saddlebrown: "#8B4513",
            salmon: "#FA8072",
            sandybrown: "#F4A460",
            seagreen: "#2E8B57",
            seashell: "#FFF5EE",
            sienna: "#A0522D",
            silver: "#C0C0C0",
            skyblue: "#87CEEB",
            slateblue: "#6A5ACD",
            slategray: "#708090",
            slategrey: "#708090",
            snow: "#FFFAFA",
            springgreen: "#00FF7F",
            steelblue: "#4682B4",
            tan: "#D2B48C",
            teal: "#008080",
            thistle: "#D8BFD8",
            tomato: "#FF6347",
            turquoise: "#40E0D0",
            violet: "#EE82EE",
            wheat: "#F5DEB3",
            white: "#FFFFFF",
            whitesmoke: "#F5F5F5",
            yellow: "#FFFF00",
            yellowgreen: "#9ACD32",
          })),
          t
        );
      })();
      function On(t, e) {
        if ("string" == typeof t)
          try {
            t = Sn.fromString(t);
          } catch (s) {
            t = Sn.fromArray([0, 0, 0]);
          }
        if ("string" == typeof e)
          try {
            e = Sn.fromString(e);
          } catch (s) {
            e = Sn.fromArray([0, 0, 0]);
          }
        var o = En(t.r, e.r),
          n = En(t.g, e.g),
          r = En(t.b, e.b),
          i = En(t.a, e.a);
        return function (t) {
          return Sn.fromArray([o(t), n(t), r(t), i(t)]).toRgbaString();
        };
      }
      function _n(t, e) {
        var o,
          n = typeof e;
        if (null == e || "boolean" === n)
          return (
            (o = e),
            function () {
              return o;
            }
          );
        if ("number" === n) return En(t, e);
        if ("string" === n)
          try {
            return On(t, (e = Sn.fromString(e)));
          } catch (r) {}
        return e instanceof Sn
          ? On(t, e)
          : e instanceof Date
          ? (function (t, e) {
              var o = new Date(),
                n = +t,
                r = +e;
              return function (t) {
                return o.setTime(n * (1 - t) + r * t), o;
              };
            })(t, e)
          : Array.isArray(e)
          ? (function (t, e) {
              var o,
                n = e ? e.length : 0,
                r = t ? Math.min(n, t.length) : 0,
                i = new Array(r),
                s = new Array(n);
              for (o = 0; o < r; ++o) i[o] = _n(t[o], e[o]);
              for (; o < n; ++o) s[o] = e[o];
              return function (t) {
                for (o = 0; o < r; ++o) s[o] = i[o](t);
                return s;
              };
            })(t, e)
          : ("function" != typeof e.valueOf &&
              "function" != typeof e.toString) ||
            isNaN(e)
          ? (function (t, e) {
              var o,
                n = {},
                r = {};
              for (o in ((null !== t && "object" == typeof t) || (t = {}),
              (null !== e && "object" == typeof e) || (e = {}),
              e))
                o in t ? (n[o] = _n(t[o], e[o])) : (r[o] = e[o]);
              return function (t) {
                for (o in n) r[o] = n[o](t);
                return r;
              };
            })(t, e)
          : En(t, e);
      }
      function Rn(t, e) {
        return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN;
      }
      var Pn = function (t) {
        return t;
      };
      function Tn(t) {
        var e,
          o = t[0],
          n = t[t.length - 1];
        return (
          o > n && ((o = (e = [n, o])[0]), (n = e[1])),
          function (t) {
            return Math.max(o, Math.min(n, t));
          }
        );
      }
      var An = (function () {
          function t() {
            (this.unknown = void 0),
              (this._clamp = Pn),
              (this._domain = [0, 1]),
              (this._range = [0, 1]),
              (this.transform = Pn),
              (this.untransform = Pn),
              (this._interpolate = _n),
              this.rescale();
          }
          return (
            Object.defineProperty(t.prototype, "clamp", {
              get: function () {
                return this._clamp !== Pn;
              },
              set: function (t) {
                this._clamp = t ? Tn(this.domain) : Pn;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.setDomain = function (t) {
              (this._domain = Array.prototype.map.call(t, function (t) {
                return +t;
              })),
                this._clamp !== Pn && (this._clamp = Tn(this.domain)),
                this.rescale();
            }),
            (t.prototype.getDomain = function () {
              return this._domain.slice();
            }),
            Object.defineProperty(t.prototype, "domain", {
              get: function () {
                return this.getDomain();
              },
              set: function (t) {
                this.setDomain(t);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "range", {
              get: function () {
                return this._range.slice();
              },
              set: function (t) {
                (this._range = Array.prototype.slice.call(t)), this.rescale();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "interpolate", {
              get: function () {
                return this._interpolate;
              },
              set: function (t) {
                (this._interpolate = t), this.rescale();
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.rescale = function () {
              (this.piecewise =
                Math.min(this.domain.length, this.range.length) > 2
                  ? this.polymap
                  : this.bimap),
                (this.output = void 0),
                (this.input = void 0);
            }),
            (t.prototype.normalize = function (t, e) {
              return (e -= t = +t)
                ? function (o) {
                    return (o - t) / e;
                  }
                : ((o = isNaN(e) ? NaN : 0.5),
                  function () {
                    return o;
                  });
              var o;
            }),
            (t.prototype.bimap = function (t, e, o) {
              var n,
                r,
                i = t[0],
                s = t[1],
                a = e[0],
                l = e[1];
              return (
                s < i
                  ? ((n = this.normalize(s, i)), (r = o(l, a)))
                  : ((n = this.normalize(i, s)), (r = o(a, l))),
                function (t) {
                  return r(n(t));
                }
              );
            }),
            (t.prototype.polymap = function (t, e, o) {
              var n = this,
                r = Math.min(t.length, e.length) - 1;
              t[r] < t[0] &&
                ((t = t.slice().reverse()), (e = e.slice().reverse()));
              var i = Array.from({ length: r }, function (e, o) {
                  return n.normalize(t[o], t[o + 1]);
                }),
                s = Array.from({ length: r }, function (t, n) {
                  return o(e[n], e[n + 1]);
                });
              return function (e) {
                var o =
                  (function (t, e, o, n, r) {
                    for (
                      void 0 === n && (n = 0), void 0 === r && (r = t.length);
                      n < r;

                    ) {
                      var i = (n + r) >>> 1;
                      o(t[i], e) > 0 ? (r = i) : (n = i + 1);
                    }
                    return n;
                  })(t, e, Rn, 1, r) - 1;
                return s[o](i[o](e));
              };
            }),
            (t.prototype.convert = function (t) {
              return (
                (t = +t),
                isNaN(t)
                  ? this.unknown
                  : (this.output ||
                      (this.output = this.piecewise(
                        this.domain.map(this.transform),
                        this.range,
                        this.interpolate
                      )),
                    this.output(this.transform(this._clamp(t))))
              );
            }),
            (t.prototype.invert = function (t) {
              return (
                this.input ||
                  (this.input = this.piecewise(
                    this.range,
                    this.domain.map(this.transform),
                    En
                  )),
                this._clamp(this.untransform(this.input(t)))
              );
            }),
            t
          );
        })(),
        Dn = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })();
      function xn(t, e, o) {
        var n = In(t, e, o);
        return (function (t, e, o) {
          void 0 === o && (o = 1);
          for (
            var n = Math.abs(o),
              r =
                n > 0 && n < 1
                  ? Math.abs(Math.floor(Math.log(n) / Math.LN10))
                  : 0,
              i = Math.pow(10, r),
              s = Math.max(0, Math.ceil((e - t) / o)) || 0,
              a = new Gn(r, s),
              l = 0;
            l < s;
            l++
          )
            a[l] = Math.round((t + o * l) * i) / i;
          return a;
        })((t = Math.ceil(t / n) * n), (e = Math.floor(e / n) * n + n / 2), n);
      }
      var Fn = Math.sqrt(50),
        Nn = Math.sqrt(10),
        Mn = Math.sqrt(2);
      function In(t, e, o) {
        var n = Math.abs(e - t) / Math.max(0, o),
          r = Math.pow(10, Math.floor(Math.log(n) / Math.LN10)),
          i = n / r;
        return (
          i >= Fn ? (r *= 10) : i >= Nn ? (r *= 5) : i >= Mn && (r *= 2),
          e < t ? -r : r
        );
      }
      function Ln(t, e, o) {
        var n = (e - t) / Math.max(0, o),
          r = Math.floor(Math.log(n) / Math.LN10),
          i = n / Math.pow(10, r);
        return r >= 0
          ? (i >= Fn ? 10 : i >= Nn ? 5 : i >= Mn ? 2 : 1) * Math.pow(10, r)
          : -Math.pow(10, -r) / (i >= Fn ? 10 : i >= Nn ? 5 : i >= Mn ? 2 : 1);
      }
      var Gn = (function (t) {
          function e(e, o) {
            void 0 === o && (o = 0);
            var n = t.call(this, o) || this;
            return (n.fractionDigits = e), n;
          }
          return Dn(e, t), e;
        })(Array),
        kn = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Vn = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            kn(e, t),
            (e.prototype.ticks = function (t) {
              void 0 === t && (t = 10);
              var e = this._domain;
              return xn(e[0], e[e.length - 1], t);
            }),
            (e.prototype.nice = function (t) {
              void 0 === t && (t = 10);
              var e,
                o = this.domain,
                n = 0,
                r = o.length - 1,
                i = o[n],
                s = o[r];
              s < i && ((e = i), (i = s), (s = e), (e = n), (n = r), (r = e)),
                (e = Ln(i, s, t)) > 0
                  ? (e = Ln(
                      (i = Math.floor(i / e) * e),
                      (s = Math.ceil(s / e) * e),
                      t
                    ))
                  : e < 0 &&
                    (e = Ln(
                      (i = Math.ceil(i * e) / e),
                      (s = Math.floor(s * e) / e),
                      t
                    )),
                e > 0
                  ? ((o[n] = Math.floor(i / e) * e),
                    (o[r] = Math.ceil(s / e) * e),
                    (this.domain = o))
                  : e < 0 &&
                    ((o[n] = Math.ceil(i * e) / e),
                    (o[r] = Math.floor(s * e) / e),
                    (this.domain = o));
            }),
            e
          );
        })(An),
        Wn = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Hn = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.isContainerNode = !0), e;
          }
          return (
            Wn(e, t),
            (e.prototype.containsPoint = function (t, e) {
              return !0;
            }),
            (e.prototype.computeBBox = function () {
              var t = 1 / 0,
                o = -1 / 0,
                n = 1 / 0,
                r = -1 / 0;
              return (
                this.dirtyTransform && this.computeTransformMatrix(),
                this.children.forEach(function (i) {
                  if (i.visible) {
                    var s = i.computeBBox();
                    if (s) {
                      if (!(i instanceof e)) {
                        i.dirtyTransform && i.computeTransformMatrix();
                        for (var a = $o.flyweight(i.matrix), l = i.parent; l; )
                          a.preMultiplySelf(l.matrix), (l = l.parent);
                        a.transformBBox(s, 0, s);
                      }
                      var u = s.x,
                        p = s.y;
                      u < t && (t = u),
                        p < n && (n = p),
                        u + s.width > o && (o = u + s.width),
                        p + s.height > r && (r = p + s.height);
                    }
                  }
                }),
                new Zo(t, n, o - t, r - n)
              );
            }),
            (e.prototype.render = function (t) {
              this.dirtyTransform && this.computeTransformMatrix(),
                this.matrix.toContext(t);
              for (var e = this.children, o = e.length, n = 0; n < o; n++) {
                t.save();
                var r = e[n];
                r.visible && r.render(t), t.restore();
              }
            }),
            (e.className = "Group"),
            e
          );
        })(tn),
        Bn = (function () {
          function t(t, e) {
            (this.next = null),
              (this.scene = t.scene),
              (this.parent = t),
              (this.datum = e);
          }
          return (
            (t.prototype.appendChild = function (t) {
              if (null === this.next) return this.parent.insertBefore(t, null);
              if (!tn.isNode(this.next))
                throw new Error(this.next + " is not a Node.");
              return this.parent.insertBefore(t, this.next);
            }),
            (t.prototype.insertBefore = function (t, e) {
              return this.parent.insertBefore(t, e);
            }),
            t
          );
        })(),
        jn = (function () {
          function t(t, e) {
            (this.groups = t), (this.parents = e);
          }
          return (
            (t.select = function (e) {
              return new t([["function" == typeof e ? e() : e]], [void 0]);
            }),
            (t.selectAll = function (e) {
              return new t([null == e ? [] : e], [void 0]);
            }),
            (t.prototype.append = function (t) {
              return this.select(function (e) {
                return e.appendChild(new t());
              });
            }),
            (t.prototype.appendFn = function (t) {
              return this.select(function (e, o, n, r) {
                return e.appendChild(t(e, o, n, r));
              });
            }),
            (t.prototype.select = function (e) {
              for (var o = this.groups, n = o.length, r = [], i = 0; i < n; i++)
                for (
                  var s = o[i], a = s.length, l = (r[i] = new Array(a)), u = 0;
                  u < a;
                  u++
                ) {
                  var p = s[u];
                  if (p) {
                    var c = e(p, p.datum, u, s);
                    c && (c.datum = p.datum), (l[u] = c);
                  }
                }
              return new t(r, this.parents);
            }),
            (t.prototype.selectByClass = function (t) {
              return this.select(function (e) {
                if (tn.isNode(e))
                  for (var o = e.children, n = o.length, r = 0; r < n; r++) {
                    var i = o[r];
                    if (i instanceof t) return i;
                  }
              });
            }),
            (t.prototype.selectByTag = function (t) {
              return this.select(function (e) {
                if (tn.isNode(e))
                  for (var o = e.children, n = o.length, r = 0; r < n; r++) {
                    var i = o[r];
                    if (i.tag === t) return i;
                  }
              });
            }),
            (t.prototype.selectAllByClass = function (t) {
              return this.selectAll(function (e) {
                var o = [];
                if (tn.isNode(e))
                  for (var n = e.children, r = n.length, i = 0; i < r; i++) {
                    var s = n[i];
                    s instanceof t && o.push(s);
                  }
                return o;
              });
            }),
            (t.prototype.selectAllByTag = function (t) {
              return this.selectAll(function (e) {
                var o = [];
                if (tn.isNode(e))
                  for (var n = e.children, r = n.length, i = 0; i < r; i++) {
                    var s = n[i];
                    s.tag === t && o.push(s);
                  }
                return o;
              });
            }),
            (t.prototype.selectNone = function () {
              return [];
            }),
            (t.prototype.selectAll = function (e) {
              e || (e = this.selectNone);
              for (
                var o = [], n = [], r = this.groups, i = r.length, s = 0;
                s < i;
                s++
              )
                for (var a = r[s], l = a.length, u = 0; u < l; u++) {
                  var p = a[u];
                  p && (o.push(e(p, p.datum, u, a)), n.push(p));
                }
              return new t(o, n);
            }),
            (t.prototype.each = function (t) {
              for (var e = this.groups, o = e.length, n = 0; n < o; n++)
                for (var r = e[n], i = r.length, s = 0; s < i; s++) {
                  var a = r[s];
                  a && t(a, a.datum, s, r);
                }
              return this;
            }),
            (t.prototype.remove = function () {
              return this.each(function (t) {
                if (tn.isNode(t)) {
                  var e = t.parent;
                  e && e.removeChild(t);
                }
              });
            }),
            (t.prototype.merge = function (e) {
              for (
                var o = this.groups,
                  n = e.groups,
                  r = o.length,
                  i = Math.min(r, n.length),
                  s = new Array(r),
                  a = 0;
                a < i;
                a++
              )
                for (
                  var l = o[a],
                    u = n[a],
                    p = l.length,
                    c = (s[a] = new Array(p)),
                    d = 0;
                  d < p;
                  d++
                )
                  c[d] = l[d] || u[d] || void 0;
              for (; a < r; a++) s[a] = o[a];
              return new t(s, this.parents);
            }),
            (t.prototype.node = function () {
              for (var t = this.groups, e = t.length, o = 0; o < e; o++)
                for (var n = t[o], r = n.length, i = 0; i < r; i++) {
                  var s = n[i];
                  if (s) return s;
                }
              return null;
            }),
            (t.prototype.attr = function (t, e) {
              return (
                this.each(function (o) {
                  o[t] = e;
                }),
                this
              );
            }),
            (t.prototype.attrFn = function (t, e) {
              return (
                this.each(function (o, n, r, i) {
                  o[t] = e(o, n, r, i);
                }),
                this
              );
            }),
            (t.prototype.call = function (t) {
              return t(this), this;
            }),
            Object.defineProperty(t.prototype, "size", {
              get: function () {
                var t = 0;
                return (
                  this.each(function () {
                    return t++;
                  }),
                  t
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "data", {
              get: function () {
                var t = [];
                return (
                  this.each(function (e, o) {
                    return t.push(o);
                  }),
                  t
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "enter", {
              get: function () {
                return new t(
                  this.enterGroups ? this.enterGroups : [[]],
                  this.parents
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "exit", {
              get: function () {
                return new t(
                  this.exitGroups ? this.exitGroups : [[]],
                  this.parents
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.setDatum = function (t) {
              return this.each(function (e) {
                e.datum = t;
              });
            }),
            Object.defineProperty(t.prototype, "datum", {
              get: function () {
                var t = this.node();
                return t ? t.datum : null;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.setData = function (e, o) {
              if ("function" != typeof e) {
                var n = e;
                e = function () {
                  return n;
                };
              }
              for (
                var r = this.groups,
                  i = this.parents,
                  s = r.length,
                  a = new Array(s),
                  l = new Array(s),
                  u = new Array(s),
                  p = 0;
                p < s;
                p++
              ) {
                var c = r[p],
                  d = i[p];
                if (!d) throw new Error("Group #" + p + " has no parent: " + c);
                var h = c.length,
                  f = e(d, d.datum, p, i),
                  g = f.length,
                  y = (l[p] = new Array(g)),
                  m = (a[p] = new Array(g)),
                  v = (u[p] = new Array(h));
                o
                  ? this.bindKey(d, c, y, m, v, f, o)
                  : this.bindIndex(d, c, y, m, v, f);
                for (var C = 0, w = 0; C < g; C++) {
                  var b = y[C];
                  if (b) {
                    C >= w && (w = C + 1);
                    for (var E = void 0; !(E = m[w]) && w < g; ) w++;
                    b.next = E || null;
                  }
                }
              }
              var S = new t(a, i);
              return (S.enterGroups = l), (S.exitGroups = u), S;
            }),
            (t.prototype.bindIndex = function (t, e, o, n, r, i) {
              for (var s = e.length, a = i.length, l = 0; l < a; l++)
                (u = e[l])
                  ? ((u.datum = i[l]), (n[l] = u))
                  : (o[l] = new Bn(t, i[l]));
              for (; l < s; l++) {
                var u;
                (u = e[l]) && (r[l] = u);
              }
            }),
            (t.prototype.bindKey = function (e, o, n, r, i, s, a) {
              for (
                var l = o.length, u = s.length, p = new Array(l), c = {}, d = 0;
                d < l;
                d++
              )
                (f = o[d]) &&
                  ((h = p[d] = t.keyPrefix + a(f, f.datum, d, o)) in c
                    ? (i[d] = f)
                    : (c[h] = f));
              for (d = 0; d < u; d++) {
                var h;
                (f = c[(h = t.keyPrefix + a(e, s[d], d, s))])
                  ? ((r[d] = f), (f.datum = s[d]), (c[h] = void 0))
                  : (n[d] = new Bn(e, s[d]));
              }
              for (d = 0; d < l; d++) {
                var f;
                (f = o[d]) && c[p[d]] === f && (i[d] = f);
              }
            }),
            (t.keyPrefix = "$"),
            t
          );
        })(),
        Un = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        zn = (function (t) {
          function e() {
            var e = t.call(this) || this;
            return (
              (e._x1 = 0),
              (e._y1 = 0),
              (e._x2 = 0),
              (e._y2 = 0),
              e.restoreOwnStyles(),
              e
            );
          }
          return (
            Un(e, t),
            Object.defineProperty(e.prototype, "x1", {
              get: function () {
                return this._x1;
              },
              set: function (t) {
                this._x1 !== t && ((this._x1 = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "y1", {
              get: function () {
                return this._y1;
              },
              set: function (t) {
                this._y1 !== t && ((this._y1 = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "x2", {
              get: function () {
                return this._x2;
              },
              set: function (t) {
                this._x2 !== t && ((this._x2 = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "y2", {
              get: function () {
                return this._y2;
              },
              set: function (t) {
                this._y2 !== t && ((this._y2 = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.computeBBox = function () {
              return new Zo(
                this.x1,
                this.y1,
                this.x2 - this.x1,
                this.y2 - this.y1
              );
            }),
            (e.prototype.isPointInPath = function (t, e) {
              return !1;
            }),
            (e.prototype.isPointInStroke = function (t, e) {
              return !1;
            }),
            (e.prototype.render = function (t) {
              this.dirtyTransform && this.computeTransformMatrix(),
                this.matrix.toContext(t);
              var e = this.x1,
                o = this.y1,
                n = this.x2,
                r = this.y2;
              if (e === n) {
                var i = Math.round(e) + (Math.floor(this.strokeWidth) % 2) / 2;
                (e = i), (n = i);
              } else if (o === r) {
                var s = Math.round(o) + (Math.floor(this.strokeWidth) % 2) / 2;
                (o = s), (r = s);
              }
              t.beginPath(),
                t.moveTo(e, o),
                t.lineTo(n, r),
                this.fillStroke(t),
                (this.dirty = !1);
            }),
            (e.className = "Line"),
            (e.defaultStyles = en(dn.defaultStyles, {
              fill: void 0,
              strokeWidth: 1,
            })),
            e
          );
        })(dn),
        Kn = 2 * Math.PI;
      function Yn(t) {
        return (t %= Kn), (t += Kn) % Kn;
      }
      function Xn(t) {
        return (t / 180) * Math.PI;
      }
      var qn = Math.sign
        ? Math.sign
        : function (t) {
            return 0 == (t = +t) || isNaN(t) ? t : t > 0 ? 1 : -1;
          };
      function Qn(t, e, o, n, r, i, s, a) {
        var l = (o - t) * (a - i) - (n - e) * (s - r);
        if (0 === l) return null;
        var u = ((s - r) * (e - i) - (t - r) * (a - i)) / l,
          p = ((o - t) * (e - i) - (n - e) * (t - r)) / l;
        return u >= 0 && u <= 1 && p >= 0 && p <= 1
          ? { x: t + u * (o - t), y: e + u * (n - e) }
          : null;
      }
      function Zn(t, e, o, n, r, i, s, a, l, u, p, c) {
        for (
          var d = [],
            h = u - c,
            f = p - l,
            g = l * (c - u) - u * (p - l),
            y = $n(t, o, r, s),
            m = $n(e, n, i, a),
            v = (function (t, e, o, n) {
              if (0 === t)
                return (function (t, e, o) {
                  if (0 === t)
                    return (function (t, e) {
                      var o = -e / t;
                      return 0 !== t && o >= 0 && o <= 1 ? [o] : [];
                    })(e, o);
                  var n = e * e - 4 * t * o,
                    r = [];
                  if (0 === n) {
                    var i = -e / (2 * t);
                    i >= 0 && i <= 1 && r.push(i);
                  } else if (n > 0) {
                    var s = Math.sqrt(n),
                      a = (-e - s) / (2 * t),
                      l = (-e + s) / (2 * t);
                    a >= 0 && a <= 1 && r.push(a),
                      l >= 0 && l <= 1 && r.push(l);
                  }
                  return r;
                })(e, o, n);
              var r = e / t,
                i = o / t,
                s = (3 * i - r * r) / 9,
                a = (9 * r * i - (n / t) * 27 - 2 * r * r * r) / 54,
                l = s * s * s + a * a,
                u = 1 / 3,
                p = [];
              if (l >= 0) {
                var c = Math.sqrt(l),
                  d = qn(a + c) * Math.pow(Math.abs(a + c), u),
                  h = qn(a - c) * Math.pow(Math.abs(a - c), u),
                  f = Math.abs((Math.sqrt(3) * (d - h)) / 2),
                  g = -u * r + (d + h);
                if ((g >= 0 && g <= 1 && p.push(g), 0 === f)) {
                  var y = -u * r - (d + h) / 2;
                  y >= 0 && y <= 1 && p.push(y);
                }
              } else {
                var m = Math.acos(a / Math.sqrt(-s * s * s)),
                  v = u * r,
                  C = 2 * Math.sqrt(-s),
                  w = C * Math.cos(u * m) - v,
                  b = C * Math.cos(u * (m + 2 * Math.PI)) - v,
                  E = C * Math.cos(u * (m + 4 * Math.PI)) - v;
                w >= 0 && w <= 1 && p.push(w),
                  b >= 0 && b <= 1 && p.push(b),
                  E >= 0 && E <= 1 && p.push(E);
              }
              return p;
            })(
              h * y[0] + f * m[0],
              h * y[1] + f * m[1],
              h * y[2] + f * m[2],
              h * y[3] + f * m[3] + g
            ),
            C = 0;
          C < v.length;
          C++
        ) {
          var w,
            b = v[C],
            E = b * b,
            S = b * E,
            O = y[0] * S + y[1] * E + y[2] * b + y[3],
            _ = m[0] * S + m[1] * E + m[2] * b + m[3];
          (w = l !== p ? (O - l) / (p - l) : (_ - u) / (c - u)) >= 0 &&
            w <= 1 &&
            d.push({ x: O, y: _ });
        }
        return d;
      }
      function $n(t, e, o, n) {
        return [
          3 * e - t - 3 * o + n,
          3 * t - 6 * e + 3 * o,
          -3 * t + 3 * e,
          t,
        ];
      }
      var Jn = (function () {
          function t() {
            (this.commands = []), (this.params = []), (this._closedPath = !1);
          }
          return (
            (t.prototype.moveTo = function (t, e) {
              this.xy
                ? ((this.xy[0] = t), (this.xy[1] = e))
                : (this.xy = [t, e]),
                this.commands.push("M"),
                this.params.push(t, e);
            }),
            (t.prototype.lineTo = function (t, e) {
              this.xy
                ? (this.commands.push("L"),
                  this.params.push(t, e),
                  (this.xy[0] = t),
                  (this.xy[1] = e))
                : this.moveTo(t, e);
            }),
            (t.prototype.rect = function (t, e, o, n) {
              this.moveTo(t, e),
                this.lineTo(t + o, e),
                this.lineTo(t + o, e + n),
                this.lineTo(t, e + n),
                this.closePath();
            }),
            (t.prototype.arcTo = function (t, e, o, n, r, i, s) {
              var a = this.xy;
              if (a) {
                t < 0 && (t = -t), e < 0 && (e = -e);
                var l = a[0],
                  u = a[1],
                  p = (l - i) / 2,
                  c = (u - s) / 2,
                  d = Math.sin(o),
                  h = Math.cos(o),
                  f = h * p + d * c,
                  g = -d * p + h * c,
                  y = f / t,
                  m = g / e,
                  v = y * y + m * m,
                  C = (l + i) / 2,
                  w = (u + s) / 2,
                  b = 0,
                  E = 0;
                v >= 1
                  ? ((t *= v = Math.sqrt(v)), (e *= v))
                  : ((v = Math.sqrt(1 / v - 1)),
                    n === r && (v = -v),
                    (C += h * (b = v * t * m) - d * (E = -v * e * y)),
                    (w += d * b + h * E));
                var S = Math.atan2((g - E) / e, (f - b) / t),
                  O = Math.atan2((-g - E) / e, (-f - b) / t) - S;
                this.cubicArc(C, w, t, e, o, S, S + O, 1 - r);
              }
            }),
            (t.cubicArc = function (t, e, o, n, r, i, s, a, l, u) {
              if (u) {
                var p = a;
                (a = l), (l = p);
              }
              var c = e.length,
                d = 0.5522847498307935,
                h = Math.sin(a),
                f = Math.cos(a),
                g = Math.sin(s),
                y = Math.cos(s),
                m = Math.PI / 2,
                v = y * f * r - g * h * i,
                C = g * f * r + y * h * i,
                w = -y * h * r - g * f * i,
                b = -g * h * r + y * f * i;
              for (
                (l -= a) < 0 && (l += 2 * Math.PI),
                  t.push("M"),
                  e.push(v + o, C + n);
                l >= m;

              ) {
                (l -= m), t.push("C");
                var E = w + o;
                e.push(
                  v + w * d + o,
                  C + b * d + n,
                  v * d + w + o,
                  C * d + b + n,
                  Math.abs(E) < 1e-8 ? 0 : E,
                  b + n
                ),
                  (p = v),
                  (v = w),
                  (w = -p),
                  (p = C),
                  (C = b),
                  (b = -p);
              }
              if (l) {
                var S = (4 / 3) * Math.tan(l / 4),
                  O = Math.sin(l),
                  _ = Math.cos(l),
                  R = _ + S * O,
                  P = O - S * _;
                t.push("C"),
                  (E = v * _ + w * O + o),
                  e.push(
                    v + w * S + o,
                    C + b * S + n,
                    v * R + w * P + o,
                    C * R + b * P + n,
                    Math.abs(E) < 1e-8 ? 0 : E,
                    C * _ + b * O + n
                  );
              }
              if (u)
                for (var T = c, A = e.length - 2; T < A; T += 2, A -= 2)
                  (p = e[T]),
                    (e[T] = e[A]),
                    (e[A] = p),
                    (p = e[T + 1]),
                    (e[T + 1] = e[A + 1]),
                    (e[A + 1] = p);
            }),
            (t.prototype.cubicArc = function (e, o, n, r, i, s, a, l) {
              var u = this.commands,
                p = this.params,
                c = u.length;
              t.cubicArc(u, p, e, o, n, r, i, s, a, l);
              var d = p[p.length - 2],
                h = p[p.length - 1];
              this.xy
                ? ((u[c] = "L"), (this.xy[0] = d), (this.xy[1] = h))
                : (this.xy = [d, h]);
            }),
            (t.prototype.deCasteljau = function (t, e) {
              var o = t.length;
              if (o < 2 || o % 2 == 1)
                throw new Error("Fewer than two points or not an even count.");
              if (2 === o || 0 === e) return t.slice(0, 2);
              if (1 === e) return t.slice(-2);
              for (var n = [], r = o - 2, i = 0; i < r; i += 2)
                n.push(
                  (1 - e) * t[i] + e * t[i + 2],
                  (1 - e) * t[i + 1] + e * t[i + 3]
                );
              return this.deCasteljau(n, e);
            }),
            (t.prototype.approximateCurve = function (t, e) {
              var o = this.deCasteljau(t, 0);
              this.moveTo(o[0], o[1]);
              for (var n = 1 / e, r = n; r <= 1; r += n) {
                var i = this.deCasteljau(t, r);
                this.lineTo(i[0], i[1]);
              }
            }),
            (t.prototype.quadraticCurveTo = function (t, e, o, n) {
              this.xy || this.moveTo(t, e),
                this.cubicCurveTo(
                  (this.xy[0] + 2 * t) / 3,
                  (this.xy[1] + 2 * e) / 3,
                  (2 * t + o) / 3,
                  (2 * e + n) / 3,
                  o,
                  n
                );
            }),
            (t.prototype.cubicCurveTo = function (t, e, o, n, r, i) {
              this.xy || this.moveTo(t, e),
                this.commands.push("C"),
                this.params.push(t, e, o, n, r, i),
                (this.xy[0] = r),
                (this.xy[1] = i);
            }),
            Object.defineProperty(t.prototype, "closedPath", {
              get: function () {
                return this._closedPath;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.closePath = function () {
              this.xy &&
                ((this.xy = void 0),
                this.commands.push("Z"),
                (this._closedPath = !0));
            }),
            (t.prototype.clear = function () {
              (this.commands.length = 0),
                (this.params.length = 0),
                (this.xy = void 0),
                (this._closedPath = !1);
            }),
            (t.prototype.isPointInPath = function (t, e) {
              for (
                var o = this.commands,
                  n = this.params,
                  r = o.length,
                  i = -1e4,
                  s = -1e4,
                  a = NaN,
                  l = NaN,
                  u = 0,
                  p = 0,
                  c = 0,
                  d = 0,
                  h = 0;
                d < r;
                d++
              )
                switch (o[d]) {
                  case "M":
                    isNaN(a) || (Qn(a, l, u, p, i, s, t, e) && c++),
                      (a = u = n[h++]),
                      (l = p = n[h++]);
                    break;
                  case "L":
                    Qn(u, p, (u = n[h++]), (p = n[h++]), i, s, t, e) && c++;
                    break;
                  case "C":
                    c += Zn(
                      u,
                      p,
                      n[h++],
                      n[h++],
                      n[h++],
                      n[h++],
                      (u = n[h++]),
                      (p = n[h++]),
                      i,
                      s,
                      t,
                      e
                    ).length;
                    break;
                  case "Z":
                    isNaN(a) || (Qn(a, l, u, p, i, s, t, e) && c++);
                }
              return c % 2 == 1;
            }),
            (t.fromString = function (e) {
              var o = new t();
              return o.setFromString(e), o;
            }),
            (t.parseSvgPath = function (e) {
              return e
                .trim()
                .split(t.splitCommandsRe)
                .map(function (e) {
                  var o = e.match(t.matchParamsRe);
                  return {
                    command: e.substr(0, 1),
                    params: o ? o.map(parseFloat) : [],
                  };
                });
            }),
            (t.prettifySvgPath = function (e) {
              return t
                .parseSvgPath(e)
                .map(function (t) {
                  return t.command + t.params.join(",");
                })
                .join("\n");
            }),
            (t.prototype.setFromString = function (e) {
              var o,
                n,
                r,
                i,
                s,
                a = this;
              function l() {
                s.match(t.quadraticCommandRe) || ((r = o), (i = n));
              }
              function u() {
                s.match(t.cubicCommandRe) || ((r = o), (i = n));
              }
              this.clear(),
                t.parseSvgPath(e).forEach(function (t) {
                  var e = t.params,
                    p = e.length,
                    c = 0;
                  switch (t.command) {
                    case "M":
                      for (a.moveTo((o = e[c++]), (n = e[c++])); c < p; )
                        a.lineTo((o = e[c++]), (n = e[c++]));
                      break;
                    case "m":
                      for (a.moveTo((o += e[c++]), (n += e[c++])); c < p; )
                        a.lineTo((o += e[c++]), (n += e[c++]));
                      break;
                    case "L":
                      for (; c < p; ) a.lineTo((o = e[c++]), (n = e[c++]));
                      break;
                    case "l":
                      for (; c < p; ) a.lineTo((o += e[c++]), (n += e[c++]));
                      break;
                    case "C":
                      for (; c < p; )
                        a.cubicCurveTo(
                          e[c++],
                          e[c++],
                          (r = e[c++]),
                          (i = e[c++]),
                          (o = e[c++]),
                          (n = e[c++])
                        );
                      break;
                    case "c":
                      for (; c < p; )
                        a.cubicCurveTo(
                          o + e[c++],
                          n + e[c++],
                          (r = o + e[c++]),
                          (i = n + e[c++]),
                          (o += e[c++]),
                          (n += e[c++])
                        );
                      break;
                    case "S":
                      for (u(); c < p; )
                        a.cubicCurveTo(
                          o + o - r,
                          n + n - i,
                          (r = e[c++]),
                          (i = e[c++]),
                          (o = e[c++]),
                          (n = e[c++])
                        );
                      break;
                    case "s":
                      for (u(); c < p; )
                        a.cubicCurveTo(
                          o + o - r,
                          n + n - i,
                          (r = o + e[c++]),
                          (i = n + e[c++]),
                          (o += e[c++]),
                          (n += e[c++])
                        );
                      break;
                    case "Q":
                      for (; c < p; )
                        a.quadraticCurveTo(
                          (r = e[c++]),
                          (i = e[c++]),
                          (o = e[c++]),
                          (n = e[c++])
                        );
                      break;
                    case "q":
                      for (; c < p; )
                        a.quadraticCurveTo(
                          (r = o + e[c++]),
                          (i = n + e[c++]),
                          (o += e[c++]),
                          (n += e[c++])
                        );
                      break;
                    case "T":
                      for (l(); c < p; )
                        a.quadraticCurveTo(
                          (r = o + o - r),
                          (i = n + n - i),
                          (o = e[c++]),
                          (n = e[c++])
                        );
                      break;
                    case "t":
                      for (l(); c < p; )
                        a.quadraticCurveTo(
                          (r = o + o - r),
                          (i = n + n - i),
                          (o += e[c++]),
                          (n += e[c++])
                        );
                      break;
                    case "A":
                      for (; c < p; )
                        a.arcTo(
                          e[c++],
                          e[c++],
                          (e[c++] * Math.PI) / 180,
                          e[c++],
                          e[c++],
                          (o = e[c++]),
                          (n = e[c++])
                        );
                      break;
                    case "a":
                      for (; c < p; )
                        a.arcTo(
                          e[c++],
                          e[c++],
                          (e[c++] * Math.PI) / 180,
                          e[c++],
                          e[c++],
                          (o += e[c++]),
                          (n += e[c++])
                        );
                      break;
                    case "Z":
                    case "z":
                      a.closePath();
                      break;
                    case "H":
                      for (; c < p; ) a.lineTo((o = e[c++]), n);
                      break;
                    case "h":
                      for (; c < p; ) a.lineTo((o += e[c++]), n);
                      break;
                    case "V":
                      for (; c < p; ) a.lineTo(o, (n = e[c++]));
                      break;
                    case "v":
                      for (; c < p; ) a.lineTo(o, (n += e[c++]));
                  }
                  s = t.command;
                });
            }),
            (t.prototype.toString = function () {
              for (
                var t = this.commands,
                  e = this.params,
                  o = t.length,
                  n = [],
                  r = 0,
                  i = 0;
                r < o;
                r++
              )
                switch (t[r]) {
                  case "M":
                    n.push("M" + e[i++] + "," + e[i++]);
                    break;
                  case "L":
                    n.push("L" + e[i++] + "," + e[i++]);
                    break;
                  case "C":
                    n.push(
                      "C" +
                        e[i++] +
                        "," +
                        e[i++] +
                        " " +
                        e[i++] +
                        "," +
                        e[i++] +
                        " " +
                        e[i++] +
                        "," +
                        e[i++]
                    );
                    break;
                  case "Z":
                    n.push("Z");
                }
              return n.join("");
            }),
            (t.prototype.toPrettyString = function () {
              return t.prettifySvgPath(this.toString());
            }),
            (t.prototype.toSvg = function () {
              return (
                t.xmlDeclaration +
                '\n<svg width="100%" height="100%" viewBox="0 0 50 50" version="1.1" xmlns="' +
                t.xmlns +
                '">\n    <path d="' +
                this.toString() +
                '" style="fill:none;stroke:#000;stroke-width:0.5;"/>\n</svg>'
              );
            }),
            (t.prototype.toDebugSvg = function () {
              var e = t.prettifySvgPath(this.toString());
              return (
                t.xmlDeclaration +
                '\n<svg width="100%" height="100%" viewBox="0 0 100 100" version="1.1" xmlns="' +
                t.xmlns +
                '">\n    <path d="' +
                e +
                '" style="fill:none;stroke:#000;stroke-width:0.5;"/>\n</svg>'
              );
            }),
            (t.prototype.toCubicPaths = function () {
              var t,
                e,
                o,
                n,
                r,
                i = [],
                s = this.params,
                a = 0;
              return (
                this.commands.forEach(function (l) {
                  switch (l) {
                    case "M":
                      (t = [(e = n = s[a++]), (o = r = s[a++])]), i.push(t);
                      break;
                    case "L":
                      var u = s[a++],
                        p = s[a++];
                      t.push(
                        (n + n + u) / 3,
                        (r + r + p) / 3,
                        (n + u + u) / 3,
                        (r + p + p) / 3,
                        (n = u),
                        (r = p)
                      );
                      break;
                    case "C":
                      t.push(
                        s[a++],
                        s[a++],
                        s[a++],
                        s[a++],
                        (n = s[a++]),
                        (r = s[a++])
                      );
                      break;
                    case "Z":
                      t.push(
                        (n + n + e) / 3,
                        (r + r + o) / 3,
                        (n + e + e) / 3,
                        (r + o + o) / 3,
                        (n = e),
                        (r = o)
                      );
                  }
                }),
                i
              );
            }),
            (t.cubicPathToString = function (t) {
              var e = t.length;
              if (!(e % 2 == 0 && (e / 2 - 1) / 2 >= 1))
                throw new Error("Invalid path.");
              return "M" + t.slice(0, 2).join(",") + "C" + t.slice(2).join(",");
            }),
            (t.splitCommandsRe = /(?=[AaCcHhLlMmQqSsTtVvZz])/g),
            (t.matchParamsRe = /-?[0-9]*\.?\d+/g),
            (t.quadraticCommandRe = /[QqTt]/),
            (t.cubicCommandRe = /[CcSs]/),
            (t.xmlDeclaration = '<?xml version="1.0" encoding="UTF-8"?>'),
            (t.xmlns = "http://www.w3.org/2000/svg"),
            t
          );
        })(),
        tr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        er = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.path = new Jn()), (e._dirtyPath = !0), (e._svgPath = ""), e
            );
          }
          return (
            tr(e, t),
            Object.defineProperty(e.prototype, "dirtyPath", {
              get: function () {
                return this._dirtyPath;
              },
              set: function (t) {
                this._dirtyPath !== t &&
                  ((this._dirtyPath = t), t && (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "svgPath", {
              get: function () {
                return this._svgPath;
              },
              set: function (t) {
                this._svgPath !== t &&
                  ((this._svgPath = t),
                  this.path.setFromString(t),
                  (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.isPointInPath = function (t, e) {
              var o = this.transformPoint(t, e);
              return this.path.closedPath && this.path.isPointInPath(o.x, o.y);
            }),
            (e.prototype.isPointInStroke = function (t, e) {
              return !1;
            }),
            (e.prototype.updatePath = function () {}),
            (e.prototype.render = function (t) {
              var e = this.scene;
              this.dirtyTransform && this.computeTransformMatrix(),
                this.matrix.toContext(t),
                this.dirtyPath && (this.updatePath(), (this.dirtyPath = !1)),
                e.appendPath(this.path),
                this.fillStroke(t),
                (this.dirty = !1);
            }),
            (e.className = "Path"),
            e
          );
        })(dn);
      function or(t, e, o) {
        return void 0 === o && (o = 1e-10), Math.abs(t - e) < o;
      }
      function nr(t, e) {
        void 0 === e && (e = 2);
        var o = Math.floor(Math.log(Math.abs(t)) / Math.LN10);
        return o >= 0 || !isFinite(o)
          ? t.toFixed(e)
          : t.toFixed(Math.abs(o) - 1 + e);
      }
      var rr,
        ir = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })();
      !(function (t) {
        (t[(t.Open = 0)] = "Open"),
          (t[(t.Chord = 1)] = "Chord"),
          (t[(t.Round = 2)] = "Round");
      })(rr || (rr = {}));
      var sr,
        ar = (function (t) {
          function e() {
            var e = t.call(this) || this;
            return (
              (e._centerX = 0),
              (e._centerY = 0),
              (e._radiusX = 10),
              (e._radiusY = 10),
              (e._startAngle = 0),
              (e._endAngle = 2 * Math.PI),
              (e._counterClockwise = !1),
              (e._type = rr.Open),
              e.restoreOwnStyles(),
              e
            );
          }
          return (
            ir(e, t),
            Object.defineProperty(e.prototype, "centerX", {
              get: function () {
                return this._centerX;
              },
              set: function (t) {
                this._centerX !== t &&
                  ((this._centerX = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "centerY", {
              get: function () {
                return this._centerY;
              },
              set: function (t) {
                this._centerY !== t &&
                  ((this._centerY = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "radiusX", {
              get: function () {
                return this._radiusX;
              },
              set: function (t) {
                this._radiusX !== t &&
                  ((this._radiusX = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "radiusY", {
              get: function () {
                return this._radiusY;
              },
              set: function (t) {
                this._radiusY !== t &&
                  ((this._radiusY = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "startAngle", {
              get: function () {
                return this._startAngle;
              },
              set: function (t) {
                this._startAngle !== t &&
                  ((this._startAngle = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "endAngle", {
              get: function () {
                return this._endAngle;
              },
              set: function (t) {
                this._endAngle !== t &&
                  ((this._endAngle = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fullPie", {
              get: function () {
                return or(Yn(this.startAngle), Yn(this.endAngle));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "counterClockwise", {
              get: function () {
                return this._counterClockwise;
              },
              set: function (t) {
                this._counterClockwise !== t &&
                  ((this._counterClockwise = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "type", {
              get: function () {
                return this._type;
              },
              set: function (t) {
                this._type !== t && ((this._type = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.updatePath = function () {
              var t = this.path;
              t.clear(),
                t.cubicArc(
                  this.centerX,
                  this.centerY,
                  this.radiusX,
                  this.radiusY,
                  0,
                  this.startAngle,
                  this.endAngle,
                  this.counterClockwise ? 1 : 0
                ),
                this.type === rr.Chord
                  ? t.closePath()
                  : this.type !== rr.Round ||
                    this.fullPie ||
                    (t.lineTo(this.centerX, this.centerY), t.closePath());
            }),
            (e.prototype.computeBBox = function () {
              return new Zo(
                this.centerX - this.radiusX,
                this.centerY - this.radiusY,
                2 * this.radiusX,
                2 * this.radiusY
              );
            }),
            (e.prototype.isPointInPath = function (t, e) {
              var o = this.transformPoint(t, e),
                n = this.computeBBox();
              return (
                this.type !== rr.Open &&
                n.containsPoint(o.x, o.y) &&
                this.path.isPointInPath(o.x, o.y)
              );
            }),
            (e.className = "Arc"),
            (e.defaultStyles = en(dn.defaultStyles, {
              lineWidth: 1,
              fillStyle: null,
            })),
            e
          );
        })(er);
      !(function (t) {
        (t[(t.Tick = 0)] = "Tick"), (t[(t.GridLine = 1)] = "GridLine");
      })(sr || (sr = {}));
      var lr,
        ur,
        pr = function () {
          (this.width = 1),
            (this.size = 6),
            (this.color = "rgba(195, 195, 195, 1)"),
            (this.count = 10);
        },
        cr = (function () {
          function t() {
            (this.fontSize = 12),
              (this.fontFamily = "Verdana, sans-serif"),
              (this.padding = 5),
              (this.color = "rgba(87, 87, 87, 1)"),
              (this.rotation = 0),
              (this.mirrored = !1),
              (this.parallel = !1);
          }
          return (
            Object.defineProperty(t.prototype, "format", {
              get: function () {
                return this._format;
              },
              set: function (t) {
                this._format !== t &&
                  ((this._format = t),
                  this.onFormatChange && this.onFormatChange(t));
              },
              enumerable: !0,
              configurable: !0,
            }),
            t
          );
        })(),
        dr = (function () {
          function t(t) {
            (this.id = Jo(this)),
              (this.lineNode = new zn()),
              (this.group = new Hn()),
              (this.line = { width: 1, color: "rgba(195, 195, 195, 1)" }),
              (this.tick = new pr()),
              (this.label = new cr()),
              (this.translation = { x: 0, y: 0 }),
              (this.rotation = 0),
              (this._visibleRange = [0, 1]),
              (this._title = void 0),
              (this._gridLength = 0),
              (this.gridStyle = [
                { stroke: "rgba(219, 219, 219, 1)", lineDash: [4, 2] },
              ]),
              (this._radialGrid = !1),
              (this.scale = t),
              (this.requestedRange = t.range.slice()),
              (this.groupSelection = jn.select(this.group).selectAll()),
              (this.label.onFormatChange = this.onTickFormatChange.bind(this)),
              this.group.append(this.lineNode),
              this.onTickFormatChange();
          }
          return (
            (t.prototype.getMeta = function () {}),
            (t.prototype.updateRange = function () {
              var t = this,
                e = t.requestedRange,
                o = t.visibleRange,
                n = (e[1] - e[0]) / (o[1] - o[0]),
                r = e[0] - n * o[0];
              t.scale.range = [r, r + n];
            }),
            (t.prototype.inRange = function (t, e, o) {
              return (
                void 0 === e && (e = 0),
                void 0 === o && (o = 0),
                0 === this.inRangeEx(t, e, o)
              );
            }),
            (t.prototype.inRangeEx = function (t, e, o) {
              void 0 === e && (e = 0), void 0 === o && (o = 0);
              var n = this.range;
              return t + e < n[0] - o ? -1 : t > n[1] + o ? 1 : 0;
            }),
            Object.defineProperty(t.prototype, "range", {
              get: function () {
                return this.requestedRange.slice();
              },
              set: function (t) {
                (this.requestedRange = t.slice()), this.updateRange();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "visibleRange", {
              get: function () {
                return this._visibleRange.slice();
              },
              set: function (t) {
                if (t && 2 === t.length) {
                  var e = t[0],
                    o = t[1];
                  (e = Math.max(0, e)),
                    (o = Math.min(1, o)),
                    (e = Math.min(e, o)),
                    (o = Math.max(e, o)),
                    (this._visibleRange = [e, o]),
                    this.updateRange();
                }
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "domain", {
              get: function () {
                return this.scale.domain.slice();
              },
              set: function (t) {
                this.scale.domain = t.slice();
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.onTickFormatChange = function (t) {
              t
                ? this.scale.tickFormat &&
                  (this.tickFormatter = this.scale.tickFormat(10, t))
                : (this.tickFormatter = this.scale.tickFormat
                    ? this.scale.tickFormat(10, void 0)
                    : void 0);
            }),
            Object.defineProperty(t.prototype, "title", {
              get: function () {
                return this._title;
              },
              set: function (t) {
                var e = this._title;
                e !== t &&
                  (e && this.group.removeChild(e.node),
                  t &&
                    ((t.node.rotation = -Math.PI / 2),
                    this.group.appendChild(t.node)),
                  (this._title = t));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "gridLength", {
              get: function () {
                return this._gridLength;
              },
              set: function (t) {
                ((this._gridLength && !t) || (!this._gridLength && t)) &&
                  (this.groupSelection = this.groupSelection
                    .remove()
                    .setData([])),
                  (this._gridLength = t);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "radialGrid", {
              get: function () {
                return this._radialGrid;
              },
              set: function (t) {
                this._radialGrid !== t &&
                  ((this._radialGrid = t),
                  (this.groupSelection = this.groupSelection
                    .remove()
                    .setData([])));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.update = function () {
              var t = this,
                e = this,
                o = e.group,
                n = e.scale,
                r = e.tick,
                i = e.label,
                s = e.gridStyle,
                a = e.requestedRange,
                l = Math.min(a[0], a[1]),
                u = Math.max(a[0], a[1]),
                p = Xn(this.rotation),
                c = i.parallel,
                d = Yn(Xn(i.rotation));
              (o.translationX = this.translation.x),
                (o.translationY = this.translation.y),
                (o.rotation = p);
              var h = (n.bandwidth || 0) / 2,
                f = i.mirrored ? 1 : -1,
                g = Yn(p),
                y = !d && g >= 0 && g <= Math.PI ? -1 : 1,
                m = Yn(p - Math.PI / 2),
                v = !d && m >= 0 && m <= Math.PI ? -1 : 1,
                C = d >= 0 && d <= Math.PI ? -1 : 1,
                w = n.ticks(this.tick.count),
                b = this.groupSelection.setData(w);
              b.exit.remove();
              var E = b.enter.append(Hn);
              E.append(zn).each(function (t) {
                return (t.tag = sr.Tick);
              }),
                this.gridLength &&
                  (this.radialGrid
                    ? E.append(ar).each(function (t) {
                        return (t.tag = sr.GridLine);
                      })
                    : E.append(zn).each(function (t) {
                        return (t.tag = sr.GridLine);
                      })),
                E.append(gn);
              var S,
                O = b.merge(E);
              if (
                (O.attrFn("translationY", function (t, e) {
                  return Math.round(n.convert(e) + h);
                }).attrFn("visible", function (t) {
                  return t.translationY >= l && t.translationY <= u;
                }),
                O.selectByTag(sr.Tick)
                  .each(function (t) {
                    (t.strokeWidth = r.width), (t.stroke = r.color);
                  })
                  .attr("x1", f * r.size)
                  .attr("x2", 0)
                  .attr("y1", 0)
                  .attr("y2", 0),
                this.gridLength && s.length)
              ) {
                var _ = s.length,
                  R = void 0;
                if (this.radialGrid) {
                  var P =
                    ((S = Xn(this.gridLength)),
                    (S %= Kn),
                    (S += Kn) !== Kn && (S %= Kn),
                    S);
                  R = O.selectByTag(sr.GridLine).each(function (t, e) {
                    var o = Math.round(n.convert(e) + h);
                    (t.centerX = 0),
                      (t.centerY = n.range[0] - o),
                      (t.endAngle = P),
                      (t.radiusX = o),
                      (t.radiusY = o);
                  });
                } else
                  R = O.selectByTag(sr.GridLine).each(function (e) {
                    (e.x1 = 0),
                      (e.x2 = -f * t.gridLength),
                      (e.y1 = 0),
                      (e.y2 = 0),
                      (e.visible =
                        Math.abs(e.parent.translationY - n.range[0]) > 1);
                  });
                R.each(function (t, e, o) {
                  var n = s[o % _];
                  (t.stroke = n.stroke),
                    (t.strokeWidth = r.width),
                    (t.lineDash = n.lineDash),
                    (t.fill = void 0);
                });
              }
              var T = this.tickFormatter,
                A = this.getMeta(),
                D = w.fractionDigits >= 0 ? w.fractionDigits : 0,
                x = O.selectByClass(gn).each(function (t, e, o) {
                  (t.fontStyle = i.fontStyle),
                    (t.fontWeight = i.fontWeight),
                    (t.fontSize = i.fontSize),
                    (t.fontFamily = i.fontFamily),
                    (t.fill = i.color),
                    (t.textBaseline =
                      c && !d
                        ? f * y == -1
                          ? "hanging"
                          : "bottom"
                        : "middle"),
                    (t.text = i.formatter
                      ? i.formatter({
                          value: D >= 0 ? e : String(e),
                          index: o,
                          fractionDigits: D,
                          formatter: T,
                          axis: A,
                        })
                      : D
                      ? e.toFixed(D)
                      : T
                      ? T(e)
                      : String(e)),
                    (t.textAlign = c
                      ? d
                        ? f * C == -1
                          ? "end"
                          : "start"
                        : "center"
                      : f * v == -1
                      ? "end"
                      : "start");
                }),
                F = f * (r.size + i.padding),
                N = c ? (y * Math.PI) / 2 : -1 === v ? Math.PI : 0;
              x.each(function (t) {
                (t.x = F), (t.rotationCenterX = F), (t.rotation = N + d);
              }),
                (this.groupSelection = O);
              var M = this.lineNode;
              (M.x1 = 0),
                (M.x2 = 0),
                (M.y1 = a[0]),
                (M.y2 = a[1]),
                (M.strokeWidth = this.line.width),
                (M.stroke = this.line.color),
                (M.visible = w.length > 0);
              var I = this.title,
                L = !1;
              if (I && I.enabled) {
                L = !0;
                var G = I.padding.bottom,
                  k = I.node,
                  V = this.computeBBox({ excludeTitle: !0 }),
                  W = -1 === f && g > Math.PI && g < 2 * Math.PI ? -1 : 1;
                (k.rotation = (W * f * Math.PI) / 2),
                  (k.x = (W * f * (M.y1 + M.y2)) / 2),
                  (k.x = (W * f * (a[0] + a[1])) / 2),
                  (k.y =
                    -1 === f
                      ? W * (-G - V.width + Math.max(V.x + V.width, 0))
                      : -G - V.width - Math.min(V.x, 0)),
                  (k.textBaseline = 1 === W ? "bottom" : "top");
              }
              I && (I.node.visible = L);
            }),
            (t.prototype.computeBBox = function (t) {
              var e = this.title,
                o = this.lineNode,
                n = this.groupSelection.selectByClass(gn),
                r = 1 / 0,
                i = -1 / 0,
                s = 1 / 0,
                a = -1 / 0;
              if (
                (n.each(function (t) {
                  t.computeTransformMatrix();
                  var e = $o.flyweight(t.matrix),
                    o = t.parent;
                  o.computeTransformMatrix(), e.preMultiplySelf(o.matrix);
                  var n = t.computeBBox();
                  if (n) {
                    var l = e.transformBBox(n);
                    (r = Math.min(r, l.x)),
                      (i = Math.max(i, l.x + l.width)),
                      (s = Math.min(s, l.y)),
                      (a = Math.max(a, l.y + l.height));
                  }
                }),
                e && e.enabled && (!t || !t.excludeTitle))
              ) {
                var l = e.node;
                l.computeTransformMatrix();
                var u = $o.flyweight(l.matrix),
                  p = l.computeBBox();
                if (p) {
                  var c = u.transformBBox(p);
                  (r = Math.min(r, c.x)),
                    (i = Math.max(i, c.x + c.width)),
                    (s = Math.min(s, c.y)),
                    (a = Math.max(a, c.y + c.height));
                }
              }
              return (
                (r = Math.min(r, 0)),
                (i = Math.max(i, 0)),
                (s = Math.min(s, o.y1, o.y2)),
                (a = Math.max(a, o.y1, o.y2)),
                new Zo(r, s, i - r, a - s)
              );
            }),
            t
          );
        })(),
        hr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })();
      function fr(t) {
        return t === lr.X ? lr.Y : lr.X;
      }
      !(function (t) {
        (t.X = "x"), (t.Y = "y");
      })(lr || (lr = {})),
        (function (t) {
          (t.Top = "top"),
            (t.Right = "right"),
            (t.Bottom = "bottom"),
            (t.Left = "left"),
            (t.Angle = "angle"),
            (t.Radius = "radius");
        })(ur || (ur = {}));
      var gr = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.keys = []), (e.boundSeries = []), e;
          }
          return (
            hr(e, t),
            Object.defineProperty(e.prototype, "type", {
              get: function () {
                return this.constructor.type || "";
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.getMeta = function () {
              return {
                id: this.id,
                direction: this.direction,
                boundSeries: this.boundSeries,
              };
            }),
            Object.defineProperty(e.prototype, "position", {
              get: function () {
                return this._position;
              },
              set: function (t) {
                if (this._position !== t)
                  switch (((this._position = t), t)) {
                    case ur.Top:
                      (this.direction = lr.X),
                        (this.rotation = -90),
                        (this.label.mirrored = !0),
                        (this.label.parallel = !0);
                      break;
                    case ur.Right:
                      (this.direction = lr.Y),
                        (this.rotation = 0),
                        (this.label.mirrored = !0),
                        (this.label.parallel = !1);
                      break;
                    case ur.Bottom:
                      (this.direction = lr.X),
                        (this.rotation = -90),
                        (this.label.mirrored = !1),
                        (this.label.parallel = !0);
                      break;
                    case ur.Left:
                      (this.direction = lr.Y),
                        (this.rotation = 0),
                        (this.label.mirrored = !1),
                        (this.label.parallel = !1);
                  }
              },
              enumerable: !0,
              configurable: !0,
            }),
            e
          );
        })(dr),
        yr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        mr = (function (t) {
          function e() {
            var e = t.call(this, new Vn()) || this;
            return (
              (e._nice = !0),
              (e._min = NaN),
              (e._max = NaN),
              (e.scale.clamp = !0),
              e
            );
          }
          return (
            yr(e, t),
            Object.defineProperty(e.prototype, "nice", {
              get: function () {
                return this._nice;
              },
              set: function (t) {
                this._nice !== t &&
                  ((this._nice = t),
                  t && this.scale.nice && this.scale.nice(10));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "domain", {
              get: function () {
                return this.scale.domain;
              },
              set: function (t) {
                var e = this.min,
                  o = this.max;
                (t = [isNaN(e) ? t[0] : e, isNaN(o) ? t[1] : o]),
                  (this.scale.domain = t),
                  this.nice && this.scale.nice && this.scale.nice(10);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "min", {
              get: function () {
                return this._min;
              },
              set: function (t) {
                this._min !== t &&
                  ((this._min = t),
                  isNaN(t) || (this.scale.domain = [t, this.scale.domain[1]]));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "max", {
              get: function () {
                return this._max;
              },
              set: function (t) {
                this._max !== t &&
                  ((this._max = t),
                  isNaN(t) || (this.scale.domain = [this.scale.domain[0], t]));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.className = "NumberAxis"),
            (e.type = "number"),
            e
          );
        })(gr),
        vr = (function () {
          function t() {
            (this.index = new Map()),
              (this.ordinalRange = []),
              (this._domain = []),
              (this._range = [0, 1]),
              (this._bandwidth = 1),
              (this._paddingInner = 0),
              (this._paddingOuter = 0),
              (this._round = !1),
              (this._align = 0.5);
          }
          return (
            Object.defineProperty(t.prototype, "domain", {
              get: function () {
                return this._domain;
              },
              set: function (t) {
                var e = this._domain;
                (e.length = 0), (this.index = new Map());
                var o = this.index;
                t.forEach(function (t) {
                  void 0 === o.get(t) && o.set(t, e.push(t) - 1);
                }),
                  this.rescale();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "range", {
              get: function () {
                return this._range;
              },
              set: function (t) {
                (this._range[0] = t[0]),
                  (this._range[1] = t[1]),
                  this.rescale();
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.ticks = function () {
              return this._domain;
            }),
            (t.prototype.convert = function (t) {
              var e = this.index.get(t);
              if (void 0 === e) return NaN;
              var o = this.ordinalRange[e];
              return void 0 === o ? NaN : o;
            }),
            Object.defineProperty(t.prototype, "bandwidth", {
              get: function () {
                return this._bandwidth;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "padding", {
              get: function () {
                return this._paddingInner;
              },
              set: function (t) {
                (t = Math.max(0, Math.min(1, t))),
                  (this._paddingInner = t),
                  (this._paddingOuter = t),
                  this.rescale();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "paddingInner", {
              get: function () {
                return this._paddingInner;
              },
              set: function (t) {
                (this._paddingInner = Math.max(0, Math.min(1, t))),
                  this.rescale();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "paddingOuter", {
              get: function () {
                return this._paddingOuter;
              },
              set: function (t) {
                (this._paddingOuter = Math.max(0, Math.min(1, t))),
                  this.rescale();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "round", {
              get: function () {
                return this._round;
              },
              set: function (t) {
                (this._round = t), this.rescale();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "align", {
              get: function () {
                return this._align;
              },
              set: function (t) {
                (this._align = Math.max(0, Math.min(1, t))), this.rescale();
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.rescale = function () {
              var t,
                e = this._domain.length;
              if (e) {
                var o = this._range,
                  n = o[0],
                  r = o[1],
                  i = r < n;
                i && ((n = (t = [r, n])[0]), (r = t[1]));
                var s =
                  (r - n) /
                  Math.max(1, e - this._paddingInner + 2 * this._paddingOuter);
                this._round && (s = Math.floor(s)),
                  (n += (r - n - s * (e - this._paddingInner)) * this._align),
                  (this._bandwidth = s * (1 - this._paddingInner)),
                  this._round &&
                    ((n = Math.round(n)),
                    (this._bandwidth = Math.round(this._bandwidth)));
                for (var a = [], l = 0; l < e; l++) a.push(n + s * l);
                this.ordinalRange = i ? a.reverse() : a;
              }
            }),
            t
          );
        })(),
        Cr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wr = (function (t) {
          function e() {
            var e = new vr();
            return (
              (e.paddingInner = 0.2),
              (e.paddingOuter = 0.3),
              t.call(this, e) || this
            );
          }
          return (
            Cr(e, t),
            Object.defineProperty(e.prototype, "paddingInner", {
              get: function () {
                return this.scale.paddingInner;
              },
              set: function (t) {
                this.scale.paddingInner = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "paddingOuter", {
              get: function () {
                return this.scale.paddingOuter;
              },
              set: function (t) {
                this.scale.paddingOuter = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.className = "CategoryAxis"),
            (e.type = "category"),
            e
          );
        })(gr);
      function br(t, e) {
        for (var o = 0; o < t.length; o++) {
          var n = t[o];
          if (e(n, o, t)) return n;
        }
      }
      function Er(t) {
        for (var e, o, n, r = t.length, i = -1; ++i < r; )
          if (null != (e = t[i]) && e >= e && isFinite(e))
            for (o = n = e; ++i < r; )
              null != (e = t[i]) &&
                isFinite(e) &&
                (o > e && (o = e), n < e && (n = e));
        return void 0 === o || void 0 === n ? void 0 : [o, n];
      }
      function Sr(t) {
        var e = Er(t);
        if (void 0 !== e) {
          var o = e[0],
            n = e[1],
            r = o instanceof Date ? o.getTime() : o,
            i = n instanceof Date ? n.getTime() : n;
          return "number" == typeof r &&
            isFinite(r) &&
            "number" == typeof i &&
            isFinite(i)
            ? [r, i]
            : void 0;
        }
      }
      function Or(t) {
        for (var e = 0, o = 0, n = 0, r = t; n < r.length; n++) {
          var i = r[n];
          i < 0 ? (e += i) : (o += i);
        }
        return { min: e, max: o };
      }
      function _r(t, e, o) {
        void 0 === e && (e = 0), void 0 === o && (o = t.length);
        var n = [],
          r = t.length;
        if (r) for (var i = 0; i < o; i++) n.push(t[(e + i) % r]);
        return n;
      }
      var Rr = (function () {
        function t(t, e, o) {
          void 0 === t && (t = ""),
            void 0 === o && (o = 0),
            (this.x = 0),
            (this.y = 0),
            (this.subtreeLeft = NaN),
            (this.subtreeRight = NaN),
            (this.screenX = 0),
            (this.screenY = 0),
            (this.children = []),
            (this.leafCount = 0),
            (this.prelim = 0),
            (this.mod = 0),
            (this.ancestor = this),
            (this.change = 0),
            (this.shift = 0),
            (this.label = t),
            (this.parent = e),
            (this.depth = e ? e.depth + 1 : 0),
            (this.number = o);
        }
        return (
          (t.prototype.getLeftSibling = function () {
            return this.number > 0 && this.parent
              ? this.parent.children[this.number - 1]
              : void 0;
          }),
          (t.prototype.getLeftmostSibling = function () {
            return this.number > 0 && this.parent
              ? this.parent.children[0]
              : void 0;
          }),
          (t.prototype.nextLeft = function () {
            return this.children ? this.children[0] : this.thread;
          }),
          (t.prototype.nextRight = function () {
            return this.children
              ? this.children[this.children.length - 1]
              : this.thread;
          }),
          (t.prototype.getSiblings = function () {
            var t = this;
            return this.parent
              ? this.parent.children.filter(function (e, o) {
                  return o !== t.number;
                })
              : [];
          }),
          t
        );
      })();
      function Pr(t, e, o) {
        var n = o / (e.number - t.number);
        (e.change -= n),
          (e.shift += o),
          (t.change += n),
          (e.prelim += o),
          (e.mod += o);
      }
      function Tr(t, e, o) {
        return e.getSiblings().indexOf(t.ancestor) >= 0 ? t.ancestor : o;
      }
      function Ar(t, e) {
        var o = t.children;
        if (o.length) {
          var n = o[0];
          o.forEach(function (t) {
            Ar(t, e),
              (n = (function (t, e, o) {
                var n = t.getLeftSibling();
                if (n) {
                  for (
                    var r = t,
                      i = t,
                      s = n,
                      a = i.getLeftmostSibling(),
                      l = i.mod,
                      u = r.mod,
                      p = s.mod,
                      c = a.mod;
                    s.nextRight() && i.nextLeft();

                  ) {
                    (s = s.nextRight()),
                      (i = i.nextLeft()),
                      (a = a.nextLeft()),
                      ((r = r.nextRight()).ancestor = t);
                    var d = s.prelim + p - (i.prelim + l) + o;
                    d > 0 && (Pr(Tr(s, t, e), t, d), (l += d), (u += d)),
                      (p += s.mod),
                      (l += i.mod),
                      (c += a.mod),
                      (u += r.mod);
                  }
                  s.nextRight() && !r.nextRight()
                    ? ((r.thread = s.nextRight()), (r.mod += p - u))
                    : (i.nextLeft() &&
                        !a.nextLeft() &&
                        ((a.thread = i.nextLeft()), (a.mod += l - c)),
                      (e = t));
                }
                return e;
              })(t, n, e));
          }),
            (function (t) {
              var e = t.children;
              if (e)
                for (var o = 0, n = 0, r = e.length - 1; r >= 0; r--) {
                  var i = e[r];
                  (i.prelim += o),
                    (i.mod += o),
                    (o += i.shift + (n += i.change));
                }
            })(t);
          var r = (o[0].prelim + o[o.length - 1].prelim) / 2;
          (i = t.getLeftSibling())
            ? ((t.prelim = i.prelim + e), (t.mod = t.prelim - r))
            : (t.prelim = r);
        } else {
          var i = t.getLeftSibling();
          t.prelim = i ? i.prelim + e : 0;
        }
      }
      var Dr = (function () {
        function t() {
          (this.top = 1 / 0),
            (this.right = -1 / 0),
            (this.bottom = -1 / 0),
            (this.left = 1 / 0);
        }
        return (
          (t.prototype.update = function (t, e) {
            var o = e(t),
              n = o.x,
              r = o.y;
            n > this.right && (this.right = n),
              n < this.left && (this.left = n),
              r > this.bottom && (this.bottom = r),
              r < this.top && (this.top = r);
          }),
          t
        );
      })();
      function xr(t, e, o) {
        (t.x = t.prelim + e),
          (t.y = t.depth),
          o.update(t),
          t.children.forEach(function (n) {
            return xr(n, e + t.mod, o);
          });
      }
      function Fr(t) {
        var e = t.children,
          o = 0;
        e.forEach(function (t) {
          Fr(t), t.children.length ? (o += t.leafCount) : o++;
        }),
          (t.leafCount = o),
          e.length
            ? ((t.subtreeLeft = e[0].subtreeLeft),
              (t.subtreeRight = e[t.children.length - 1].subtreeRight),
              (t.x = (t.subtreeLeft + t.subtreeRight) / 2))
            : ((t.subtreeLeft = t.x), (t.subtreeRight = t.x));
      }
      function Nr(t) {
        var e = new Mr();
        return Ar(t, 1), xr(t, -t.prelim, e), Fr(t), e;
      }
      var Mr = (function () {
          function t() {
            (this.dimensions = new Dr()),
              (this.leafCount = 0),
              (this.nodes = []),
              (this.leafNodes = []),
              (this.nonLeafNodes = []),
              (this.depth = 0);
          }
          return (
            (t.prototype.update = function (t) {
              this.dimensions.update(t, function (t) {
                return { x: t.x, y: t.y };
              }),
                t.children.length
                  ? this.nonLeafNodes.push(t)
                  : (this.leafCount++, this.leafNodes.push(t)),
                t.depth > this.depth && (this.depth = t.depth),
                this.nodes.push(t);
            }),
            (t.prototype.resize = function (t, e, o, n, r) {
              void 0 === o && (o = 0),
                void 0 === n && (n = 0),
                void 0 === r && (r = !1);
              var i = this.leafCount - 1,
                s = this.depth,
                a = this.dimensions,
                l = 1,
                u = 1;
              t > 0 &&
                i &&
                ((l = t / i / ((a.right - a.left) / i)), r && (l = -l)),
                e > 0 && s && (u = e / s / ((a.bottom - a.top) / s));
              var p = new Dr();
              this.nodes.forEach(function (t) {
                (t.screenX = t.x * l),
                  (t.screenY = t.y * u),
                  p.update(t, function (t) {
                    return { x: t.screenX, y: t.screenY };
                  });
              });
              var c = -p.left,
                d = -p.top;
              this.nodes.forEach(function (t) {
                (t.screenX += c + o), (t.screenY += d + n);
              });
            }),
            t
          );
        })(),
        Ir = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Lr = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.grid = !1), e;
          }
          return Ir(e, t), e;
        })(cr),
        Gr = (function (t) {
          function e() {
            var e = t.call(this, new vr()) || this;
            (e.id = Jo(e)),
              (e.tickScale = new vr()),
              (e.group = new Hn()),
              (e.longestSeparatorLength = 0),
              (e.translation = { x: 0, y: 0 }),
              (e.rotation = 0),
              (e.line = { width: 1, color: "rgba(195, 195, 195, 1)" }),
              (e.label = new Lr()),
              (e.labelColor = "rgba(87, 87, 87, 1)");
            var o = e.group,
              n = e.scale,
              r = e.tickScale;
            return (
              (n.paddingOuter = 0.1),
              (n.paddingInner = 2 * n.paddingOuter),
              (e.requestedRange = n.range.slice()),
              (r.paddingInner = 1),
              (r.paddingOuter = 0),
              (e.gridLineSelection = jn.select(o).selectAll()),
              (e.axisLineSelection = jn.select(o).selectAll()),
              (e.separatorSelection = jn.select(o).selectAll()),
              (e.labelSelection = jn.select(o).selectAll()),
              e
            );
          }
          return (
            Ir(e, t),
            Object.defineProperty(e.prototype, "domain", {
              get: function () {
                return this.scale.domain;
              },
              set: function (t) {
                this.scale.domain = t;
                var e = (function (t, e) {
                  void 0 === e && (e = !0);
                  var o = new Rr(),
                    n = 0;
                  return (
                    e &&
                      t.forEach(function (t) {
                        return (n = Math.max(n, t.labels.length));
                      }),
                    t.forEach(function (t) {
                      if (e) for (; t.labels.length < n; ) t.labels.unshift("");
                      !(function (t, e) {
                        var o = e.labels.slice().reverse(),
                          n = o.length - 1;
                        o.forEach(function (e, o) {
                          var r = t.children,
                            i = br(r, function (t) {
                              return t.label === e;
                            }),
                            s = o !== n;
                          if (i && s) t = i;
                          else {
                            var a = new Rr(e, t);
                            (a.number = r.length), r.push(a), s && (t = a);
                          }
                        });
                      })(o, t);
                    }),
                    o
                  );
                })(t);
                this.tickTreeLayout = Nr(e);
                var o = t.slice();
                o.push(""), (this.tickScale.domain = o), this.resizeTickTree();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "range", {
              get: function () {
                return this.requestedRange.slice();
              },
              set: function (t) {
                (this.requestedRange = t.slice()), this.updateRange();
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.updateRange = function () {
              var t = this,
                e = t.requestedRange,
                o = t.visibleRange,
                n = (e[1] - e[0]) / (o[1] - o[0]),
                r = e[0] - n * o[0];
              (this.tickScale.range = t.scale.range = [r, r + n]),
                this.resizeTickTree();
            }),
            (e.prototype.resizeTickTree = function () {
              var t = this.scale,
                e = t.domain.length
                  ? [
                      t.convert(t.domain[0]),
                      t.convert(t.domain[t.domain.length - 1]),
                    ]
                  : t.range,
                o = this.tickTreeLayout,
                n = this.lineHeight;
              o &&
                o.resize(
                  Math.abs(e[1] - e[0]),
                  o.depth * n,
                  (Math.min(e[0], e[1]) || 0) + (t.bandwidth || 0) / 2,
                  -o.depth * n,
                  e[1] - e[0] < 0
                );
            }),
            Object.defineProperty(e.prototype, "lineHeight", {
              get: function () {
                return 1.5 * this.label.fontSize;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "gridLength", {
              get: function () {
                return this._gridLength;
              },
              set: function (t) {
                ((this._gridLength && !t) || (!this._gridLength && t)) &&
                  ((this.gridLineSelection = this.gridLineSelection
                    .remove()
                    .setData([])),
                  (this.labelSelection = this.labelSelection
                    .remove()
                    .setData([]))),
                  (this._gridLength = t);
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.update = function () {
              var t = this,
                e = this,
                o = e.group,
                n = e.scale,
                r = e.label,
                i = e.tickScale,
                s = e.requestedRange,
                a = n.range[0],
                l = n.range[1],
                u = Math.abs(l - a) / n.domain.length || 0,
                p = r.parallel,
                c = Xn(this.rotation),
                d = Math.abs(Math.cos(c)) < 1e-8,
                h = Yn(Xn(this.label.rotation));
              (o.translationX = this.translation.x),
                (o.translationY = this.translation.y),
                (o.rotation = c);
              var f = this.title;
              f && (f.node.visible = !1);
              var g = this.lineHeight,
                y = this.tickTreeLayout,
                m = n.ticks(),
                v = y ? y.nodes : [],
                C = !!y && y.depth > 1,
                w = i.ticks(),
                b = r.mirrored ? 1 : -1,
                E = Yn(c),
                S = !h && E >= 0 && E <= Math.PI ? -1 : 1,
                O = Yn(c - Math.PI / 2),
                _ = !h && O >= 0 && O <= Math.PI ? -1 : 1,
                R = this.gridLineSelection.setData(this.gridLength ? w : []);
              R.exit.remove();
              var P = R.enter.append(zn),
                T = R.merge(P),
                A = this.labelSelection.setData(v);
              A.exit.remove();
              var D = A.enter.append(gn),
                x = A.merge(D),
                F = r.formatter,
                N = 0;
              x.each(function (t, e, o) {
                (t.fontStyle = r.fontStyle),
                  (t.fontWeight = r.fontWeight),
                  (t.fontSize = r.fontSize),
                  (t.fontFamily = r.fontFamily),
                  (t.fill = r.color),
                  (t.textBaseline = -1 === S ? "bottom" : "hanging"),
                  (t.textAlign = "center"),
                  (t.translationX = e.screenY - 0.25 * r.fontSize),
                  (t.translationY = e.screenX),
                  0 === o
                    ? f && f.enabled && m.length > 0
                      ? ((t.visible = !0),
                        (t.text = f.text),
                        (t.fontSize = f.fontSize),
                        (t.fontStyle = f.fontStyle),
                        (t.fontWeight = f.fontWeight),
                        (t.fontFamily = f.fontFamily),
                        (t.textBaseline = "hanging"))
                      : (t.visible = !1)
                    : ((t.text = F
                        ? F({ value: String(e.label), index: o })
                        : String(e.label)),
                      (t.visible = e.screenX >= s[0] && e.screenX <= s[1]));
                var n = t.computeBBox();
                n && n.width > N && (N = n.width);
              });
              var M = b * r.padding,
                I = p ? (S * Math.PI) / 2 : -1 === _ ? Math.PI : 0,
                L = this.label.grid,
                G = [];
              x.each(function (e, o, n) {
                if (
                  ((e.x = M),
                  (e.rotationCenterX = M),
                  o.children.length
                    ? ((e.translationX -= N - g + t.label.padding),
                      (e.rotation = d ? I : -Math.PI / 2))
                    : ((e.rotation = h),
                      (e.textAlign = "end"),
                      (e.textBaseline = "middle")),
                  o.parent && C)
                ) {
                  var r = o.children.length
                    ? o.screenX - (o.leafCount * u) / 2
                    : o.screenX - u / 2;
                  if (o.children.length) {
                    var i = -N - 2 * t.label.padding + o.screenY;
                    G.push({
                      y: r,
                      x1: i + g,
                      x2: i,
                      toString: function () {
                        return String(n);
                      },
                    });
                  } else
                    (o.number !== o.children.length - 1 || L) &&
                      G.push({
                        y: r,
                        x1: 0,
                        x2: -N - 2 * t.label.padding,
                        toString: function () {
                          return String(n);
                        },
                      });
                }
              });
              var k = 0;
              G.forEach(function (t) {
                return (k = Math.min(k, t.x2));
              }),
                (this.longestSeparatorLength = Math.abs(k)),
                G.push({
                  y: Math.max(a, l),
                  x1: 0,
                  x2: k,
                  toString: function () {
                    return String(G.length);
                  },
                });
              var V = this.separatorSelection.setData(G);
              V.exit.remove();
              var W = V.enter.append(zn),
                H = V.merge(W);
              (this.separatorSelection = H),
                H.each(function (e, o, n) {
                  (e.x1 = o.x1),
                    (e.x2 = o.x2),
                    (e.y1 = o.y),
                    (e.y2 = o.y),
                    (e.visible = o.y >= s[0] - 1e-7 && o.y <= s[1] + 1e-7),
                    (e.stroke = t.tick.color),
                    (e.fill = void 0),
                    (e.strokeWidth = 1);
                }),
                (this.gridLineSelection = T),
                (this.labelSelection = x);
              for (var B = y ? y.depth + 1 : 1, j = [], U = 0; U < B; U++)
                j.push(U);
              var z = this.axisLineSelection.setData(j);
              z.exit.remove();
              var K = z.enter.append(zn),
                Y = z.merge(K);
              if (
                ((this.axisLineSelection = Y),
                Y.each(function (e, o, n) {
                  var r = n > 0 ? -N - 2 * t.label.padding - (n - 1) * g : 0;
                  (e.x1 = r),
                    (e.x2 = r),
                    (e.y1 = s[0]),
                    (e.y2 = s[1]),
                    (e.strokeWidth = t.line.width),
                    (e.stroke = t.line.color),
                    (e.visible = m.length > 0 && (0 === n || (L && C)));
                }),
                this.gridLength)
              ) {
                var X = this.gridStyle,
                  q = X.length;
                T.each(function (e, o, n) {
                  var r = Math.round(i.convert(o));
                  (e.x1 = 0),
                    (e.x2 = -b * t.gridLength),
                    (e.y1 = r),
                    (e.y2 = r),
                    (e.visible =
                      r >= s[0] &&
                      r <= s[1] &&
                      Math.abs(e.parent.translationY - a) > 1);
                  var l = X[n % q];
                  (e.stroke = l.stroke),
                    (e.strokeWidth = t.tick.width),
                    (e.lineDash = l.lineDash),
                    (e.fill = void 0);
                });
              }
            }),
            (e.prototype.computeBBox = function (t) {
              var e = !t || !t.excludeTitle,
                o = 1 / 0,
                n = -1 / 0,
                r = 1 / 0,
                i = -1 / 0;
              return (
                this.labelSelection.each(function (t, s, a) {
                  if (a > 0 || e) {
                    t.computeTransformMatrix();
                    var l = $o.flyweight(t.matrix),
                      u = t.computeBBox();
                    if (u) {
                      var p = l.transformBBox(u);
                      (o = Math.min(o, p.x)),
                        (n = Math.max(n, p.x + p.width)),
                        (r = Math.min(r, p.y)),
                        (i = Math.max(i, p.y + p.height));
                    }
                  }
                }),
                new Zo(
                  o,
                  r,
                  Math.max(n - o, this.longestSeparatorLength),
                  i - r
                )
              );
            }),
            (e.className = "GroupedCategoryAxis"),
            (e.type = "groupedCategory"),
            e
          );
        })(gr),
        kr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Vr = new Date(),
        Wr = new Date(),
        Hr = (function (t) {
          function e(e, o, n, r) {
            var i = t.call(this, e, o) || this;
            return (i._count = n), (i._field = r), i;
          }
          return (
            kr(e, t),
            (e.prototype.count = function (t, e) {
              return (
                Vr.setTime(+t),
                Wr.setTime(+e),
                this._floor(Vr),
                this._floor(Wr),
                Math.floor(this._count(Vr, Wr))
              );
            }),
            (e.prototype.every = function (t) {
              var e,
                o = this;
              if (((t = Math.floor(t)), isFinite(t) && t > 0))
                if (t > 1) {
                  var n = this._field;
                  e = this.filter(
                    n
                      ? function (e) {
                          return n(e) % t == 0;
                        }
                      : function (e) {
                          return o.count(0, e) % t == 0;
                        }
                  );
                } else e = this;
              return e;
            }),
            e
          );
        })(
          (function () {
            function t(t, e) {
              (this._floor = t), (this._offset = e);
            }
            return (
              (t.prototype.floor = function (t) {
                return (t = new Date(+t)), this._floor(t), t;
              }),
              (t.prototype.ceil = function (t) {
                return (
                  (t = new Date(+t - 1)),
                  this._floor(t),
                  this._offset(t, 1),
                  this._floor(t),
                  t
                );
              }),
              (t.prototype.round = function (t) {
                var e = this.floor(t),
                  o = this.ceil(t),
                  n = +t;
                return n - e.getTime() < o.getTime() - n ? e : o;
              }),
              (t.prototype.offset = function (t, e) {
                return (
                  void 0 === e && (e = 1),
                  (t = new Date(+t)),
                  this._offset(t, Math.floor(e)),
                  t
                );
              }),
              (t.prototype.range = function (t, e, o) {
                void 0 === o && (o = 1);
                var n,
                  r = [];
                if (((t = this.ceil(t)), (o = Math.floor(o)), t > e || o <= 0))
                  return r;
                do {
                  (n = new Date(+t)),
                    r.push(n),
                    this._offset(t, o),
                    this._floor(t);
                } while (n < t && t < e);
                return r;
              }),
              (t.prototype.filter = function (e) {
                var o = this;
                return new t(
                  function (t) {
                    if (t >= t)
                      for (; o._floor(t), !e(t); ) t.setTime(t.getTime() - 1);
                    return t;
                  },
                  function (t, n) {
                    if (t >= t)
                      if (n < 0)
                        for (; ++n <= 0; )
                          do {
                            o._offset(t, -1);
                          } while (!e(t));
                      else
                        for (; --n >= 0; )
                          do {
                            o._offset(t, 1);
                          } while (!e(t));
                    return t;
                  }
                );
              }),
              t
            );
          })()
        ),
        Br = new Hr(
          function (t) {
            return t;
          },
          function (t, e) {
            t.setTime(t.getTime() + e);
          },
          function (t, e) {
            return e.getTime() - t.getTime();
          }
        ),
        jr = 1e3,
        Ur = 6e4,
        zr = 36e5,
        Kr = 864e5,
        Yr = 6048e5,
        Xr = 2592e6,
        qr = 31536e6,
        Qr = new Hr(
          function (t) {
            t.setTime(t.getTime() - t.getMilliseconds());
          },
          function (t, e) {
            t.setTime(t.getTime() + e * jr);
          },
          function (t, e) {
            return (e.getTime() - t.getTime()) / jr;
          }
        ),
        Zr = new Hr(
          function (t) {
            t.setTime(t.getTime() - t.getMilliseconds() - t.getSeconds() * jr);
          },
          function (t, e) {
            t.setTime(t.getTime() + e * Ur);
          },
          function (t, e) {
            return (e.getTime() - t.getTime()) / Ur;
          },
          function (t) {
            return t.getMinutes();
          }
        ),
        $r = new Hr(
          function (t) {
            t.setTime(
              t.getTime() -
                t.getMilliseconds() -
                t.getSeconds() * jr -
                t.getMinutes() * Ur
            );
          },
          function (t, e) {
            t.setTime(t.getTime() + e * zr);
          },
          function (t, e) {
            return (e.getTime() - t.getTime()) / zr;
          },
          function (t) {
            return t.getHours();
          }
        ),
        Jr = new Hr(
          function (t) {
            t.setHours(0, 0, 0, 0);
          },
          function (t, e) {
            t.setDate(t.getDate() + e);
          },
          function (t, e) {
            var o = e.getTimezoneOffset() - t.getTimezoneOffset();
            return (e.getTime() - t.getTime() - o * Ur) / Kr;
          },
          function (t) {
            return t.getDate() - 1;
          }
        );
      function ti(t) {
        return new Hr(
          function (e) {
            e.setDate(e.getDate() - ((e.getDay() + 7 - t) % 7)),
              e.setHours(0, 0, 0, 0);
          },
          function (t, e) {
            t.setDate(t.getDate() + 7 * e);
          },
          function (t, e) {
            return (
              (e.getTime() -
                t.getTime() -
                (e.getTimezoneOffset() - t.getTimezoneOffset()) * Ur) /
              Yr
            );
          }
        );
      }
      var ei = ti(0),
        oi = ti(1),
        ni = (ti(2), ti(3), ti(4));
      ti(5), ti(6);
      var ri = new Hr(
          function (t) {
            t.setDate(1), t.setHours(0, 0, 0, 0);
          },
          function (t, e) {
            t.setMonth(t.getMonth() + e);
          },
          function (t, e) {
            return (
              e.getMonth() -
              t.getMonth() +
              12 * (e.getFullYear() - t.getFullYear())
            );
          },
          function (t) {
            return t.getMonth();
          }
        ),
        ii = new Hr(
          function (t) {
            t.setMonth(0, 1), t.setHours(0, 0, 0, 0);
          },
          function (t, e) {
            t.setFullYear(t.getFullYear() + e);
          },
          function (t, e) {
            return e.getFullYear() - t.getFullYear();
          },
          function (t) {
            return t.getFullYear();
          }
        ),
        si = new Hr(
          function (t) {
            t.setUTCHours(0, 0, 0, 0);
          },
          function (t, e) {
            t.setUTCDate(t.getUTCDate() + e);
          },
          function (t, e) {
            return (e.getTime() - t.getTime()) / Kr;
          },
          function (t) {
            return t.getUTCDate() - 1;
          }
        ),
        ai = new Hr(
          function (t) {
            t.setUTCMonth(0, 1), t.setUTCHours(0, 0, 0, 0);
          },
          function (t, e) {
            t.setUTCFullYear(t.getUTCFullYear() + e);
          },
          function (t, e) {
            return e.getUTCFullYear() - t.getUTCFullYear();
          },
          function (t) {
            return t.getUTCFullYear();
          }
        );
      function li(t) {
        return new Hr(
          function (e) {
            e.setUTCDate(e.getUTCDate() - ((e.getUTCDay() + 7 - t) % 7)),
              e.setHours(0, 0, 0, 0);
          },
          function (t, e) {
            t.setUTCDate(t.getUTCDate() + 7 * e);
          },
          function (t, e) {
            return (e.getTime() - t.getTime()) / Yr;
          }
        );
      }
      var ui = li(0),
        pi = li(1),
        ci = (li(2), li(3), li(4));
      function di(t) {
        if (t.y >= 0 && t.y < 100) {
          var e = new Date(-1, t.m, t.d, t.H, t.M, t.S, t.L);
          return e.setFullYear(t.y), e;
        }
        return new Date(t.y, t.m, t.d, t.H, t.M, t.S, t.L);
      }
      function hi(t) {
        if (t.y >= 0 && t.y < 100) {
          var e = new Date(Date.UTC(-1, t.m, t.d, t.H, t.M, t.S, t.L));
          return e.setUTCFullYear(t.y), e;
        }
        return new Date(Date.UTC(t.y, t.m, t.d, t.H, t.M, t.S, t.L));
      }
      function fi(t) {
        for (var e = {}, o = 0, n = t.length; o < n; o++)
          e[t[o].toLowerCase()] = o;
        return e;
      }
      function gi(t) {
        return { y: t, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0 };
      }
      li(5), li(6);
      var yi,
        mi = /^\s*\d+/,
        vi = /^%/,
        Ci = /[\\^$*+?|[\]().{}]/g,
        wi = function (t) {
          return t.replace(Ci, "\\$&");
        },
        bi = function (t) {
          return new RegExp("^(?:" + t.map(wi).join("|") + ")", "i");
        },
        Ei = { "-": "", _: " ", 0: "0" };
      function Si(t, e, o) {
        var n = t < 0 ? "-" : "",
          r = String(n ? -t : t),
          i = r.length;
        return n + (i < o ? new Array(o - i + 1).join(e) + r : r);
      }
      yi = (function (t) {
        var e = t.dateTime,
          o = t.date,
          n = t.time,
          r = t.periods,
          i = t.days,
          s = t.shortDays,
          a = t.months,
          l = t.shortMonths,
          u = bi(r),
          p = fi(r),
          c = bi(i),
          d = fi(i),
          h = bi(s),
          f = fi(s),
          g = bi(a),
          y = fi(a),
          m = bi(l),
          v = fi(l),
          C = {
            a: function (t) {
              return s[t.getDay()];
            },
            A: function (t) {
              return i[t.getDay()];
            },
            b: function (t) {
              return l[t.getMonth()];
            },
            B: function (t) {
              return a[t.getMonth()];
            },
            c: void 0,
            d: R,
            e: R,
            f: function (t, e) {
              return _(t, e) + "000";
            },
            H: function (t, e) {
              return Si(t.getHours(), e, 2);
            },
            I: function (t, e) {
              return Si(t.getHours() % 12 || 12, e, 2);
            },
            j: function (t, e) {
              return Si(1 + Jr.count(ii.floor(t), t), e, 3);
            },
            L: _,
            m: function (t, e) {
              return Si(t.getMonth() + 1, e, 2);
            },
            M: function (t, e) {
              return Si(t.getMinutes(), e, 2);
            },
            p: function (t) {
              return r[t.getHours() >= 12 ? 1 : 0];
            },
            Q: D,
            s: x,
            S: function (t, e) {
              return Si(t.getSeconds(), e, 2);
            },
            u: function (t) {
              var e = t.getDay();
              return 0 === e ? 7 : e;
            },
            U: function (t, e) {
              return Si(ei.count(ii.floor(t), t), e, 2);
            },
            V: function (t, e) {
              var o = t.getDay();
              t = o >= 4 || 0 === o ? ni.floor(t) : ni.ceil(t);
              var n = ii.floor(t);
              return Si(ni.count(n, t) + (4 === n.getDay() ? 1 : 0), e, 2);
            },
            w: function (t) {
              return t.getDay();
            },
            W: function (t, e) {
              return Si(oi.count(ii.floor(t), t), e, 2);
            },
            x: void 0,
            X: void 0,
            y: function (t, e) {
              return Si(t.getFullYear() % 100, e, 2);
            },
            Y: function (t, e) {
              return Si(t.getFullYear() % 1e4, e, 4);
            },
            Z: function (t) {
              var e = t.getTimezoneOffset();
              return (
                (e > 0 ? "-" : ((e *= -1), "+")) +
                Si(Math.floor(e / 60), "0", 2) +
                Si(e % 60, "0", 2)
              );
            },
            "%": A,
          },
          w = {
            a: function (t) {
              return s[t.getUTCDay()];
            },
            A: function (t) {
              return i[t.getUTCDay()];
            },
            b: function (t) {
              return l[t.getUTCMonth()];
            },
            B: function (t) {
              return a[t.getUTCMonth()];
            },
            c: void 0,
            d: T,
            e: T,
            f: function (t, e) {
              return P(t, e) + "000";
            },
            H: function (t, e) {
              return Si(t.getUTCHours(), e, 2);
            },
            I: function (t, e) {
              return Si(t.getUTCHours() % 12 || 12, e, 2);
            },
            j: function (t, e) {
              return Si(1 + si.count(ai.floor(t), t), e, 3);
            },
            L: P,
            m: function (t, e) {
              return Si(t.getUTCMonth() + 1, e, 2);
            },
            M: function (t, e) {
              return Si(t.getUTCMinutes(), e, 2);
            },
            p: function (t) {
              return r[t.getUTCHours() >= 12 ? 1 : 0];
            },
            Q: D,
            s: x,
            S: function (t, e) {
              return Si(t.getUTCSeconds(), e, 2);
            },
            u: function (t) {
              var e = t.getUTCDay();
              return 0 === e ? 7 : e;
            },
            U: function (t, e) {
              return Si(ui.count(ai.floor(t), t), e, 2);
            },
            V: function (t, e) {
              var o = t.getUTCDay();
              t = o >= 4 || 0 === o ? ci.floor(t) : ci.ceil(t);
              var n = ai.floor(t);
              return Si(ci.count(n, t) + (4 === n.getUTCDay() ? 1 : 0), e, 4);
            },
            w: function (t) {
              return t.getUTCDay();
            },
            W: function (t, e) {
              return Si(pi.count(ai.floor(t), t), e, 2);
            },
            x: void 0,
            X: void 0,
            y: function (t, e) {
              return Si(t.getUTCFullYear() % 100, e, 2);
            },
            Y: function (t, e) {
              return Si(t.getUTCFullYear() % 1e4, e, 4);
            },
            Z: function () {
              return "+0000";
            },
            "%": A,
          },
          b = {
            a: function (t, e, o) {
              var n = h.exec(e.slice(o));
              return n ? ((t.w = f[n[0].toLowerCase()]), o + n[0].length) : -1;
            },
            A: function (t, e, o) {
              var n = c.exec(e.slice(o));
              return n ? ((t.w = d[n[0].toLowerCase()]), o + n[0].length) : -1;
            },
            b: function (t, e, o) {
              var n = m.exec(e.slice(o));
              return n ? ((t.m = v[n[0].toLowerCase()]), o + n[0].length) : -1;
            },
            B: function (t, e, o) {
              var n = g.exec(e.slice(o));
              return n ? ((t.m = y[n[0].toLowerCase()]), o + n[0].length) : -1;
            },
            c: function (t, o, n) {
              return O(t, e, o, n);
            },
            d: N,
            e: N,
            f: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 6));
              return n
                ? ((t.L = Math.floor(parseFloat(n[0]) / 1e3)), o + n[0].length)
                : -1;
            },
            H: F,
            I: F,
            j: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 3));
              return n ? ((t.m = 0), (t.d = +n[0]), o + n[0].length) : -1;
            },
            L: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 3));
              return n ? ((t.L = +n[0]), o + n[0].length) : -1;
            },
            m: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 2));
              return n ? ((t.m = parseFloat(n[0]) - 1), o + n[0].length) : -1;
            },
            M: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 2));
              return n ? ((t.M = +n[0]), o + n[0].length) : -1;
            },
            p: function (t, e, o) {
              var n = u.exec(e.slice(o));
              return n ? ((t.p = p[n[0].toLowerCase()]), o + n[0].length) : -1;
            },
            Q: function (t, e, o) {
              var n = mi.exec(e.slice(o));
              return n ? ((t.Q = +n[0]), o + n[0].length) : -1;
            },
            s: function (t, e, o) {
              var n = mi.exec(e.slice(o));
              return n ? ((t.Q = 1e3 * +n[0]), o + n[0].length) : -1;
            },
            S: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 2));
              return n ? ((t.S = +n[0]), o + n[0].length) : -1;
            },
            u: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 1));
              return n ? ((t.u = +n[0]), o + n[0].length) : -1;
            },
            U: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 2));
              return n ? ((t.U = +n[0]), o + n[0].length) : -1;
            },
            V: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 2));
              return n ? ((t.V = +n[0]), o + n[0].length) : -1;
            },
            w: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 1));
              return n ? ((t.w = +n[0]), o + n[0].length) : -1;
            },
            W: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 2));
              return n ? ((t.W = +n[0]), o + n[0].length) : -1;
            },
            x: function (t, e, n) {
              return O(t, o, e, n);
            },
            X: function (t, e, o) {
              return O(t, n, e, o);
            },
            y: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 2));
              return n
                ? ((t.y = +n[0] + (+n[0] > 68 ? 1900 : 2e3)), o + n[0].length)
                : -1;
            },
            Y: function (t, e, o) {
              var n = mi.exec(e.slice(o, o + 4));
              return n ? ((t.y = +n[0]), o + n[0].length) : -1;
            },
            Z: function (t, e, o) {
              var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(e.slice(o, o + 6));
              return n
                ? ((t.Z = n[1] ? 0 : -(n[2] + (n[3] || "00"))), o + n[0].length)
                : -1;
            },
            "%": function (t, e, o) {
              var n = vi.exec(e.slice(o, o + 1));
              return n ? o + n[0].length : -1;
            },
          };
        function E(t, e) {
          return function (o) {
            var n = gi(1900);
            if (O(n, t, (o += ""), 0) == o.length) {
              if ("Q" in n) return new Date(n.Q);
              if (("p" in n && (n.H = (n.H % 12) + 12 * n.p), "V" in n)) {
                if (n.V < 1 || n.V > 53) return;
                if (("w" in n || (n.w = 1), "Z" in n)) {
                  var r = (i = hi(gi(n.y))).getUTCDay();
                  (i = r > 4 || 0 === r ? pi.ceil(i) : pi.floor(i)),
                    (i = si.offset(i, 7 * (n.V - 1))),
                    (n.y = i.getUTCFullYear()),
                    (n.m = i.getUTCMonth()),
                    (n.d = i.getUTCDate() + ((n.w + 6) % 7));
                } else {
                  var i;
                  (r = (i = e(gi(n.y))).getDay()),
                    (i = r > 4 || 0 === r ? oi.ceil(i) : oi.floor(i)),
                    (i = Jr.offset(i, 7 * (n.V - 1))),
                    (n.y = i.getFullYear()),
                    (n.m = i.getMonth()),
                    (n.d = i.getDate() + ((n.w + 6) % 7));
                }
              } else
                ("W" in n || "U" in n) &&
                  ("w" in n || (n.w = "u" in n ? n.u % 7 : "W" in n ? 1 : 0),
                  (r =
                    "Z" in n ? hi(gi(n.y)).getUTCDay() : e(gi(n.y)).getDay()),
                  (n.m = 0),
                  (n.d =
                    "W" in n
                      ? ((n.w + 6) % 7) + 7 * n.W - ((r + 5) % 7)
                      : n.w + 7 * n.U - ((r + 6) % 7)));
              return "Z" in n
                ? ((n.H += (n.Z / 100) | 0), (n.M += n.Z % 100), hi(n))
                : e(n);
            }
          };
        }
        function S(t, e) {
          return function (o) {
            var n = [],
              r = t.length,
              i = -1,
              s = 0;
            for (o instanceof Date || (o = new Date(+o)); ++i < r; )
              if (37 === t.charCodeAt(i)) {
                n.push(t.slice(s, i));
                var a = t.charAt(++i),
                  l = Ei[a];
                null != l ? (a = t.charAt(++i)) : (l = "e" === a ? " " : "0");
                var u = e[a];
                u && (a = u(o, l)), n.push(a), (s = i + 1);
              }
            return n.push(t.slice(s, i)), n.join("");
          };
        }
        function O(t, e, o, n) {
          for (var r = 0, i = e.length, s = o.length; r < i; ) {
            if (n >= s) return -1;
            var a = e.charCodeAt(r++);
            if (37 === a) {
              var l = e.charAt(r++),
                u = b[l in Ei ? e.charAt(r++) : l];
              if (!u || (n = u(t, o, n)) < 0) return -1;
            } else if (a != o.charCodeAt(n++)) return -1;
          }
          return n;
        }
        function _(t, e) {
          return Si(t.getMilliseconds(), e, 3);
        }
        function R(t, e) {
          return Si(t.getDate(), e, 2);
        }
        function P(t, e) {
          return Si(t.getUTCMilliseconds(), e, 3);
        }
        function T(t, e) {
          return Si(t.getUTCDate(), e, 2);
        }
        function A(t) {
          return "%";
        }
        function D(t) {
          return t.getTime();
        }
        function x(t) {
          return Math.floor(t.getTime() / 1e3);
        }
        function F(t, e, o) {
          var n = mi.exec(e.slice(o, o + 2));
          return n ? ((t.H = +n[0]), o + n[0].length) : -1;
        }
        function N(t, e, o) {
          var n = mi.exec(e.slice(o, o + 2));
          return n ? ((t.d = +n[0]), o + n[0].length) : -1;
        }
        return (
          (C.x = S(o, C)),
          (C.X = S(n, C)),
          (C.c = S(e, C)),
          (w.x = S(o, w)),
          (w.X = S(n, w)),
          (w.c = S(e, w)),
          {
            format: function (t) {
              var e = S(t, C);
              return (
                (e.toString = function () {
                  return t;
                }),
                e
              );
            },
            parse: function (t) {
              var e = E(t, di);
              return (
                (e.toString = function () {
                  return t;
                }),
                e
              );
            },
            utcFormat: function (t) {
              var e = S(t, w);
              return (
                (e.toString = function () {
                  return t;
                }),
                e
              );
            },
            utcParse: function (t) {
              var e = E(t, hi);
              return (
                (e.toString = function () {
                  return t;
                }),
                e
              );
            },
          }
        );
      })({
        dateTime: "%x, %X",
        date: "%-m/%-d/%Y",
        time: "%-I:%M:%S %p",
        periods: ["AM", "PM"],
        days: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        months: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        shortMonths: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
      });
      var Oi,
        _i = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ri = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.year = ii),
              (e.month = ri),
              (e.week = ei),
              (e.day = Jr),
              (e.hour = $r),
              (e.minute = Zr),
              (e.second = Qr),
              (e.millisecond = Br),
              (e.format = yi.format),
              (e.tickIntervals = [
                [e.second, 1, jr],
                [e.second, 5, 5e3],
                [e.second, 15, 15e3],
                [e.second, 30, 3e4],
                [e.minute, 1, Ur],
                [e.minute, 5, 3e5],
                [e.minute, 15, 9e5],
                [e.minute, 30, 18e5],
                [e.hour, 1, zr],
                [e.hour, 3, 108e5],
                [e.hour, 6, 216e5],
                [e.hour, 12, 432e5],
                [e.day, 1, Kr],
                [e.day, 2, 1728e5],
                [e.week, 1, Yr],
                [e.month, 1, Xr],
                [e.month, 3, 7776e6],
                [e.year, 1, qr],
              ]),
              (e.formatMillisecond = e.format(".%L")),
              (e.formatSecond = e.format(":%S")),
              (e.formatMinute = e.format("%I:%M")),
              (e.formatHour = e.format("%I %p")),
              (e.formatDay = e.format("%a %d")),
              (e.formatWeek = e.format("%b %d")),
              (e.formatMonth = e.format("%B")),
              (e.formatYear = e.format("%Y")),
              (e._domain = [new Date(2e3, 0, 1), new Date(2e3, 0, 2)]),
              e
            );
          }
          return (
            _i(e, t),
            (e.prototype.defaultTickFormat = function (t) {
              return (
                this.second.floor(t) < t
                  ? this.formatMillisecond
                  : this.minute.floor(t) < t
                  ? this.formatSecond
                  : this.hour.floor(t) < t
                  ? this.formatMinute
                  : this.day.floor(t) < t
                  ? this.formatHour
                  : this.month.floor(t) < t
                  ? this.week.floor(t) < t
                    ? this.formatDay
                    : this.formatWeek
                  : this.year.floor(t) < t
                  ? this.formatMonth
                  : this.formatYear
              )(t);
            }),
            (e.prototype.tickInterval = function (t, e, o, n) {
              var r;
              if ("number" == typeof t) {
                var i = t,
                  s = this.tickIntervals,
                  a = Math.abs(o - e) / i,
                  l = (function (t, e, o, n, r) {
                    void 0 === n && (n = 0), void 0 === r && (r = t.length);
                    for (
                      var i = (function (t) {
                        return function (e, o) {
                          return Rn(t(e), o);
                        };
                      })(function (t) {
                        return t[2];
                      });
                      n < r;

                    ) {
                      var s = (n + r) >>> 1;
                      i(t[s], e) < 0 ? (n = s + 1) : (r = s);
                    }
                    return n;
                  })(s, a);
                l === s.length
                  ? ((n = In(e / qr, o / qr, i)), (t = this.year))
                  : l
                  ? ((t = (r =
                      s[a / s[l - 1][2] < s[l][2] / a ? l - 1 : l])[0]),
                    (n = r[1]))
                  : ((n = Math.max(In(e, o, t), 1)), (t = this.millisecond));
              }
              return null == n ? t : t.every(n);
            }),
            Object.defineProperty(e.prototype, "domain", {
              get: function () {
                return t.prototype.getDomain.call(this).map(function (t) {
                  return new Date(t);
                });
              },
              set: function (e) {
                t.prototype.setDomain.call(
                  this,
                  Array.prototype.map.call(e, function (t) {
                    return t instanceof Date ? +t : +new Date(+t);
                  })
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.invert = function (e) {
              return new Date(t.prototype.invert.call(this, e));
            }),
            (e.prototype.ticks = function (e) {
              void 0 === e && (e = 10);
              var o = t.prototype.getDomain.call(this),
                n = o[0],
                r = o[o.length - 1],
                i = r < n;
              if (i) {
                var s = n;
                (n = r), (r = s);
              }
              var a = this.tickInterval(e, n, r),
                l = a ? a.range(n, r + 1) : [];
              return i ? l.reverse() : l;
            }),
            (e.prototype.tickFormat = function (t, e) {
              return null == e
                ? this.defaultTickFormat.bind(this)
                : this.format(e);
            }),
            (e.prototype.nice = function (e) {
              void 0 === e && (e = 10);
              var o = t.prototype.getDomain.call(this),
                n = this.tickInterval(e, o[0], o[o.length - 1]);
              n && (this.domain = this._nice(o, n));
            }),
            (e.prototype._nice = function (t, e) {
              var o,
                n,
                r = 0,
                i = (t = t.slice()).length - 1,
                s = t[r],
                a = t[i];
              return (
                a < s &&
                  ((r = (o = [i, r])[0]),
                  (i = o[1]),
                  (s = (n = [a, s])[0]),
                  (a = n[1])),
                (t[r] = e.floor(s)),
                (t[i] = e.ceil(a)),
                t
              );
            }),
            e
          );
        })(An),
        Pi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ti = (function (t) {
          function e() {
            var e = t.call(this, new Ri()) || this;
            return (e._nice = !0), (e.scale.clamp = !0), e;
          }
          return (
            Pi(e, t),
            Object.defineProperty(e.prototype, "nice", {
              get: function () {
                return this._nice;
              },
              set: function (t) {
                this._nice !== t &&
                  ((this._nice = t),
                  t && this.scale.nice && this.scale.nice(10));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "domain", {
              get: function () {
                return this.scale.domain;
              },
              set: function (t) {
                (this.scale.domain = t),
                  this.nice && this.scale.nice && this.scale.nice(10);
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.className = "TimeAxis"),
            (e.type = "time"),
            e
          );
        })(gr),
        Ai = (function () {
          function t(t, e, o) {
            var n = this;
            void 0 === t && (t = window.document),
              (this.id = Jo(this)),
              (this._dirty = !1),
              (this.animationFrameId = 0),
              (this._root = null),
              (this.debug = { renderFrameIndex: !1, renderBoundingBoxes: !1 }),
              (this._frameIndex = 0),
              (this.render = function () {
                var t,
                  e = n.ctx,
                  o = n.root,
                  r = n.pendingSize;
                (n.animationFrameId = 0),
                  r &&
                    ((t = n.canvas).resize.apply(t, r),
                    (n.pendingSize = void 0)),
                  !o || o.visible
                    ? (e.clearRect(0, 0, n.width, n.height),
                      o && (e.save(), o.visible && o.render(e), e.restore()),
                      n._frameIndex++,
                      n.debug.renderFrameIndex &&
                        ((e.fillStyle = "white"),
                        e.fillRect(0, 0, 40, 15),
                        (e.fillStyle = "black"),
                        e.fillText(n.frameIndex.toString(), 2, 10)),
                      (n.dirty = !1))
                    : (n.dirty = !1);
              }),
              (this.canvas = new hn(t, e, o)),
              (this.ctx = this.canvas.context);
          }
          return (
            Object.defineProperty(t.prototype, "container", {
              get: function () {
                return this.canvas.container;
              },
              set: function (t) {
                this.canvas.container = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.download = function (t) {
              this.canvas.download(t);
            }),
            (t.prototype.getDataURL = function (t) {
              return this.canvas.getDataURL(t);
            }),
            Object.defineProperty(t.prototype, "width", {
              get: function () {
                return this.pendingSize
                  ? this.pendingSize[0]
                  : this.canvas.width;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "height", {
              get: function () {
                return this.pendingSize
                  ? this.pendingSize[1]
                  : this.canvas.height;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.resize = function (t, e) {
              (t = Math.round(t)),
                (e = Math.round(e)),
                (t === this.width && e === this.height) ||
                  ((this.pendingSize = [t, e]), (this.dirty = !0));
            }),
            Object.defineProperty(t.prototype, "dirty", {
              get: function () {
                return this._dirty;
              },
              set: function (t) {
                t &&
                  !this._dirty &&
                  (this.animationFrameId = requestAnimationFrame(this.render)),
                  (this._dirty = t);
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.cancelRender = function () {
              this.animationFrameId &&
                (cancelAnimationFrame(this.animationFrameId),
                (this.animationFrameId = 0),
                (this._dirty = !1));
            }),
            Object.defineProperty(t.prototype, "root", {
              get: function () {
                return this._root;
              },
              set: function (t) {
                t !== this._root &&
                  (this._root && this._root._setScene(),
                  (this._root = t),
                  t &&
                    (null === t.parent &&
                      t.scene &&
                      t.scene !== this &&
                      (t.scene.root = null),
                    t._setScene(this)),
                  (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.appendPath = function (t) {
              var e = this.ctx,
                o = t.commands,
                n = t.params,
                r = o.length,
                i = 0;
              e.beginPath();
              for (var s = 0; s < r; s++)
                switch (o[s]) {
                  case "M":
                    e.moveTo(n[i++], n[i++]);
                    break;
                  case "L":
                    e.lineTo(n[i++], n[i++]);
                    break;
                  case "C":
                    e.bezierCurveTo(
                      n[i++],
                      n[i++],
                      n[i++],
                      n[i++],
                      n[i++],
                      n[i++]
                    );
                    break;
                  case "Z":
                    e.closePath();
                }
            }),
            Object.defineProperty(t.prototype, "frameIndex", {
              get: function () {
                return this._frameIndex;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.className = "Scene"),
            t
          );
        })(),
        Di = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        xi = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.angle = 0), e;
          }
          return (
            Di(e, t),
            (e.prototype.generateGradient = function (t, e) {
              var o = this.stops,
                n = ((this.angle % 360) * Math.PI) / 180,
                r = Math.cos(n),
                i = Math.sin(n),
                s = e.width,
                a = e.height,
                l = e.x + 0.5 * s,
                u = e.y + 0.5 * a;
              if (s > 0 && a > 0) {
                var p =
                    (Math.sqrt(a * a + s * s) *
                      Math.abs(Math.cos(n - Math.atan(a / s)))) /
                    2,
                  c = t.createLinearGradient(
                    l + r * p,
                    u + i * p,
                    l - r * p,
                    u - i * p
                  );
                return (
                  o.forEach(function (t) {
                    c.addColorStop(t.offset, t.color);
                  }),
                  c
                );
              }
              return "black";
            }),
            e
          );
        })(function () {
          this.stops = [];
        }),
        Fi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })();
      !(function (t) {
        (t[(t.Content = 0)] = "Content"), (t[(t.Border = 1)] = "Border");
      })(Oi || (Oi = {}));
      var Ni = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e._x = 0),
              (e._y = 0),
              (e._width = 10),
              (e._height = 10),
              (e._radius = 0),
              (e._crisp = !1),
              (e._gradient = !1),
              (e.effectiveStrokeWidth = dn.defaultStyles.strokeWidth),
              (e._sizing = Oi.Content),
              e
            );
          }
          return (
            Fi(e, t),
            Object.defineProperty(e.prototype, "x", {
              get: function () {
                return this._x;
              },
              set: function (t) {
                this._x !== t && ((this._x = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "y", {
              get: function () {
                return this._y;
              },
              set: function (t) {
                this._y !== t && ((this._y = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "width", {
              get: function () {
                return this._width;
              },
              set: function (t) {
                this._width !== t && ((this._width = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "height", {
              get: function () {
                return this._height;
              },
              set: function (t) {
                this._height !== t &&
                  ((this._height = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "radius", {
              get: function () {
                return this._radius;
              },
              set: function (t) {
                this._radius !== t &&
                  ((this._radius = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "crisp", {
              get: function () {
                return this._crisp;
              },
              set: function (t) {
                this._crisp !== t && ((this._crisp = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "gradient", {
              get: function () {
                return this._gradient;
              },
              set: function (t) {
                this._gradient !== t &&
                  ((this._gradient = t),
                  this.updateGradientInstance(),
                  (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.updateGradientInstance = function () {
              if (this.gradient) {
                var t = this.fill;
                if (t) {
                  var e = new xi();
                  (e.angle = 270),
                    (e.stops = [
                      {
                        offset: 0,
                        color: Sn.fromString(t).brighter().toString(),
                      },
                      {
                        offset: 1,
                        color: Sn.fromString(t).darker().toString(),
                      },
                    ]),
                    (this.gradientInstance = e);
                }
              } else this.gradientInstance = void 0;
            }),
            Object.defineProperty(e.prototype, "fill", {
              get: function () {
                return this._fill;
              },
              set: function (t) {
                this._fill !== t &&
                  ((this._fill = t),
                  this.updateGradientInstance(),
                  (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokeWidth", {
              get: function () {
                return this._strokeWidth;
              },
              set: function (t) {
                this._strokeWidth !== t &&
                  ((this._strokeWidth = t),
                  this.crisp || this.sizing === Oi.Border
                    ? (this.dirtyPath = !0)
                    : ((this.effectiveStrokeWidth = t), (this.dirty = !0)));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "sizing", {
              get: function () {
                return this._sizing;
              },
              set: function (t) {
                this._sizing !== t &&
                  ((this._sizing = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.updatePath = function () {
              var t = this.sizing === Oi.Border,
                e = this.path;
              e.clear();
              var o,
                n = this.x,
                r = this.y,
                i = this.width,
                s = this.height;
              if (t) {
                var a = i / 2,
                  l = s / 2;
                (o = Math.min(this.strokeWidth, a, l)),
                  (n = Math.min(n + o / 2, n + a)),
                  (r = Math.min(r + o / 2, r + l)),
                  (i = Math.max(i - o, 0)),
                  (s = Math.max(s - o, 0));
              } else o = this.strokeWidth;
              if (((this.effectiveStrokeWidth = o), this.crisp && !t)) {
                var u = this.alignment,
                  p = this.align;
                e.rect(p(u, n), p(u, r), p(u, n, i), p(u, r, s));
              } else e.rect(n, r, i, s);
            }),
            (e.prototype.computeBBox = function () {
              var t = this;
              return new Zo(t.x, t.y, t.width, t.height);
            }),
            (e.prototype.isPointInPath = function (t, e) {
              var o = this.transformPoint(t, e);
              return this.computeBBox().containsPoint(o.x, o.y);
            }),
            (e.prototype.isPointInStroke = function (t, e) {
              return !1;
            }),
            (e.prototype.fillStroke = function (t) {
              if (this.scene) {
                var e = this.scene.canvas.pixelRatio || 1;
                if (this.fill) {
                  (t.fillStyle = this.gradientInstance
                    ? this.gradientInstance.generateGradient(
                        t,
                        this.computeBBox()
                      )
                    : this.fill),
                    (t.globalAlpha = this.opacity * this.fillOpacity);
                  var o = this.fillShadow;
                  o &&
                    o.enabled &&
                    ((t.shadowColor = o.color),
                    (t.shadowOffsetX = o.xOffset * e),
                    (t.shadowOffsetY = o.yOffset * e),
                    (t.shadowBlur = o.blur * e)),
                    t.fill();
                }
                if (
                  ((t.shadowColor = "rgba(0, 0, 0, 0)"),
                  this.stroke && this.effectiveStrokeWidth)
                ) {
                  (t.strokeStyle = this.stroke),
                    (t.globalAlpha = this.opacity * this.strokeOpacity),
                    (t.lineWidth = this.effectiveStrokeWidth),
                    this.lineDash && t.setLineDash(this.lineDash),
                    this.lineDashOffset &&
                      (t.lineDashOffset = this.lineDashOffset),
                    this.lineCap && (t.lineCap = this.lineCap),
                    this.lineJoin && (t.lineJoin = this.lineJoin);
                  var n = this.strokeShadow;
                  n &&
                    n.enabled &&
                    ((t.shadowColor = n.color),
                    (t.shadowOffsetX = n.xOffset * e),
                    (t.shadowOffsetY = n.yOffset * e),
                    (t.shadowBlur = n.blur * e)),
                    t.stroke();
                }
              }
            }),
            (e.className = "Rect"),
            e
          );
        })(er),
        Mi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ii = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e._x = 0), (e._y = 0), (e._size = 12), e;
          }
          return (
            Mi(e, t),
            Object.defineProperty(e.prototype, "x", {
              get: function () {
                return this._x;
              },
              set: function (t) {
                this._x !== t && ((this._x = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "y", {
              get: function () {
                return this._y;
              },
              set: function (t) {
                this._y !== t && ((this._y = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "size", {
              get: function () {
                return this._size;
              },
              set: function (t) {
                this._size !== t &&
                  ((this._size = Math.abs(t)), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.computeBBox = function () {
              var t = this,
                e = t.size,
                o = e / 2;
              return new Zo(t.x - o, t.y - o, e, e);
            }),
            e
          );
        })(er),
        Li = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Gi = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Li(e, t),
            (e.prototype.updatePath = function () {
              var t = this,
                e = t.path,
                o = t.x,
                n = t.y,
                r = this.size / 2,
                i = this.alignment,
                s = this.align;
              e.clear(),
                e.moveTo(s(i, o - r), s(i, n - r)),
                e.lineTo(s(i, o + r), s(i, n - r)),
                e.lineTo(s(i, o + r), s(i, n + r)),
                e.lineTo(s(i, o - r), s(i, n + r)),
                e.closePath();
            }),
            (e.className = "Square"),
            e
          );
        })(Ii),
        ki = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Vi = (function (t) {
          function e() {
            var e = t.call(this) || this;
            (e.label = new gn()),
              (e._marker = new Gi()),
              (e._markerSize = 15),
              (e._spacing = 8);
            var o = e.label;
            return (
              (o.textBaseline = "middle"),
              (o.fontSize = 12),
              (o.fontFamily = "Verdana, sans-serif"),
              (o.fill = "black"),
              (o.y = hn.has.textMetrics ? 1 : 0),
              e.append([e.marker, o]),
              e.update(),
              e
            );
          }
          return (
            ki(e, t),
            Object.defineProperty(e.prototype, "text", {
              get: function () {
                return this.label.text;
              },
              set: function (t) {
                this.label.text = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontStyle", {
              get: function () {
                return this.label.fontStyle;
              },
              set: function (t) {
                this.label.fontStyle = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontWeight", {
              get: function () {
                return this.label.fontWeight;
              },
              set: function (t) {
                this.label.fontWeight = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontSize", {
              get: function () {
                return this.label.fontSize;
              },
              set: function (t) {
                this.label.fontSize = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontFamily", {
              get: function () {
                return this.label.fontFamily;
              },
              set: function (t) {
                this.label.fontFamily = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "color", {
              get: function () {
                return this.label.fill;
              },
              set: function (t) {
                this.label.fill = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "marker", {
              get: function () {
                return this._marker;
              },
              set: function (t) {
                this._marker !== t &&
                  (this.removeChild(this._marker),
                  (this._marker = t),
                  this.appendChild(t),
                  this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "markerSize", {
              get: function () {
                return this._markerSize;
              },
              set: function (t) {
                this._markerSize !== t &&
                  ((this._markerSize = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "markerFill", {
              get: function () {
                return this.marker.fill;
              },
              set: function (t) {
                this.marker.fill = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "markerStroke", {
              get: function () {
                return this.marker.stroke;
              },
              set: function (t) {
                this.marker.stroke = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "markerStrokeWidth", {
              get: function () {
                return this.marker.strokeWidth;
              },
              set: function (t) {
                this.marker.strokeWidth = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "markerFillOpacity", {
              get: function () {
                return this.marker.fillOpacity;
              },
              set: function (t) {
                this.marker.fillOpacity = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "markerStrokeOpacity", {
              get: function () {
                return this.marker.strokeOpacity;
              },
              set: function (t) {
                this.marker.strokeOpacity = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "opacity", {
              get: function () {
                return this.marker.opacity;
              },
              set: function (t) {
                (this.marker.opacity = t), (this.label.opacity = t);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "spacing", {
              get: function () {
                return this._spacing;
              },
              set: function (t) {
                this._spacing !== t && ((this._spacing = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.update = function () {
              var t = this.markerSize;
              (this.marker.size = t), (this.label.x = t / 2 + this.spacing);
            }),
            (e.className = "MarkerLabel"),
            e
          );
        })(Hn),
        Wi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Hi = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Wi(e, t),
            (e.prototype.updatePath = function () {
              var t = this,
                e = t.x,
                o = t.y,
                n = t.path,
                r = t.size / 2;
              n.clear(),
                n.cubicArc(e, o, r, r, 0, 0, 2 * Math.PI, 0),
                n.closePath();
            }),
            (e.className = "Circle"),
            e
          );
        })(Ii),
        Bi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ji = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Bi(e, t),
            (e.prototype.updatePath = function () {
              var t = this.x,
                e = this.y,
                o = this.path,
                n = this.size / 4.2;
              o.clear(),
                o.moveTo((t -= n), e),
                o.lineTo((t -= n), (e -= n)),
                o.lineTo((t += n), (e -= n)),
                o.lineTo((t += n), (e += n)),
                o.lineTo((t += n), (e -= n)),
                o.lineTo((t += n), (e += n)),
                o.lineTo((t -= n), (e += n)),
                o.lineTo((t += n), (e += n)),
                o.lineTo((t -= n), (e += n)),
                o.lineTo((t -= n), (e -= n)),
                o.lineTo((t -= n), (e += n)),
                o.lineTo((t -= n), (e -= n)),
                o.closePath();
            }),
            (e.className = "Cross"),
            e
          );
        })(Ii),
        Ui = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        zi = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ui(e, t),
            (e.prototype.updatePath = function () {
              var t = this.x,
                e = this.y,
                o = this.path,
                n = this.size / 2;
              o.clear(),
                o.moveTo(t, (e -= n)),
                o.lineTo((t += n), (e += n)),
                o.lineTo((t -= n), (e += n)),
                o.lineTo((t -= n), (e -= n)),
                o.lineTo((t += n), (e -= n)),
                o.closePath();
            }),
            (e.className = "Diamond"),
            e
          );
        })(Ii),
        Ki = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Yi = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ki(e, t),
            (e.prototype.rad = function (t) {
              return (t / 180) * Math.PI;
            }),
            (e.prototype.updatePath = function () {
              var t = this,
                e = t.x,
                o = t.path,
                n = t.rad,
                r = t.size / 4,
                i = this.y + r / 2;
              o.clear(),
                o.cubicArc(e - r, i - r, r, r, 0, n(130), n(330), 0),
                o.cubicArc(e + r, i - r, r, r, 0, n(220), n(50), 0),
                o.lineTo(e, i + r),
                o.closePath();
            }),
            (e.className = "Heart"),
            e
          );
        })(Ii),
        Xi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        qi = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Xi(e, t),
            (e.prototype.updatePath = function () {
              var t = this.x,
                e = this.y,
                o = this.path,
                n = this.size / 3,
                r = n / 2;
              o.clear(),
                o.moveTo((t -= r), (e -= r)),
                o.lineTo(t, (e -= n)),
                o.lineTo((t += n), e),
                o.lineTo(t, (e += n)),
                o.lineTo((t += n), e),
                o.lineTo(t, (e += n)),
                o.lineTo((t -= n), e),
                o.lineTo(t, (e += n)),
                o.lineTo((t -= n), e),
                o.lineTo(t, (e -= n)),
                o.lineTo((t -= n), e),
                o.lineTo(t, (e -= n)),
                o.closePath();
            }),
            (e.className = "Plus"),
            e
          );
        })(Ii),
        Qi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Zi = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Qi(e, t),
            (e.prototype.updatePath = function () {
              var t = this.x,
                e = this.y,
                o = this.path,
                n = 1.1 * this.size;
              o.clear(),
                o.moveTo(t, (e -= 0.48 * n)),
                o.lineTo((t += 0.5 * n), (e += 0.87 * n)),
                o.lineTo((t -= n), e),
                o.closePath();
            }),
            (e.className = "Triangle"),
            e
          );
        })(Ii);
      function $i(t) {
        if ((void 0 === t && (t = Gi), "string" == typeof t))
          switch (t) {
            case "circle":
              return Hi;
            case "cross":
              return ji;
            case "diamond":
              return zi;
            case "heart":
              return Yi;
            case "plus":
              return qi;
            case "triangle":
              return Zi;
            default:
              return Gi;
          }
        return "function" == typeof t ? t : Gi;
      }
      var Ji,
        ts,
        es = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        os = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.Vertical = 0)] = "Vertical"),
          (t[(t.Horizontal = 1)] = "Horizontal");
      })(Ji || (Ji = {})),
        (function (t) {
          (t.Top = "top"),
            (t.Right = "right"),
            (t.Bottom = "bottom"),
            (t.Left = "left");
        })(ts || (ts = {}));
      var ns = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.color = "black"),
              (e.fontSize = 12),
              (e.fontFamily = "Verdana, sans-serif"),
              e
            );
          }
          return (
            es(e, t),
            os([vn("change")], e.prototype, "color", void 0),
            os([vn("layoutChange")], e.prototype, "fontStyle", void 0),
            os([vn("layoutChange")], e.prototype, "fontWeight", void 0),
            os([vn("layoutChange")], e.prototype, "fontSize", void 0),
            os([vn("layoutChange")], e.prototype, "fontFamily", void 0),
            e
          );
        })(mn),
        rs = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.size = 15), (e.padding = 8), (e.strokeWidth = 1), e;
          }
          return (
            es(e, t),
            os([vn("layoutChange")], e.prototype, "size", void 0),
            os([vn("layoutChange")], e.prototype, "shape", void 0),
            os([vn("layoutChange")], e.prototype, "padding", void 0),
            os([vn("change")], e.prototype, "strokeWidth", void 0),
            e
          );
        })(mn),
        is = (function (t) {
          function e() {
            var e = t.call(this) || this;
            (e.marker = new rs()),
              (e.label = new ns()),
              (e.paddingX = 16),
              (e.paddingY = 8);
            var o = function () {
              return e.fireEvent({ type: "change" });
            };
            e.marker.addEventListener("change", o),
              e.label.addEventListener("change", o);
            var n = function () {
              return e.fireEvent({ type: "layoutChange" });
            };
            return (
              e.marker.addEventListener("layoutChange", n),
              e.label.addEventListener("layoutChange", n),
              e
            );
          }
          return (
            es(e, t),
            os([vn("layoutChange")], e.prototype, "paddingX", void 0),
            os([vn("layoutChange")], e.prototype, "paddingY", void 0),
            e
          );
        })(mn),
        ss = (function (t) {
          function e() {
            var e = t.call(this) || this;
            return (
              (e.id = Jo(e)),
              (e.group = new Hn()),
              (e.itemSelection = jn.select(e.group).selectAll()),
              (e.oldSize = [0, 0]),
              (e.item = new is()),
              (e.data = []),
              (e.enabled = !0),
              (e.orientation = Ji.Vertical),
              (e.position = ts.Right),
              (e.spacing = 20),
              (e._size = [0, 0]),
              e.addPropertyListener("data", e.onDataChange),
              e.addPropertyListener("enabled", e.onEnabledChange),
              e.addPropertyListener("position", e.onPositionChange),
              e.item.marker.addPropertyListener(
                "shape",
                e.onMarkerShapeChange,
                e
              ),
              e.addEventListener("change", e.update),
              e.item.addEventListener("change", function () {
                return e.fireEvent({ type: "change" });
              }),
              e.item.addEventListener("layoutChange", function () {
                return e.fireEvent({ type: "layoutChange" });
              }),
              e
            );
          }
          return (
            es(e, t),
            Object.defineProperty(e.prototype, "layoutHorizontalSpacing", {
              get: function () {
                return this.item.paddingX;
              },
              set: function (t) {
                this.item.paddingX = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "layoutVerticalSpacing", {
              get: function () {
                return this.item.paddingY;
              },
              set: function (t) {
                this.item.paddingY = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "itemSpacing", {
              get: function () {
                return this.item.marker.padding;
              },
              set: function (t) {
                this.item.marker.padding = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "markerShape", {
              get: function () {
                return this.item.marker.shape;
              },
              set: function (t) {
                this.item.marker.shape = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "markerSize", {
              get: function () {
                return this.item.marker.size;
              },
              set: function (t) {
                this.item.marker.size = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokeWidth", {
              get: function () {
                return this.item.marker.strokeWidth;
              },
              set: function (t) {
                this.item.marker.strokeWidth = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "color", {
              get: function () {
                return this.item.label.color;
              },
              set: function (t) {
                this.item.label.color = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontStyle", {
              get: function () {
                return this.item.label.fontStyle;
              },
              set: function (t) {
                this.item.label.fontStyle = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontWeight", {
              get: function () {
                return this.item.label.fontWeight;
              },
              set: function (t) {
                this.item.label.fontWeight = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontSize", {
              get: function () {
                return this.item.label.fontSize;
              },
              set: function (t) {
                this.item.label.fontSize = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fontFamily", {
              get: function () {
                return this.item.label.fontFamily;
              },
              set: function (t) {
                this.item.label.fontFamily = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "size", {
              get: function () {
                return this._size;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.onDataChange = function (t) {
              this.group.visible = t.value.length > 0 && this.enabled;
            }),
            (e.prototype.onEnabledChange = function (t) {
              this.group.visible = t.value && this.data.length > 0;
            }),
            (e.prototype.onPositionChange = function (t) {
              switch (t.value) {
                case "right":
                case "left":
                  this.orientation = Ji.Vertical;
                  break;
                case "bottom":
                case "top":
                  this.orientation = Ji.Horizontal;
              }
            }),
            (e.prototype.onMarkerShapeChange = function () {
              (this.itemSelection = this.itemSelection.setData([])),
                this.itemSelection.exit.remove();
            }),
            (e.prototype.performLayout = function (t, e) {
              var o = this.item,
                n = o.marker,
                r = o.paddingX,
                i = o.paddingY,
                s = this.itemSelection.setData(this.data, function (t, e) {
                  var o = $i(n.shape || e.marker.shape);
                  return e.id + "-" + e.itemId + "-" + o.name;
                });
              s.exit.remove();
              var a = s.enter.append(Vi).each(function (t, e) {
                  var o = $i(n.shape || e.marker.shape);
                  t.marker = new o();
                }),
                l = (this.itemSelection = s.merge(a)),
                u = l.size,
                p = [],
                c = this.item.marker,
                d = this.item.label;
              l.each(function (t, e) {
                (t.markerSize = c.size),
                  (t.spacing = c.padding),
                  (t.fontStyle = d.fontStyle),
                  (t.fontWeight = d.fontWeight),
                  (t.fontSize = d.fontSize),
                  (t.fontFamily = d.fontFamily),
                  (t.text = e.label.text),
                  p.push(t.computeBBox());
              });
              var h = p.length && p[0].height,
                f = 0,
                g = 0,
                y = 0,
                m = 0;
              switch (this.orientation) {
                case Ji.Horizontal:
                  if (!(isFinite(t) && t > 0)) return !1;
                  f = 0;
                  var v = 0;
                  do {
                    var C = 0;
                    (v = 0), (g = 0), f++;
                    for (var w = 0; w < u; )
                      (S = p[w]).width > g && (g = S.width),
                        ++w % f == 0 && ((C += g), (g = 0), v++);
                    w % f != 0 && ((C += g), v++), (y = C + (v - 1) * r);
                  } while (y > t && v > 1);
                  m = h * f + (f - 1) * i;
                  break;
                case Ji.Vertical:
                  if (!(isFinite(e) && e > 0)) return !1;
                  f = 2 * u;
                  do {
                    (f = (f >> 1) + (f % 2)), (g = 0), (C = 0);
                    var b = 0,
                      E = 0;
                    for (w = 0; w < u; ) {
                      var S = p[w];
                      E || (b += S.height),
                        S.width > g && (g = S.width),
                        ++w % f == 0 && ((C += g), (g = 0), E++);
                    }
                    w % f != 0 && ((C += g), E++),
                      (y = C + (E - 1) * r),
                      (m = b + (f - 1) * i);
                  } while (m > e && f > 1);
              }
              var O = (t - y) / 2,
                _ = (e - m) / 2,
                R = 0,
                P = 0;
              (g = 0),
                l.each(function (t, e, o) {
                  (t.translationX = Math.floor(O + R)),
                    (t.translationY = Math.floor(_ + P));
                  var n = p[o];
                  n.width > g && (g = n.width),
                    (o + 1) % f == 0
                      ? ((R += g + r), (P = 0), (g = 0))
                      : (P += n.height + i);
                }),
                this.update();
              var T = this._size,
                A = this.oldSize;
              (T[0] = y),
                (T[1] = m),
                (T[0] === A[0] && T[1] === A[1]) ||
                  ((A[0] = T[0]), (A[1] = T[1]));
            }),
            (e.prototype.update = function () {
              var t = this;
              this.itemSelection.each(function (e, o) {
                var n = o.marker;
                (e.markerFill = n.fill),
                  (e.markerStroke = n.stroke),
                  (e.markerStrokeWidth = t.item.marker.strokeWidth),
                  (e.markerFillOpacity = n.fillOpacity),
                  (e.markerStrokeOpacity = n.strokeOpacity),
                  (e.opacity = o.enabled ? 1 : 0.5),
                  (e.color = t.item.label.color);
              });
            }),
            (e.prototype.getDatumForPoint = function (t, e) {
              var o = this.group.pickNode(t, e);
              if (o && o.parent) return o.parent.datum;
            }),
            (e.className = "Legend"),
            os([vn("layoutChange")], e.prototype, "data", void 0),
            os([vn("layoutChange")], e.prototype, "enabled", void 0),
            os([vn("layoutChange")], e.prototype, "orientation", void 0),
            os([vn("layoutChange")], e.prototype, "position", void 0),
            os([vn("layoutChange")], e.prototype, "spacing", void 0),
            e
          );
        })(mn),
        as = (function () {
          function t() {}
          return (
            (t.init = function () {
              var t = this,
                e = window.ResizeObserver;
              e
                ? (this.resizeObserver = new e(function (e) {
                    for (var o = 0, n = e; o < n.length; o++) {
                      var r = n[o],
                        i = r.contentRect,
                        s = i.width,
                        a = i.height;
                      t.checkSize(t.elements.get(r.target), r.target, s, a);
                    }
                  }))
                : window.setInterval(function () {
                    t.elements.forEach(function (e, o) {
                      t.checkSize(
                        e,
                        o,
                        o.clientWidth ? o.clientWidth : 0,
                        o.clientHeight ? o.clientHeight : 0
                      );
                    });
                  }, 100),
                (this.ready = !0);
            }),
            (t.checkSize = function (t, e, o, n) {
              t &&
                ((t.size && o === t.size.width && n === t.size.height) ||
                  ((t.size = { width: o, height: n }), t.cb(t.size, e)));
            }),
            (t.observe = function (t, e) {
              this.ready || this.init(),
                this.unobserve(t),
                this.resizeObserver && this.resizeObserver.observe(t),
                this.elements.set(t, { cb: e });
            }),
            (t.unobserve = function (t) {
              this.resizeObserver && this.resizeObserver.unobserve(t),
                this.elements.delete(t);
            }),
            (t.elements = new Map()),
            (t.requestAnimationFrameId = 0),
            (t.ready = !1),
            t
          );
        })(),
        ls = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        us = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ps = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.enabled = !0), e;
          }
          return (
            ls(e, t), us([vn("change")], e.prototype, "enabled", void 0), e
          );
        })(mn),
        cs = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.id = Jo(e)),
              (e.group = new Hn()),
              (e.directions = [lr.X, lr.Y]),
              (e.tooltipEnabled = !0),
              (e.data = void 0),
              (e.visible = !0),
              (e.showInLegend = !0),
              (e.scheduleLayout = function () {
                e.fireEvent({ type: "layoutChange" });
              }),
              (e.scheduleData = function () {
                e.fireEvent({ type: "dataChange" });
              }),
              e
            );
          }
          return (
            ls(e, t),
            Object.defineProperty(e.prototype, "type", {
              get: function () {
                return this.constructor.type || "";
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.setColors = function (t, e) {}),
            (e.prototype.getKeys = function (t) {
              var e = this,
                o = this.directionKeys,
                n = o && o[t],
                r = [];
              return (
                n &&
                  n.forEach(function (t) {
                    var o = e[t];
                    o && (Array.isArray(o) ? r.push.apply(r, o) : r.push(o));
                  }),
                r
              );
            }),
            (e.prototype.getNodeData = function () {
              return [];
            }),
            (e.prototype.fireNodeClickEvent = function (t, e) {}),
            (e.prototype.toggleSeriesItem = function (t, e) {
              this.visible = e;
            }),
            (e.prototype.onHighlightChange = function () {}),
            (e.prototype.fixNumericExtent = function (t, e) {
              if (!t) return [0, 1];
              var o = t[0],
                n = t[1];
              if (
                (o instanceof Date && (o = o.getTime()),
                n instanceof Date && (n = n.getTime()),
                o === n)
              ) {
                var r = Math.abs(0.01 * o);
                (o -= r), (n += r);
              }
              return (isFinite(o) && isFinite(n)) || ((o = 0), (n = 1)), [o, n];
            }),
            us([vn("dataChange")], e.prototype, "data", void 0),
            us([vn("dataChange")], e.prototype, "visible", void 0),
            us([vn("layoutChange")], e.prototype, "showInLegend", void 0),
            e
          );
        })(mn),
        ds = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        hs = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        fs = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.enabled = !0),
              (e.shape = Hi),
              (e.size = 6),
              (e.maxSize = 30),
              (e.strokeWidth = 1),
              e
            );
          }
          return (
            ds(e, t),
            hs([vn("change")], e.prototype, "enabled", void 0),
            hs([vn("change")], e.prototype, "shape", void 0),
            hs([vn("change")], e.prototype, "size", void 0),
            hs([vn("change")], e.prototype, "maxSize", void 0),
            hs([vn("change")], e.prototype, "domain", void 0),
            hs([vn("change")], e.prototype, "fill", void 0),
            hs([vn("change")], e.prototype, "stroke", void 0),
            hs([vn("change")], e.prototype, "strokeWidth", void 0),
            e
          );
        })(mn),
        gs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ys = (function (t) {
          function e() {
            var e,
              o = (null !== t && t.apply(this, arguments)) || this;
            return (
              (o.directionKeys =
                (((e = {})[lr.X] = ["xKey"]), (e[lr.Y] = ["yKey"]), e)),
              o
            );
          }
          return gs(e, t), e;
        })(cs),
        ms = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return gs(e, t), e;
        })(fs),
        vs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Cs = function () {
          return (Cs =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        ws = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      function bs(t, e) {
        if ("string" == typeof t) return t;
        e = e || {};
        var o = t.content,
          n = t.title,
          r = void 0 === n ? e.title || void 0 : n,
          i = t.color,
          s = t.backgroundColor;
        return (
          (r
            ? '<div class="' +
              Os.defaultTooltipClass +
              '-title"\n        style="color: ' +
              (void 0 === i ? e.color || "white" : i) +
              "; background-color: " +
              (void 0 === s ? e.backgroundColor || "#888" : s) +
              '">' +
              r +
              "</div>"
            : "") +
          '<div class="' +
          Os.defaultTooltipClass +
          '-content">' +
          (void 0 === o ? e.content || "" : o) +
          "</div>"
        );
      }
      var Es,
        Ss = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            (o.element = document.createElement("div")),
              (o.enabled = !0),
              (o.class = Os.defaultTooltipClass),
              (o.delay = 0),
              (o.tracking = !0),
              (o.showTimeout = 0),
              (o.constrained = !1),
              (o.chart = e),
              (o.class = "");
            var n = document.body;
            if ((n.appendChild(o.element), window.IntersectionObserver)) {
              var r = o.chart.scene.canvas.element,
                i = new IntersectionObserver(
                  function (t) {
                    for (var e = 0, n = t; e < n.length; e++) {
                      var i = n[e];
                      i.target === r &&
                        0 === i.intersectionRatio &&
                        o.toggle(!1);
                    }
                  },
                  { root: n }
                );
              i.observe(r), (o.observer = i);
            }
            return o;
          }
          return (
            vs(e, t),
            (e.prototype.isVisible = function () {
              var t = this.element;
              if (t.classList)
                return !t.classList.contains(
                  Os.defaultTooltipClass + "-hidden"
                );
              var e = t.getAttribute("class");
              return (
                !!e &&
                e.split(" ").indexOf(Os.defaultTooltipClass + "-hidden") < 0
              );
            }),
            (e.prototype.updateClass = function (t, e) {
              var o = [Os.defaultTooltipClass, this.class];
              !0 !== t && o.push(Os.defaultTooltipClass + "-hidden"),
                !0 !== e && o.push(Os.defaultTooltipClass + "-arrow"),
                this.element.setAttribute("class", o.join(" "));
            }),
            (e.prototype.show = function (t, e, o) {
              var n = this;
              void 0 === o && (o = !1);
              var r = this.element;
              if (void 0 !== e) r.innerHTML = e;
              else if (!r.innerHTML) return;
              var i = t.pageX - r.clientWidth / 2,
                s = t.pageY - r.clientHeight - 8;
              if (((this.constrained = !1), this.chart.container)) {
                var a = r.getBoundingClientRect(),
                  l = window.innerWidth - a.width;
                i < 0
                  ? ((i = 0), this.updateClass(!0, (this.constrained = !0)))
                  : i > l &&
                    ((i = l), this.updateClass(!0, (this.constrained = !0))),
                  s < window.pageYOffset &&
                    ((s = t.pageY + 20),
                    this.updateClass(!0, (this.constrained = !0)));
              }
              if (
                ((r.style.left = i + "px"),
                (r.style.top = s + "px"),
                this.delay > 0 && !o)
              )
                return (
                  this.toggle(!1),
                  void (this.showTimeout = window.setTimeout(function () {
                    n.toggle(!0);
                  }, this.delay))
                );
              this.toggle(!0);
            }),
            (e.prototype.toggle = function (t) {
              t ||
                (window.clearTimeout(this.showTimeout),
                this.chart.lastPick &&
                  !this.delay &&
                  (this.chart.dehighlightDatum(),
                  (this.chart.lastPick = void 0))),
                this.updateClass(t, this.constrained);
            }),
            (e.prototype.destroy = function () {
              var t = this.element.parentNode;
              t && t.removeChild(this.element),
                this.observer &&
                  this.observer.unobserve(this.chart.scene.canvas.element);
            }),
            ws([vn()], e.prototype, "enabled", void 0),
            ws([vn()], e.prototype, "class", void 0),
            ws([vn()], e.prototype, "delay", void 0),
            ws([vn()], e.prototype, "tracking", void 0),
            e
          );
        })(mn),
        Os = (function (t) {
          function e(o) {
            void 0 === o && (o = window.document);
            var n = t.call(this) || this;
            (n.id = Jo(n)),
              (n.background = new Ni()),
              (n.legend = new ss()),
              (n.legendAutoPadding = new Qo()),
              (n.captionAutoPadding = 0),
              (n._container = void 0),
              (n._data = []),
              (n._autoSize = !1),
              (n._tooltipClass = e.defaultTooltipClass),
              (n.tooltipTracking = !0),
              (n.padding = new Qo(20)),
              (n._axes = []),
              (n._series = []),
              (n._axesChanged = !1),
              (n._seriesChanged = !1),
              (n.layoutCallbackId = 0),
              (n._performLayout = function () {
                (n.layoutCallbackId = 0),
                  (n.background.width = n.width),
                  (n.background.height = n.height),
                  n.performLayout(),
                  n.layoutPending || n.fireEvent({ type: "layoutDone" });
              }),
              (n.dataCallbackId = 0),
              (n._onMouseDown = n.onMouseDown.bind(n)),
              (n._onMouseUp = n.onMouseUp.bind(n)),
              (n._onMouseMove = n.onMouseMove.bind(n)),
              (n._onMouseOut = n.onMouseOut.bind(n)),
              (n._onClick = n.onClick.bind(n));
            var r = new Hn(),
              i = n.background;
            (i.fill = "white"), r.appendChild(i);
            var s = (n._element = o.createElement("div"));
            s.setAttribute("class", "ag-chart-wrapper");
            var a = new Ai(o);
            (n.scene = a), (a.root = r), (a.container = s), (n.autoSize = !0);
            var l = n.legend;
            if (
              (l.addEventListener("layoutChange", n.onLayoutChange, n),
              l.addPropertyListener("position", n.onLegendPositionChange, n),
              (n.tooltip = new Ss(n)),
              n.tooltip.addPropertyListener("class", function () {
                return n.tooltip.toggle();
              }),
              e.tooltipDocuments.indexOf(o) < 0)
            ) {
              var u = o.createElement("style");
              (u.innerHTML =
                '\n.ag-chart-tooltip {\n    display: table;\n    position: absolute;\n    user-select: none;\n    pointer-events: none;\n    white-space: nowrap;\n    z-index: 99999;\n    font: 12px Verdana, sans-serif;\n    color: black;\n    background: rgb(244, 244, 244);\n    border-radius: 5px;\n    box-shadow: 0 0 1px rgba(3, 3, 3, 0.7), 0.5vh 0.5vh 1vh rgba(3, 3, 3, 0.25);\n}\n\n.ag-chart-tooltip-hidden {\n    top: -10000px !important;\n}\n\n.ag-chart-tooltip-title {\n    font-weight: bold;\n    padding: 7px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    color: white;\n    background-color: #888888;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n}\n\n.ag-chart-tooltip-content {\n    padding: 7px;\n    line-height: 1.7em;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    overflow: hidden;\n}\n\n.ag-chart-tooltip-content:empty {\n    padding: 0;\n    height: 7px;\n}\n\n.ag-chart-tooltip-arrow::before {\n    content: "";\n\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n\n    border: 6px solid #989898;\n\n    border-left-color: transparent;\n    border-right-color: transparent;\n    border-top-color: #989898;\n    border-bottom-color: transparent;\n\n    width: 0;\n    height: 0;\n\n    margin: 0 auto;\n}\n\n.ag-chart-tooltip-arrow::after {\n    content: "";\n\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n\n    border: 5px solid black;\n\n    border-left-color: transparent;\n    border-right-color: transparent;\n    border-top-color: rgb(244, 244, 244);\n    border-bottom-color: transparent;\n\n    width: 0;\n    height: 0;\n\n    margin: 0 auto;\n}\n\n.ag-chart-wrapper {\n    box-sizing: border-box;\n    overflow: hidden;\n}\n'),
                o.head.insertBefore(u, o.head.querySelector("style")),
                e.tooltipDocuments.push(o);
            }
            return (
              n.setupDomListeners(a.canvas.element),
              n.addPropertyListener("title", n.onCaptionChange),
              n.addPropertyListener("subtitle", n.onCaptionChange),
              n.addEventListener("layoutChange", function () {
                return (n.layoutPending = !0);
              }),
              n
            );
          }
          return (
            vs(e, t),
            Object.defineProperty(e.prototype, "container", {
              get: function () {
                return this._container;
              },
              set: function (t) {
                if (this._container !== t) {
                  var e = this.element.parentNode;
                  null != e && e.removeChild(this.element),
                    t && t.appendChild(this.element),
                    (this._container = t);
                }
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "data", {
              get: function () {
                return this._data;
              },
              set: function (t) {
                (this._data = t),
                  this.series.forEach(function (e) {
                    return (e.data = t);
                  });
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "width", {
              get: function () {
                return this.scene.width;
              },
              set: function (t) {
                (this.autoSize = !1),
                  this.width !== t &&
                    (this.scene.resize(t, this.height),
                    this.fireEvent({ type: "layoutChange" }));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "height", {
              get: function () {
                return this.scene.height;
              },
              set: function (t) {
                (this.autoSize = !1),
                  this.height !== t &&
                    (this.scene.resize(this.width, t),
                    this.fireEvent({ type: "layoutChange" }));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "autoSize", {
              get: function () {
                return this._autoSize;
              },
              set: function (t) {
                if (this._autoSize !== t) {
                  this._autoSize = t;
                  var e = this.element.style;
                  if (t) {
                    var o = this;
                    as.observe(this.element, function (t) {
                      (t.width === o.width && t.height === o.height) ||
                        (o.scene.resize(t.width, t.height),
                        o.fireEvent({ type: "layoutChange" }));
                    }),
                      (e.display = "block"),
                      (e.width = "100%"),
                      (e.height = "100%");
                  } else
                    as.unobserve(this.element),
                      (e.display = "inline-block"),
                      (e.width = "auto"),
                      (e.height = "auto");
                }
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "tooltipClass", {
              get: function () {
                return this.tooltip.class;
              },
              set: function (t) {
                this.tooltip.class = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.download = function (t) {
              this.scene.download(t);
            }),
            (e.prototype.destroy = function () {
              this.tooltip.destroy(),
                as.unobserve(this.element),
                (this.container = void 0),
                this.cleanupDomListeners(this.scene.canvas.element),
                (this.scene.container = void 0);
            }),
            (e.prototype.onLayoutChange = function () {
              this.layoutPending = !0;
            }),
            (e.prototype.onLegendPositionChange = function () {
              this.legendAutoPadding.clear(), (this.layoutPending = !0);
            }),
            (e.prototype.onCaptionChange = function (t) {
              var e = t.value,
                o = t.oldValue;
              o &&
                (o.removeEventListener("change", this.onLayoutChange, this),
                this.scene.root.removeChild(o.node)),
                e &&
                  (e.addEventListener("change", this.onLayoutChange, this),
                  this.scene.root.appendChild(e.node));
            }),
            Object.defineProperty(e.prototype, "element", {
              get: function () {
                return this._element;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "axes", {
              get: function () {
                return this._axes;
              },
              set: function (t) {
                var e = this;
                this._axes.forEach(function (t) {
                  return e.detachAxis(t);
                }),
                  (this._axes = t
                    .filter(function (t) {
                      return !t.linkedTo;
                    })
                    .concat(
                      t.filter(function (t) {
                        return t.linkedTo;
                      })
                    )),
                  this._axes.forEach(function (t) {
                    return e.attachAxis(t);
                  }),
                  (this.axesChanged = !0);
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.attachAxis = function (t) {
              this.scene.root.insertBefore(t.group, this.seriesRoot);
            }),
            (e.prototype.detachAxis = function (t) {
              this.scene.root.removeChild(t.group);
            }),
            Object.defineProperty(e.prototype, "series", {
              get: function () {
                return this._series;
              },
              set: function (t) {
                var e = this;
                this.removeAllSeries(),
                  t.forEach(function (t) {
                    return e.addSeries(t);
                  });
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.scheduleLayout = function () {
              this.layoutPending = !0;
            }),
            (e.prototype.scheduleData = function () {
              this.dehighlightDatum(), (this.dataPending = !0);
            }),
            (e.prototype.addSeries = function (t, e) {
              var o = this.series,
                n = this.seriesRoot;
              if (o.indexOf(t) < 0) {
                var r = e ? o.indexOf(e) : -1;
                return (
                  r >= 0
                    ? (o.splice(r, 0, t), n.insertBefore(t.group, e.group))
                    : (o.push(t), n.append(t.group)),
                  this.initSeries(t),
                  (this.seriesChanged = !0),
                  (this.axesChanged = !0),
                  !0
                );
              }
              return !1;
            }),
            (e.prototype.initSeries = function (t) {
              (t.chart = this),
                t.data || (t.data = this.data),
                t.addEventListener("layoutChange", this.scheduleLayout, this),
                t.addEventListener("dataChange", this.scheduleData, this),
                t.addEventListener("legendChange", this.updateLegend, this),
                t.addEventListener("nodeClick", this.onSeriesNodeClick, this);
            }),
            (e.prototype.freeSeries = function (t) {
              (t.chart = void 0),
                t.removeEventListener(
                  "layoutChange",
                  this.scheduleLayout,
                  this
                ),
                t.removeEventListener("dataChange", this.scheduleData, this),
                t.removeEventListener("legendChange", this.updateLegend, this),
                t.removeEventListener(
                  "nodeClick",
                  this.onSeriesNodeClick,
                  this
                );
            }),
            (e.prototype.addSeriesAfter = function (t, e) {
              var o = this.series,
                n = this.seriesRoot;
              if (o.indexOf(t) < 0) {
                var r = e ? this.series.indexOf(e) : -1;
                r >= 0
                  ? (r + 1 < o.length
                      ? n.insertBefore(t.group, o[r + 1].group)
                      : n.append(t.group),
                    this.initSeries(t),
                    o.splice(r + 1, 0, t))
                  : (o.length > 0
                      ? n.insertBefore(t.group, o[0].group)
                      : n.append(t.group),
                    this.initSeries(t),
                    o.unshift(t)),
                  (this.seriesChanged = !0),
                  (this.axesChanged = !0);
              }
              return !1;
            }),
            (e.prototype.removeSeries = function (t) {
              var e = this.series.indexOf(t);
              return (
                e >= 0 &&
                (this.series.splice(e, 1),
                this.freeSeries(t),
                this.seriesRoot.removeChild(t.group),
                (this.seriesChanged = !0),
                !0)
              );
            }),
            (e.prototype.removeAllSeries = function () {
              var t = this;
              this.series.forEach(function (e) {
                t.freeSeries(e), t.seriesRoot.removeChild(e.group);
              }),
                (this._series = []),
                (this.seriesChanged = !0);
            }),
            (e.prototype.assignSeriesToAxes = function () {
              var t = this;
              this.axes.forEach(function (e) {
                var o = e.direction + "Axis",
                  n = [];
                t.series.forEach(function (t) {
                  t[o] === e && n.push(t);
                }),
                  (e.boundSeries = n);
              }),
                (this.seriesChanged = !1);
            }),
            (e.prototype.assignAxesToSeries = function (t) {
              var e = this;
              void 0 === t && (t = !1);
              var o = {};
              this.axes.forEach(function (t) {
                var e = t.direction;
                (o[e] || (o[e] = [])).push(t);
              }),
                this.series.forEach(function (n) {
                  if (
                    (n.directions.forEach(function (r) {
                      var i = r + "Axis";
                      if (!n[i] || t) {
                        var s = o[r];
                        if (s) {
                          var a = e.findMatchingAxis(s, n.getKeys(r));
                          a && (n[i] = a);
                        }
                      }
                    }),
                    n instanceof ys)
                  ) {
                    if (!n.xAxis)
                      return void console.warn(
                        "Could not find a matching xAxis for the " +
                          n.id +
                          " series."
                      );
                    if (!n.yAxis)
                      return void console.warn(
                        "Could not find a matching yAxis for the " +
                          n.id +
                          " series."
                      );
                  }
                }),
                (this.axesChanged = !1);
            }),
            (e.prototype.findMatchingAxis = function (t, e) {
              for (var o = 0; o < t.length; o++) {
                var n = t[o],
                  r = n.keys;
                if (!r.length) return n;
                if (e)
                  for (var i = 0; i < e.length; i++)
                    if (r.indexOf(e[i]) >= 0) return n;
              }
            }),
            Object.defineProperty(e.prototype, "axesChanged", {
              get: function () {
                return this._axesChanged;
              },
              set: function (t) {
                this._axesChanged = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "seriesChanged", {
              get: function () {
                return this._seriesChanged;
              },
              set: function (t) {
                (this._seriesChanged = t), t && (this.dataPending = !0);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "layoutPending", {
              get: function () {
                return !!this.layoutCallbackId;
              },
              set: function (t) {
                t
                  ? this.layoutCallbackId ||
                    this.dataPending ||
                    (this.layoutCallbackId = requestAnimationFrame(
                      this._performLayout
                    ))
                  : this.layoutCallbackId &&
                    (cancelAnimationFrame(this.layoutCallbackId),
                    (this.layoutCallbackId = 0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "dataPending", {
              get: function () {
                return !!this.dataCallbackId;
              },
              set: function (t) {
                var e = this;
                this.dataCallbackId &&
                  (clearTimeout(this.dataCallbackId),
                  (this.dataCallbackId = 0)),
                  t &&
                    (this.dataCallbackId = window.setTimeout(function () {
                      (e.dataPending = !1), e.processData();
                    }, 0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.processData = function () {
              (this.layoutPending = !1),
                this.axesChanged &&
                  (this.assignAxesToSeries(!0), this.assignSeriesToAxes()),
                this.seriesChanged && this.assignSeriesToAxes(),
                this.series
                  .filter(function (t) {
                    return t.visible;
                  })
                  .forEach(function (t) {
                    return t.processData();
                  }),
                this.updateLegend(),
                (this.layoutPending = !0);
            }),
            (e.prototype.updateLegend = function () {
              var t = [];
              this.series
                .filter(function (t) {
                  return t.showInLegend;
                })
                .forEach(function (e) {
                  return e.listSeriesItems(t);
                }),
                (this.legend.data = t);
            }),
            (e.prototype.positionCaptions = function () {
              var t = this.title,
                e = this.subtitle,
                o = !1,
                n = !1,
                r = 10;
              if (t && t.enabled) {
                (t.node.x = this.width / 2), (t.node.y = r), (o = !0);
                var i = t.node.computeBBox();
                if ((i && (r = i.y + i.height), e && e.enabled)) {
                  (e.node.x = this.width / 2), (e.node.y = r + 10), (n = !0);
                  var s = e.node.computeBBox();
                  s && (r = s.y + s.height);
                }
              }
              t && (t.node.visible = o),
                e && (e.node.visible = n),
                (this.captionAutoPadding = Math.floor(r));
            }),
            (e.prototype.positionLegend = function () {
              if (this.legend.enabled && this.legend.data.length) {
                var t,
                  e = this,
                  o = e.legend,
                  n = e.captionAutoPadding,
                  r = e.legendAutoPadding,
                  i = this.width,
                  s = this.height - n,
                  a = o.group,
                  l = o.spacing,
                  u = 0,
                  p = 0;
                switch (o.position) {
                  case "bottom":
                    o.performLayout(i - 2 * l, 0),
                      (u = (i - (t = a.computeBBox()).width) / 2 - t.x),
                      (p = n + s - t.height - t.y - l),
                      (r.bottom = t.height);
                    break;
                  case "top":
                    o.performLayout(i - 2 * l, 0),
                      (u = (i - (t = a.computeBBox()).width) / 2 - t.x),
                      (p = n + l - t.y),
                      (r.top = t.height);
                    break;
                  case "left":
                    o.performLayout(0, s - 2 * l),
                      (u = l - (t = a.computeBBox()).x),
                      (p = n + (s - t.height) / 2 - t.y),
                      (r.left = t.width);
                    break;
                  default:
                    o.performLayout(0, s - 2 * l),
                      (u = i - (t = a.computeBBox()).width - t.x - l),
                      (p = n + (s - t.height) / 2 - t.y),
                      (r.right = t.width);
                }
                (a.translationX = Math.floor(u + a.translationX)),
                  (a.translationY = Math.floor(p + a.translationY));
              }
            }),
            (e.prototype.setupDomListeners = function (t) {
              t.addEventListener("mousedown", this._onMouseDown),
                t.addEventListener("mousemove", this._onMouseMove),
                t.addEventListener("mouseup", this._onMouseUp),
                t.addEventListener("mouseout", this._onMouseOut),
                t.addEventListener("click", this._onClick);
            }),
            (e.prototype.cleanupDomListeners = function (t) {
              t.removeEventListener("mousedown", this._onMouseDown),
                t.removeEventListener("mousemove", this._onMouseMove),
                t.removeEventListener("mouseup", this._onMouseUp),
                t.removeEventListener("mouseout", this._onMouseOut),
                t.removeEventListener("click", this._onClick);
            }),
            (e.prototype.getSeriesRect = function () {
              return this.seriesRect;
            }),
            (e.prototype.pickSeriesNode = function (t, e) {
              if (this.seriesRect && this.seriesRect.containsPoint(t, e))
                for (
                  var o = this.series, n = void 0, r = o.length - 1;
                  r >= 0;
                  r--
                ) {
                  var i = o[r];
                  if ((n = i.group.pickNode(t, e)))
                    return { series: i, node: n };
                }
            }),
            (e.prototype.pickClosestSeriesNodeDatum = function (t, e) {
              if (this.seriesRect && this.seriesRect.containsPoint(t, e)) {
                for (
                  var o,
                    n = this.series,
                    r = 1 / 0,
                    i = function (i) {
                      var s = n[i];
                      if (!s.visible) return "continue";
                      var a = s.group.transformPoint(t, e);
                      s.getNodeData().forEach(function (t) {
                        if (t.point) {
                          var e,
                            n,
                            i =
                              ((e = a),
                              (n = t.point),
                              Math.sqrt(
                                Math.pow(e.x - n.x, 2) + Math.pow(e.y - n.y, 2)
                              ));
                          i < r && ((r = i), (o = t));
                        }
                      });
                    },
                    s = n.length - 1;
                  s >= 0;
                  s--
                )
                  i(s);
                return o || void 0;
              }
            }),
            (e.prototype.onMouseMove = function (t) {
              this.tooltip.enabled &&
                (this.tooltip.delay > 0 && this.tooltip.toggle(!1),
                this.handleTooltip(t));
            }),
            (e.prototype.handleTooltip = function (t) {
              var e,
                o = this.lastPick,
                n = this.tooltip.tracking,
                r = t.offsetX,
                i = t.offsetY,
                s = this.pickSeriesNode(r, i);
              if (s && s.node instanceof dn) {
                var a = s.node;
                if (
                  ((e = a.datum),
                  o && o.datum === e && ((o.node = a), (o.event = t)),
                  !a.datum.point || !n)
                )
                  return void (o && o.node === a
                    ? s.series.tooltip.enabled && this.tooltip.show(t)
                    : this.onSeriesDatumPick(t, a.datum, a, t));
              }
              var l = !1;
              if (n) {
                var u = this.pickClosestSeriesNodeDatum(r, i);
                if (u && u.point) {
                  var p = u.point,
                    c = this.scene.canvas,
                    d = u.series.group.inverseTransformPoint(p.x, p.y),
                    h = c.element.getBoundingClientRect();
                  this.onSeriesDatumPick(
                    {
                      pageX: Math.round(h.left + window.pageXOffset + d.x),
                      pageY: Math.round(h.top + window.pageYOffset + d.y),
                    },
                    u,
                    e === u && s ? s.node : void 0,
                    t
                  );
                } else l = !0;
              }
              !o ||
                (!l && n) ||
                (this.dehighlightDatum(),
                this.tooltip.toggle(!1),
                (this.lastPick = void 0));
            }),
            (e.prototype.onMouseDown = function (t) {}),
            (e.prototype.onMouseUp = function (t) {}),
            (e.prototype.onMouseOut = function (t) {
              this.tooltip.toggle(!1);
            }),
            (e.prototype.onClick = function (t) {
              this.checkSeriesNodeClick() ||
                this.checkLegendClick(t) ||
                this.fireEvent({ type: "click", event: t });
            }),
            (e.prototype.checkSeriesNodeClick = function () {
              var t = this.lastPick;
              if (t && t.event && t.node) {
                var e = t.datum;
                return e.series.fireNodeClickEvent(t.event, e), !0;
              }
              return !1;
            }),
            (e.prototype.onSeriesNodeClick = function (t) {
              this.fireEvent(Cs(Cs({}, t), { type: "seriesNodeClick" }));
            }),
            (e.prototype.checkLegendClick = function (t) {
              var e = this.legend.getDatumForPoint(t.offsetX, t.offsetY);
              if (e) {
                var o = e.id,
                  n = e.itemId,
                  r = e.enabled,
                  i = br(this.series, function (t) {
                    return t.id === o;
                  });
                if (i)
                  return (
                    i.toggleSeriesItem(n, !r),
                    r && this.tooltip.toggle(!1),
                    this.legend.fireEvent({
                      type: "click",
                      event: t,
                      itemId: n,
                      enabled: !r,
                    }),
                    !0
                  );
              }
              return !1;
            }),
            (e.prototype.onSeriesDatumPick = function (t, e, o, n) {
              this.lastPick && this.dehighlightDatum(),
                (this.lastPick = { datum: e, node: o, event: n }),
                this.highlightDatum(e);
              var r = e.series.tooltip.enabled && e.series.getTooltipHtml(e);
              r && this.tooltip.show(t, r);
            }),
            (e.prototype.highlightDatum = function (t) {
              (this.highlightedDatum = t),
                this.series.forEach(function (t) {
                  return t.onHighlightChange();
                });
            }),
            (e.prototype.dehighlightDatum = function () {
              this.highlightedDatum &&
                ((this.highlightedDatum = void 0),
                this.series.forEach(function (t) {
                  return t.onHighlightChange();
                }));
            }),
            (e.defaultTooltipClass = "ag-chart-tooltip"),
            (e.tooltipDocuments = []),
            ws([vn("layoutChange")], e.prototype, "padding", void 0),
            ws([vn("layoutChange")], e.prototype, "title", void 0),
            ws([vn("layoutChange")], e.prototype, "subtitle", void 0),
            e
          );
        })(mn),
        _s = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Rs = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.isContainerNode = !0),
              (e.path = new Jn()),
              (e._enabled = !0),
              (e._dirtyPath = !0),
              (e._x = 0),
              (e._y = 0),
              (e._width = 10),
              (e._height = 10),
              e
            );
          }
          return (
            _s(e, t),
            (e.prototype.containsPoint = function (t, e) {
              var o = this.transformPoint(t, e);
              return (
                o.x >= this.x &&
                o.x <= this.x + this.width &&
                o.y >= this.y &&
                o.y <= this.y + this.height
              );
            }),
            Object.defineProperty(e.prototype, "enabled", {
              get: function () {
                return this._enabled;
              },
              set: function (t) {
                this._enabled !== t && ((this._enabled = t), (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "dirtyPath", {
              get: function () {
                return this._dirtyPath;
              },
              set: function (t) {
                this._dirtyPath !== t &&
                  ((this._dirtyPath = t), t && (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "x", {
              get: function () {
                return this._x;
              },
              set: function (t) {
                this._x !== t && ((this._x = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "y", {
              get: function () {
                return this._y;
              },
              set: function (t) {
                this._y !== t && ((this._y = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "width", {
              get: function () {
                return this._width;
              },
              set: function (t) {
                this._width !== t && ((this._width = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "height", {
              get: function () {
                return this._height;
              },
              set: function (t) {
                this._height !== t &&
                  ((this._height = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.updatePath = function () {
              var t = this.path;
              t.clear(),
                t.rect(this.x, this.y, this.width, this.height),
                (this.dirtyPath = !1);
            }),
            (e.prototype.computeBBox = function () {
              var t = this;
              return new Zo(t.x, t.y, t.width, t.height);
            }),
            (e.prototype.render = function (t) {
              this.enabled &&
                (this.dirtyPath && this.updatePath(),
                this.scene.appendPath(this.path),
                t.clip());
              for (var e = this.children, o = e.length, n = 0; n < o; n++) {
                t.save();
                var r = e[n];
                r.visible && r.render(t), t.restore();
              }
            }),
            (e.className = "ClipRect"),
            e
          );
        })(tn),
        Ps = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ts = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e._fill = "#f2f2f2"),
              (e._stroke = "#999999"),
              (e._strokeWidth = 1),
              (e._lineCap = "square"),
              (e._centerX = 0),
              (e._centerY = 0),
              (e._width = 8),
              (e._gripLineGap = 2),
              (e._gripLineLength = 8),
              (e._height = 16),
              e
            );
          }
          return (
            Ps(e, t),
            Object.defineProperty(e.prototype, "centerX", {
              get: function () {
                return this._centerX;
              },
              set: function (t) {
                this._centerX !== t &&
                  ((this._centerX = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "centerY", {
              get: function () {
                return this._centerY;
              },
              set: function (t) {
                this._centerY !== t &&
                  ((this._centerY = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "width", {
              get: function () {
                return this._width;
              },
              set: function (t) {
                this._width !== t && ((this._width = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "gripLineGap", {
              get: function () {
                return this._gripLineGap;
              },
              set: function (t) {
                this._gripLineGap !== t &&
                  ((this._gripLineGap = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "gripLineLength", {
              get: function () {
                return this._gripLineLength;
              },
              set: function (t) {
                this._gripLineLength !== t &&
                  ((this._gripLineLength = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "height", {
              get: function () {
                return this._height;
              },
              set: function (t) {
                this._height !== t &&
                  ((this._height = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.computeBBox = function () {
              var t = this,
                e = t.width,
                o = t.height;
              return new Zo(t.centerX - e / 2, t.centerY - o / 2, e, o);
            }),
            (e.prototype.isPointInPath = function (t, e) {
              var o = this.transformPoint(t, e);
              return this.computeBBox().containsPoint(o.x, o.y);
            }),
            (e.prototype.updatePath = function () {
              var t = this,
                e = t.path,
                o = t.centerX,
                n = t.centerY,
                r = t.width,
                i = t.height,
                s = this.alignment,
                a = this.align;
              e.clear();
              var l = o - r / 2,
                u = n - i / 2,
                p = a(s, l),
                c = a(s, u),
                d = p + a(s, l, r),
                h = c + a(s, u, i);
              e.moveTo(p, c),
                e.lineTo(d, c),
                e.lineTo(d, h),
                e.lineTo(p, h),
                e.lineTo(p, c);
              var f = this.gripLineGap / 2,
                g = this.gripLineLength / 2;
              e.moveTo(a(s, o - f), a(s, n - g)),
                e.lineTo(a(s, o - f), a(s, n + g)),
                e.moveTo(a(s, o + f), a(s, n - g)),
                e.lineTo(a(s, o + f), a(s, n + g));
            }),
            (e.className = "RangeHandle"),
            e
          );
        })(er),
        As = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ds = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e._stroke = "#999999"),
              (e._strokeWidth = 1),
              (e._fill = "#999999"),
              (e._fillOpacity = 0.2),
              (e._lineCap = "square"),
              (e._x = 0),
              (e._y = 0),
              (e._width = 200),
              (e._height = 30),
              (e.minRange = 0.05),
              (e._min = 0),
              (e._max = 1),
              e
            );
          }
          return (
            As(e, t),
            Object.defineProperty(e.prototype, "x", {
              get: function () {
                return this._x;
              },
              set: function (t) {
                this._x !== t && ((this._x = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "y", {
              get: function () {
                return this._y;
              },
              set: function (t) {
                this._y !== t && ((this._y = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "width", {
              get: function () {
                return this._width;
              },
              set: function (t) {
                this._width !== t && ((this._width = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "height", {
              get: function () {
                return this._height;
              },
              set: function (t) {
                this._height !== t &&
                  ((this._height = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "min", {
              get: function () {
                return this._min;
              },
              set: function (t) {
                (t = Math.min(Math.max(t, 0), this.max - this.minRange)),
                  isNaN(t) ||
                    (this._min !== t &&
                      ((this._min = t),
                      (this.dirtyPath = !0),
                      this.onRangeChange && this.onRangeChange(t, this.max)));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "max", {
              get: function () {
                return this._max;
              },
              set: function (t) {
                (t = Math.max(Math.min(t, 1), this.min + this.minRange)),
                  isNaN(t) ||
                    (this._max !== t &&
                      ((this._max = t),
                      (this.dirtyPath = !0),
                      this.onRangeChange && this.onRangeChange(this.min, t)));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.computeBBox = function () {
              var t = this;
              return new Zo(t.x, t.y, t.width, t.height);
            }),
            (e.prototype.computeVisibleRangeBBox = function () {
              var t = this,
                e = t.x,
                o = t.width,
                n = e + o * t.min;
              return new Zo(n, t.y, e + o * t.max - n, t.height);
            }),
            (e.prototype.updatePath = function () {
              var t = this,
                e = t.path,
                o = t.x,
                n = t.y,
                r = t.width,
                i = t.height,
                s = t.min,
                a = t.max,
                l = this.alignment,
                u = this.align;
              e.clear();
              var p = u(l, o),
                c = u(l, n),
                d = p + u(l, o, r),
                h = c + u(l, n, i);
              e.moveTo(p, c),
                e.lineTo(d, c),
                e.lineTo(d, h),
                e.lineTo(p, h),
                e.lineTo(p, c);
              var f = u(l, o + r * s),
                g = u(l, o + r * a);
              e.moveTo(f, c),
                e.lineTo(f, h),
                e.lineTo(g, h),
                e.lineTo(g, c),
                e.lineTo(f, c);
            }),
            (e.className = "RangeMask"),
            e
          );
        })(er),
        xs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Fs = (function (t) {
          function e() {
            var o = (null !== t && t.apply(this, arguments)) || this;
            return (
              (o.isContainerNode = !0),
              (o.minHandle = new Ts()),
              (o.maxHandle = new Ts()),
              (o.mask = (function () {
                var t = e.defaults,
                  n = t.x,
                  r = t.y,
                  i = t.width,
                  s = t.height,
                  a = t.min,
                  l = t.max,
                  u = new Ds();
                (u.x = n),
                  (u.y = r),
                  (u.width = i),
                  (u.height = s),
                  (u.min = a),
                  (u.max = l);
                var p = o.minHandle,
                  c = o.maxHandle;
                return (
                  (p.centerX = n),
                  (c.centerX = n + i),
                  (p.centerY = c.centerY = r + s / 2),
                  o.append([u, p, c]),
                  (u.onRangeChange = function (t, e) {
                    o.updateHandles(), o.onRangeChange && o.onRangeChange(t, e);
                  }),
                  u
                );
              })()),
              (o._x = e.defaults.x),
              (o._y = e.defaults.y),
              (o._width = e.defaults.width),
              (o._height = e.defaults.height),
              (o._min = e.defaults.min),
              (o._max = e.defaults.max),
              o
            );
          }
          return (
            xs(e, t),
            Object.defineProperty(e.prototype, "x", {
              get: function () {
                return this.mask.x;
              },
              set: function (t) {
                (this.mask.x = t), this.updateHandles();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "y", {
              get: function () {
                return this.mask.y;
              },
              set: function (t) {
                (this.mask.y = t), this.updateHandles();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "width", {
              get: function () {
                return this.mask.width;
              },
              set: function (t) {
                (this.mask.width = t), this.updateHandles();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "height", {
              get: function () {
                return this.mask.height;
              },
              set: function (t) {
                (this.mask.height = t), this.updateHandles();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "min", {
              get: function () {
                return this.mask.min;
              },
              set: function (t) {
                this.mask.min = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "max", {
              get: function () {
                return this.mask.max;
              },
              set: function (t) {
                this.mask.max = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.updateHandles = function () {
              var t = this,
                e = t.minHandle,
                o = t.maxHandle,
                n = t.x,
                r = t.y,
                i = t.width,
                s = t.height,
                a = t.mask;
              (e.centerX = n + i * a.min),
                (o.centerX = n + i * a.max),
                (e.centerY = o.centerY = r + s / 2);
            }),
            (e.prototype.computeBBox = function () {
              return this.mask.computeBBox();
            }),
            (e.prototype.computeVisibleRangeBBox = function () {
              return this.mask.computeVisibleRangeBBox();
            }),
            (e.prototype.render = function (t) {
              this.dirtyTransform && this.computeTransformMatrix(),
                this.matrix.toContext(t);
              var e = this;
              [e.mask, e.minHandle, e.maxHandle].forEach(function (e) {
                t.save(), e.visible && e.render(t), t.restore();
              });
            }),
            (e.className = "Range"),
            (e.defaults = {
              x: 0,
              y: 0,
              width: 200,
              height: 30,
              min: 0,
              max: 1,
            }),
            e
          );
        })(Hn),
        Ns = (function () {
          function t(t) {
            this.rm = t;
          }
          return (
            Object.defineProperty(t.prototype, "fill", {
              get: function () {
                return this.rm.fill;
              },
              set: function (t) {
                this.rm.fill = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "stroke", {
              get: function () {
                return this.rm.stroke;
              },
              set: function (t) {
                this.rm.stroke = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "strokeWidth", {
              get: function () {
                return this.rm.strokeWidth;
              },
              set: function (t) {
                this.rm.strokeWidth = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "fillOpacity", {
              get: function () {
                return this.rm.fillOpacity;
              },
              set: function (t) {
                this.rm.fillOpacity = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            t
          );
        })(),
        Ms = (function () {
          function t(t) {
            this.rh = t;
          }
          return (
            Object.defineProperty(t.prototype, "fill", {
              get: function () {
                return this.rh.fill;
              },
              set: function (t) {
                this.rh.fill = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "stroke", {
              get: function () {
                return this.rh.stroke;
              },
              set: function (t) {
                this.rh.stroke = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "strokeWidth", {
              get: function () {
                return this.rh.strokeWidth;
              },
              set: function (t) {
                this.rh.strokeWidth = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "width", {
              get: function () {
                return this.rh.width;
              },
              set: function (t) {
                this.rh.width = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "height", {
              get: function () {
                return this.rh.height;
              },
              set: function (t) {
                this.rh.height = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "gripLineGap", {
              get: function () {
                return this.rh.gripLineGap;
              },
              set: function (t) {
                this.rh.gripLineGap = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "gripLineLength", {
              get: function () {
                return this.rh.gripLineLength;
              },
              set: function (t) {
                this.rh.gripLineLength = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            t
          );
        })(),
        Is = (function () {
          function t(t) {
            var e = this;
            (this.rs = new Fs()),
              (this.mask = new Ns(this.rs.mask)),
              (this.minHandle = new Ms(this.rs.minHandle)),
              (this.maxHandle = new Ms(this.rs.maxHandle)),
              (this.minHandleDragging = !1),
              (this.maxHandleDragging = !1),
              (this.panHandleOffset = NaN),
              (this._margin = 10),
              (this.chart = t),
              t.scene.root.append(this.rs),
              (this.rs.onRangeChange = function (t, o) {
                return e.updateAxes(t, o);
              });
          }
          return (
            Object.defineProperty(t.prototype, "enabled", {
              get: function () {
                return this.rs.visible;
              },
              set: function (t) {
                (this.rs.visible = t), (this.chart.layoutPending = !0);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "x", {
              get: function () {
                return this.rs.x;
              },
              set: function (t) {
                this.rs.x = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "y", {
              get: function () {
                return this.rs.y;
              },
              set: function (t) {
                this.rs.y = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "width", {
              get: function () {
                return this.rs.width;
              },
              set: function (t) {
                this.rs.width = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "height", {
              get: function () {
                return this.rs.height;
              },
              set: function (t) {
                (this.rs.height = t), (this.chart.layoutPending = !0);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "margin", {
              get: function () {
                return this._margin;
              },
              set: function (t) {
                (this._margin = t), (this.chart.layoutPending = !0);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "min", {
              get: function () {
                return this.rs.min;
              },
              set: function (t) {
                this.rs.min = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "max", {
              get: function () {
                return this.rs.max;
              },
              set: function (t) {
                this.rs.max = t;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.updateAxes = function (t, e) {
              var o = this.chart,
                n = !1;
              o.axes.forEach(function (o) {
                o.direction === lr.X &&
                  (!n && (t > 0 || e < 1) && (n = !0),
                  (o.visibleRange = [t, e]),
                  o.update());
              }),
                (o.seriesRoot.enabled = n),
                o.series.forEach(function (t) {
                  return t.update();
                });
            }),
            (t.prototype.onDragStart = function (t) {
              if (this.enabled) {
                var e = t.offsetX,
                  o = t.offsetY,
                  n = this.rs,
                  r = n.minHandle,
                  i = n.maxHandle,
                  s = n.x,
                  a = n.width,
                  l = n.min,
                  u = n.computeVisibleRangeBBox();
                this.minHandleDragging ||
                  this.maxHandleDragging ||
                  (r.containsPoint(e, o)
                    ? (this.minHandleDragging = !0)
                    : i.containsPoint(e, o)
                    ? (this.maxHandleDragging = !0)
                    : u.containsPoint(e, o) &&
                      (this.panHandleOffset = (e - s) / a - l));
              }
            }),
            (t.prototype.onDrag = function (t) {
              if (this.enabled) {
                var e = this.rs,
                  o = this.panHandleOffset,
                  n = e.x,
                  r = e.width,
                  i = e.minHandle,
                  s = e.maxHandle,
                  a = this.chart.element.style,
                  l = t.offsetX,
                  u = t.offsetY,
                  p = n + r * e.min,
                  c = new Zo(p, e.y, n + r * e.max - p, e.height);
                if (
                  ((a.cursor =
                    i.containsPoint(l, u) || s.containsPoint(l, u)
                      ? "ew-resize"
                      : c.containsPoint(l, u)
                      ? "grab"
                      : "default"),
                  this.minHandleDragging)
                )
                  e.min = f();
                else if (this.maxHandleDragging) e.max = f();
                else if (!isNaN(o)) {
                  var d = e.max - e.min,
                    h = Math.min(f() - o, 1 - d);
                  h <= e.min
                    ? ((e.min = h), (e.max = e.min + d))
                    : ((e.max = h + d), (e.min = e.max - d));
                }
              }
              function f() {
                return Math.min(Math.max((l - n) / r, 0), 1);
              }
            }),
            (t.prototype.onDragStop = function () {
              this.stopHandleDragging();
            }),
            (t.prototype.stopHandleDragging = function () {
              (this.minHandleDragging = this.maxHandleDragging = !1),
                (this.panHandleOffset = NaN);
            }),
            t
          );
        })(),
        Ls = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Gs = (function (t) {
          function e(e) {
            void 0 === e && (e = window.document);
            var o = t.call(this, e) || this;
            (o._seriesRoot = new Rs()),
              (o.navigator = new Is(o)),
              (o.scene.root.visible = !1);
            var n = o.scene.root;
            return (
              n.append(o.seriesRoot),
              n.append(o.legend.group),
              (o.navigator.enabled = !1),
              o
            );
          }
          return (
            Ls(e, t),
            Object.defineProperty(e.prototype, "seriesRoot", {
              get: function () {
                return this._seriesRoot;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.performLayout = function () {
              if (!this.dataPending) {
                this.scene.root.visible = !0;
                var t = this,
                  e = t.axes,
                  o = t.legend,
                  n = t.navigator,
                  r = new Zo(0, 0, t.width, t.height);
                if (
                  (this.positionCaptions(),
                  this.positionLegend(),
                  o.enabled && o.data.length)
                ) {
                  var i = this.legendAutoPadding,
                    s = this.legend.spacing;
                  switch (
                    ((r.x += i.left),
                    (r.y += i.top),
                    (r.width -= i.left + i.right),
                    (r.height -= i.top + i.bottom),
                    this.legend.position)
                  ) {
                    case "right":
                      r.width -= s;
                      break;
                    case "bottom":
                      r.height -= s;
                      break;
                    case "left":
                      (r.x += s), (r.width -= s);
                      break;
                    case "top":
                      (r.y += s), (r.height -= s);
                  }
                }
                var a = this.captionAutoPadding,
                  l = this.padding;
                this.updateAxes(),
                  (r.x += l.left),
                  (r.width -= l.left + l.right),
                  (r.y += l.top + a),
                  (r.height -= l.top + a + l.bottom),
                  n.enabled && (r.height -= n.height + n.margin);
                var u = 0;
                e.forEach(function (t) {
                  t.group.visible = !0;
                  var e = Math.floor(t.computeBBox().width);
                  switch (t.position) {
                    case ur.Top:
                      (r.y += e),
                        (r.height -= e),
                        (t.translation.y = Math.floor(r.y + 1)),
                        (t.label.mirrored = !0);
                      break;
                    case ur.Right:
                      (r.width -= e),
                        (t.translation.x = Math.floor(r.x + r.width)),
                        (t.label.mirrored = !0);
                      break;
                    case ur.Bottom:
                      (r.height -= e),
                        (u += e),
                        (t.translation.y = Math.floor(r.y + r.height + 1));
                      break;
                    case ur.Left:
                      (r.x += e),
                        (r.width -= e),
                        (t.translation.x = Math.floor(r.x));
                  }
                }),
                  e.forEach(function (t) {
                    switch (t.position) {
                      case ur.Top:
                      case ur.Bottom:
                        (t.translation.x = Math.floor(r.x)),
                          (t.range = [0, r.width]),
                          (t.gridLength = r.height);
                        break;
                      case ur.Left:
                      case ur.Right:
                        (t.translation.y = Math.floor(r.y)),
                          (t.range =
                            t instanceof wr || t instanceof Gr
                              ? [0, r.height]
                              : [r.height, 0]),
                          (t.gridLength = r.width);
                    }
                  }),
                  (this.seriesRect = r),
                  this.series.forEach(function (t) {
                    (t.group.translationX = Math.floor(r.x)),
                      (t.group.translationY = Math.floor(r.y)),
                      t.update();
                  });
                var p = this.seriesRoot;
                (p.x = r.x),
                  (p.y = r.y),
                  (p.width = r.width),
                  (p.height = r.height),
                  n.enabled &&
                    ((n.x = r.x),
                    (n.y = r.y + r.height + u + n.margin),
                    (n.width = r.width)),
                  this.axes.forEach(function (t) {
                    return t.update();
                  });
              }
            }),
            (e.prototype.initSeries = function (e) {
              t.prototype.initSeries.call(this, e),
                e.addEventListener("dataProcessed", this.updateAxes, this);
            }),
            (e.prototype.freeSeries = function (e) {
              t.prototype.freeSeries.call(this, e),
                e.removeEventListener("dataProcessed", this.updateAxes, this);
            }),
            (e.prototype.setupDomListeners = function (e) {
              t.prototype.setupDomListeners.call(this, e),
                (this._onTouchStart = this.onTouchStart.bind(this)),
                (this._onTouchMove = this.onTouchMove.bind(this)),
                (this._onTouchEnd = this.onTouchEnd.bind(this)),
                (this._onTouchCancel = this.onTouchCancel.bind(this)),
                e.addEventListener("touchstart", this._onTouchStart),
                e.addEventListener("touchmove", this._onTouchMove),
                e.addEventListener("touchend", this._onTouchEnd),
                e.addEventListener("touchcancel", this._onTouchCancel);
            }),
            (e.prototype.cleanupDomListeners = function (e) {
              t.prototype.cleanupDomListeners.call(this, e),
                e.removeEventListener("touchstart", this._onTouchStart),
                e.removeEventListener("touchmove", this._onTouchMove),
                e.removeEventListener("touchend", this._onTouchEnd),
                e.removeEventListener("touchcancel", this._onTouchCancel);
            }),
            (e.prototype.getTouchOffset = function (t) {
              var e = this.scene.canvas.element.getBoundingClientRect(),
                o = t.touches[0];
              return o
                ? { offsetX: o.clientX - e.left, offsetY: o.clientY - e.top }
                : void 0;
            }),
            (e.prototype.onTouchStart = function (t) {
              var e = this.getTouchOffset(t);
              e && this.navigator.onDragStart(e);
            }),
            (e.prototype.onTouchMove = function (t) {
              var e = this.getTouchOffset(t);
              e && this.navigator.onDrag(e);
            }),
            (e.prototype.onTouchEnd = function (t) {
              this.navigator.onDragStop();
            }),
            (e.prototype.onTouchCancel = function (t) {
              this.navigator.onDragStop();
            }),
            (e.prototype.onMouseDown = function (e) {
              t.prototype.onMouseDown.call(this, e),
                this.navigator.onDragStart(e);
            }),
            (e.prototype.onMouseMove = function (e) {
              t.prototype.onMouseMove.call(this, e), this.navigator.onDrag(e);
            }),
            (e.prototype.onMouseUp = function (e) {
              t.prototype.onMouseUp.call(this, e), this.navigator.onDragStop();
            }),
            (e.prototype.onMouseOut = function (e) {
              t.prototype.onMouseOut.call(this, e), this.navigator.onDragStop();
            }),
            (e.prototype.updateAxes = function () {
              var t = this.navigator,
                e = !1;
              this.axes.forEach(function (o) {
                var n,
                  r = o.direction,
                  i = o.boundSeries;
                if (o.linkedTo) o.domain = o.linkedTo.domain;
                else {
                  var s = [];
                  i.filter(function (t) {
                    return t.visible;
                  }).forEach(function (t) {
                    s.push(t.getDomain(r));
                  });
                  var a = (n = new Array()).concat.apply(n, s);
                  o.domain = Sr(a) || a;
                }
                o.direction === lr.X && (o.visibleRange = [t.min, t.max]),
                  !e &&
                    (o.visibleRange[0] > 0 || o.visibleRange[1] < 1) &&
                    (e = !0),
                  o.update();
              }),
                (this.seriesRoot.enabled = e);
            }),
            (e.className = "CartesianChart"),
            (e.type = "cartesian"),
            e
          );
        })(Os),
        ks = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Vs = (function (t) {
          function e(e) {
            void 0 === e && (e = window.document);
            var o = t.call(this, e) || this;
            (o._data = {}),
              (o._seriesRoot = new Rs()),
              (o.scene.root.visible = !1);
            var n = o.scene.root;
            return n.append(o.seriesRoot), n.append(o.legend.group), o;
          }
          return (
            ks(e, t),
            Object.defineProperty(e.prototype, "seriesRoot", {
              get: function () {
                return this._seriesRoot;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.performLayout = function () {
              if (!this.dataPending) {
                this.scene.root.visible = !0;
                var t = this,
                  e = t.legend,
                  o = new Zo(0, 0, t.width, t.height);
                if (
                  (this.positionCaptions(),
                  this.positionLegend(),
                  e.enabled && e.data.length)
                ) {
                  var n = this.legendAutoPadding,
                    r = this.legend.spacing;
                  switch (
                    ((o.x += n.left),
                    (o.y += n.top),
                    (o.width -= n.left + n.right),
                    (o.height -= n.top + n.bottom),
                    this.legend.position)
                  ) {
                    case "right":
                      o.width -= r;
                      break;
                    case "bottom":
                      o.height -= r;
                      break;
                    case "left":
                      (o.x += r), (o.width -= r);
                      break;
                    case "top":
                      (o.y += r), (o.height -= r);
                  }
                }
                var i = this.captionAutoPadding,
                  s = this.padding;
                (o.x += s.left),
                  (o.width -= s.left + s.right),
                  (o.y += s.top + i),
                  (o.height -= s.top + i + s.bottom),
                  (this.seriesRect = o),
                  this.series.forEach(function (t) {
                    (t.group.translationX = Math.floor(o.x)),
                      (t.group.translationY = Math.floor(o.y)),
                      t.update();
                  });
                var a = this.seriesRoot;
                (a.x = o.x),
                  (a.y = o.y),
                  (a.width = o.width),
                  (a.height = o.height);
              }
            }),
            (e.className = "HierarchyChart"),
            (e.type = "hierarchy"),
            e
          );
        })(Os),
        Ws = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Hs = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ws(e, t),
            (e.prototype.updateAxes = function () {
              this.axes.forEach(function (t) {
                var e,
                  o = t.direction,
                  n = [],
                  r = void 0;
                t.boundSeries
                  .filter(function (t) {
                    return t.visible;
                  })
                  .forEach(function (t) {
                    if (o === lr.X)
                      if (void 0 === r) {
                        var e = t.getDomain(o);
                        n.push(e), (r = "number" == typeof e[0]);
                      } else r && n.push(t.getDomain(o));
                    else n.push(t.getDomain(o));
                  });
                var i = (e = new Array()).concat.apply(e, n);
                (t.domain = Sr(i) || i), t.update();
              });
            }),
            (e.className = "GroupedCategoryChart"),
            (e.type = "groupedCategory"),
            e
          );
        })(Gs),
        Bs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        js = (function (t) {
          function e() {
            var e,
              o = (null !== t && t.apply(this, arguments)) || this;
            return (
              (o.directionKeys =
                (((e = {})[lr.X] = ["angleKey"]),
                (e[lr.Y] = ["radiusKey"]),
                e)),
              (o.centerX = 0),
              (o.centerY = 0),
              (o.radius = 0),
              o
            );
          }
          return Bs(e, t), e;
        })(cs),
        Us =
          (Bs(function () {
            return (null !== Es && Es.apply(this, arguments)) || this;
          }, (Es = fs)),
          (function () {
            var t = function (e, o) {
              return (t =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (t, e) {
                    t.__proto__ = e;
                  }) ||
                function (t, e) {
                  for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
                })(e, o);
            };
            return function (e, o) {
              function n() {
                this.constructor = e;
              }
              t(e, o),
                (e.prototype =
                  null === o
                    ? Object.create(o)
                    : ((n.prototype = o.prototype), new n()));
            };
          })()),
        zs = (function (t) {
          function e(e) {
            void 0 === e && (e = window.document);
            var o = t.call(this, e) || this;
            return (
              (o.padding = new Qo(40)), o.scene.root.append(o.legend.group), o
            );
          }
          return (
            Us(e, t),
            Object.defineProperty(e.prototype, "seriesRoot", {
              get: function () {
                return this.scene.root;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.performLayout = function () {
              var t = new Zo(0, 0, this.width, this.height);
              this.positionCaptions(), this.positionLegend();
              var e = this.captionAutoPadding;
              if (
                ((t.y += e),
                (t.height -= e),
                this.legend.enabled && this.legend.data.length)
              ) {
                var o = this.legendAutoPadding;
                (t.x += o.left),
                  (t.y += o.top),
                  (t.width -= o.left + o.right),
                  (t.height -= o.top + o.bottom);
                var n = this.legend.spacing;
                switch (this.legend.position) {
                  case "right":
                    t.width -= n;
                    break;
                  case "bottom":
                    t.height -= n;
                    break;
                  case "left":
                    (t.x += n), (t.width -= n);
                    break;
                  case "top":
                    (t.y += n), (t.height -= n);
                }
              }
              var r = this.padding;
              (t.x += r.left),
                (t.y += r.top),
                (t.width -= r.left + r.right),
                (t.height -= r.top + r.bottom),
                (this.seriesRect = t);
              var i = t.x + t.width / 2,
                s = t.y + t.height / 2,
                a = Math.min(t.width, t.height) / 2;
              this.series.forEach(function (t) {
                t instanceof js &&
                  ((t.centerX = i),
                  (t.centerY = s),
                  (t.radius = a),
                  t.update());
              });
            }),
            (e.className = "PolarChart"),
            (e.type = "polar"),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([vn("layoutChange")], e.prototype, "padding", void 0),
            e
          );
        })(Os);
      function Ks(t, e) {
        if (t === e) return !0;
        if (t && e && "object" == typeof t && "object" == typeof e) {
          if (t.constructor !== e.constructor) return !1;
          var o,
            n = void 0;
          if (Array.isArray(t)) {
            if ((o = t.length) != e.length) return !1;
            for (n = o; 0 != n--; ) if (!Ks(t[n], e[n])) return !1;
            return !0;
          }
          if (t.constructor === RegExp)
            return t.source === e.source && t.flags === e.flags;
          if (t.valueOf !== Object.prototype.valueOf)
            return t.valueOf() === e.valueOf();
          if (t.toString !== Object.prototype.toString)
            return t.toString() === e.toString();
          var r = Object.keys(t);
          if ((o = r.length) !== Object.keys(e).length) return !1;
          for (n = o; 0 != n--; )
            if (!Object.prototype.hasOwnProperty.call(e, r[n])) return !1;
          for (n = o; 0 != n--; ) {
            var i = r[n];
            if (!Ks(t[i], e[i])) return !1;
          }
          return !0;
        }
        return t != t && e != e;
      }
      var Ys = /(#\{(.*?)\})/g;
      function Xs(t, e, o) {
        return t.replace(Ys, function () {
          var t = arguments[2],
            n = t.split(":"),
            r = n[0],
            i = n[1],
            s = e[r];
          if ("number" == typeof s) {
            if ((p = i && o && o[i])) {
              var a = p,
                l = a.locales,
                u = a.options;
              return s.toLocaleString(l, u);
            }
            return String(s);
          }
          if (s instanceof Date) {
            var p;
            if ("string" == typeof (p = i && o && o[i])) {
              var c = yi.format(p);
              return c(s);
            }
            return s.toDateString();
          }
          return "string" == typeof s || (s && s.toString) ? String(s) : "";
        });
      }
      var qs,
        Qs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Zs = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        $s = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Qs(e, t),
            Zs([vn("change")], e.prototype, "renderer", void 0),
            Zs([vn("change")], e.prototype, "format", void 0),
            e
          );
        })(ps),
        Js = (function (t) {
          function e() {
            var e = t.call(this) || this;
            return (
              (e.tooltip = new $s()),
              (e.areaGroup = e.group.appendChild(new Hn())),
              (e.strokeGroup = e.group.appendChild(new Hn())),
              (e.markerGroup = e.group.appendChild(new Hn())),
              (e.areaSelection = jn.select(e.areaGroup).selectAll()),
              (e.strokeSelection = jn.select(e.strokeGroup).selectAll()),
              (e.markerSelection = jn.select(e.markerGroup).selectAll()),
              (e.markerSelectionData = []),
              (e.seriesItemEnabled = new Map()),
              (e.xData = []),
              (e.yData = []),
              (e.yDomain = []),
              (e.directionKeys = { x: ["xKey"], y: ["yKeys"] }),
              (e.marker = new ms()),
              (e.fills = [
                "#c16068",
                "#a2bf8a",
                "#ebcc87",
                "#80a0c3",
                "#b58dae",
                "#85c0d1",
              ]),
              (e.strokes = [
                "#874349",
                "#718661",
                "#a48f5f",
                "#5a7088",
                "#7f637a",
                "#5d8692",
              ]),
              (e.fillOpacity = 1),
              (e.strokeOpacity = 1),
              (e.lineDash = void 0),
              (e.lineDashOffset = 0),
              (e._xKey = ""),
              (e.xName = ""),
              (e._yKeys = []),
              (e.yNames = []),
              (e.strokeWidth = 2),
              (e.highlightStyle = { fill: "yellow" }),
              e.addEventListener("update", e.update),
              (e.marker.enabled = !1),
              e.marker.addPropertyListener("shape", e.onMarkerShapeChange, e),
              e.marker.addEventListener("change", e.update, e),
              e
            );
          }
          return (
            Qs(e, t),
            (e.prototype.onMarkerShapeChange = function () {
              (this.markerSelection = this.markerSelection.setData([])),
                this.markerSelection.exit.remove(),
                this.update(),
                this.fireEvent({ type: "legendChange" });
            }),
            Object.defineProperty(e.prototype, "xKey", {
              get: function () {
                return this._xKey;
              },
              set: function (t) {
                this._xKey !== t &&
                  ((this._xKey = t), (this.xData = []), this.scheduleData());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "yKeys", {
              get: function () {
                return this._yKeys;
              },
              set: function (t) {
                if (!Ks(this._yKeys, t)) {
                  (this._yKeys = t), (this.yData = []);
                  var e = this.seriesItemEnabled;
                  e.clear(),
                    t.forEach(function (t) {
                      return e.set(t, !0);
                    }),
                    this.scheduleData();
                }
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.setColors = function (t, e) {
              (this.fills = t), (this.strokes = e);
            }),
            Object.defineProperty(e.prototype, "normalizedTo", {
              get: function () {
                return this._normalizedTo;
              },
              set: function (t) {
                var e = t ? Math.abs(t) : void 0;
                this._normalizedTo !== e &&
                  ((this._normalizedTo = e), this.scheduleData());
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.onHighlightChange = function () {
              this.updateMarkerNodes();
            }),
            (e.prototype.processData = function () {
              var t = this,
                e = t.xKey,
                o = t.yKeys,
                n = t.seriesItemEnabled,
                r = e && o.length && this.data ? this.data : [],
                i = !0;
              (this.xData = r.map(function (t) {
                return (
                  i &&
                    !(e in t) &&
                    ((i = !1),
                    console.warn(
                      "The key '" + e + "' was not found in the data: ",
                      t
                    )),
                  t[e]
                );
              })),
                (this.yData = r.map(function (t) {
                  return o.map(function (e) {
                    i &&
                      !(e in t) &&
                      ((i = !1),
                      console.warn(
                        "The key '" + e + "' was not found in the data: ",
                        t
                      ));
                    var o = t[e];
                    return isFinite(o) && n.get(e) ? o : 0;
                  });
                }));
              var s,
                a,
                l = this.yData,
                u = this.normalizedTo,
                p = l.map(function (t) {
                  return Or(t);
                }),
                c = this.findLargestMinMax(p);
              return (
                u && isFinite(u)
                  ? ((s = c.min < 0 ? -u : 0),
                    (a = u),
                    l.forEach(function (t, e) {
                      return t.forEach(function (o, n) {
                        t[n] = o < 0 ? (-o / p[e].min) * u : (o / p[e].max) * u;
                      });
                    }))
                  : ((s = c.min), (a = c.max)),
                0 === s && 0 === a && (a = 1),
                (this.yDomain = this.fixNumericExtent([s, a], "y")),
                this.fireEvent({ type: "dataProcessed" }),
                !0
              );
            }),
            (e.prototype.findLargestMinMax = function (t) {
              for (var e = 0, o = 0, n = 0, r = t; n < r.length; n++) {
                var i = r[n];
                i.min < e && (e = i.min), i.max > o && (o = i.max);
              }
              return { min: e, max: o };
            }),
            (e.prototype.getDomain = function (t) {
              return t === lr.X ? this.xData : this.yDomain;
            }),
            (e.prototype.update = function () {
              var t = this,
                e = t.visible,
                o = t.chart,
                n = t.xAxis,
                r = t.yAxis,
                i = t.xData,
                s = t.yData;
              if (
                ((this.group.visible = e && !(!i.length || !s.length)),
                n &&
                  r &&
                  e &&
                  o &&
                  !o.layoutPending &&
                  !o.dataPending &&
                  i.length &&
                  s.length)
              ) {
                var a = this.generateSelectionData();
                if (a) {
                  var l = a.areaSelectionData,
                    u = a.markerSelectionData;
                  this.updateAreaSelection(l),
                    this.updateStrokeSelection(l),
                    this.updateMarkerSelection(u),
                    this.updateMarkerNodes(),
                    (this.markerSelectionData = u);
                }
              }
            }),
            (e.prototype.generateSelectionData = function () {
              var t = this;
              if (this.data) {
                var e = this,
                  o = e.yKeys,
                  n = e.data,
                  r = e.xData,
                  i = e.yData,
                  s = e.marker,
                  a = e.fills,
                  l = e.strokes,
                  u = e.xAxis.scale,
                  p = e.yAxis.scale,
                  c = (u.bandwidth || 0) / 2,
                  d = (p.bandwidth || 0) / 2,
                  h = [],
                  f = [],
                  g = 2 * r.length - 1;
                return (
                  r.forEach(function (e, r) {
                    var y = i[r],
                      m = n[r],
                      v = u.convert(e) + c,
                      C = 0,
                      w = 0;
                    y.forEach(function (e, n) {
                      var i = e < 0 ? C : w,
                        u = p.convert(i + e) + d,
                        c = o[n];
                      s &&
                        f.push({
                          series: t,
                          seriesDatum: m,
                          yValue: m[c],
                          yKey: c,
                          point: { x: v, y: u },
                          fill: a[n % a.length],
                          stroke: l[n % l.length],
                        });
                      var y = (h[n] || (h[n] = { yKey: c, points: [] })).points;
                      (y[r] = { x: v, y: u }),
                        (y[g - r] = { x: v, y: p.convert(i) + d }),
                        e < 0 ? (C += e) : (w += e);
                    });
                  }),
                  { areaSelectionData: h, markerSelectionData: f }
                );
              }
            }),
            (e.prototype.updateAreaSelection = function (t) {
              var e = this,
                o = this,
                n = o.fills,
                r = o.fillOpacity,
                i = o.strokes,
                s = o.strokeOpacity,
                a = o.strokeWidth,
                l = o.seriesItemEnabled,
                u = o.shadow,
                p = this.areaSelection.setData(t);
              p.exit.remove();
              var c = p.enter.append(er).each(function (t) {
                  (t.lineJoin = "round"),
                    (t.stroke = void 0),
                    (t.pointerEvents = To.None);
                }),
                d = p.merge(c);
              d.each(function (t, o, p) {
                var c = t.path;
                (t.fill = n[p % n.length]),
                  (t.fillOpacity = r),
                  (t.stroke = i[p % i.length]),
                  (t.strokeOpacity = s),
                  (t.strokeWidth = a),
                  (t.lineDash = e.lineDash),
                  (t.lineDashOffset = e.lineDashOffset),
                  (t.fillShadow = u),
                  (t.visible = !!l.get(o.yKey)),
                  c.clear(),
                  o.points.forEach(function (t, e) {
                    var o = t.x,
                      n = t.y;
                    e > 0 ? c.lineTo(o, n) : c.moveTo(o, n);
                  }),
                  c.closePath();
              }),
                (this.areaSelection = d);
            }),
            (e.prototype.updateStrokeSelection = function (t) {
              var e = this;
              if (this.data) {
                var o = this,
                  n = o.strokes,
                  r = o.strokeWidth,
                  i = o.strokeOpacity,
                  s = o.data,
                  a = o.seriesItemEnabled,
                  l = this.strokeSelection.setData(t);
                l.exit.remove();
                var u = l.enter.append(er).each(function (t) {
                    (t.fill = void 0),
                      (t.lineJoin = t.lineCap = "round"),
                      (t.pointerEvents = To.None);
                  }),
                  p = l.merge(u);
                p.each(function (t, o, l) {
                  var u = t.path;
                  (t.stroke = n[l % n.length]),
                    (t.strokeWidth = r),
                    (t.visible = !!a.get(o.yKey)),
                    (t.strokeOpacity = i),
                    (t.lineDash = e.lineDash),
                    (t.lineDashOffset = e.lineDashOffset),
                    u.clear();
                  for (var p = o.points, c = 0; c < s.length; c++) {
                    var d = p[c],
                      h = d.x,
                      f = d.y;
                    c > 0 ? u.lineTo(h, f) : u.moveTo(h, f);
                  }
                }),
                  (this.strokeSelection = p);
              }
            }),
            (e.prototype.updateMarkerSelection = function (t) {
              var e = this.marker,
                o = e.shape ? t : [],
                n = $i(e.shape),
                r = this.markerSelection.setData(o);
              r.exit.remove();
              var i = r.enter.append(n);
              this.markerSelection = r.merge(i);
            }),
            (e.prototype.updateMarkerNodes = function () {
              if (this.chart) {
                var t = this.marker,
                  e = t.formatter,
                  o =
                    void 0 !== t.strokeWidth ? t.strokeWidth : this.strokeWidth,
                  n = t.size,
                  r = this.xKey,
                  i = this.seriesItemEnabled,
                  s = this.chart.highlightedDatum,
                  a = this.highlightStyle,
                  l = a.fill,
                  u = a.stroke;
                this.markerSelection.each(function (a, p) {
                  var c = p === s,
                    d = c && void 0 !== l ? l : t.fill || p.fill,
                    h = c && void 0 !== u ? u : t.stroke || p.stroke,
                    f = void 0;
                  e &&
                    (f = e({
                      datum: p.seriesDatum,
                      xKey: r,
                      yKey: p.yKey,
                      fill: d,
                      stroke: h,
                      strokeWidth: o,
                      size: n,
                      highlighted: c,
                    })),
                    (a.fill = (f && f.fill) || d),
                    (a.stroke = (f && f.stroke) || h),
                    (a.strokeWidth =
                      f && void 0 !== f.strokeWidth ? f.strokeWidth : o),
                    (a.size = f && void 0 !== f.size ? f.size : n),
                    (a.translationX = p.point.x),
                    (a.translationY = p.point.y),
                    (a.visible = t.enabled && a.size > 0 && !!i.get(p.yKey));
                });
              }
            }),
            (e.prototype.getNodeData = function () {
              return this.markerSelectionData;
            }),
            (e.prototype.fireNodeClickEvent = function (t, e) {
              this.fireEvent({
                type: "nodeClick",
                event: t,
                series: this,
                datum: e.seriesDatum,
                xKey: this.xKey,
                yKey: e.yKey,
              });
            }),
            (e.prototype.getTooltipHtml = function (t) {
              var e = this.xKey,
                o = t.yKey;
              if (!e || !o) return "";
              var n = this,
                r = n.xName,
                i = n.yNames,
                s = n.fills,
                a = n.tooltip,
                l = a.renderer,
                u = void 0 === l ? this.tooltipRenderer : l,
                p = a.format,
                c = t.seriesDatum,
                d = c[e],
                h = c[o],
                f = n.yKeys.indexOf(o),
                g = i[f],
                y = s[f % s.length],
                m = {
                  title: g,
                  backgroundColor: y,
                  content:
                    ("number" == typeof d ? nr(d) : String(d)) +
                    ": " +
                    ("number" == typeof h ? nr(h) : String(h)),
                };
              if (p || u) {
                var v = {
                  datum: c,
                  xKey: e,
                  xName: r,
                  xValue: d,
                  yKey: o,
                  yValue: h,
                  yName: g,
                  color: y,
                };
                if (p) return bs({ content: Xs(p, v) }, m);
                if (u) return bs(u(v), m);
              }
              return bs(m);
            }),
            (e.prototype.listSeriesItems = function (t) {
              var e = this,
                o = e.data,
                n = e.id,
                r = e.yKeys,
                i = e.yNames,
                s = e.seriesItemEnabled,
                a = e.marker,
                l = e.fills,
                u = e.strokes,
                p = e.fillOpacity,
                c = e.strokeOpacity;
              o &&
                o.length &&
                e.xKey &&
                r.length &&
                r.forEach(function (e, o) {
                  t.push({
                    id: n,
                    itemId: e,
                    enabled: s.get(e) || !1,
                    label: { text: i[o] || r[o] },
                    marker: {
                      shape: a.shape,
                      fill: a.fill || l[o % l.length],
                      stroke: a.stroke || u[o % u.length],
                      fillOpacity: p,
                      strokeOpacity: c,
                    },
                  });
                });
            }),
            (e.prototype.toggleSeriesItem = function (t, e) {
              this.seriesItemEnabled.set(t, e), this.scheduleData();
            }),
            (e.className = "AreaSeries"),
            (e.type = "area"),
            Zs([vn("dataChange")], e.prototype, "fills", void 0),
            Zs([vn("dataChange")], e.prototype, "strokes", void 0),
            Zs([vn("update")], e.prototype, "fillOpacity", void 0),
            Zs([vn("update")], e.prototype, "strokeOpacity", void 0),
            Zs([vn("update")], e.prototype, "lineDash", void 0),
            Zs([vn("update")], e.prototype, "lineDashOffset", void 0),
            Zs([vn("update")], e.prototype, "xName", void 0),
            Zs([vn("update")], e.prototype, "yNames", void 0),
            Zs([vn("update")], e.prototype, "strokeWidth", void 0),
            Zs([vn("update")], e.prototype, "shadow", void 0),
            e
          );
        })(ys),
        ta = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ea = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        oa = (function (t) {
          function e() {
            var e = t.call(this) || this;
            return (
              (e.enabled = !0),
              (e.fontSize = 12),
              (e.fontFamily = "Verdana, sans-serif"),
              (e.color = "rgba(70, 70, 70, 1)"),
              e
            );
          }
          return (
            ta(e, t),
            ea([vn("change", "dataChange")], e.prototype, "enabled", void 0),
            ea([vn("change")], e.prototype, "fontStyle", void 0),
            ea([vn("change")], e.prototype, "fontWeight", void 0),
            ea([vn("change")], e.prototype, "fontSize", void 0),
            ea([vn("change")], e.prototype, "fontFamily", void 0),
            ea([vn("change")], e.prototype, "color", void 0),
            e
          );
        })(mn),
        na = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ra = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.Bar = 0)] = "Bar"), (t[(t.Label = 1)] = "Label");
      })(qs || (qs = {}));
      var ia = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            na(e, t), ra([vn("change")], e.prototype, "formatter", void 0), e
          );
        })(oa),
        sa = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            na(e, t), ra([vn("change")], e.prototype, "renderer", void 0), e
          );
        })(ps);
      function aa(t, e) {
        return (
          void 0 === e && (e = []),
          t.forEach(function (t) {
            Array.isArray(t) ? aa(t, e) : e.push(t);
          }),
          e
        );
      }
      var la,
        ua = (function (t) {
          function e() {
            var e,
              o = t.call(this) || this;
            return (
              (o.rectGroup = o.group.appendChild(new Hn())),
              (o.textGroup = o.group.appendChild(new Hn())),
              (o.rectSelection = jn.select(o.rectGroup).selectAll()),
              (o.textSelection = jn.select(o.textGroup).selectAll()),
              (o.xData = []),
              (o.yData = []),
              (o.yDomain = []),
              (o.label = new ia()),
              (o.seriesItemEnabled = new Map()),
              (o.tooltip = new sa()),
              (o.flipXY = !1),
              (o.fills = [
                "#c16068",
                "#a2bf8a",
                "#ebcc87",
                "#80a0c3",
                "#b58dae",
                "#85c0d1",
              ]),
              (o.strokes = [
                "#874349",
                "#718661",
                "#a48f5f",
                "#5a7088",
                "#7f637a",
                "#5d8692",
              ]),
              (o.fillOpacity = 1),
              (o.strokeOpacity = 1),
              (o.lineDash = void 0),
              (o.lineDashOffset = 0),
              (o.groupScale = new vr()),
              (o.directionKeys =
                (((e = {})[lr.X] = ["xKey"]), (e[lr.Y] = ["yKeys"]), e)),
              (o._xKey = ""),
              (o._xName = ""),
              (o.cumYKeyCount = []),
              (o.flatYKeys = void 0),
              (o.hideInLegend = []),
              (o._yKeys = []),
              (o._grouped = !1),
              (o._yNames = {}),
              (o._strokeWidth = 1),
              (o.highlightStyle = { fill: "yellow" }),
              o.addEventListener("update", o.update),
              (o.label.enabled = !1),
              o.label.addEventListener("change", o.update, o),
              o
            );
          }
          return (
            na(e, t),
            (e.prototype.getKeys = function (t) {
              var e = this,
                o = this.directionKeys,
                n = o && o[this.flipXY ? fr(t) : t],
                r = [];
              return (
                n &&
                  n.forEach(function (t) {
                    var o = e[t];
                    o && (Array.isArray(o) ? (r = r.concat(aa(o))) : r.push(o));
                  }),
                r
              );
            }),
            Object.defineProperty(e.prototype, "xKey", {
              get: function () {
                return this._xKey;
              },
              set: function (t) {
                this._xKey !== t &&
                  ((this._xKey = t), (this.xData = []), this.scheduleData());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "xName", {
              get: function () {
                return this._xName;
              },
              set: function (t) {
                this._xName !== t && ((this._xName = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "yKeys", {
              get: function () {
                return this._yKeys;
              },
              set: function (t) {
                var e = this;
                if (!Ks(this._yKeys, t)) {
                  if (t.length && !Array.isArray(t[0])) {
                    var o = (this.flatYKeys = t);
                    t = this.grouped
                      ? o.map(function (t) {
                          return [t];
                        })
                      : [o];
                  } else this.flatYKeys = void 0;
                  this._yKeys = t;
                  var n = 0;
                  this.cumYKeyCount = [];
                  var r = [];
                  t.forEach(function (t, o) {
                    t.length > 0 && r.push(String(o)),
                      e.cumYKeyCount.push(n),
                      (n += t.length);
                  }),
                    (this.yData = []);
                  var i = this.seriesItemEnabled;
                  i.clear(),
                    t.forEach(function (t) {
                      t.forEach(function (t) {
                        return i.set(t, !0);
                      });
                    });
                  var s = this.groupScale;
                  (s.domain = r),
                    (s.padding = 0.1),
                    (s.round = !0),
                    this.scheduleData();
                }
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "grouped", {
              get: function () {
                return this._grouped;
              },
              set: function (t) {
                this._grouped !== t &&
                  ((this._grouped = t),
                  this.flatYKeys && (this.yKeys = this.flatYKeys));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "yNames", {
              get: function () {
                return this._yNames;
              },
              set: function (t) {
                if (Array.isArray(t) && this.flatYKeys) {
                  var e = {};
                  this.flatYKeys.forEach(function (o, n) {
                    e[o] = t[n];
                  }),
                    (t = e);
                }
                (this._yNames = t), this.scheduleData();
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.setColors = function (t, e) {
              (this.fills = t), (this.strokes = e);
            }),
            Object.defineProperty(e.prototype, "normalizedTo", {
              get: function () {
                return this._normalizedTo;
              },
              set: function (t) {
                var e = t ? Math.abs(t) : void 0;
                this._normalizedTo !== e &&
                  ((this._normalizedTo = e), this.scheduleData());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokeWidth", {
              get: function () {
                return this._strokeWidth;
              },
              set: function (t) {
                this._strokeWidth !== t &&
                  ((this._strokeWidth = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "shadow", {
              get: function () {
                return this._shadow;
              },
              set: function (t) {
                this._shadow !== t && ((this._shadow = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.onHighlightChange = function () {
              this.updateRectNodes();
            }),
            (e.prototype.processData = function () {
              var t = this,
                e = t.xKey,
                o = t.yKeys,
                n = t.seriesItemEnabled,
                r = e && o.length && this.data ? this.data : [],
                i = !0;
              (this.xData = r.map(function (t) {
                return (
                  i &&
                    !(e in t) &&
                    ((i = !1),
                    console.warn(
                      "The key '" + e + "' was not found in the data: ",
                      t
                    )),
                  t[e]
                );
              })),
                (this.yData = r.map(function (t) {
                  return o.map(function (e) {
                    return e.map(function (e) {
                      i &&
                        !(e in t) &&
                        ((i = !1),
                        console.warn(
                          "The key '" + e + "' was not found in the data: ",
                          t
                        ));
                      var o = t[e];
                      return isFinite(o) && n.get(e) ? o : 0;
                    });
                  });
                }));
              var s,
                a,
                l = this.yData.map(function (t) {
                  return t.map(function (t) {
                    return Or(t);
                  });
                }),
                u = this.yData,
                p = this.normalizedTo,
                c = this.findLargestMinMax(l);
              return (
                p && isFinite(p)
                  ? ((s = c.min < 0 ? -p : 0),
                    (a = p),
                    u.forEach(function (t, e) {
                      t.forEach(function (t, o) {
                        t.forEach(function (n, r) {
                          t[r] =
                            n < 0
                              ? (-n / l[e][o].min) * p
                              : (n / l[e][o].max) * p;
                        });
                      });
                    }))
                  : ((s = c.min), (a = c.max)),
                (this.yDomain = this.fixNumericExtent([s, a], "y")),
                this.fireEvent({ type: "dataProcessed" }),
                !0
              );
            }),
            (e.prototype.findLargestMinMax = function (t) {
              for (var e = 0, o = 0, n = 0, r = t; n < r.length; n++)
                for (var i = 0, s = r[n]; i < s.length; i++) {
                  var a = s[i];
                  a.min < e && (e = a.min), a.max > o && (o = a.max);
                }
              return { min: e, max: o };
            }),
            (e.prototype.getDomain = function (t) {
              return (
                this.flipXY && (t = fr(t)),
                t === lr.X ? this.xData : this.yDomain
              );
            }),
            (e.prototype.fireNodeClickEvent = function (t, e) {
              this.fireEvent({
                type: "nodeClick",
                event: t,
                series: this,
                datum: e.seriesDatum,
                xKey: this.xKey,
                yKey: e.yKey,
              });
            }),
            (e.prototype.generateNodeData = function () {
              var t = this;
              if (!this.data) return [];
              var e = this.flipXY,
                o = e ? this.yAxis : this.xAxis,
                n = o.scale,
                r = (e ? this.xAxis : this.yAxis).scale,
                i = this,
                s = i.groupScale,
                a = i.yKeys,
                l = i.cumYKeyCount,
                u = i.fills,
                p = i.strokes,
                c = i.strokeWidth,
                d = i.seriesItemEnabled,
                h = i.data,
                f = i.xData,
                g = i.yData,
                y = this.label,
                m = y.fontStyle,
                v = y.fontWeight,
                C = y.fontSize,
                w = y.fontFamily,
                b = y.color,
                E = y.formatter;
              s.range = [0, n.bandwidth];
              var S = s.bandwidth,
                O = [];
              return (
                f.forEach(function (i, f) {
                  for (
                    var y = h[f], _ = n.convert(i), R = g[f], P = 0;
                    P < R.length;
                    P++
                  )
                    for (var T = R[P], A = 0, D = 0, x = 0; x < T.length; x++) {
                      var F = T[x],
                        N = a[P][x],
                        M = _ + s.convert(String(P));
                      if (o.inRange(M, S)) {
                        var I,
                          L = F < 0 ? A : D,
                          G = r.convert(L + F),
                          k = r.convert(L),
                          V = y[N],
                          W = "number" == typeof V;
                        I = E
                          ? E({ value: W ? V : void 0 })
                          : W && isFinite(V)
                          ? V.toFixed(2)
                          : "";
                        var H = l[P] + x;
                        O.push({
                          series: t,
                          seriesDatum: y,
                          yValue: V,
                          yKey: N,
                          x: e ? Math.min(G, k) : M,
                          y: e ? M : Math.min(G, k),
                          width: e ? Math.abs(k - G) : S,
                          height: e ? S : Math.abs(k - G),
                          fill: u[H % u.length],
                          stroke: p[H % p.length],
                          strokeWidth: c,
                          label:
                            d.get(N) && I
                              ? {
                                  text: I,
                                  fontStyle: m,
                                  fontWeight: v,
                                  fontSize: C,
                                  fontFamily: w,
                                  fill: b,
                                  x: e
                                    ? G +
                                      ((V >= 0 ? -1 : 1) * Math.abs(k - G)) / 2
                                    : M + S / 2,
                                  y: e
                                    ? M + S / 2
                                    : G +
                                      ((V >= 0 ? 1 : -1) * Math.abs(k - G)) / 2,
                                }
                              : void 0,
                        }),
                          F < 0 ? (A += F) : (D += F);
                      }
                    }
                }),
                O
              );
            }),
            (e.prototype.update = function () {
              var t = this,
                e = t.visible,
                o = t.chart,
                n = t.xAxis,
                r = t.yAxis,
                i = t.xData,
                s = t.yData;
              if (
                ((this.group.visible = e),
                o &&
                  !o.layoutPending &&
                  !o.dataPending &&
                  n &&
                  r &&
                  e &&
                  i.length &&
                  s.length)
              ) {
                var a = this.generateNodeData();
                this.updateRectSelection(a),
                  this.updateRectNodes(),
                  this.updateTextSelection(a),
                  this.updateTextNodes();
              }
            }),
            (e.prototype.updateRectSelection = function (t) {
              var e = this.rectSelection.setData(t);
              e.exit.remove();
              var o = e.enter.append(Ni).each(function (t) {
                (t.tag = qs.Bar), (t.crisp = !0);
              });
              this.rectSelection = e.merge(o);
            }),
            (e.prototype.updateRectNodes = function () {
              var t = this;
              if (this.chart) {
                var e = this,
                  o = e.fillOpacity,
                  n = e.strokeOpacity,
                  r = e.highlightStyle,
                  i = r.fill,
                  s = r.stroke,
                  a = e.shadow,
                  l = e.formatter,
                  u = e.xKey,
                  p = e.flipXY,
                  c = this.chart.highlightedDatum;
                this.rectSelection.each(function (e, r) {
                  var d = r === c,
                    h = d && void 0 !== i ? i : r.fill,
                    f = d && void 0 !== s ? s : r.stroke,
                    g = void 0;
                  l &&
                    (g = l({
                      datum: r.seriesDatum,
                      fill: h,
                      stroke: f,
                      strokeWidth: r.strokeWidth,
                      highlighted: d,
                      xKey: u,
                      yKey: r.yKey,
                    })),
                    (e.x = r.x),
                    (e.y = r.y),
                    (e.width = r.width),
                    (e.height = r.height),
                    (e.fill = (g && g.fill) || h),
                    (e.stroke = (g && g.stroke) || f),
                    (e.strokeWidth =
                      g && void 0 !== g.strokeWidth
                        ? g.strokeWidth
                        : r.strokeWidth),
                    (e.fillOpacity = o),
                    (e.strokeOpacity = n),
                    (e.lineDash = t.lineDash),
                    (e.lineDashOffset = t.lineDashOffset),
                    (e.fillShadow = a),
                    (e.visible = p ? r.width > 0 : r.height > 0);
                });
              }
            }),
            (e.prototype.updateTextSelection = function (t) {
              var e = this.textSelection.setData(t);
              e.exit.remove();
              var o = e.enter.append(gn).each(function (t) {
                (t.tag = qs.Label),
                  (t.pointerEvents = To.None),
                  (t.textAlign = "center"),
                  (t.textBaseline = "middle");
              });
              this.textSelection = e.merge(o);
            }),
            (e.prototype.updateTextNodes = function () {
              var t = this.label.enabled;
              this.textSelection.each(function (e, o) {
                var n = o.label;
                n && t
                  ? ((e.fontStyle = n.fontStyle),
                    (e.fontWeight = n.fontWeight),
                    (e.fontSize = n.fontSize),
                    (e.fontFamily = n.fontFamily),
                    (e.text = n.text),
                    (e.x = n.x),
                    (e.y = n.y),
                    (e.fill = n.fill),
                    (e.visible = !0))
                  : (e.visible = !1);
              });
            }),
            (e.prototype.getTooltipHtml = function (t) {
              var e = this.xKey,
                o = t.yKey;
              if (!e || !o) return "";
              for (var n = 0, r = 0, i = this.yKeys; r < i.length; r++) {
                var s = i[r],
                  a = s.indexOf(o);
                if (a >= 0) {
                  n += a;
                  break;
                }
                n += s.length;
              }
              var l = this,
                u = l.xName,
                p = l.fills,
                c = l.tooltip.renderer,
                d = void 0 === c ? this.tooltipRenderer : c,
                h = t.seriesDatum,
                f = l.yNames[o],
                g = p[n % p.length],
                y = h[e],
                m = h[o],
                v = {
                  title: f,
                  backgroundColor: g,
                  content:
                    ("number" == typeof y ? nr(y) : String(y)) +
                    ": " +
                    ("number" == typeof m ? nr(m) : String(m)),
                };
              return d
                ? bs(
                    d({
                      datum: h,
                      xKey: e,
                      xValue: y,
                      xName: u,
                      yKey: o,
                      yValue: m,
                      yName: f,
                      color: g,
                    }),
                    v
                  )
                : bs(v);
            }),
            (e.prototype.listSeriesItems = function (t) {
              var e = this,
                o = e.id,
                n = e.data,
                r = e.yNames,
                i = e.cumYKeyCount,
                s = e.seriesItemEnabled,
                a = e.hideInLegend,
                l = e.fills,
                u = e.strokes,
                p = e.fillOpacity,
                c = e.strokeOpacity;
              n &&
                n.length &&
                e.xKey &&
                e.yKeys.length &&
                this.yKeys.forEach(function (e, n) {
                  e.forEach(function (e, d) {
                    if (a.indexOf(e) < 0) {
                      var h = i[n] + d;
                      t.push({
                        id: o,
                        itemId: e,
                        enabled: s.get(e) || !1,
                        label: { text: r[e] || e },
                        marker: {
                          fill: l[h % l.length],
                          stroke: u[h % u.length],
                          fillOpacity: p,
                          strokeOpacity: c,
                        },
                      });
                    }
                  });
                });
            }),
            (e.prototype.toggleSeriesItem = function (t, e) {
              var o = this.seriesItemEnabled;
              o.set(t, e);
              var n = this.yKeys.map(function (t) {
                return t.slice();
              });
              o.forEach(function (t, e) {
                t ||
                  n.forEach(function (t) {
                    var o = t.indexOf(e);
                    o >= 0 && t.splice(o, 1);
                  });
              });
              var r = [];
              n.forEach(function (t, e) {
                t.length > 0 && r.push(String(e));
              }),
                (this.groupScale.domain = r),
                this.scheduleData();
            }),
            (e.className = "BarSeries"),
            (e.type = "bar"),
            ra([vn("layoutChange")], e.prototype, "flipXY", void 0),
            ra([vn("dataChange")], e.prototype, "fills", void 0),
            ra([vn("dataChange")], e.prototype, "strokes", void 0),
            ra([vn("layoutChange")], e.prototype, "fillOpacity", void 0),
            ra([vn("layoutChange")], e.prototype, "strokeOpacity", void 0),
            ra([vn("update")], e.prototype, "lineDash", void 0),
            ra([vn("update")], e.prototype, "lineDashOffset", void 0),
            ra([vn("update")], e.prototype, "formatter", void 0),
            ra([vn("layoutChange")], e.prototype, "hideInLegend", void 0),
            e
          );
        })(ys),
        pa = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ca = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        da = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            pa(e, t),
            ca([vn("change")], e.prototype, "renderer", void 0),
            ca([vn("change")], e.prototype, "format", void 0),
            e
          );
        })(ps),
        ha = (function (t) {
          function e() {
            var e = t.call(this) || this;
            (e.xDomain = []),
              (e.yDomain = []),
              (e.xData = []),
              (e.yData = []),
              (e.lineNode = new er()),
              (e.nodeSelection = jn.select(e.group).selectAll()),
              (e.nodeData = []),
              (e.marker = new ms()),
              (e.stroke = "#874349"),
              (e.lineDash = void 0),
              (e.lineDashOffset = 0),
              (e.strokeWidth = 2),
              (e.strokeOpacity = 1),
              (e.tooltip = new da()),
              (e._xKey = ""),
              (e.xName = ""),
              (e._yKey = ""),
              (e.yName = ""),
              (e.highlightStyle = { fill: "yellow" });
            var o = e.lineNode;
            (o.fill = void 0),
              (o.lineJoin = "round"),
              (o.pointerEvents = To.None),
              e.group.append(o),
              e.addEventListener("update", e.update);
            var n = e.marker;
            return (
              (n.fill = "#c16068"),
              (n.stroke = "#874349"),
              n.addPropertyListener("shape", e.onMarkerShapeChange, e),
              n.addPropertyListener("enabled", e.onMarkerEnabledChange, e),
              n.addEventListener("change", e.update, e),
              e
            );
          }
          return (
            pa(e, t),
            (e.prototype.onMarkerShapeChange = function () {
              (this.nodeSelection = this.nodeSelection.setData([])),
                this.nodeSelection.exit.remove(),
                this.update(),
                this.fireEvent({ type: "legendChange" });
            }),
            (e.prototype.onMarkerEnabledChange = function (t) {
              t.value ||
                ((this.nodeSelection = this.nodeSelection.setData([])),
                this.nodeSelection.exit.remove());
            }),
            (e.prototype.setColors = function (t, e) {
              (this.stroke = t[0]),
                (this.marker.stroke = e[0]),
                (this.marker.fill = t[0]);
            }),
            Object.defineProperty(e.prototype, "xKey", {
              get: function () {
                return this._xKey;
              },
              set: function (t) {
                this._xKey !== t &&
                  ((this._xKey = t), (this.xData = []), this.scheduleData());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "yKey", {
              get: function () {
                return this._yKey;
              },
              set: function (t) {
                this._yKey !== t &&
                  ((this._yKey = t), (this.yData = []), this.scheduleData());
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.processData = function () {
              var t = this,
                e = t.xAxis,
                o = t.xKey,
                n = t.yKey,
                r = t.xData,
                i = t.yData,
                s = o && n && this.data ? this.data : [];
              if (!e) return !1;
              var a = e.scale instanceof An,
                l = t.yAxis.scale instanceof An;
              (r.length = 0), (i.length = 0);
              for (var u = 0, p = s.length; u < p; u++) {
                var c = s[u],
                  d = c[n];
                r.push(c[o]), i.push(d);
              }
              return (
                (this.xDomain = a ? this.fixNumericExtent(Sr(r), "x") : r),
                (this.yDomain = l ? this.fixNumericExtent(Sr(i), "y") : i),
                !0
              );
            }),
            (e.prototype.getDomain = function (t) {
              return t === lr.X ? this.xDomain : this.yDomain;
            }),
            (e.prototype.onHighlightChange = function () {
              this.updateNodes();
            }),
            (e.prototype.update = function () {
              this.group.visible = this.visible;
              var t = this,
                e = t.chart;
              e &&
                !e.layoutPending &&
                !e.dataPending &&
                t.xAxis &&
                t.yAxis &&
                (this.updateLinePath(),
                this.updateNodeSelection(),
                this.updateNodes());
            }),
            (e.prototype.getXYDatums = function (t, e, o, n, r) {
              var i = n instanceof An,
                s = e[t],
                a = o[t];
              return null == a ||
                (r instanceof An && (isNaN(a) || !isFinite(a))) ||
                null == s ||
                (i && (isNaN(s) || !isFinite(s)))
                ? void 0
                : [s, a];
            }),
            (e.prototype.updateLinePath = function () {
              if (this.data) {
                var t = this,
                  e = t.xAxis,
                  o = t.data,
                  n = t.xData,
                  r = t.yData,
                  i = t.lineNode,
                  s = e.scale,
                  a = t.yAxis.scale,
                  l = (s.bandwidth || 0) / 2,
                  u = (a.bandwidth || 0) / 2,
                  p = i.path,
                  c = [];
                p.clear();
                for (
                  var d = !0, h = void 0, f = void 0, g = 0;
                  g < n.length;
                  g++
                ) {
                  var y = f || this.getXYDatums(g, n, r, s, a);
                  if (y) {
                    var m = y[1],
                      v = s.convert(y[0]) + l,
                      C =
                        (s.bandwidth ||
                          0.5 * this.marker.size +
                            (this.marker.strokeWidth || 0)) + 1;
                    f = this.getXYDatums(g + 1, n, r, s, a);
                    var w = e.inRangeEx(v, 0, C),
                      b = f && e.inRangeEx(s.convert(f[0]) + l, 0, C);
                    if (-1 === w && -1 === b) {
                      d = !0;
                      continue;
                    }
                    if (1 === w && 1 === h) {
                      d = !0;
                      continue;
                    }
                    h = w;
                    var E = a.convert(m) + u;
                    d ? (p.moveTo(v, E), (d = !1)) : p.lineTo(v, E),
                      c.push({
                        series: this,
                        seriesDatum: o[g],
                        point: { x: v, y: E },
                      });
                  } else (h = void 0), (d = !0);
                }
                (i.stroke = this.stroke),
                  (i.strokeWidth = this.strokeWidth),
                  (i.lineDash = this.lineDash),
                  (i.lineDashOffset = this.lineDashOffset),
                  (i.strokeOpacity = this.strokeOpacity),
                  (this.nodeData = c);
              }
            }),
            (e.prototype.updateNodeSelection = function () {
              var t = this.marker,
                e = t.shape ? this.nodeData : [],
                o = $i(t.shape),
                n = this.nodeSelection.setData(e);
              n.exit.remove();
              var r = n.enter.append(Hn);
              r.append(o), (this.nodeSelection = n.merge(r));
            }),
            (e.prototype.updateNodes = function () {
              if (this.chart) {
                var t = this,
                  e = t.marker,
                  o = t.xKey,
                  n = t.yKey,
                  r = t.stroke,
                  i = t.strokeWidth,
                  s = $i(e.shape),
                  a = this.chart.highlightedDatum,
                  l = this.highlightStyle,
                  u = l.fill,
                  p = l.stroke,
                  c = e.formatter,
                  d = e.size,
                  h = void 0 !== e.strokeWidth ? e.strokeWidth : i;
                this.nodeSelection.selectByClass(s).each(function (t, i) {
                  var s = i === a,
                    l = s && void 0 !== u ? u : e.fill,
                    f = s && void 0 !== p ? p : e.stroke || r,
                    g = void 0;
                  c &&
                    (g = c({
                      datum: i.seriesDatum,
                      xKey: o,
                      yKey: n,
                      fill: l,
                      stroke: f,
                      strokeWidth: h,
                      size: d,
                      highlighted: s,
                    })),
                    (t.fill = (g && g.fill) || l),
                    (t.stroke = (g && g.stroke) || f),
                    (t.strokeWidth =
                      g && void 0 !== g.strokeWidth ? g.strokeWidth : h),
                    (t.size = g && void 0 !== g.size ? g.size : d),
                    (t.translationX = i.point.x),
                    (t.translationY = i.point.y),
                    (t.visible = e.enabled && t.size > 0);
                });
              }
            }),
            (e.prototype.getNodeData = function () {
              return this.nodeData;
            }),
            (e.prototype.fireNodeClickEvent = function (t, e) {
              this.fireEvent({
                type: "nodeClick",
                event: t,
                series: this,
                datum: e.seriesDatum,
                xKey: this.xKey,
                yKey: this.yKey,
              });
            }),
            (e.prototype.getTooltipHtml = function (t) {
              var e = this.xKey,
                o = this.yKey;
              if (!e || !o) return "";
              var n = this,
                r = n.xName,
                i = n.yName,
                s = n.stroke,
                a = n.tooltip,
                l = a.renderer,
                u = void 0 === l ? this.tooltipRenderer : l,
                p = a.format,
                c = t.seriesDatum,
                d = c[e],
                h = c[o],
                f = "number" == typeof d ? nr(d) : String(d),
                g = "number" == typeof h ? nr(h) : String(h),
                y = this.title || i,
                m = { title: y, backgroundColor: s, content: f + ": " + g };
              if (p || u) {
                var v = {
                  datum: c,
                  xKey: e,
                  xValue: d,
                  xName: r,
                  yKey: o,
                  yValue: h,
                  yName: i,
                  title: y,
                  color: s,
                };
                if (p) return bs({ content: Xs(p, v) }, m);
                if (u) return bs(u(v), m);
              }
              return bs(m);
            }),
            (e.prototype.listSeriesItems = function (t) {
              var e = this,
                o = e.data,
                n = e.yKey,
                r = e.marker;
              o &&
                o.length &&
                e.xKey &&
                n &&
                t.push({
                  id: e.id,
                  itemId: void 0,
                  enabled: e.visible,
                  label: { text: e.title || e.yName || n },
                  marker: {
                    shape: r.shape,
                    fill: r.fill || "rgba(0, 0, 0, 0)",
                    stroke: r.stroke || e.stroke || "rgba(0, 0, 0, 0)",
                    fillOpacity: 1,
                    strokeOpacity: e.strokeOpacity,
                  },
                });
            }),
            (e.className = "LineSeries"),
            (e.type = "line"),
            ca([vn("layoutChange")], e.prototype, "title", void 0),
            ca([vn("update")], e.prototype, "stroke", void 0),
            ca([vn("update")], e.prototype, "lineDash", void 0),
            ca([vn("update")], e.prototype, "lineDashOffset", void 0),
            ca([vn("update")], e.prototype, "strokeWidth", void 0),
            ca([vn("update")], e.prototype, "strokeOpacity", void 0),
            ca([vn("update")], e.prototype, "xName", void 0),
            ca([vn("update")], e.prototype, "yName", void 0),
            e
          );
        })(ys),
        fa = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ga = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ya = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            fa(e, t), ga([vn("change")], e.prototype, "renderer", void 0), e
          );
        })(ps),
        ma = (function (t) {
          function e() {
            var e = t.call(this) || this;
            (e.xDomain = []),
              (e.yDomain = []),
              (e.xData = []),
              (e.yData = []),
              (e.sizeData = []),
              (e.sizeScale = new Vn()),
              (e.nodeSelection = jn.select(e.group).selectAll()),
              (e.nodeData = []),
              (e.marker = new ms()),
              (e._fill = "#c16068"),
              (e._stroke = "#874349"),
              (e._strokeWidth = 2),
              (e._fillOpacity = 1),
              (e._strokeOpacity = 1),
              (e.highlightStyle = { fill: "yellow" }),
              (e.xKey = ""),
              (e.yKey = ""),
              (e.xName = ""),
              (e.yName = ""),
              (e.sizeName = "Size"),
              (e.labelName = "Label"),
              (e.tooltip = new ya());
            var o = e.marker;
            return (
              o.addPropertyListener("shape", e.onMarkerShapeChange, e),
              o.addEventListener("change", e.update, e),
              e.addPropertyListener("xKey", function () {
                return (e.xData = []);
              }),
              e.addPropertyListener("yKey", function () {
                return (e.yData = []);
              }),
              e.addPropertyListener("sizeKey", function () {
                return (e.sizeData = []);
              }),
              e
            );
          }
          return (
            fa(e, t),
            Object.defineProperty(e.prototype, "fill", {
              get: function () {
                return this._fill;
              },
              set: function (t) {
                this._fill !== t && ((this._fill = t), this.scheduleData());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "stroke", {
              get: function () {
                return this._stroke;
              },
              set: function (t) {
                this._stroke !== t && ((this._stroke = t), this.scheduleData());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokeWidth", {
              get: function () {
                return this._strokeWidth;
              },
              set: function (t) {
                this._strokeWidth !== t &&
                  ((this._strokeWidth = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fillOpacity", {
              get: function () {
                return this._fillOpacity;
              },
              set: function (t) {
                this._fillOpacity !== t &&
                  ((this._fillOpacity = t), this.scheduleLayout());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokeOpacity", {
              get: function () {
                return this._strokeOpacity;
              },
              set: function (t) {
                this._strokeOpacity !== t &&
                  ((this._strokeOpacity = t), this.scheduleLayout());
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.onHighlightChange = function () {
              this.updateNodes();
            }),
            (e.prototype.onMarkerShapeChange = function () {
              (this.nodeSelection = this.nodeSelection.setData([])),
                this.nodeSelection.exit.remove(),
                this.update(),
                this.fireEvent({ type: "legendChange" });
            }),
            (e.prototype.setColors = function (t, e) {
              (this.fill = t[0]),
                (this.stroke = e[0]),
                (this.marker.fill = t[0]),
                (this.marker.stroke = e[0]);
            }),
            (e.prototype.processData = function () {
              var t = this,
                e = t.xKey,
                o = t.yKey,
                n = t.sizeKey,
                r = t.xAxis,
                i = t.yAxis,
                s = t.marker,
                a = e && o && this.data ? this.data : [];
              return (
                (this.xData = a.map(function (t) {
                  return t[e];
                })),
                (this.yData = a.map(function (t) {
                  return t[o];
                })),
                (this.sizeData = n
                  ? a.map(function (t) {
                      return t[n];
                    })
                  : []),
                (this.sizeScale.domain = s.domain
                  ? s.domain
                  : Er(this.sizeData) || [1, 1]),
                (this.xDomain =
                  r.scale instanceof An
                    ? this.fixNumericExtent(Er(this.xData), "x")
                    : this.xData),
                (this.yDomain =
                  i.scale instanceof An
                    ? this.fixNumericExtent(Er(this.yData), "y")
                    : this.yData),
                !0
              );
            }),
            (e.prototype.getDomain = function (t) {
              return t === lr.X ? this.xDomain : this.yDomain;
            }),
            (e.prototype.getNodeData = function () {
              return this.nodeData;
            }),
            (e.prototype.fireNodeClickEvent = function (t, e) {
              this.fireEvent({
                type: "nodeClick",
                event: t,
                series: this,
                datum: e.seriesDatum,
                xKey: this.xKey,
                yKey: this.yKey,
                sizeKey: this.sizeKey,
              });
            }),
            (e.prototype.generateNodeData = function () {
              if (!this.data) return [];
              var t = this.xAxis,
                e = t.scale,
                o = this.yAxis.scale,
                n = e instanceof An,
                r = o instanceof An,
                i = (e.bandwidth || 0) / 2,
                s = (o.bandwidth || 0) / 2,
                a = this,
                l = a.data,
                u = a.xData,
                p = a.yData,
                c = a.sizeData,
                d = a.sizeScale,
                h = a.marker;
              d.range = [h.size, h.maxSize];
              for (var f = [], g = 0; g < u.length; g++) {
                var y = u[g],
                  m = p[g];
                if (
                  null != m &&
                  (!r || (!isNaN(m) && isFinite(m))) &&
                  null != y &&
                  (!n || (!isNaN(y) && isFinite(y)))
                ) {
                  var v = e.convert(y) + i;
                  t.inRange(v) &&
                    f.push({
                      series: this,
                      seriesDatum: l[g],
                      point: { x: v, y: o.convert(p[g]) + s },
                      size: c.length ? d.convert(c[g]) : h.size,
                    });
                }
              }
              return f;
            }),
            (e.prototype.update = function () {
              var t = this,
                e = t.visible,
                o = t.chart,
                n = t.xAxis,
                r = t.yAxis;
              if (
                ((this.group.visible = e),
                e && o && !o.layoutPending && !o.dataPending && n && r)
              ) {
                var i = (this.nodeData = this.generateNodeData());
                this.updateNodeSelection(i), this.updateNodes();
              }
            }),
            (e.prototype.updateNodeSelection = function (t) {
              var e = $i(this.marker.shape),
                o = this.nodeSelection.setData(t);
              o.exit.remove();
              var n = o.enter.append(Hn);
              n.append(e), (this.nodeSelection = o.merge(n));
            }),
            (e.prototype.updateNodes = function () {
              if (this.chart) {
                var t = this.chart.highlightedDatum,
                  e = this,
                  o = e.marker,
                  n = e.xKey,
                  r = e.yKey,
                  i = e.fill,
                  s = e.stroke,
                  a = e.fillOpacity,
                  l = e.strokeOpacity,
                  u = this.highlightStyle,
                  p = u.fill,
                  c = u.stroke,
                  d = void 0 !== o.strokeWidth ? o.strokeWidth : e.strokeWidth,
                  h = $i(o.shape),
                  f = o.formatter;
                this.nodeSelection.selectByClass(h).each(function (e, u) {
                  var h = u === t,
                    g = h && void 0 !== p ? p : o.fill || i,
                    y = h && void 0 !== c ? c : o.stroke || s,
                    m = void 0;
                  f &&
                    (m = f({
                      datum: u.seriesDatum,
                      xKey: n,
                      yKey: r,
                      fill: g,
                      stroke: y,
                      strokeWidth: d,
                      size: u.size,
                      highlighted: h,
                    })),
                    (e.fill = (m && m.fill) || g),
                    (e.stroke = (m && m.stroke) || y),
                    (e.strokeWidth =
                      m && void 0 !== m.strokeWidth ? m.strokeWidth : d),
                    (e.size = m && void 0 !== m.size ? m.size : u.size),
                    (e.fillOpacity = a),
                    (e.strokeOpacity = l),
                    (e.translationX = u.point.x),
                    (e.translationY = u.point.y),
                    (e.visible = o.enabled && e.size > 0);
                });
              }
            }),
            (e.prototype.getTooltipHtml = function (t) {
              var e = this.xKey,
                o = this.yKey;
              if (!e || !o) return "";
              var n = this,
                r = n.xName,
                i = n.yName,
                s = n.sizeKey,
                a = n.sizeName,
                l = n.labelKey,
                u = n.labelName,
                p = n.tooltip.renderer,
                c = void 0 === p ? this.tooltipRenderer : p,
                d = n.fill || "gray",
                h = this.title || i,
                f = t.seriesDatum,
                g = f[e],
                y = f[o],
                m =
                  "<b>" +
                  (r || e) +
                  "</b>: " +
                  ("number" == typeof g ? nr(g) : g) +
                  "<br><b>" +
                  (i || o) +
                  "</b>: " +
                  ("number" == typeof y ? nr(y) : y);
              s && (m += "<br><b>" + a + "</b>: " + f[s]),
                l && (m = "<b>" + u + "</b>: " + f[l] + "<br>" + m);
              var v = { title: h, backgroundColor: d, content: m };
              return c
                ? bs(
                    c({
                      datum: f,
                      xKey: e,
                      xValue: g,
                      xName: r,
                      yKey: o,
                      yValue: y,
                      yName: i,
                      sizeKey: s,
                      sizeName: a,
                      labelKey: l,
                      labelName: u,
                      title: h,
                      color: d,
                    }),
                    v
                  )
                : bs(v);
            }),
            (e.prototype.listSeriesItems = function (t) {
              var e = this,
                o = e.data,
                n = e.yKey,
                r = e.marker;
              o &&
                o.length &&
                e.xKey &&
                n &&
                t.push({
                  id: e.id,
                  itemId: void 0,
                  enabled: e.visible,
                  label: { text: e.title || e.yName || n },
                  marker: {
                    shape: r.shape,
                    fill: r.fill || e.fill || "rgba(0, 0, 0, 0)",
                    stroke: r.stroke || e.stroke || "rgba(0, 0, 0, 0)",
                    fillOpacity: e.fillOpacity,
                    strokeOpacity: e.strokeOpacity,
                  },
                });
            }),
            (e.className = "ScatterSeries"),
            (e.type = "scatter"),
            ga([vn("layoutChange")], e.prototype, "title", void 0),
            ga([vn("dataChange")], e.prototype, "xKey", void 0),
            ga([vn("dataChange")], e.prototype, "yKey", void 0),
            ga([vn("dataChange")], e.prototype, "sizeKey", void 0),
            ga([vn("dataChange")], e.prototype, "labelKey", void 0),
            e
          );
        })(ys),
        va = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ca = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.Bin = 0)] = "Bin"), (t[(t.Label = 1)] = "Label");
      })(la || (la = {}));
      var wa = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            va(e, t), Ca([vn("change")], e.prototype, "formatter", void 0), e
          );
        })(oa),
        ba = {
          count: function (t) {
            return t.data.length;
          },
          sum: function (t, e) {
            return t.data.reduce(function (t, o) {
              return t + o[e];
            }, 0);
          },
          mean: function (t, e) {
            return ba.sum(t, e) / ba.count(t, e);
          },
        },
        Ea = (function () {
          function t(t) {
            var e = t[0],
              o = t[1];
            (this.data = []),
              (this.aggregatedValue = 0),
              (this.frequency = 0),
              (this.domain = [e, o]);
          }
          return (
            (t.prototype.addDatum = function (t) {
              this.data.push(t), this.frequency++;
            }),
            Object.defineProperty(t.prototype, "domainWidth", {
              get: function () {
                var t = this.domain;
                return t[1] - t[0];
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "relativeHeight", {
              get: function () {
                return this.aggregatedValue / this.domainWidth;
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.calculateAggregatedValue = function (t, e) {
              e || (t = "count"), (this.aggregatedValue = (0, ba[t])(this, e));
            }),
            (t.prototype.getY = function (t) {
              return t ? this.relativeHeight : this.aggregatedValue;
            }),
            t
          );
        })(),
        Sa = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            va(e, t), Ca([vn("change")], e.prototype, "renderer", void 0), e
          );
        })(ps),
        Oa = (function (t) {
          function e() {
            var e,
              o = t.call(this) || this;
            return (
              (o.rectGroup = o.group.appendChild(new Hn())),
              (o.textGroup = o.group.appendChild(new Hn())),
              (o.rectSelection = jn.select(o.rectGroup).selectAll()),
              (o.textSelection = jn.select(o.textGroup).selectAll()),
              (o.binnedData = []),
              (o.xDomain = []),
              (o.yDomain = []),
              (o.label = new wa()),
              (o.seriesItemEnabled = !0),
              (o.tooltip = new Sa()),
              (o.fill = void 0),
              (o.stroke = void 0),
              (o.fillOpacity = 1),
              (o.strokeOpacity = 1),
              (o.lineDash = void 0),
              (o.lineDashOffset = 0),
              (o.directionKeys =
                (((e = {})[lr.X] = ["xKey"]), (e[lr.Y] = ["yKey"]), e)),
              (o._xKey = ""),
              (o._areaPlot = !1),
              (o._bins = void 0),
              (o._aggregation = "count"),
              (o._binCount = void 0),
              (o._xName = ""),
              (o._yKey = ""),
              (o._yName = ""),
              (o._strokeWidth = 1),
              (o.highlightStyle = { fill: "yellow" }),
              (o.label.enabled = !1),
              o.label.addEventListener("change", o.update, o),
              o
            );
          }
          return (
            va(e, t),
            (e.prototype.getKeys = function (t) {
              var e = this,
                o = this.directionKeys,
                n = o && o[t],
                r = [];
              return (
                n &&
                  n.forEach(function (t) {
                    var o = e[t];
                    o && (Array.isArray(o) ? r.push.apply(r, o) : r.push(o));
                  }),
                r
              );
            }),
            Object.defineProperty(e.prototype, "xKey", {
              get: function () {
                return this._xKey;
              },
              set: function (t) {
                this._xKey !== t && ((this._xKey = t), this.scheduleData());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "areaPlot", {
              get: function () {
                return this._areaPlot;
              },
              set: function (t) {
                (this._areaPlot = t), this.scheduleData();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "bins", {
              get: function () {
                return this._bins;
              },
              set: function (t) {
                (this._bins = t), this.scheduleData();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "aggregation", {
              get: function () {
                return this._aggregation;
              },
              set: function (t) {
                (this._aggregation = t), this.scheduleData();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "binCount", {
              get: function () {
                return this._binCount;
              },
              set: function (t) {
                (this._binCount = t), this.scheduleData();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "xName", {
              get: function () {
                return this._xName;
              },
              set: function (t) {
                this._xName !== t && ((this._xName = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "yKey", {
              get: function () {
                return this._yKey;
              },
              set: function (t) {
                (this._yKey = t),
                  (this.seriesItemEnabled = !0),
                  this.scheduleData();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "yName", {
              get: function () {
                return this._yName;
              },
              set: function (t) {
                (this._yName = t), this.scheduleData();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokeWidth", {
              get: function () {
                return this._strokeWidth;
              },
              set: function (t) {
                this._strokeWidth !== t &&
                  ((this._strokeWidth = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "shadow", {
              get: function () {
                return this._shadow;
              },
              set: function (t) {
                this._shadow !== t && ((this._shadow = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.onHighlightChange = function () {
              this.updateRectNodes();
            }),
            (e.prototype.setColors = function (t, e) {
              (this.fill = t[0]), (this.stroke = e[0]);
            }),
            (e.prototype.deriveBins = function () {
              var t = this,
                e = this.bins;
              if (!this.data) return [];
              if (
                (e &&
                  this.binCount &&
                  console.warn(
                    "bins and bitCount are mutually exclusive properties."
                  ),
                e)
              )
                return e;
              var o = this.data.map(function (e) {
                  return e[t.xKey];
                }),
                n = this.fixNumericExtent(Er(o), "x"),
                r = xn(n[0], n[1], this.binCount || 10),
                i = In(n[0], n[1], this.binCount || 10),
                s = r[0];
              return (function () {
                for (var t = 0, e = 0, o = arguments.length; e < o; e++)
                  t += arguments[e].length;
                var n = Array(t),
                  r = 0;
                for (e = 0; e < o; e++)
                  for (
                    var i = arguments[e], s = 0, a = i.length;
                    s < a;
                    s++, r++
                  )
                    n[r] = i[s];
                return n;
              })(
                [[s - i, s]],
                r.map(function (t) {
                  return [t, t + i];
                })
              );
            }),
            (e.prototype.placeDataInBins = function (t) {
              var e = this,
                o = this.xKey,
                n = this.deriveBins(),
                r = t.slice().sort(function (t, e) {
                  return t[o] < e[o] ? -1 : t[o] > e[o] ? 1 : 0;
                }),
                i = 0,
                s = [new Ea(n[0])];
              t: for (var a = 0, l = r.length; a < l; a++) {
                for (var u = r[a]; u[o] > n[i][1]; ) {
                  var p = n[++i];
                  if (!p) break t;
                  s.push(new Ea(p));
                }
                s[i].addDatum(u);
              }
              return (
                s.forEach(function (t) {
                  return t.calculateAggregatedValue(e._aggregation, e.yKey);
                }),
                s
              );
            }),
            Object.defineProperty(e.prototype, "xMax", {
              get: function () {
                var t = this;
                return (
                  this.data &&
                  this.data.reduce(function (e, o) {
                    return Math.max(e, o[t.xKey]);
                  }, Number.NEGATIVE_INFINITY)
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.processData = function () {
              var t = this,
                e = this.data;
              this.binnedData = this.placeDataInBins(this.xKey && e ? e : []);
              var o = Sr(
                this.binnedData.map(function (e) {
                  return e.getY(t.areaPlot);
                })
              );
              return (
                (this.yDomain = this.fixNumericExtent([0, o ? o[1] : 1], "y")),
                (this.xDomain = [
                  this.binnedData[0].domain[0],
                  this.binnedData[this.binnedData.length - 1].domain[1],
                ]),
                this.fireEvent({ type: "dataProcessed" }),
                !0
              );
            }),
            (e.prototype.getDomain = function (t) {
              return t === lr.X ? this.xDomain : this.yDomain;
            }),
            (e.prototype.fireNodeClickEvent = function (t, e) {
              this.fireEvent({
                type: "nodeClick",
                event: t,
                series: this,
                datum: e.seriesDatum,
                xKey: this.xKey,
              });
            }),
            (e.prototype.update = function () {
              var t = this,
                e = t.visible,
                o = t.chart,
                n = t.xAxis,
                r = t.yAxis;
              if (
                ((this.group.visible = e),
                n && r && e && o && !o.layoutPending && !o.dataPending)
              ) {
                var i = this.generateNodeData();
                this.updateRectSelection(i),
                  this.updateRectNodes(),
                  this.updateTextSelection(i),
                  this.updateTextNodes();
              }
            }),
            (e.prototype.generateNodeData = function () {
              var t = this;
              if (!this.seriesItemEnabled) return [];
              var e = this,
                o = e.xAxis.scale,
                n = e.yAxis.scale,
                r = e.fill,
                i = e.stroke,
                s = e.strokeWidth,
                a = [],
                l = this.label,
                u = l.formatter,
                p =
                  void 0 === u
                    ? function (t) {
                        return String(t.value);
                      }
                    : u,
                c = l.fontStyle,
                d = l.fontWeight,
                h = l.fontSize,
                f = l.fontFamily,
                g = l.color;
              return (
                this.binnedData.forEach(function (e) {
                  var l = e.aggregatedValue,
                    u = e.frequency,
                    y = e.domain,
                    m = y[1],
                    v = e.relativeHeight,
                    C = o.convert(y[0]),
                    w = o.convert(m),
                    b = t.areaPlot ? v : t.yKey ? l : u,
                    E = n.convert(0),
                    S = n.convert(b),
                    O = w - C,
                    _ = Math.abs(S - E),
                    R =
                      0 !== b
                        ? {
                            text: p({ value: e.aggregatedValue }),
                            fontStyle: c,
                            fontWeight: d,
                            fontSize: h,
                            fontFamily: f,
                            fill: g,
                            x: C + O / 2,
                            y: S + _ / 2,
                          }
                        : void 0;
                  a.push({
                    series: t,
                    seriesDatum: e,
                    x: C,
                    y: S,
                    width: O,
                    height: _,
                    fill: r,
                    stroke: i,
                    strokeWidth: s,
                    label: R,
                  });
                }),
                a
              );
            }),
            (e.prototype.updateRectSelection = function (t) {
              var e = this.rectSelection.setData(t);
              e.exit.remove();
              var o = e.enter.append(Ni).each(function (t) {
                (t.tag = la.Bin), (t.crisp = !0);
              });
              this.rectSelection = e.merge(o);
            }),
            (e.prototype.updateRectNodes = function () {
              var t = this;
              if (this.chart) {
                var e = this.chart.highlightedDatum,
                  o = this,
                  n = o.fillOpacity,
                  r = o.strokeOpacity,
                  i = o.shadow,
                  s = o.highlightStyle,
                  a = s.fill,
                  l = s.stroke;
                this.rectSelection.each(function (o, s) {
                  var u = s === e;
                  (o.x = s.x),
                    (o.y = s.y),
                    (o.width = s.width),
                    (o.height = s.height),
                    (o.fill = u && void 0 !== a ? a : s.fill),
                    (o.stroke = u && void 0 !== l ? l : s.stroke),
                    (o.fillOpacity = n),
                    (o.strokeOpacity = r),
                    (o.strokeWidth = s.strokeWidth),
                    (o.lineDash = t.lineDash),
                    (o.lineDashOffset = t.lineDashOffset),
                    (o.fillShadow = i),
                    (o.visible = s.height > 0);
                });
              }
            }),
            (e.prototype.updateTextSelection = function (t) {
              var e = this.textSelection.setData(t);
              e.exit.remove();
              var o = e.enter.append(gn).each(function (t) {
                (t.tag = la.Label),
                  (t.pointerEvents = To.None),
                  (t.textAlign = "center"),
                  (t.textBaseline = "middle");
              });
              this.textSelection = e.merge(o);
            }),
            (e.prototype.updateTextNodes = function () {
              var t = this.label.enabled;
              this.textSelection.each(function (e, o) {
                var n = o.label;
                n && t
                  ? ((e.text = n.text),
                    (e.x = n.x),
                    (e.y = n.y),
                    (e.fontStyle = n.fontStyle),
                    (e.fontWeight = n.fontWeight),
                    (e.fontSize = n.fontSize),
                    (e.fontFamily = n.fontFamily),
                    (e.fill = n.fill),
                    (e.visible = !0))
                  : (e.visible = !1);
              });
            }),
            (e.prototype.getTooltipHtml = function (t) {
              var e = this.xKey,
                o = this.yKey;
              if (!e) return "";
              var n = this,
                r = n.xName,
                i = n.yName,
                s = n.fill,
                a = n.aggregation,
                l = n.tooltip.renderer,
                u = void 0 === l ? this.tooltipRenderer : l,
                p = t.seriesDatum,
                c = p.aggregatedValue,
                d = p.frequency,
                h = p.domain,
                f = h[1],
                g = (r || e) + ": " + nr(h[0]) + " - " + nr(f),
                y = o
                  ? "<b>" + (i || o) + " (" + a + ")</b>: " + nr(c) + "<br>"
                  : "",
                m = {
                  title: g,
                  backgroundColor: s,
                  content: (y += "<b>Frequency</b>: " + d),
                };
              return u
                ? bs(
                    u({
                      datum: p,
                      xKey: e,
                      xValue: p.domain,
                      xName: r,
                      yKey: o,
                      yValue: p.aggregatedValue,
                      yName: i,
                      color: s,
                    }),
                    m
                  )
                : bs(m);
            }),
            (e.prototype.listSeriesItems = function (t) {
              var e = this,
                o = e.data,
                n = e.yKey;
              o &&
                o.length &&
                t.push({
                  id: e.id,
                  itemId: n,
                  enabled: e.seriesItemEnabled,
                  label: { text: e.yName || n || "Frequency" },
                  marker: {
                    fill: e.fill || "rgba(0, 0, 0, 0)",
                    stroke: e.stroke || "rgba(0, 0, 0, 0)",
                    fillOpacity: e.fillOpacity,
                    strokeOpacity: e.strokeOpacity,
                  },
                });
            }),
            (e.prototype.toggleSeriesItem = function (t, e) {
              t === this.yKey && (this.seriesItemEnabled = e),
                this.scheduleData();
            }),
            (e.className = "HistogramSeries"),
            (e.type = "histogram"),
            Ca([vn("dataChange")], e.prototype, "fill", void 0),
            Ca([vn("dataChange")], e.prototype, "stroke", void 0),
            Ca([vn("layoutChange")], e.prototype, "fillOpacity", void 0),
            Ca([vn("layoutChange")], e.prototype, "strokeOpacity", void 0),
            Ca([vn("update")], e.prototype, "lineDash", void 0),
            Ca([vn("update")], e.prototype, "lineDashOffset", void 0),
            e
          );
        })(ys),
        _a = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ra = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.data = void 0), e;
          }
          return (
            _a(e, t),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([vn("dataChange")], e.prototype, "data", void 0),
            e
          );
        })(cs),
        Pa = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ta = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Aa = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.enabled = !0),
              (e.color = "rgba(0, 0, 0, 0.5)"),
              (e.xOffset = 0),
              (e.yOffset = 0),
              (e.blur = 5),
              e
            );
          }
          return (
            Pa(e, t),
            Ta([vn("change")], e.prototype, "enabled", void 0),
            Ta([vn("change")], e.prototype, "color", void 0),
            Ta([vn("change")], e.prototype, "xOffset", void 0),
            Ta([vn("change")], e.prototype, "yOffset", void 0),
            Ta([vn("change")], e.prototype, "blur", void 0),
            e
          );
        })(mn);
      function Da(t, e, o, n, r) {
        var i = t.value && (r - o) / t.value;
        t.children.forEach(function (t) {
          (t.x0 = e), (t.x1 = n), (t.y0 = o), (t.y1 = o += t.value * i);
        });
      }
      function xa(t, e, o, n, r) {
        var i = t.value && (n - e) / t.value;
        t.children.forEach(function (t) {
          (t.x0 = e), (t.x1 = e += t.value * i), (t.y0 = o), (t.y1 = r);
        });
      }
      function Fa(t) {
        (t.x0 = Math.round(t.x0)),
          (t.y0 = Math.round(t.y0)),
          (t.x1 = Math.round(t.x1)),
          (t.y1 = Math.round(t.y1));
      }
      var Na = (function t(e) {
          function o(t, o, n, r, i) {
            !(function (t, e, o, n, r, i) {
              for (
                var s,
                  a,
                  l,
                  u,
                  p,
                  c,
                  d,
                  h,
                  f,
                  g,
                  y = [],
                  m = e.children,
                  v = m.length,
                  C = e.value,
                  w = 0,
                  b = 0;
                w < v;

              ) {
                (s = r - o), (a = i - n);
                do {
                  u = m[b++].value;
                } while (!u && b < v);
                for (
                  p = c = u,
                    g = u * u * (f = Math.max(a / s, s / a) / (C * t)),
                    h = Math.max(c / g, g / p);
                  b < v;
                  ++b
                ) {
                  if (
                    ((l = m[b].value) < p && (p = l),
                    l > c && (c = l),
                    (g = (u += l) * u * f),
                    (d = Math.max(c / g, g / p)) > h)
                  ) {
                    u -= l;
                    break;
                  }
                  h = d;
                }
                var E = { value: u, dice: s < a, children: m.slice(w, b) };
                y.push(E),
                  E.dice
                    ? xa(E, o, n, r, C ? (n += (a * u) / C) : i)
                    : Da(E, o, n, C ? (o += (s * u) / C) : r, i),
                  (C -= u),
                  (w = b);
              }
            })(e, t, o, n, r, i);
          }
          return (
            (o.ratio = function (e) {
              return t((e = +e) > 1 ? e : 1);
            }),
            o
          );
        })((1 + Math.sqrt(5)) / 2),
        Ma = (function () {
          function t() {
            (this.paddingStack = [0]),
              (this.dx = 1),
              (this.dy = 1),
              (this.round = !0),
              (this.tile = Na),
              (this.paddingInner = function (t) {
                return 0;
              }),
              (this.paddingTop = function (t) {
                return 0;
              }),
              (this.paddingRight = function (t) {
                return 0;
              }),
              (this.paddingBottom = function (t) {
                return 0;
              }),
              (this.paddingLeft = function (t) {
                return 0;
              });
          }
          return (
            Object.defineProperty(t.prototype, "size", {
              get: function () {
                return [this.dx, this.dy];
              },
              set: function (t) {
                (this.dx = t[0]), (this.dy = t[1]);
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.processData = function (t) {
              return (
                (t.x0 = 0),
                (t.y0 = 0),
                (t.x1 = this.dx),
                (t.y1 = this.dy),
                t.eachBefore(this.positionNode.bind(this)),
                (this.paddingStack = [0]),
                this.round && t.eachBefore(Fa),
                t
              );
            }),
            (t.prototype.positionNode = function (t) {
              var e = this.paddingStack[t.depth],
                o = t.x0 + e,
                n = t.y0 + e,
                r = t.x1 - e,
                i = t.y1 - e;
              r < o && (o = r = (o + r) / 2),
                i < n && (n = i = (n + i) / 2),
                (t.x0 = o),
                (t.y0 = n),
                (t.x1 = r),
                (t.y1 = i),
                t.children &&
                  ((e = this.paddingStack[t.depth + 1] =
                    this.paddingInner(t) / 2),
                  (o += this.paddingLeft(t) - e),
                  (n += this.paddingTop(t) - e),
                  (r -= this.paddingRight(t) - e) < o && (o = r = (o + r) / 2),
                  (i -= this.paddingBottom(t) - e) < n && (n = i = (n + i) / 2),
                  this.tile(t, o, n, r, i));
            }),
            t
          );
        })(),
        Ia = (function () {
          function t(t) {
            (this.value = 0),
              (this.depth = 0),
              (this.height = 0),
              (this.parent = void 0),
              (this.children = void 0),
              (this.data = t);
          }
          return (
            (t.prototype.countFn = function (t) {
              var e = 0,
                o = t.children;
              if (o && o.length)
                for (var n = o.length; --n >= 0; ) e += o[n].value;
              else e = 1;
              t.value = e;
            }),
            (t.prototype.count = function () {
              return this.eachAfter(this.countFn);
            }),
            (t.prototype.each = function (t, e) {
              var o = this,
                n = -1;
              return (
                this.iterator(function (r) {
                  t.call(e, r, ++n, o);
                }),
                this
              );
            }),
            (t.prototype.eachAfter = function (t, e) {
              for (var o = this, n = [o], r = []; (o = n.pop()); ) {
                r.push(o);
                var i = o.children;
                if (i) for (var s = 0, a = i.length; s < a; ++s) n.push(i[s]);
              }
              for (var l = -1; (o = r.pop()); ) t.call(e, o, ++l, this);
              return this;
            }),
            (t.prototype.eachBefore = function (t, e) {
              for (var o = this, n = [o], r = -1; (o = n.pop()); ) {
                t.call(e, o, ++r, this);
                var i = o.children;
                if (i) for (var s = i.length - 1; s >= 0; --s) n.push(i[s]);
              }
              return this;
            }),
            (t.prototype.find = function (t, e) {
              var o,
                n = this,
                r = -1;
              return (
                this.iterator(function (i) {
                  if (t.call(e, i, ++r, n)) return (o = i), !1;
                }),
                o
              );
            }),
            (t.prototype.sum = function (t) {
              return this.eachAfter(function (e) {
                var o = +t(e.data) || 0,
                  n = e.children;
                if (n) for (var r = n.length; --r >= 0; ) o += n[r].value;
                e.value = o;
              });
            }),
            (t.prototype.sort = function (t) {
              return this.eachBefore(function (e) {
                e.children && e.children.sort(t);
              });
            }),
            (t.prototype.path = function (t) {
              for (
                var e = this,
                  o = (function (t, e) {
                    if (t && e) {
                      if (t === e) return t;
                      var o = t.ancestors(),
                        n = e.ancestors(),
                        r = void 0;
                      for (t = o.pop(), e = n.pop(); t === e; )
                        (r = t), (t = o.pop()), (e = n.pop());
                      return r;
                    }
                  })(e, t),
                  n = [e];
                e !== o;

              )
                n.push((e = e.parent));
              for (var r = n.length; t !== o; )
                n.splice(r, 0, t), (t = t.parent);
              return n;
            }),
            (t.prototype.ancestors = function () {
              for (var t = this, e = [t]; (t = t.parent); ) e.push(t);
              return e;
            }),
            (t.prototype.descendants = function () {
              var t = [];
              return (
                this.iterator(function (e) {
                  return t.push(e);
                }),
                t
              );
            }),
            (t.prototype.leaves = function () {
              var t = [];
              return (
                this.eachBefore(function (e) {
                  e.children || t.push(e);
                }),
                t
              );
            }),
            (t.prototype.links = function () {
              var t = this,
                e = [];
              return (
                t.each(function (o) {
                  o !== t && e.push({ source: o.parent, target: o });
                }),
                e
              );
            }),
            (t.prototype.copy = function () {}),
            (t.prototype.iterator = function (t) {
              var e,
                o = this,
                n = [o];
              t: do {
                for (e = n.reverse(), n = []; (o = e.pop()); ) {
                  if (!1 === t(o)) break t;
                  var r = o.children;
                  if (r) for (var i = 0, s = r.length; i < s; ++i) n.push(r[i]);
                }
              } while (n.length);
            }),
            t
          );
        })();
      function La(t, e) {
        t instanceof Map
          ? ((t = [void 0, t]), void 0 === e && (e = ka))
          : void 0 === e && (e = Va);
        for (var o, n, r, i, s, a = new Ia(t), l = [a]; (o = l.pop()); )
          if ((r = e(o.data)) && (s = (r = Array.from(r)).length))
            for (o.children = r, i = s - 1; i >= 0; --i)
              l.push((n = r[i] = new Ia(r[i]))),
                (n.parent = o),
                (n.depth = o.depth + 1);
        return a.eachBefore(Ga);
      }
      function Ga(t) {
        var e = 0;
        do {
          t.height = e;
        } while ((t = t.parent) && t.height < ++e);
      }
      function ka(t) {
        return Array.isArray(t) ? t[1] : void 0;
      }
      function Va(t) {
        return t.children;
      }
      var Wa,
        Ha = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ba = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ja = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ha(e, t), Ba([vn("change")], e.prototype, "renderer", void 0), e
          );
        })(ps),
        Ua = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.padding = 10), e;
          }
          return (
            Ha(e, t), Ba([vn("change")], e.prototype, "padding", void 0), e
          );
        })(oa);
      !(function (t) {
        (t[(t.Name = 0)] = "Name"), (t[(t.Value = 1)] = "Value");
      })(Wa || (Wa = {}));
      var za,
        Ka = (function (t) {
          function e() {
            var e,
              o,
              n = t.call(this) || this;
            return (
              (n.groupSelection = jn.select(n.group).selectAll()),
              (n.labelMap = new Map()),
              (n.layout = new Ma()),
              (n.title =
                (((e = new Ua()).fontWeight = "bold"),
                (e.fontSize = 12),
                (e.fontFamily = "Verdana, sans-serif"),
                (e.padding = 15),
                e)),
              (n.subtitle = (function () {
                var t = new Ua();
                return (
                  (t.fontSize = 9),
                  (t.fontFamily = "Verdana, sans-serif"),
                  (t.padding = 13),
                  t
                );
              })()),
              (n.labels = {
                large: (function () {
                  var t = new oa();
                  return (t.fontWeight = "bold"), (t.fontSize = 18), t;
                })(),
                medium: (function () {
                  var t = new oa();
                  return (t.fontWeight = "bold"), (t.fontSize = 14), t;
                })(),
                small: (function () {
                  var t = new oa();
                  return (t.fontWeight = "bold"), (t.fontSize = 10), t;
                })(),
                color: (function () {
                  var t = new oa();
                  return (t.color = "white"), t;
                })(),
              }),
              (n._nodePadding = 2),
              (n.labelKey = "label"),
              (n.sizeKey = "size"),
              (n.colorKey = "color"),
              (n.colorDomain = [-5, 5]),
              (n.colorRange = ["#cb4b3f", "#6acb64"]),
              (n.colorParents = !1),
              (n.gradient = !0),
              (n.colorName = "Change"),
              (n.rootName = "Root"),
              (n._shadow =
                (((o = new Aa()).color = "rgba(0, 0, 0, 0.4)"),
                (o.xOffset = 1.5),
                (o.yOffset = 1.5),
                o)),
              (n.highlightStyle = { fill: "yellow" }),
              (n.tooltip = new ja()),
              n.shadow.addEventListener("change", n.update, n),
              n.title.addEventListener("change", n.update, n),
              n.subtitle.addEventListener("change", n.update, n),
              n.labels.small.addEventListener("change", n.update, n),
              n.labels.medium.addEventListener("change", n.update, n),
              n.labels.large.addEventListener("change", n.update, n),
              n.labels.color.addEventListener("change", n.update, n),
              n
            );
          }
          return (
            Ha(e, t),
            Object.defineProperty(e.prototype, "nodePadding", {
              get: function () {
                return this._nodePadding;
              },
              set: function (t) {
                this._nodePadding !== t &&
                  ((this._nodePadding = t),
                  this.updateLayoutPadding(),
                  this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "shadow", {
              get: function () {
                return this._shadow;
              },
              set: function (t) {
                this._shadow !== t && ((this._shadow = t), this.update());
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.onHighlightChange = function () {
              this.updateNodes();
            }),
            (e.prototype.updateLayoutPadding = function () {
              var t = this,
                e = t.title,
                o = t.subtitle,
                n = t.nodePadding,
                r = t.labelKey;
              (this.layout.paddingRight = function (t) {
                return n;
              }),
                (this.layout.paddingBottom = function (t) {
                  return n;
                }),
                (this.layout.paddingLeft = function (t) {
                  return n;
                }),
                (this.layout.paddingTop = function (t) {
                  var i = t.data[r] || "";
                  t.children && (i = i.toUpperCase());
                  var s = t.depth > 1 ? o : e,
                    a = hn.getTextSize(
                      i,
                      [s.fontWeight, s.fontSize + "px", s.fontFamily]
                        .join(" ")
                        .trim()
                    ),
                    l =
                      t.depth > 0 &&
                      t.children &&
                      a.width <= t.x1 - t.x0 - 2 * n;
                  return (t.hasTitle = l), l ? a.height + 2 * n : n;
                });
            }),
            (e.prototype.processData = function () {
              if (!this.data) return !1;
              var t,
                e = this,
                o = e.data,
                n = e.sizeKey,
                r = e.labelKey,
                i = e.colorKey,
                s = e.colorDomain,
                a = e.colorRange,
                l = e.colorParents;
              (t = n
                ? La(o).sum(function (t) {
                    return t.children ? 1 : t[n];
                  })
                : La(o).sum(function (t) {
                    return t.children ? 0 : 1;
                  })),
                (this.dataRoot = t);
              var u = new Vn();
              (u.domain = s), (u.range = a);
              var p = this;
              return (
                (function t(e, o) {
                  void 0 === o && (o = 0);
                  var n = e.children,
                    s = e.data,
                    a = s[r],
                    c = i ? s[i] : o;
                  (e.series = p),
                    (e.fill = !n || l ? u.convert(c) : "#272931"),
                    (e.colorValue = c),
                    (e.label = a ? (n ? a.toUpperCase() : a) : ""),
                    n &&
                      n.forEach(function (e) {
                        return t(e, o + 1);
                      });
                })(this.dataRoot),
                !0
              );
            }),
            (e.prototype.getLabelCenterX = function (t) {
              return (t.x0 + t.x1) / 2;
            }),
            (e.prototype.getLabelCenterY = function (t) {
              return (t.y0 + t.y1) / 2 + 2;
            }),
            (e.prototype.update = function () {
              var t = this.chart,
                e = this.dataRoot;
              if (t && e) {
                var o = t.getSeriesRect();
                if (o) {
                  (this.layout.size = [o.width, o.height]),
                    this.updateLayoutPadding();
                  var n = this.layout.processData(e).descendants(),
                    r = this.groupSelection.setData(n);
                  r.exit.remove();
                  var i = r.enter.append(Hn);
                  i.append(Ni),
                    i.append(gn).each(function (t) {
                      return (t.tag = Wa.Name);
                    }),
                    i.append(gn).each(function (t) {
                      return (t.tag = Wa.Value);
                    }),
                    (this.groupSelection = r.merge(i)),
                    this.updateNodes();
                }
              }
            }),
            (e.prototype.updateNodes = function () {
              var t = this,
                e = this.chart;
              if (e) {
                var o = e.highlightedDatum,
                  n = this.highlightStyle,
                  r = n.fill,
                  i = n.stroke,
                  s = this,
                  a = s.colorKey,
                  l = s.labelMap,
                  u = s.nodePadding,
                  p = s.title,
                  c = s.subtitle,
                  d = s.labels,
                  h = s.shadow,
                  f = s.gradient;
                this.groupSelection.selectByClass(Ni).each(function (t, e) {
                  var n = e === o,
                    s = n && void 0 !== i ? i : e.depth < 2 ? void 0 : "black";
                  (t.fill = n && void 0 !== r ? r : e.fill),
                    (t.stroke = s),
                    (t.strokeWidth = 1),
                    (t.crisp = !0),
                    (t.gradient = f),
                    (t.x = e.x0),
                    (t.y = e.y0),
                    (t.width = e.x1 - e.x0),
                    (t.height = e.y1 - e.y0);
                }),
                  this.groupSelection
                    .selectByTag(Wa.Name)
                    .each(function (e, n, r) {
                      var i,
                        s = !n.children,
                        a = n.x1 - n.x0 - 2 * u,
                        f = n.y1 - n.y0 - 2 * u,
                        g = n.hasTitle,
                        y = n === o;
                      (e.fontWeight = (i = s
                        ? a > 40 && a > 40
                          ? d.large
                          : a > 20 && f > 20
                          ? d.medium
                          : d.small
                        : n.depth > 1
                        ? c
                        : p).fontWeight),
                        (e.fontSize = i.fontSize),
                        (e.fontFamily = i.fontFamily),
                        (e.textBaseline = s ? "bottom" : g ? "top" : "middle"),
                        (e.textAlign = g ? "left" : "center"),
                        (e.text = n.label);
                      var m = e.computeBBox(),
                        v = s && !!m && m.width <= a && 2 * m.height + 8 <= f;
                      l.set(r, e),
                        (e.fill = y ? "black" : "white"),
                        (e.fillShadow = v && !y ? h : void 0),
                        (e.visible = g || v),
                        g
                          ? ((e.x = n.x0 + u), (e.y = n.y0 + u))
                          : ((e.x = t.getLabelCenterX(n)),
                            (e.y = t.getLabelCenterY(n)));
                    }),
                  this.groupSelection
                    .selectByTag(Wa.Value)
                    .each(function (e, n, r) {
                      var i = n.x1 - n.x0 - 2 * u,
                        s = n === o,
                        p = n.colorValue,
                        c = d.color;
                      (e.fontSize = c.fontSize),
                        (e.fontFamily = c.fontFamily),
                        (e.fontStyle = c.fontStyle),
                        (e.fontWeight = c.fontWeight),
                        (e.textBaseline = "top"),
                        (e.textAlign = "center"),
                        (e.text =
                          "number" == typeof p && isFinite(p)
                            ? String(nr(n.colorValue)) + "%"
                            : "");
                      var f = e.computeBBox(),
                        g = l.get(r),
                        y = !!a && !!g && g.visible && !!f && f.width < i;
                      (e.fill = s ? "black" : c.color),
                        (e.fillShadow = s ? void 0 : h),
                        (e.visible = y),
                        y
                          ? ((e.x = t.getLabelCenterX(n)),
                            (e.y = t.getLabelCenterY(n)))
                          : !g ||
                            (n.children && n.children.length) ||
                            ((g.textBaseline = "middle"),
                            (g.y = t.getLabelCenterY(n)));
                    });
              }
            }),
            (e.prototype.getDomain = function (t) {
              return [0, 1];
            }),
            (e.prototype.getTooltipHtml = function (t) {
              var e = this,
                o = e.sizeKey,
                n = e.labelKey,
                r = e.colorKey,
                i = e.colorName,
                s = t.data,
                a = e.tooltip.renderer,
                l = t.depth ? s[n] : e.rootName || s[n],
                u = void 0,
                p = t.fill || "gray";
              if (r && i) {
                var c = s[r];
                "number" == typeof c &&
                  isFinite(c) &&
                  (u = "<b>" + i + "</b>: " + nr(s[r]));
              }
              var d = { title: l, backgroundColor: p, content: u };
              return a
                ? bs(
                    a({
                      datum: t,
                      sizeKey: o,
                      labelKey: n,
                      colorKey: r,
                      title: l,
                      color: p,
                    }),
                    d
                  )
                : bs(d);
            }),
            (e.prototype.listSeriesItems = function (t) {}),
            (e.className = "TreemapSeries"),
            (e.type = "treemap"),
            Ba([vn("dataChange")], e.prototype, "labelKey", void 0),
            Ba([vn("dataChange")], e.prototype, "sizeKey", void 0),
            Ba([vn("dataChange")], e.prototype, "colorKey", void 0),
            Ba([vn("dataChange")], e.prototype, "colorDomain", void 0),
            Ba([vn("dataChange")], e.prototype, "colorRange", void 0),
            Ba([vn("dataChange")], e.prototype, "colorParents", void 0),
            Ba([vn("update")], e.prototype, "gradient", void 0),
            e
          );
        })(Ra),
        Ya = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Xa = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.path = new Jn()),
              (e._dirtyPath = !0),
              (e._centerX = 0),
              (e._centerY = 0),
              (e._centerOffset = 0),
              (e._innerRadius = 10),
              (e._outerRadius = 20),
              (e._startAngle = 0),
              (e._endAngle = 2 * Math.PI),
              (e._angleOffset = 0),
              e
            );
          }
          return (
            Ya(e, t),
            Object.defineProperty(e.prototype, "dirtyPath", {
              get: function () {
                return this._dirtyPath;
              },
              set: function (t) {
                this._dirtyPath !== t &&
                  ((this._dirtyPath = t), t && (this.dirty = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "centerX", {
              get: function () {
                return this._centerX;
              },
              set: function (t) {
                this._centerX !== t &&
                  ((this._centerX = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "centerY", {
              get: function () {
                return this._centerY;
              },
              set: function (t) {
                this._centerY !== t &&
                  ((this._centerY = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "centerOffset", {
              get: function () {
                return this._centerOffset;
              },
              set: function (t) {
                this._centerOffset !== t &&
                  ((this._centerOffset = Math.max(0, t)),
                  (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "innerRadius", {
              get: function () {
                return this._innerRadius;
              },
              set: function (t) {
                this._innerRadius !== t &&
                  ((this._innerRadius = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "outerRadius", {
              get: function () {
                return this._outerRadius;
              },
              set: function (t) {
                this._outerRadius !== t &&
                  ((this._outerRadius = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "startAngle", {
              get: function () {
                return this._startAngle;
              },
              set: function (t) {
                this._startAngle !== t &&
                  ((this._startAngle = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "endAngle", {
              get: function () {
                return this._endAngle;
              },
              set: function (t) {
                this._endAngle !== t &&
                  ((this._endAngle = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "angleOffset", {
              get: function () {
                return this._angleOffset;
              },
              set: function (t) {
                this._angleOffset !== t &&
                  ((this._angleOffset = t), (this.dirtyPath = !0));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.computeBBox = function () {
              var t = this.outerRadius;
              return new Zo(this.centerX - t, this.centerY - t, 2 * t, 2 * t);
            }),
            (e.prototype.isPointInPath = function (t, e) {
              var o = this.transformPoint(t, e);
              return this.path.isPointInPath(o.x, o.y);
            }),
            (e.prototype.isPointInStroke = function (t, e) {
              return !1;
            }),
            Object.defineProperty(e.prototype, "fullPie", {
              get: function () {
                return or(Yn(this.startAngle), Yn(this.endAngle));
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.updatePath = function () {
              if (this.dirtyPath) {
                var t = this.path,
                  e = this.angleOffset,
                  o = Math.min(this.startAngle, this.endAngle) + e,
                  n = Math.max(this.startAngle, this.endAngle) + e,
                  r = 0.5 * (o + n),
                  i = Math.min(this.innerRadius, this.outerRadius),
                  s = Math.max(this.innerRadius, this.outerRadius),
                  a = this.centerOffset,
                  l = this.fullPie,
                  u = this.centerX,
                  p = this.centerY;
                if (
                  (t.clear(),
                  a && ((u += a * Math.cos(r)), (p += a * Math.sin(r))),
                  l ||
                    (t.moveTo(u + i * Math.cos(o), p + i * Math.sin(o)),
                    t.lineTo(u + s * Math.cos(o), p + s * Math.sin(o))),
                  t.cubicArc(u, p, s, s, 0, o, n, 0),
                  l)
                )
                  t.moveTo(u + i * Math.cos(n), p + i * Math.sin(n));
                else {
                  var c = u + i * Math.cos(n);
                  t.lineTo(Math.abs(c) < 1e-8 ? 0 : c, p + i * Math.sin(n));
                }
                t.cubicArc(u, p, i, i, 0, n, o, 1),
                  t.closePath(),
                  (this.dirtyPath = !1);
              }
            }),
            (e.prototype.render = function (t) {
              this.dirtyTransform && this.computeTransformMatrix(),
                this.matrix.toContext(t),
                this.updatePath(),
                this.scene.appendPath(this.path),
                this.fillStroke(t),
                (this.dirty = !1);
            }),
            (e.className = "Sector"),
            e
          );
        })(dn),
        qa = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Qa = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.Sector = 0)] = "Sector"),
          (t[(t.Callout = 1)] = "Callout"),
          (t[(t.Label = 2)] = "Label");
      })(za || (za = {}));
      var Za = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.offset = 3), (e.minAngle = 20), e;
          }
          return (
            qa(e, t),
            Qa([vn("change")], e.prototype, "offset", void 0),
            Qa([vn("dataChange")], e.prototype, "minAngle", void 0),
            e
          );
        })(oa),
        $a = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.colors = []), (e.length = 10), (e.strokeWidth = 1), e;
          }
          return (
            qa(e, t),
            Qa([vn("change")], e.prototype, "colors", void 0),
            Qa([vn("change")], e.prototype, "length", void 0),
            Qa([vn("change")], e.prototype, "strokeWidth", void 0),
            e
          );
        })(mn),
        Ja = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            qa(e, t), Qa([vn("change")], e.prototype, "renderer", void 0), e
          );
        })(ps),
        tl = (function (t) {
          function e() {
            var e,
              o = t.call(this) || this;
            return (
              (o.radiusScale = new Vn()),
              (o.groupSelection = jn.select(o.group).selectAll()),
              (o.groupSelectionData = []),
              (o.angleScale =
                (((e = new Vn()).domain = [0, 1]),
                (e.range = [-Math.PI, Math.PI].map(function (t) {
                  return t + Math.PI / 2;
                })),
                e)),
              (o.seriesItemEnabled = []),
              (o.label = new Za()),
              (o.callout = new $a()),
              (o.tooltip = new Ja()),
              (o.angleKey = ""),
              (o.angleName = ""),
              (o._fills = [
                "#c16068",
                "#a2bf8a",
                "#ebcc87",
                "#80a0c3",
                "#b58dae",
                "#85c0d1",
              ]),
              (o._strokes = [
                "#874349",
                "#718661",
                "#a48f5f",
                "#5a7088",
                "#7f637a",
                "#5d8692",
              ]),
              (o.fillOpacity = 1),
              (o.strokeOpacity = 1),
              (o.lineDash = void 0),
              (o.lineDashOffset = 0),
              (o.rotation = 0),
              (o.outerRadiusOffset = 0),
              (o.innerRadiusOffset = 0),
              (o.strokeWidth = 1),
              (o.highlightStyle = { fill: "yellow" }),
              o.addEventListener("update", o.update, o),
              o.label.addEventListener("change", o.scheduleLayout, o),
              o.label.addEventListener("dataChange", o.scheduleData, o),
              o.callout.addEventListener("change", o.scheduleLayout, o),
              (o.callout.colors = o.strokes),
              o.addPropertyListener("data", function (t) {
                t.value &&
                  (t.source.seriesItemEnabled = t.value.map(function () {
                    return !0;
                  }));
              }),
              o
            );
          }
          return (
            qa(e, t),
            Object.defineProperty(e.prototype, "title", {
              get: function () {
                return this._title;
              },
              set: function (t) {
                var e = this._title;
                e !== t &&
                  (e &&
                    (e.removeEventListener("change", this.scheduleLayout),
                    this.group.removeChild(e.node)),
                  t &&
                    ((t.node.textBaseline = "bottom"),
                    t.addEventListener("change", this.scheduleLayout),
                    this.group.appendChild(t.node)),
                  (this._title = t),
                  this.scheduleLayout());
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "fills", {
              get: function () {
                return this._fills;
              },
              set: function (t) {
                (this._fills = t),
                  (this.strokes = t.map(function (t) {
                    return Sn.fromString(t).darker().toHexString();
                  })),
                  this.scheduleData();
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "strokes", {
              get: function () {
                return this._strokes;
              },
              set: function (t) {
                (this._strokes = t),
                  (this.callout.colors = t),
                  this.scheduleData();
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.onHighlightChange = function () {
              this.updateNodes();
            }),
            (e.prototype.setColors = function (t, e) {
              (this.fills = t), (this.strokes = e), (this.callout.colors = e);
            }),
            (e.prototype.getDomain = function (t) {
              return t === lr.X
                ? this.angleScale.domain
                : this.radiusScale.domain;
            }),
            (e.prototype.processData = function () {
              var t,
                e = this,
                o = this,
                n = o.angleKey,
                r = o.radiusKey,
                i = o.seriesItemEnabled,
                s = o.angleScale,
                a = o.groupSelectionData,
                l = n && this.data ? this.data : [],
                u = l.map(function (t, e) {
                  return (i[e] && Math.abs(+t[n])) || 0;
                }),
                p = u.reduce(function (t, e) {
                  return t + e;
                }, 0),
                c =
                  ((t = 0),
                  u.map(function (e) {
                    return (t += e / p);
                  })),
                d = this.label.enabled && this.labelKey,
                h = d
                  ? l.map(function (t) {
                      return String(t[d]);
                    })
                  : [],
                f = [];
              if (r) {
                var g = this.radiusMin,
                  y = this.radiusMax,
                  m = l.map(function (t) {
                    return Math.abs(t[r]);
                  }),
                  v = void 0 !== g ? g : Math.min.apply(Math, m),
                  C = (void 0 !== y ? y : Math.max.apply(Math, m)) - v;
                f = m.map(function (t) {
                  return C ? (t - v) / C : 1;
                });
              }
              a.length = 0;
              var w = Xn(this.rotation),
                b = Math.PI / 2,
                E = 0;
              return (
                c.reduce(function (t, o) {
                  var n,
                    i,
                    u,
                    p = r ? f[E] : 1,
                    c = s.convert(t) + w,
                    g = s.convert(o) + w,
                    y = (c + g) / 2,
                    m = Math.abs(g - c),
                    v = Math.cos(y),
                    C = Math.sin(y),
                    S = Xn(e.label.minAngle),
                    O =
                      ((n = y),
                      (n %= Kn) < -Math.PI
                        ? (n += Kn)
                        : n >= Math.PI && (n -= Kn),
                      n),
                    _ = (-3 * Math.PI) / 4;
                  return (
                    O >= _ && O < (_ += b)
                      ? ((i = "center"), (u = "bottom"))
                      : O >= _ && O < (_ += b)
                      ? ((i = "left"), (u = "middle"))
                      : O >= _ && O < (_ += b)
                      ? ((i = "center"), (u = "hanging"))
                      : ((i = "right"), (u = "middle")),
                    a.push({
                      series: e,
                      seriesDatum: l[E],
                      index: E,
                      radius: p,
                      startAngle: c,
                      endAngle: g,
                      midAngle: y,
                      midCos: v,
                      midSin: C,
                      label:
                        d && m > S
                          ? { text: h[E], textAlign: i, textBaseline: u }
                          : void 0,
                    }),
                    E++,
                    o
                  );
                }, 0),
                !0
              );
            }),
            (e.prototype.update = function () {
              var t = this.chart;
              if (
                (this.group.visible =
                  this.visible && this.seriesItemEnabled.indexOf(!0) >= 0) &&
                t &&
                !t.dataPending &&
                !t.layoutPending
              ) {
                var e = this,
                  o = e.radius,
                  n = e.innerRadiusOffset,
                  r = e.outerRadiusOffset,
                  i = e.title;
                (this.radiusScale.range = [n ? o + n : 0, o + (r || 0)]),
                  (this.group.translationX = this.centerX),
                  (this.group.translationY = this.centerY),
                  i &&
                    ((i.node.translationY = -o - r - 2),
                    (i.node.visible = i.enabled)),
                  this.updateGroupSelection(),
                  this.updateNodes();
              }
            }),
            (e.prototype.updateGroupSelection = function () {
              var t = this.groupSelection.setData(this.groupSelectionData);
              t.exit.remove();
              var e = t.enter.append(Hn);
              e.append(Xa).each(function (t) {
                return (t.tag = za.Sector);
              }),
                e.append(zn).each(function (t) {
                  (t.tag = za.Callout), (t.pointerEvents = To.None);
                }),
                e.append(gn).each(function (t) {
                  (t.tag = za.Label), (t.pointerEvents = To.None);
                }),
                (this.groupSelection = t.merge(e));
            }),
            (e.prototype.updateNodes = function () {
              var t = this;
              if (this.chart) {
                var e = this,
                  o = e.fills,
                  n = e.strokes,
                  r = e.fillOpacity,
                  i = e.strokeOpacity,
                  s = e.strokeWidth,
                  a = e.radiusScale,
                  l = e.callout,
                  u = e.shadow,
                  p = e.highlightStyle,
                  c = p.fill,
                  d = p.stroke,
                  h = p.centerOffset,
                  f = e.angleKey,
                  g = e.radiusKey,
                  y = e.formatter,
                  m = this.chart.highlightedDatum,
                  v = [],
                  C = a.convert(0);
                this.groupSelection
                  .selectByTag(za.Sector)
                  .each(function (e, l, p) {
                    var w = a.convert(l.radius),
                      b = l === m,
                      E = b && void 0 !== c ? c : o[p % o.length],
                      S = b && void 0 !== d ? d : n[p % n.length],
                      O = void 0;
                    y &&
                      (O = y({
                        datum: l.seriesDatum,
                        fill: E,
                        stroke: S,
                        strokeWidth: s,
                        highlighted: b,
                        angleKey: f,
                        radiusKey: g,
                      })),
                      (e.innerRadius = C),
                      (e.outerRadius = w),
                      (e.startAngle = l.startAngle),
                      (e.endAngle = l.endAngle),
                      (e.fill = (O && O.fill) || E),
                      (e.stroke = (O && O.stroke) || S),
                      (e.strokeWidth =
                        O && void 0 !== O.strokeWidth ? O.strokeWidth : s),
                      (e.fillOpacity = r),
                      (e.strokeOpacity = i),
                      (e.lineDash = t.lineDash),
                      (e.lineDashOffset = t.lineDashOffset),
                      (e.centerOffset = b && void 0 !== h ? h : 0),
                      (e.fillShadow = u),
                      (e.lineJoin = "round"),
                      v.push(e.centerOffset);
                  });
                var w = l.colors,
                  b = l.length,
                  E = l.strokeWidth;
                this.groupSelection
                  .selectByTag(za.Callout)
                  .each(function (t, e, o) {
                    if (e.label) {
                      var n = a.convert(e.radius);
                      (t.strokeWidth = E),
                        (t.stroke = w[o % w.length]),
                        (t.x1 = e.midCos * n),
                        (t.y1 = e.midSin * n),
                        (t.x2 = e.midCos * (n + b)),
                        (t.y2 = e.midSin * (n + b));
                    } else t.stroke = void 0;
                  });
                var S = this.label,
                  O = S.offset,
                  _ = S.fontStyle,
                  R = S.fontWeight,
                  P = S.fontSize,
                  T = S.fontFamily,
                  A = S.color;
                this.groupSelection
                  .selectByTag(za.Label)
                  .each(function (t, e, o) {
                    var n = e.label;
                    if (n) {
                      var r = a.convert(e.radius),
                        i = v[o] + r + b + O;
                      (t.fontStyle = _),
                        (t.fontWeight = R),
                        (t.fontSize = P),
                        (t.fontFamily = T),
                        (t.text = n.text),
                        (t.x = e.midCos * i),
                        (t.y = e.midSin * i),
                        (t.fill = A),
                        (t.textAlign = n.textAlign),
                        (t.textBaseline = n.textBaseline);
                    } else t.fill = void 0;
                  });
              }
            }),
            (e.prototype.fireNodeClickEvent = function (t, e) {
              this.fireEvent({
                type: "nodeClick",
                event: t,
                series: this,
                datum: e.seriesDatum,
                angleKey: this.angleKey,
                labelKey: this.labelKey,
                radiusKey: this.radiusKey,
              });
            }),
            (e.prototype.getTooltipHtml = function (t) {
              var e = this.angleKey;
              if (!e) return "";
              var o = this,
                n = o.fills,
                r = o.angleName,
                i = o.radiusKey,
                s = o.radiusName,
                a = o.labelKey,
                l = o.labelName,
                u = o.tooltip.renderer,
                p = void 0 === u ? this.tooltipRenderer : u,
                c = n[t.index % n.length],
                d = t.seriesDatum,
                h = a ? d[a] + ": " : "",
                f = d[e],
                g = "number" == typeof f ? nr(f) : f.toString(),
                y = this.title ? this.title.text : void 0,
                m = { title: y, backgroundColor: c, content: h + g };
              return p
                ? bs(
                    p({
                      datum: d,
                      angleKey: e,
                      angleValue: f,
                      angleName: r,
                      radiusKey: i,
                      radiusValue: i ? d[i] : void 0,
                      radiusName: s,
                      labelKey: a,
                      labelName: l,
                      title: y,
                      color: c,
                    }),
                    m
                  )
                : bs(m);
            }),
            (e.prototype.listSeriesItems = function (t) {
              var e = this,
                o = this.labelKey,
                n = this.data;
              if (n && n.length && o) {
                var r = this,
                  i = r.fills,
                  s = r.strokes,
                  a = r.id;
                n.forEach(function (n, r) {
                  t.push({
                    id: a,
                    itemId: r,
                    enabled: e.seriesItemEnabled[r],
                    label: { text: String(n[o]) },
                    marker: {
                      fill: i[r % i.length],
                      stroke: s[r % s.length],
                      fillOpacity: e.fillOpacity,
                      strokeOpacity: e.strokeOpacity,
                    },
                  });
                });
              }
            }),
            (e.prototype.toggleSeriesItem = function (t, e) {
              (this.seriesItemEnabled[t] = e), this.scheduleData();
            }),
            (e.className = "PieSeries"),
            (e.type = "pie"),
            Qa([vn("dataChange")], e.prototype, "angleKey", void 0),
            Qa([vn("update")], e.prototype, "angleName", void 0),
            Qa([vn("dataChange")], e.prototype, "radiusKey", void 0),
            Qa([vn("update")], e.prototype, "radiusName", void 0),
            Qa([vn("dataChange")], e.prototype, "radiusMin", void 0),
            Qa([vn("dataChange")], e.prototype, "radiusMax", void 0),
            Qa([vn("dataChange")], e.prototype, "labelKey", void 0),
            Qa([vn("update")], e.prototype, "labelName", void 0),
            Qa([vn("layoutChange")], e.prototype, "fillOpacity", void 0),
            Qa([vn("layoutChange")], e.prototype, "strokeOpacity", void 0),
            Qa([vn("update")], e.prototype, "lineDash", void 0),
            Qa([vn("update")], e.prototype, "lineDashOffset", void 0),
            Qa([vn("update")], e.prototype, "formatter", void 0),
            Qa([vn("dataChange")], e.prototype, "rotation", void 0),
            Qa([vn("layoutChange")], e.prototype, "outerRadiusOffset", void 0),
            Qa([vn("dataChange")], e.prototype, "innerRadiusOffset", void 0),
            Qa([vn("layoutChange")], e.prototype, "strokeWidth", void 0),
            Qa([vn("layoutChange")], e.prototype, "shadow", void 0),
            e
          );
        })(js);
      new Hr(
        function (t) {
          t.setUTCSeconds(0, 0);
        },
        function (t, e) {
          t.setTime(t.getTime() + e * Ur);
        },
        function (t, e) {
          return (e.getTime() - t.getTime()) / Ur;
        },
        function (t) {
          return t.getUTCMinutes();
        }
      ),
        new Hr(
          function (t) {
            t.setUTCMinutes(0, 0, 0);
          },
          function (t, e) {
            t.setTime(t.getTime() + e * zr);
          },
          function (t, e) {
            return (e.getTime() - t.getTime()) / zr;
          },
          function (t) {
            return t.getUTCHours();
          }
        ),
        new Hr(
          function (t) {
            t.setUTCDate(1), t.setUTCHours(0, 0, 0, 0);
          },
          function (t, e) {
            t.setUTCMonth(t.getUTCMonth() + e);
          },
          function (t, e) {
            return (
              e.getUTCMonth() -
              t.getUTCMonth() +
              12 * (e.getUTCFullYear() - t.getUTCFullYear())
            );
          },
          function (t) {
            return t.getUTCMonth();
          }
        );
      var el = function () {
          return (el =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        ol = {
          fills: [
            "#f3622d",
            "#fba71b",
            "#57b757",
            "#41a9c9",
            "#4258c9",
            "#9a42c8",
            "#c84164",
            "#888888",
          ],
          strokes: [
            "#aa4520",
            "#b07513",
            "#3d803d",
            "#2d768d",
            "#2e3e8d",
            "#6c2e8c",
            "#8c2d46",
            "#5f5f5f",
          ],
        },
        nl = (function () {
          function t(e) {
            var o = this.createChartConfigPerSeries(this.getDefaults());
            if (pn(e)) {
              var n = { arrayMerge: rl },
                r = (e = un({}, e, n)).overrides;
              r &&
                (pn(r.common) &&
                  t.seriesTypes
                    .concat(["cartesian", "polar"])
                    .forEach(function (t) {
                      o[t] = un(o[t], r.common, n);
                    }),
                r.cartesian &&
                  ((o.cartesian = un(o.cartesian, r.cartesian, n)),
                  t.cartesianSeriesTypes.forEach(function (t) {
                    o[t] = un(o[t], r.cartesian, n);
                  })),
                r.polar &&
                  ((o.polar = un(o.polar, r.polar, n)),
                  t.polarSeriesTypes.forEach(function (t) {
                    o[t] = un(o[t], r.polar, n);
                  })),
                t.seriesTypes.forEach(function (t) {
                  var e,
                    i = r[t];
                  i &&
                    (i.series && (i.series = (((e = {})[t] = i.series), e)),
                    (o[t] = un(o[t], i, n)));
                }));
            }
            (this.palette = e && e.palette ? e.palette : this.getPalette()),
              (this.config = Object.freeze(o));
          }
          return (
            (t.prototype.getPalette = function () {
              return ol;
            }),
            (t.getAxisDefaults = function () {
              return {
                top: {},
                right: {},
                bottom: {},
                left: {},
                title: {
                  padding: { top: 10, right: 10, bottom: 10, left: 10 },
                  text: "Axis Title",
                  fontStyle: void 0,
                  fontWeight: "bold",
                  fontSize: 12,
                  fontFamily: this.fontFamily,
                  color: "rgb(70, 70, 70)",
                },
                label: {
                  fontStyle: void 0,
                  fontWeight: void 0,
                  fontSize: 12,
                  fontFamily: this.fontFamily,
                  padding: 5,
                  rotation: 0,
                  color: "rgb(87, 87, 87)",
                  formatter: void 0,
                },
                line: { width: 1, color: "rgb(195, 195, 195)" },
                tick: {
                  width: 1,
                  size: 6,
                  color: "rgb(195, 195, 195)",
                  count: 10,
                },
                gridStyle: [{ stroke: "rgb(219, 219, 219)", lineDash: [4, 2] }],
              };
            }),
            (t.getSeriesDefaults = function () {
              return {
                tooltip: { enabled: !0, renderer: void 0, format: void 0 },
                visible: !0,
                showInLegend: !0,
              };
            }),
            (t.getBarSeriesDefaults = function () {
              return el(el({}, this.getSeriesDefaults()), {
                flipXY: !1,
                fillOpacity: 1,
                strokeOpacity: 1,
                xKey: "",
                xName: "",
                yKeys: [],
                yNames: [],
                grouped: !1,
                normalizedTo: void 0,
                strokeWidth: 1,
                lineDash: void 0,
                lineDashOffset: 0,
                tooltipRenderer: void 0,
                highlightStyle: { fill: "yellow" },
                label: {
                  enabled: !1,
                  fontStyle: void 0,
                  fontWeight: void 0,
                  fontSize: 12,
                  fontFamily: this.fontFamily,
                  color: "rgb(70, 70, 70)",
                  formatter: void 0,
                },
                shadow: {
                  enabled: !1,
                  color: "rgba(0, 0, 0, 0.5)",
                  xOffset: 3,
                  yOffset: 3,
                  blur: 5,
                },
              });
            }),
            (t.getCartesianSeriesMarkerDefaults = function () {
              return {
                enabled: !0,
                shape: "circle",
                size: 6,
                maxSize: 30,
                strokeWidth: 1,
                formatter: void 0,
              };
            }),
            (t.getChartDefaults = function () {
              return {
                width: 600,
                height: 300,
                autoSize: !0,
                background: { visible: !0, fill: "white" },
                padding: { top: 20, right: 20, bottom: 20, left: 20 },
                title: {
                  enabled: !1,
                  padding: { top: 10, right: 10, bottom: 10, left: 10 },
                  text: "Title",
                  fontStyle: void 0,
                  fontWeight: "bold",
                  fontSize: 16,
                  fontFamily: this.fontFamily,
                  color: "rgb(70, 70, 70)",
                },
                subtitle: {
                  enabled: !1,
                  padding: { top: 10, right: 10, bottom: 10, left: 10 },
                  text: "Subtitle",
                  fontStyle: void 0,
                  fontWeight: void 0,
                  fontSize: 12,
                  fontFamily: this.fontFamily,
                  color: "rgb(140, 140, 140)",
                },
                legend: {
                  enabled: !0,
                  position: "right",
                  spacing: 20,
                  item: {
                    paddingX: 16,
                    paddingY: 8,
                    marker: {
                      shape: void 0,
                      size: 15,
                      strokeWidth: 1,
                      padding: 8,
                    },
                    label: {
                      color: "black",
                      fontStyle: void 0,
                      fontWeight: void 0,
                      fontSize: 12,
                      fontFamily: this.fontFamily,
                    },
                  },
                },
                tooltip: {
                  enabled: !0,
                  tracking: !0,
                  delay: 0,
                  class: Os.defaultTooltipClass,
                },
              };
            }),
            (t.prototype.createChartConfigPerSeries = function (e) {
              var o = {
                  cartesian: t.cartesianSeriesTypes,
                  polar: t.polarSeriesTypes,
                },
                n = function (t) {
                  o[t].forEach(function (o) {
                    e[o] || (e[o] = un({}, e[t], { arrayMerge: rl }));
                  });
                };
              for (var r in o) n(r);
              return e;
            }),
            (t.prototype.getConfig = function (t) {
              return on(this.config, t);
            }),
            (t.prototype.getDefaults = function () {
              return un({}, t.defaults, { arrayMerge: rl });
            }),
            (t.prototype.mergeWithParentDefaults = function (e) {
              var o = { arrayMerge: rl },
                n = Object.getPrototypeOf(Object.getPrototypeOf(this));
              if (n === Object.prototype) {
                var r = un({}, t.defaults, o);
                return un(r, e, o);
              }
              return un(n.getDefaults(), e, o);
            }),
            (t.prototype.setSeriesColors = function (t, e, o) {
              var n = this.palette,
                r = this.getSeriesColorCount(e);
              if (r === 1 / 0) t.setColors(n.fills, n.strokes);
              else {
                var i = _r(n.fills, o, r),
                  s = _r(n.strokes, o, r);
                t.setColors(i, s), (o += r);
              }
              return o;
            }),
            (t.prototype.getSeriesColorCount = function (t) {
              switch (t.type) {
                case "bar":
                case "column":
                case "area":
                  return t.yKeys ? t.yKeys.length : 0;
                case "pie":
                  return 1 / 0;
                default:
                  return 1;
              }
            }),
            (t.fontFamily = "Verdana, sans-serif"),
            (t.cartesianDefaults = el(el({}, t.getChartDefaults()), {
              axes: {
                number: el({}, t.getAxisDefaults()),
                category: el({}, t.getAxisDefaults()),
                groupedCategory: el({}, t.getAxisDefaults()),
                time: el({}, t.getAxisDefaults()),
              },
              series: {
                column: el(el({}, t.getBarSeriesDefaults()), { flipXY: !1 }),
                bar: el(el({}, t.getBarSeriesDefaults()), { flipXY: !0 }),
                line: el(el({}, t.getSeriesDefaults()), {
                  title: void 0,
                  xKey: "",
                  xName: "",
                  yKey: "",
                  yName: "",
                  strokeWidth: 2,
                  strokeOpacity: 1,
                  lineDash: void 0,
                  lineDashOffset: 0,
                  tooltipRenderer: void 0,
                  highlightStyle: { fill: "yellow" },
                  marker: el({}, t.getCartesianSeriesMarkerDefaults()),
                }),
                scatter: el(el({}, t.getSeriesDefaults()), {
                  title: void 0,
                  xKey: "",
                  yKey: "",
                  sizeKey: void 0,
                  labelKey: void 0,
                  xName: "",
                  yName: "",
                  sizeName: "Size",
                  labelName: "Label",
                  strokeWidth: 2,
                  fillOpacity: 1,
                  strokeOpacity: 1,
                  tooltipRenderer: void 0,
                  highlightStyle: { fill: "yellow" },
                  marker: el({}, t.getCartesianSeriesMarkerDefaults()),
                }),
                area: el(el({}, t.getSeriesDefaults()), {
                  title: void 0,
                  xKey: "",
                  xName: "",
                  yKeys: [],
                  yNames: [],
                  normalizedTo: void 0,
                  fillOpacity: 0.8,
                  strokeOpacity: 1,
                  strokeWidth: 2,
                  lineDash: void 0,
                  lineDashOffset: 0,
                  shadow: {
                    enabled: !1,
                    color: "rgba(0, 0, 0, 0.5)",
                    xOffset: 3,
                    yOffset: 3,
                    blur: 5,
                  },
                  tooltipRenderer: void 0,
                  highlightStyle: { fill: "yellow" },
                  marker: el(el({}, t.getCartesianSeriesMarkerDefaults()), {
                    enabled: !1,
                  }),
                }),
                histogram: el(el({}, t.getSeriesDefaults()), {
                  title: void 0,
                  xKey: "",
                  yKey: "",
                  xName: "",
                  yName: "",
                  strokeWidth: 1,
                  fillOpacity: 1,
                  strokeOpacity: 1,
                  lineDash: void 0,
                  lineDashOffset: 0,
                  areaPlot: !1,
                  binCount: void 0,
                  bins: void 0,
                  aggregation: "sum",
                  tooltipRenderer: void 0,
                  highlightStyle: { fill: "yellow" },
                  label: {
                    enabled: !1,
                    fontStyle: void 0,
                    fontWeight: void 0,
                    fontSize: 12,
                    fontFamily: t.fontFamily,
                    color: "rgb(70, 70, 70)",
                    formatter: void 0,
                  },
                }),
              },
              navigator: {
                enabled: !1,
                height: 30,
                min: 0,
                max: 1,
                mask: {
                  fill: "#999999",
                  stroke: "#999999",
                  strokeWidth: 1,
                  fillOpacity: 0.2,
                },
                minHandle: {
                  fill: "#f2f2f2",
                  stroke: "#999999",
                  strokeWidth: 1,
                  width: 8,
                  height: 16,
                  gripLineGap: 2,
                  gripLineLength: 8,
                },
                maxHandle: {
                  fill: "#f2f2f2",
                  stroke: "#999999",
                  strokeWidth: 1,
                  width: 8,
                  height: 16,
                  gripLineGap: 2,
                  gripLineLength: 8,
                },
              },
            })),
            (t.defaults = {
              cartesian: t.cartesianDefaults,
              groupedCategory: t.cartesianDefaults,
              polar: el(el({}, t.getChartDefaults()), {
                series: {
                  pie: el(el({}, t.getSeriesDefaults()), {
                    title: {
                      enabled: !0,
                      padding: new Qo(0),
                      text: "",
                      fontStyle: void 0,
                      fontWeight: void 0,
                      fontSize: 12,
                      fontFamily: t.fontFamily,
                      color: "rgb(70, 70, 70)",
                    },
                    angleKey: "",
                    angleName: "",
                    radiusKey: void 0,
                    radiusName: void 0,
                    labelKey: void 0,
                    labelName: void 0,
                    label: {
                      enabled: !0,
                      fontStyle: void 0,
                      fontWeight: void 0,
                      fontSize: 12,
                      fontFamily: t.fontFamily,
                      color: "rgb(70, 70, 70)",
                      offset: 3,
                      minAngle: 20,
                    },
                    callout: { length: 10, strokeWidth: 2 },
                    fillOpacity: 1,
                    strokeOpacity: 1,
                    strokeWidth: 1,
                    lineDash: void 0,
                    lineDashOffset: 0,
                    rotation: 0,
                    outerRadiusOffset: 0,
                    innerRadiusOffset: 0,
                    highlightStyle: { fill: "yellow" },
                    shadow: {
                      enabled: !1,
                      color: "rgba(0, 0, 0, 0.5)",
                      xOffset: 3,
                      yOffset: 3,
                      blur: 5,
                    },
                  }),
                },
              }),
              hierarchy: el(el({}, t.getChartDefaults()), {
                series: { treemap: el({}, t.getSeriesDefaults()) },
              }),
            }),
            (t.seriesTypes = (t.cartesianSeriesTypes = [
              "line",
              "area",
              "bar",
              "column",
              "scatter",
              "histogram",
            ]).concat((t.polarSeriesTypes = ["pie"]))),
            t
          );
        })();
      function rl(t, e, o) {
        return e;
      }
      var il,
        sl,
        al,
        ll,
        ul,
        pl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        cl = function () {
          return (cl =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        dl = (function (t) {
          function e(e) {
            return t.call(this, e) || this;
          }
          return (
            pl(e, t),
            (e.prototype.getDefaults = function () {
              var t = "rgb(200, 200, 200)",
                e = {
                  title: { color: t },
                  label: { color: t },
                  gridStyle: [{ stroke: "rgb(88, 88, 88)", lineDash: [4, 2] }],
                },
                o = { label: { color: t } },
                n = {
                  background: { fill: "rgb(34, 38, 41)" },
                  title: { color: t },
                  subtitle: { color: "rgb(150, 150, 150)" },
                  axes: {
                    number: cl({}, e),
                    category: cl({}, e),
                    time: cl({}, e),
                  },
                  legend: { item: { label: { color: t } } },
                };
              return this.mergeWithParentDefaults({
                cartesian: cl(cl({}, n), {
                  series: {
                    bar: cl({}, o),
                    column: cl({}, o),
                    histogram: cl({}, o),
                  },
                }),
                polar: cl(cl({}, n), {
                  series: { pie: cl(cl({}, o), { title: { color: t } }) },
                }),
              });
            }),
            e
          );
        })(nl),
        hl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        fl = {
          fills: [
            "#f44336",
            "#e91e63",
            "#9c27b0",
            "#673ab7",
            "#3f51b5",
            "#2196f3",
            "#03a9f4",
            "#00bcd4",
            "#009688",
            "#4caf50",
            "#8bc34a",
            "#cddc39",
            "#ffeb3b",
            "#ffc107",
            "#ff9800",
            "#ff5722",
          ],
          strokes: [
            "#ab2f26",
            "#a31545",
            "#6d1b7b",
            "#482980",
            "#2c397f",
            "#1769aa",
            "#0276ab",
            "#008494",
            "#00695f",
            "#357a38",
            "#618834",
            "#909a28",
            "#b3a429",
            "#b38705",
            "#b36a00",
            "#b33d18",
          ],
        },
        gl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            hl(e, t),
            (e.prototype.getPalette = function () {
              return fl;
            }),
            e
          );
        })(nl),
        yl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ml = {
          fills: [
            "#f44336",
            "#e91e63",
            "#9c27b0",
            "#673ab7",
            "#3f51b5",
            "#2196f3",
            "#03a9f4",
            "#00bcd4",
            "#009688",
            "#4caf50",
            "#8bc34a",
            "#cddc39",
            "#ffeb3b",
            "#ffc107",
            "#ff9800",
            "#ff5722",
          ],
          strokes: [
            "#ab2f26",
            "#a31545",
            "#6d1b7b",
            "#482980",
            "#2c397f",
            "#1769aa",
            "#0276ab",
            "#008494",
            "#00695f",
            "#357a38",
            "#618834",
            "#909a28",
            "#b3a429",
            "#b38705",
            "#b36a00",
            "#b33d18",
          ],
        },
        vl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            yl(e, t),
            (e.prototype.getPalette = function () {
              return ml;
            }),
            e
          );
        })(dl),
        Cl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wl = {
          fills: [
            "#c16068",
            "#a2bf8a",
            "#ebcc87",
            "#80a0c3",
            "#b58dae",
            "#85c0d1",
          ],
          strokes: [
            "#874349",
            "#718661",
            "#a48f5f",
            "#5a7088",
            "#7f637a",
            "#5d8692",
          ],
        },
        bl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Cl(e, t),
            (e.prototype.getPalette = function () {
              return wl;
            }),
            e
          );
        })(nl),
        El = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Sl = {
          fills: [
            "#c16068",
            "#a2bf8a",
            "#ebcc87",
            "#80a0c3",
            "#b58dae",
            "#85c0d1",
          ],
          strokes: [
            "#874349",
            "#718661",
            "#a48f5f",
            "#5a7088",
            "#7f637a",
            "#5d8692",
          ],
        },
        Ol = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            El(e, t),
            (e.prototype.getPalette = function () {
              return Sl;
            }),
            e
          );
        })(dl),
        _l = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Rl = {
          fills: [
            "#febe76",
            "#ff7979",
            "#badc58",
            "#f9ca23",
            "#f0932b",
            "#eb4c4b",
            "#6ab04c",
            "#7ed6df",
            "#e056fd",
            "#686de0",
          ],
          strokes: [
            "#b28553",
            "#b35555",
            "#829a3e",
            "#ae8d19",
            "#a8671e",
            "#a43535",
            "#4a7b35",
            "#58969c",
            "#9d3cb1",
            "#494c9d",
          ],
        },
        Pl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            _l(e, t),
            (e.prototype.getPalette = function () {
              return Rl;
            }),
            e
          );
        })(nl),
        Tl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Al = {
          fills: [
            "#febe76",
            "#ff7979",
            "#badc58",
            "#f9ca23",
            "#f0932b",
            "#eb4c4b",
            "#6ab04c",
            "#7ed6df",
            "#e056fd",
            "#686de0",
          ],
          strokes: [
            "#b28553",
            "#b35555",
            "#829a3e",
            "#ae8d19",
            "#a8671e",
            "#a43535",
            "#4a7b35",
            "#58969c",
            "#9d3cb1",
            "#494c9d",
          ],
        },
        Dl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Tl(e, t),
            (e.prototype.getPalette = function () {
              return Al;
            }),
            e
          );
        })(dl),
        xl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Fl = {
          fills: [
            "#5BC0EB",
            "#FDE74C",
            "#9BC53D",
            "#E55934",
            "#FA7921",
            "#fa3081",
          ],
          strokes: [
            "#4086a4",
            "#b1a235",
            "#6c8a2b",
            "#a03e24",
            "#af5517",
            "#af225a",
          ],
        },
        Nl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            xl(e, t),
            (e.prototype.getPalette = function () {
              return Fl;
            }),
            e
          );
        })(nl),
        Ml = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Il = {
          fills: [
            "#5BC0EB",
            "#FDE74C",
            "#9BC53D",
            "#E55934",
            "#FA7921",
            "#fa3081",
          ],
          strokes: [
            "#4086a4",
            "#b1a235",
            "#6c8a2b",
            "#a03e24",
            "#af5517",
            "#af225a",
          ],
        },
        Ll = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ml(e, t),
            (e.prototype.getPalette = function () {
              return Il;
            }),
            e
          );
        })(dl),
        Gl = function () {
          return (Gl =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        kl = {
          background: { meta: { defaults: { visible: !0, fill: "white" } } },
          padding: {
            meta: {
              constructor: Qo,
              defaults: { top: 20, right: 20, bottom: 20, left: 20 },
            },
          },
          tooltip: {
            meta: {
              defaults: {
                enabled: !0,
                tracking: !0,
                delay: 0,
                class: Os.defaultTooltipClass,
              },
            },
          },
          title: {
            meta: {
              constructor: bn,
              defaults: {
                enabled: !1,
                padding: {
                  meta: {
                    constructor: Qo,
                    defaults: { top: 10, right: 10, bottom: 10, left: 10 },
                  },
                },
                text: "Title",
                fontStyle: void 0,
                fontWeight: "bold",
                fontSize: 14,
                fontFamily: "Verdana, sans-serif",
                color: "rgb(70, 70, 70)",
              },
            },
          },
          subtitle: {
            meta: {
              constructor: bn,
              defaults: {
                enabled: !1,
                padding: {
                  meta: {
                    constructor: Qo,
                    defaults: { top: 10, right: 10, bottom: 10, left: 10 },
                  },
                },
                text: "Subtitle",
                fontStyle: void 0,
                fontWeight: void 0,
                fontSize: 12,
                fontFamily: "Verdana, sans-serif",
                color: "rgb(140, 140, 140)",
              },
            },
          },
          legend: {
            meta: {
              constructor: ss,
              defaults: { enabled: !0, position: ts.Right, spacing: 20 },
            },
            item: {
              meta: {
                constructor: is,
                defaults: { paddingX: 16, paddingY: 8 },
              },
              marker: {
                meta: {
                  constructor: rs,
                  defaults: {
                    shape: void 0,
                    size: 15,
                    strokeWidth: 1,
                    padding: 8,
                  },
                },
              },
              label: {
                meta: {
                  constructor: ns,
                  defaults: {
                    color: "black",
                    fontStyle: void 0,
                    fontWeight: void 0,
                    fontSize: 12,
                    fontFamily: "Verdana, sans-serif",
                  },
                },
              },
            },
          },
        },
        Vl = {
          container: void 0,
          autoSize: !0,
          width: 600,
          height: 300,
          data: [],
          title: void 0,
          subtitle: void 0,
          padding: {},
          background: {},
          legend: { item: { marker: {}, label: {} } },
          navigator: { mask: {}, minHandle: {}, maxHandle: {} },
          listeners: void 0,
        },
        Wl = {
          constructorParams: ["document"],
          setAsIs: ["container", "data", "tooltipOffset"],
          nonSerializable: ["container", "data"],
        },
        Hl = {
          defaults: {
            visibleRange: [0, 1],
            label: {},
            tick: {},
            title: {},
            line: {},
            gridStyle: [{ stroke: "rgb(219, 219, 219)", lineDash: [4, 2] }],
          },
        },
        Bl = { visible: !0, showInLegend: !0, listeners: void 0 },
        jl = {
          fillOpacity: 1,
          strokeOpacity: 1,
          xKey: "",
          xName: "",
          yKeys: [],
          yNames: [],
          grouped: !1,
          normalizedTo: void 0,
          strokeWidth: 1,
          lineDash: void 0,
          lineDashOffset: 0,
          shadow: void 0,
          highlightStyle: { fill: "yellow" },
        },
        Ul = {
          shadow: {
            meta: {
              constructor: Aa,
              defaults: {
                enabled: !0,
                color: "rgba(0, 0, 0, 0.5)",
                xOffset: 0,
                yOffset: 0,
                blur: 5,
              },
            },
          },
        },
        zl = {
          enabled: !0,
          fontStyle: void 0,
          fontWeight: void 0,
          fontSize: 12,
          fontFamily: "Verdana, sans-serif",
          color: "rgb(70, 70, 70)",
        },
        Kl = {
          label: { meta: { defaults: Gl(Gl({}, zl), { formatter: void 0 }) } },
        },
        Yl = {
          tooltip: {
            meta: {
              defaults: { enabled: !0, renderer: void 0, format: void 0 },
            },
          },
        },
        Xl = {
          line: {
            meta: { defaults: { width: 1, color: "rgb(195, 195, 195)" } },
          },
          title: {
            meta: {
              constructor: bn,
              defaults: {
                padding: {
                  meta: {
                    constructor: Qo,
                    defaults: { top: 10, right: 10, bottom: 10, left: 10 },
                  },
                },
                text: "Axis Title",
                fontStyle: void 0,
                fontWeight: "bold",
                fontSize: 12,
                fontFamily: "Verdana, sans-serif",
                color: "rgb(70, 70, 70)",
              },
            },
          },
          label: {
            meta: {
              constructor: cr,
              defaults: {
                fontStyle: void 0,
                fontWeight: void 0,
                fontSize: 12,
                fontFamily: "Verdana, sans-serif",
                padding: 5,
                rotation: 0,
                color: "rgb(87, 87, 87)",
                formatter: void 0,
              },
            },
          },
          tick: {
            meta: {
              constructor: pr,
              defaults: {
                width: 1,
                size: 6,
                color: "rgb(195, 195, 195)",
                count: 10,
              },
            },
          },
        },
        ql =
          (((il = {})[Gs.type] = Gl(
            Gl(
              {
                meta: Gl(Gl({ constructor: Gs }, Wl), {
                  defaults: Gl(Gl({}, Vl), {
                    axes: [
                      { type: mr.type, position: "left" },
                      { type: wr.type, position: "bottom" },
                    ],
                  }),
                }),
              },
              kl
            ),
            {
              axes:
                ((sl = {}),
                (sl[mr.type] = Gl(
                  {
                    meta: Gl(
                      {
                        constructor: mr,
                        setAsIs: ["gridStyle", "visibleRange"],
                      },
                      Hl
                    ),
                  },
                  Xl
                )),
                (sl[wr.type] = Gl(
                  {
                    meta: Gl(
                      {
                        constructor: wr,
                        setAsIs: ["gridStyle", "visibleRange"],
                      },
                      Hl
                    ),
                  },
                  Xl
                )),
                (sl[Gr.type] = Gl(
                  {
                    meta: Gl(
                      {
                        constructor: Gr,
                        setAsIs: ["gridStyle", "visibleRange"],
                      },
                      Hl
                    ),
                  },
                  Xl
                )),
                (sl[Ti.type] = Gl(
                  {
                    meta: Gl(
                      {
                        constructor: Ti,
                        setAsIs: ["gridStyle", "visibleRange"],
                      },
                      Hl
                    ),
                  },
                  Xl
                )),
                sl),
              series:
                ((al = {
                  column: Gl(
                    Gl(
                      Gl(
                        {
                          meta: {
                            constructor: ua,
                            setAsIs: ["lineDash"],
                            defaults: Gl(Gl({ flipXY: !1 }, Bl), jl),
                          },
                          highlightStyle: {},
                        },
                        Yl
                      ),
                      Kl
                    ),
                    Ul
                  ),
                }),
                (al[ua.type] = Gl(
                  Gl(
                    Gl(
                      {
                        meta: {
                          constructor: ua,
                          setAsIs: ["lineDash"],
                          defaults: Gl(Gl({ flipXY: !0 }, Bl), jl),
                        },
                        highlightStyle: {},
                      },
                      Yl
                    ),
                    Kl
                  ),
                  Ul
                )),
                (al[ha.type] = Gl(
                  Gl(
                    {
                      meta: {
                        constructor: ha,
                        setAsIs: ["lineDash"],
                        defaults: Gl(Gl({}, Bl), {
                          title: void 0,
                          xKey: "",
                          xName: "",
                          yKey: "",
                          yName: "",
                          strokeWidth: 2,
                          strokeOpacity: 1,
                          lineDash: void 0,
                          lineDashOffset: 0,
                          highlightStyle: { fill: "yellow" },
                        }),
                      },
                    },
                    Yl
                  ),
                  {
                    highlightStyle: {},
                    marker: {
                      meta: {
                        constructor: ms,
                        defaults: {
                          enabled: !0,
                          shape: "circle",
                          size: 6,
                          maxSize: 30,
                          strokeWidth: 1,
                          formatter: void 0,
                        },
                      },
                    },
                  }
                )),
                (al[ma.type] = Gl(
                  Gl(
                    {
                      meta: {
                        constructor: ma,
                        defaults: Gl(Gl({}, Bl), {
                          title: void 0,
                          xKey: "",
                          yKey: "",
                          sizeKey: void 0,
                          labelKey: void 0,
                          xName: "",
                          yName: "",
                          sizeName: "Size",
                          labelName: "Label",
                          strokeWidth: 2,
                          fillOpacity: 1,
                          strokeOpacity: 1,
                          highlightStyle: { fill: "yellow" },
                        }),
                      },
                    },
                    Yl
                  ),
                  {
                    highlightStyle: {},
                    marker: {
                      meta: {
                        constructor: ms,
                        defaults: {
                          enabled: !0,
                          shape: "circle",
                          size: 6,
                          maxSize: 30,
                          strokeWidth: 1,
                          formatter: void 0,
                        },
                      },
                    },
                  }
                )),
                (al[Js.type] = Gl(
                  Gl(
                    Gl(
                      {
                        meta: {
                          constructor: Js,
                          setAsIs: ["lineDash"],
                          defaults: Gl(Gl({}, Bl), {
                            xKey: "",
                            xName: "",
                            yKeys: [],
                            yNames: [],
                            normalizedTo: void 0,
                            fillOpacity: 1,
                            strokeOpacity: 1,
                            strokeWidth: 2,
                            lineDash: void 0,
                            lineDashOffset: 0,
                            shadow: void 0,
                            highlightStyle: { fill: "yellow" },
                          }),
                        },
                      },
                      Yl
                    ),
                    {
                      highlightStyle: {},
                      marker: {
                        meta: {
                          constructor: ms,
                          defaults: {
                            enabled: !0,
                            shape: "circle",
                            size: 6,
                            maxSize: 30,
                            strokeWidth: 1,
                            formatter: void 0,
                          },
                        },
                      },
                    }
                  ),
                  Ul
                )),
                (al[Oa.type] = Gl(
                  Gl(
                    Gl(
                      {
                        meta: {
                          constructor: Oa,
                          setAsIs: ["lineDash"],
                          defaults: Gl(Gl({}, Bl), {
                            title: void 0,
                            xKey: "",
                            yKey: "",
                            xName: "",
                            yName: "",
                            strokeWidth: 1,
                            fillOpacity: 1,
                            strokeOpacity: 1,
                            lineDash: void 0,
                            lineDashOffset: 0,
                            areaPlot: !1,
                            binCount: void 0,
                            bins: void 0,
                            aggregation: "sum",
                            highlightStyle: { fill: "yellow" },
                          }),
                        },
                      },
                      Yl
                    ),
                    {
                      highlightStyle: {},
                      label: {
                        meta: {
                          defaults: Gl(Gl({}, zl), { formatter: void 0 }),
                        },
                      },
                    }
                  ),
                  Ul
                )),
                al),
              navigator: {
                meta: {
                  constructor: Is,
                  defaults: { enabled: !1, height: 30, min: 0, max: 1 },
                },
                mask: {
                  meta: {
                    constructor: Ns,
                    defaults: {
                      fill: "#999999",
                      stroke: "#999999",
                      strokeWidth: 1,
                      fillOpacity: 0.2,
                    },
                  },
                },
                minHandle: {
                  meta: {
                    constructor: Ms,
                    defaults: {
                      fill: "#f2f2f2",
                      stroke: "#999999",
                      strokeWidth: 1,
                      width: 8,
                      height: 16,
                      gripLineGap: 2,
                      gripLineLength: 8,
                    },
                  },
                },
                maxHandle: {
                  meta: {
                    constructor: Ms,
                    defaults: {
                      fill: "#f2f2f2",
                      stroke: "#999999",
                      strokeWidth: 1,
                      width: 8,
                      height: 16,
                      gripLineGap: 2,
                      gripLineLength: 8,
                    },
                  },
                },
              },
            }
          )),
          (il[zs.type] = Gl(
            Gl(
              {
                meta: Gl(Gl({ constructor: zs }, Wl), {
                  defaults: Gl(Gl({}, Vl), {
                    padding: {
                      meta: {
                        constructor: Qo,
                        defaults: { top: 40, right: 40, bottom: 40, left: 40 },
                      },
                    },
                  }),
                }),
              },
              kl
            ),
            {
              series:
                ((ll = {}),
                (ll[tl.type] = Gl(
                  Gl(
                    Gl(
                      {
                        meta: {
                          constructor: tl,
                          setAsIs: ["lineDash"],
                          defaults: Gl(Gl({}, Bl), {
                            title: void 0,
                            angleKey: "",
                            angleName: "",
                            radiusKey: void 0,
                            radiusName: void 0,
                            labelKey: void 0,
                            labelName: void 0,
                            callout: {},
                            fillOpacity: 1,
                            strokeOpacity: 1,
                            rotation: 0,
                            outerRadiusOffset: 0,
                            innerRadiusOffset: 0,
                            strokeWidth: 1,
                            lineDash: void 0,
                            lineDashOffset: 0,
                            shadow: void 0,
                          }),
                        },
                      },
                      Yl
                    ),
                    {
                      highlightStyle: {},
                      title: {
                        meta: {
                          constructor: bn,
                          defaults: {
                            enabled: !0,
                            padding: {
                              meta: {
                                constructor: Qo,
                                defaults: {
                                  top: 10,
                                  right: 10,
                                  bottom: 10,
                                  left: 10,
                                },
                              },
                            },
                            text: "Series Title",
                            fontStyle: void 0,
                            fontWeight: "bold",
                            fontSize: 14,
                            fontFamily: "Verdana, sans-serif",
                            color: "black",
                          },
                        },
                      },
                      label: {
                        meta: {
                          defaults: Gl(Gl({}, zl), { offset: 3, minAngle: 20 }),
                        },
                      },
                      callout: {
                        meta: { defaults: { length: 10, strokeWidth: 1 } },
                      },
                    }
                  ),
                  Ul
                )),
                ll),
            }
          )),
          (il[Vs.type] = Gl(
            Gl(
              {
                meta: Gl(Gl({ constructor: Vs }, Wl), { defaults: Gl({}, Vl) }),
              },
              kl
            ),
            {
              series:
                ((ul = {}),
                (ul[Ka.type] = Gl(
                  {
                    meta: {
                      constructor: Ka,
                      defaults: Gl(Gl({}, Bl), { showInLegend: !1 }),
                    },
                  },
                  Yl
                )),
                ul),
            }
          )),
          il),
        Ql = {
          cartesian: ["line", "area", "bar", "column"],
          polar: ["pie"],
          hierarchy: ["treemap"],
        },
        Zl = function (t) {
          Ql[t].forEach(function (e) {
            ql[e] = ql[t];
          });
        };
      for (var $l in Ql) Zl($l);
      ql.scatter = ql.histogram = Gl(Gl({}, ql.cartesian), {
        meta: Gl(Gl({}, ql.cartesian.meta), {
          defaults: Gl(Gl({}, Vl), {
            axes: [
              { type: "number", position: "bottom" },
              { type: "number", position: "left" },
            ],
          }),
        }),
      });
      var Jl = Object.create(ql[Gs.type]),
        tu = Object.create(Jl.meta);
      (tu.constructor = Hs), (Jl.meta = tu), (ql[Hs.type] = Jl);
      var eu = function () {
          return (eu =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        ou = new nl(),
        nu = new dl(),
        ru = {
          undefined: ou,
          null: ou,
          "ag-default": ou,
          "ag-material": new gl(),
          "ag-pastel": new bl(),
          "ag-solar": new Pl(),
          "ag-vivid": new Nl(),
        },
        iu = {
          undefined: nu,
          null: nu,
          "ag-default-dark": nu,
          "ag-material-dark": new vl(),
          "ag-pastel-dark": new Ol(),
          "ag-solar-dark": new Dl(),
          "ag-vivid-dark": new Ll(),
        },
        su = eu(eu({}, iu), ru);
      function au(t) {
        return t instanceof nl
          ? t
          : su[t] ||
              ((t = t).baseTheme || t.overrides || t.palette
                ? new (au(t.baseTheme).constructor)(t)
                : ou);
      }
      var lu,
        uu = 0,
        pu = (function () {
          function t() {}
          return (
            (t.create = function (t, e, o) {
              (t = Object.create(t)), e && (t.container = e), o && (t.data = o);
              var n = t && !1 !== t.autoSize,
                r = au(t.theme);
              uu = 0;
              var i = hu(t, void 0, void 0, r);
              return i && n && (i.autoSize = !0), i;
            }),
            (t.update = function (t, e, o, n) {
              if (t && e) {
                (e = Object.create(e)),
                  o && (e.container = o),
                  n && (e.data = n);
                var r = e && !1 !== e.autoSize,
                  i = au(e.theme);
                (uu = 0), fu(t, e, void 0, i), r && (t.autoSize = !0);
              }
            }),
            (t.save = function (t) {
              var e = {};
              return (
                (function (t, e, o) {
                  void 0 === e && (e = {}),
                    void 0 === o && (o = ql),
                    t.constructor &&
                      t.constructor.type &&
                      !o.meta &&
                      (o = o[t.constructor.type]),
                    Object.keys(o && o.meta && o.meta.defaults).forEach(
                      function (n) {
                        var r = t[n];
                        pn(r) &&
                        (!o.meta.nonSerializable ||
                          o.meta.nonSerializable.indexOf(n) < 0)
                          ? (e[n] = {})
                          : Array.isArray(r) || (e[n] = t[n]);
                      }
                    );
                })(t, e),
                e
              );
            }),
            (t.createComponent = hu),
            t
          );
        })(),
        cu = {
          "cartesian.series": "line",
          "line.series": "line",
          "area.series": "area",
          "bar.series": "bar",
          "column.series": "column",
          "histogram.series": "histogram",
          "scatter.series": "scatter",
          "polar.series": "pie",
          "pie.series": "pie",
        },
        du =
          ((lu = {}),
          ["area", "bar", "histogram", "line", "pie", "scatter"].forEach(
            function (t) {
              return (lu[t] = t);
            }
          ),
          (lu.column = "bar"),
          lu);
      function hu(t, e, o, n) {
        var r;
        if (
          ((t = Object.create(t)),
          o instanceof rs
            ? t.type && (t.shape = t.type)
            : ((t = mu(t, e)),
              e ? t.type && (e = e + "." + t.type) : (e = t.type)),
          e)
        ) {
          var i = on(ql, e);
          if (i) {
            t = wu(e, t, i, n);
            var s = i.meta || {},
              a = s.constructorParams || [],
              l = ["type", "listeners"].concat(a),
              u = a
                .map(function (e) {
                  return t[e];
                })
                .filter(function (t) {
                  return void 0 !== t;
                });
            o ||
              ((o = new ((r = s.constructor).bind.apply(
                r,
                (function () {
                  for (var t = 0, e = 0, o = arguments.length; e < o; e++)
                    t += arguments[e].length;
                  var n = Array(t),
                    r = 0;
                  for (e = 0; e < o; e++)
                    for (
                      var i = arguments[e], s = 0, a = i.length;
                      s < a;
                      s++, r++
                    )
                      n[r] = i[s];
                  return n;
                })([void 0], u)
              ))()),
              n && o instanceof cs && (uu = n.setSeriesColors(o, t, uu)));
            var p = function (r) {
              if (l.indexOf(r) < 0) {
                var a = t[r];
                if (!a || !(r in i) || (s.setAsIs && s.setAsIs.indexOf(r) >= 0))
                  o[r] = a;
                else if (Array.isArray(a)) {
                  var u = a
                    .map(function (t) {
                      var o = hu(t, e + "." + r, void 0, n);
                      if (n && "axes" === r) {
                        var i = {
                          getConfig: function (t) {
                            var e = t.split("."),
                              r = e.slice(0, 3).join(".") + "." + o.position,
                              i = e.slice(3);
                            i.length && (r += "." + i.join("."));
                            var s = n.getConfig(t),
                              a = n.getConfig(r);
                            return (
                              pn(n.getConfig(r)), pn(s) && pn(a) ? un(s, a) : a
                            );
                          },
                        };
                        fu(o, t, e + "." + r, i);
                      }
                      return o;
                    })
                    .filter(function (t) {
                      return !!t;
                    });
                  o[r] = u;
                } else if (i[r] && o[r]) hu(a, e + "." + r, o[r], n);
                else {
                  var p = hu(a, a.type ? e : e + "." + r, void 0, n);
                  p && (o[r] = p);
                }
              }
            };
            for (var c in t) p(c);
            var d = t.listeners;
            if (o && o.addEventListener && d)
              for (var c in d)
                if (d.hasOwnProperty(c)) {
                  var h = d[c];
                  "function" == typeof h && o.addEventListener(c, h);
                }
            return o;
          }
        }
      }
      function fu(t, e, o, n) {
        if (
          e &&
          pn(e) &&
          (t instanceof rs
            ? e.type && (e.shape = e.type)
            : ((e = mu(e, o)),
              o ? e.type && (o = o + "." + e.type) : (o = e.type)),
          o)
        ) {
          var r = o in ql ? t : void 0,
            i = on(ql, o);
          if (i) {
            e = wu(o, e, i, n);
            var s = i.meta || {},
              a = ["type"].concat((s && s.constructorParams) || []);
            for (var l in e)
              if (a.indexOf(l) < 0) {
                var u = e[l],
                  p = o + "." + l;
                if (s.setAsIs && s.setAsIs.indexOf(l) >= 0) t[l] = u;
                else {
                  var c = t[l];
                  if (Array.isArray(c) && Array.isArray(u))
                    r
                      ? "series" === l
                        ? gu(t, u, p, n)
                        : "axes" === l && yu(t, u, p, n)
                      : (t[l] = u);
                  else if (pn(c))
                    u ? fu(c, u, u.type ? o : p, n) : l in e && (t[l] = u);
                  else {
                    var d = pn(u) && hu(u, u.type ? o : p, void 0, n);
                    if (d) t[l] = d;
                    else {
                      if (r && e.autoSize && ("width" === l || "height" === l))
                        continue;
                      t[l] = u;
                    }
                  }
                }
              }
          }
          r && (r.layoutPending = !0);
        }
      }
      function gu(t, e, o, n) {
        for (var r, i = t.series.slice(), s = 0; s < e.length; s++) {
          var a = e[s];
          if ((u = i[s]))
            if (((a = mu(a, o)), u.type === du[a.type]))
              n && (uu = n.setSeriesColors(u, a, uu)), fu(u, a, o, n);
            else {
              var l = hu(a, o, void 0, n);
              t.removeSeries(u), t.addSeriesAfter(l, r), (u = l);
            }
          else (l = hu(a, o, void 0, n)), t.addSeries(l);
          r = u;
        }
        for (; s < i.length; s++) {
          var u;
          (u = i[s]) && t.removeSeries(u);
        }
      }
      function yu(t, e, o, n) {
        for (
          var r = t.axes,
            i = [],
            s = [],
            a = function (t) {
              var e = br(r, function (e) {
                return e.type === t.type && e.position === t.position;
              });
              if (e) s.push(e), fu(e, t, o, n);
              else {
                var a = hu(t, o, void 0, n);
                a && i.push(a);
              }
            },
            l = 0,
            u = e;
          l < u.length;
          l++
        )
          a(u[l]);
        t.axes = s.concat(i);
      }
      function mu(t, e) {
        if (
          (e ||
            ((e = ""),
            (t = (function (t) {
              if (t.type) return t;
              var e = t.series && t.series[0];
              if (e && e.type)
                t: for (var o in ql)
                  for (var n in ql[o].series)
                    if (e.type === n) {
                      (t = Object.create(t)).type = o;
                      break t;
                    }
              return t.type || ((t = Object.create(t)).type = "cartesian"), t;
            })(t))),
          !t.type)
        ) {
          var o = cu[e];
          o && ((t = Object.create(t)).type = o);
        }
        return t;
      }
      function vu(t) {
        return ["axes", "series"].indexOf(t) >= 0;
      }
      var Cu = "enabled";
      function wu(t, e, o, n) {
        var r = t.indexOf(".") < 0,
          i = n && n.getConfig(t),
          s = o && o.meta && o.meta.defaults,
          a = !1 === e.enabled;
        for (var l in ((s || i) && (e = Object.create(e)), i))
          (r && vu(l)) || l in e || (e[l] = i[l]);
        for (var l in s) (i && l in i && !vu(l)) || l in e || (e[l] = s[l]);
        return ((i && Cu in i) || (s && Cu in s)) && !a && (e.enabled = !0), e;
      }
      var bu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Eu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Su = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.model = e), o;
          }
          return (
            bu(e, t),
            (e.prototype.init = function () {
              var t = this;
              this.setChartRange(),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_RANGE_SELECTION_CHANGED,
                  function (e) {
                    e.id &&
                      e.id === t.model.getChartId() &&
                      t.updateForRangeChange();
                  }
                ),
                this.model.isUnlinked() &&
                  this.rangeController &&
                  this.rangeController.setCellRanges([]),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_MOVED,
                  this.updateForGridChange.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PINNED,
                  this.updateForGridChange.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_VISIBLE,
                  this.updateForGridChange.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  this.updateForGridChange.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_MODEL_UPDATED,
                  this.updateForGridChange.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_CELL_VALUE_CHANGED,
                  this.updateForDataChange.bind(this)
                );
            }),
            (e.prototype.updateForGridChange = function () {
              this.model.isUnlinked() ||
                (this.model.updateCellRanges(), this.setChartRange());
            }),
            (e.prototype.updateForDataChange = function () {
              this.model.isUnlinked() ||
                (this.model.updateData(), this.raiseChartUpdatedEvent());
            }),
            (e.prototype.updateForRangeChange = function () {
              this.updateForGridChange(),
                this.raiseChartRangeSelectionChangedEvent();
            }),
            (e.prototype.updateForPanelChange = function (t) {
              this.model.updateCellRanges(t),
                this.setChartRange(),
                this.raiseChartRangeSelectionChangedEvent();
            }),
            (e.prototype.getChartModel = function () {
              var t = this;
              return {
                modelType: this.model.isPivotChart() ? "pivot" : "range",
                chartId: this.model.getChartId(),
                chartType: this.model.getChartType(),
                chartThemeName: this.getThemeName(),
                chartOptions: this.chartProxy.getChartOptions(),
                cellRange: this.model.getCellRangeParams(),
                chart: this.chartProxy.getChart(),
                getChartImageDataURL: function (e) {
                  return t.chartProxy.getChartImageDataURL(e.type);
                },
                suppressChartRanges: this.model.isSuppressChartRanges(),
                aggFunc: this.model.getAggFunc(),
                unlinkChart: this.model.isUnlinked(),
              };
            }),
            (e.prototype.getChartType = function () {
              return this.model.getChartType();
            }),
            (e.prototype.isPivotChart = function () {
              return this.model.isPivotChart();
            }),
            (e.prototype.isGrouping = function () {
              return this.model.isGrouping();
            }),
            (e.prototype.getThemeName = function () {
              return this.model.getChartThemeName();
            }),
            (e.prototype.getThemes = function () {
              return this.gridOptionsWrapper.getChartThemes();
            }),
            (e.prototype.getPalettes = function () {
              var t = this,
                e = this.chartProxy.getCustomPalette();
              return e
                ? [e]
                : this.gridOptionsWrapper.getChartThemes().map(function (e) {
                    return au(
                      t.chartProxy.isStockTheme(e)
                        ? e
                        : t.chartProxy.lookupCustomChartTheme(e)
                    ).palette;
                  });
            }),
            (e.prototype.setChartType = function (t) {
              this.model.setChartType(t),
                this.raiseChartUpdatedEvent(),
                this.raiseChartOptionsChangedEvent();
            }),
            (e.prototype.setChartThemeName = function (t) {
              this.model.setChartThemeName(t),
                this.raiseChartUpdatedEvent(),
                this.raiseChartOptionsChangedEvent();
            }),
            (e.prototype.getColStateForMenu = function () {
              return {
                dimensionCols: this.model.getDimensionColState(),
                valueCols: this.model.getValueColState(),
              };
            }),
            (e.prototype.isDefaultCategorySelected = function () {
              return (
                this.model.getSelectedDimension().colId === qo.DEFAULT_CATEGORY
              );
            }),
            (e.prototype.setChartRange = function (t) {
              void 0 === t && (t = !1),
                !this.rangeController ||
                  this.model.isSuppressChartRanges() ||
                  this.model.isUnlinked() ||
                  this.rangeController.setCellRanges(
                    this.model.getCellRanges()
                  ),
                t || this.raiseChartUpdatedEvent();
            }),
            (e.prototype.detachChartRange = function () {
              this.model.toggleUnlinked(),
                this.model.isUnlinked()
                  ? this.rangeController &&
                    this.rangeController.setCellRanges([])
                  : this.updateForGridChange();
            }),
            (e.prototype.setChartProxy = function (t) {
              this.chartProxy = t;
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartProxy;
            }),
            (e.prototype.isActiveXYChart = function () {
              return i._.includes(
                [i.ChartType.Scatter, i.ChartType.Bubble],
                this.getChartType()
              );
            }),
            (e.prototype.isChartLinked = function () {
              return !this.model.isUnlinked();
            }),
            (e.prototype.raiseChartUpdatedEvent = function () {
              var t = Object.freeze({ type: e.EVENT_CHART_UPDATED });
              this.dispatchEvent(t);
            }),
            (e.prototype.raiseChartOptionsChangedEvent = function () {
              this.chartProxy.raiseChartOptionsChangedEvent();
            }),
            (e.prototype.raiseChartRangeSelectionChangedEvent = function () {
              var t = Object.freeze({
                type: i.Events.EVENT_CHART_RANGE_SELECTION_CHANGED,
                id: this.model.getChartId(),
                chartId: this.model.getChartId(),
                cellRange: this.model.getCellRangeParams(),
                api: this.gridApi,
                columnApi: this.columnApi,
              });
              this.eventService.dispatchEvent(t);
            }),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this),
                this.rangeController && this.rangeController.setCellRanges([]);
            }),
            (e.EVENT_CHART_UPDATED = "chartUpdated"),
            Eu(
              [i.Autowired("rangeController")],
              e.prototype,
              "rangeController",
              void 0
            ),
            Eu([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Eu([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            Eu([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.BeanStub),
        Ou = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        _u = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ru = function () {
          for (var t = 0, e = 0, o = arguments.length; e < o; e++)
            t += arguments[e].length;
          var n = Array(t),
            r = 0;
          for (e = 0; e < o; e++)
            for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
              n[r] = i[s];
          return n;
        },
        Pu = (function (t) {
          function e(o) {
            var n = t.call(this, e.TEMPLATE) || this;
            return (n.columnComps = new Map()), (n.chartController = o), n;
          }
          return (
            Ou(e, t),
            (e.prototype.init = function () {
              this.updatePanels(),
                this.addManagedListener(
                  this.chartController,
                  Su.EVENT_CHART_UPDATED,
                  this.updatePanels.bind(this)
                );
            }),
            (e.prototype.destroy = function () {
              this.clearComponents(), t.prototype.destroy.call(this);
            }),
            (e.prototype.updatePanels = function () {
              var t = this,
                e = this.chartType,
                o = this.chartController.getColStateForMenu(),
                n = o.dimensionCols,
                r = o.valueCols,
                s = n
                  .map(function (t) {
                    return t.colId;
                  })
                  .concat(
                    r.map(function (t) {
                      return t.colId;
                    })
                  );
              if (
                ((this.chartType = this.chartController.getChartType()),
                i._.areEqual(i._.keys(this.columnComps), s) &&
                  this.chartType === e)
              ) {
                if (
                  (Ru(n, r).forEach(function (e) {
                    t.columnComps.get(e.colId).setValue(e.selected, !0);
                  }),
                  this.chartController.isActiveXYChart())
                ) {
                  var a = this.generateGetSeriesLabel();
                  r.forEach(function (e) {
                    t.columnComps.get(e.colId).setLabel(a(e));
                  });
                }
              } else
                this.clearComponents(),
                  this.createCategoriesGroupComponent(n),
                  this.createSeriesGroupComponent(r);
            }),
            (e.prototype.addComponent = function (t, e) {
              var o = document.createElement("div");
              (o.className = "ag-chart-data-section"),
                o.appendChild(e.getGui()),
                t.appendChild(o);
            }),
            (e.prototype.addChangeListener = function (t, e) {
              var o = this;
              this.addManagedListener(
                t,
                i.AgAbstractField.EVENT_CHANGED,
                function () {
                  (e.selected = t.getValue()),
                    o.chartController.updateForPanelChange(e);
                }
              );
            }),
            (e.prototype.createCategoriesGroupComponent = function (t) {
              var e = this;
              this.categoriesGroupComp = this.createBean(
                new i.AgGroupComponent({
                  title: this.getCategoryGroupTitle(),
                  enabled: !0,
                  suppressEnabledCheckbox: !0,
                  suppressOpenCloseIcons: !1,
                  cssIdentifier: "charts-data",
                })
              );
              var o = "chartDimension" + this.getCompId();
              t.forEach(function (t) {
                var n = e.categoriesGroupComp.createManagedBean(
                  new i.AgRadioButton()
                );
                n.setLabel(i._.escapeString(t.displayName)),
                  n.setValue(t.selected),
                  n.setInputName(o),
                  e.addChangeListener(n, t),
                  e.categoriesGroupComp.addItem(n),
                  e.columnComps.set(t.colId, n);
              }),
                this.addComponent(this.getGui(), this.categoriesGroupComp);
            }),
            (e.prototype.createSeriesGroupComponent = function (t) {
              var e = this;
              if (
                ((this.seriesGroupComp = this.createManagedBean(
                  new i.AgGroupComponent({
                    title: this.getSeriesGroupTitle(),
                    enabled: !0,
                    suppressEnabledCheckbox: !0,
                    suppressOpenCloseIcons: !1,
                    cssIdentifier: "charts-data",
                  })
                )),
                this.chartController.isActiveXYChart())
              ) {
                var o = this.seriesGroupComp.createManagedBean(
                    new i.AgToggleButton()
                  ),
                  n = this.chartController.getChartProxy();
                o
                  .setLabel(this.chartTranslator.translate("paired"))
                  .setLabelAlignment("left")
                  .setLabelWidth("flex")
                  .setInputWidth(45)
                  .setValue(n.getSeriesOption("paired") || !1)
                  .onValueChange(function (t) {
                    n.setSeriesOption("paired", t),
                      e.chartController.updateForGridChange();
                  }),
                  this.seriesGroupComp.addItem(o);
              }
              var r = this.generateGetSeriesLabel();
              t.forEach(function (t) {
                var o = e.seriesGroupComp.createManagedBean(new i.AgCheckbox());
                o.addCssClass("ag-data-select-checkbox");
                var n = r(t);
                o.setLabel(n),
                  o.setValue(t.selected),
                  e.addChangeListener(o, t),
                  e.seriesGroupComp.addItem(o),
                  e.columnComps.set(t.colId, o),
                  e.addDragHandle(o, t);
              }),
                this.addComponent(this.getGui(), this.seriesGroupComp);
              var s = {
                getContainer: this.getGui.bind(this),
                onDragging: this.onDragging.bind(this),
                isInterestedIn: this.isInterestedIn.bind(this),
              };
              this.dragAndDropService.addDropTarget(s);
            }),
            (e.prototype.addDragHandle = function (t, e) {
              var o = this,
                n = i._.createIconNoSpan("columnDrag", this.gridOptionsWrapper);
              i._.addCssClass(n, "ag-drag-handle"),
                i._.addCssClass(n, "ag-chart-data-column-drag-handle"),
                t.getGui().insertAdjacentElement("beforeend", n);
              var r = {
                type: i.DragSourceType.ChartPanel,
                eElement: n,
                dragItemName: e.displayName,
                defaultIconName: i.DragAndDropService.ICON_MOVE,
                getDragItem: function () {
                  return { columns: [e.column] };
                },
                onDragStopped: function () {
                  o.insertIndex = void 0;
                },
              };
              this.dragAndDropService.addDragSource(r, !0),
                this.addDestroyFunc(function () {
                  return o.dragAndDropService.removeDragSource(r);
                });
            }),
            (e.prototype.generateGetSeriesLabel = function () {
              if (!this.chartController.isActiveXYChart())
                return function (t) {
                  return i._.escapeString(t.displayName);
                };
              var t = this.chartType === i.ChartType.Bubble,
                e = this.isInPairedMode(),
                o = 0,
                n = new Map();
              return (
                n.set(0, "X"),
                n.set(1, "Y"),
                n.set(2, "size"),
                function (r) {
                  var s,
                    a = i._.escapeString(r.displayName);
                  return r.selected
                    ? ((s = e
                        ? n.get(o % (t ? 3 : 2))
                        : 0 === o
                        ? "X"
                        : t && o % 2 == 0
                        ? "size"
                        : "Y"),
                      o++,
                      a + " (" + s + ")")
                    : a;
                }
              );
            }),
            (e.prototype.getCategoryGroupTitle = function () {
              return this.chartTranslator.translate(
                this.chartController.isActiveXYChart() ? "labels" : "categories"
              );
            }),
            (e.prototype.getSeriesGroupTitle = function () {
              return this.chartTranslator.translate(
                this.chartController.isActiveXYChart() ? "xyValues" : "series"
              );
            }),
            (e.prototype.isInPairedMode = function () {
              return (
                this.chartController.isActiveXYChart() &&
                this.chartController.getChartProxy().getSeriesOption("paired")
              );
            }),
            (e.prototype.clearComponents = function () {
              i._.clearElement(this.getGui()),
                (this.categoriesGroupComp = this.destroyBean(
                  this.categoriesGroupComp
                )),
                (this.seriesGroupComp = this.destroyBean(this.seriesGroupComp)),
                this.columnComps.clear();
            }),
            (e.prototype.onDragging = function (t) {
              var e = this;
              if (this.checkInsertIndex(t)) {
                var o = t.dragItem.columns[0],
                  n = this.chartController.getColStateForMenu();
                Ru(n.dimensionCols, n.valueCols)
                  .filter(function (t) {
                    return t.column === o;
                  })
                  .forEach(function (t) {
                    (t.order = e.insertIndex),
                      e.chartController.updateForPanelChange(t);
                  });
              }
            }),
            (e.prototype.checkInsertIndex = function (t) {
              if (i._.missing(t.vDirection)) return !1;
              var e = 0,
                o = t.event;
              this.columnComps.forEach(function (n) {
                var r = n.getGui().getBoundingClientRect();
                o.clientY >=
                  (t.vDirection === i.VerticalDirection.Down
                    ? r.top
                    : r.bottom) && e++;
              });
              var n = void 0 !== this.insertIndex && e !== this.insertIndex;
              return (this.insertIndex = e), n;
            }),
            (e.prototype.isInterestedIn = function (t) {
              return t === i.DragSourceType.ChartPanel;
            }),
            (e.TEMPLATE = '<div class="ag-chart-data-wrapper"></div>'),
            _u(
              [i.Autowired("dragAndDropService")],
              e.prototype,
              "dragAndDropService",
              void 0
            ),
            _u(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            _u([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Tu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Au = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Du = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activeComps = []), (o.params = e), o;
          }
          return (
            Tu(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                fontGroup: {
                  cssIdentifier: "charts-format-sub-level",
                  direction: "vertical",
                  suppressOpenCloseIcons: !0,
                },
              }),
                this.initGroup(),
                this.initFontFamilySelect(),
                this.initFontWeightStyleSelect(),
                this.initFontSizeSelect(),
                this.initFontColorPicker();
            }),
            (e.prototype.addCompToPanel = function (t) {
              this.fontGroup.addItem(t), this.activeComps.push(t);
            }),
            (e.prototype.setEnabled = function (t) {
              this.fontGroup.setEnabled(t);
            }),
            (e.prototype.initGroup = function () {
              var t = this;
              this.fontGroup
                .setTitle(
                  this.params.name || this.chartTranslator.translate("font")
                )
                .setEnabled(this.params.enabled)
                .hideEnabledCheckbox(!!this.params.suppressEnabledCheckbox)
                .hideOpenCloseIcons(!0)
                .onEnableChange(function (e) {
                  t.params.setEnabled && t.params.setEnabled(e);
                });
            }),
            (e.prototype.initFontFamilySelect = function () {
              var t = this,
                e = [
                  "Arial, sans-serif",
                  "Aria Black, sans-serif",
                  "Book Antiqua,  serif",
                  "Charcoal, sans-serif",
                  "Comic Sans MS, cursive",
                  "Courier, monospace",
                  "Courier New, monospace",
                  "Gadget, sans-serif",
                  "Geneva, sans-serif",
                  "Helvetica, sans-serif",
                  "Impact, sans-serif",
                  "Lucida Console, monospace",
                  "Lucida Grande, sans-serif",
                  "Lucida Sans Unicode,  sans-serif",
                  "Monaco, monospace",
                  "Palatino Linotype, serif",
                  "Palatino, serif",
                  "Times New Roman, serif",
                  "Times, serif",
                  "Verdana, sans-serif",
                ],
                o = this.params.initialFont.family,
                n = e[0];
              if (o) {
                var r = e
                  .map(function (t) {
                    return t.toLowerCase();
                  })
                  .indexOf(o.toLowerCase());
                if (r >= 0) n = e[r];
                else {
                  var s = i._.capitalise(o);
                  e.push(s), (n = s);
                }
              }
              var a = e.sort().map(function (t) {
                return { value: t, text: t };
              });
              this.familySelect
                .addOptions(a)
                .setInputWidth("flex")
                .setValue("" + n)
                .onValueChange(function (e) {
                  return t.params.setFont({ family: e });
                });
            }),
            (e.prototype.initFontSizeSelect = function () {
              var t = this,
                e = [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36],
                o = this.params.initialFont.size;
              i._.includes(e, o) || e.push(o);
              var n = e
                .sort(function (t, e) {
                  return t - e;
                })
                .map(function (t) {
                  return { value: "" + t, text: "" + t };
                });
              this.sizeSelect
                .addOptions(n)
                .setInputWidth("flex")
                .setValue("" + o)
                .onValueChange(function (e) {
                  return t.params.setFont({ size: parseInt(e, 10) });
                }),
                this.sizeSelect.setLabel(
                  this.chartTranslator.translate("size")
                );
            }),
            (e.prototype.initFontWeightStyleSelect = function () {
              var t = this,
                e = this.params.initialFont,
                o = e.weight,
                n = void 0 === o ? "normal" : o,
                r = e.style,
                s = void 0 === r ? "normal" : r,
                a = [
                  { name: "normal", weight: "normal", style: "normal" },
                  { name: "bold", weight: "bold", style: "normal" },
                  { name: "italic", weight: "normal", style: "italic" },
                  { name: "boldItalic", weight: "bold", style: "italic" },
                ],
                l = i._.find(a, function (t) {
                  return t.weight === n && t.style === s;
                });
              l || a.unshift((l = { name: "predefined", weight: n, style: s }));
              var u = a.map(function (e) {
                return {
                  value: e.name,
                  text: t.chartTranslator.translate(e.name),
                };
              });
              this.weightStyleSelect
                .addOptions(u)
                .setInputWidth("flex")
                .setValue(l.name)
                .onValueChange(function (e) {
                  var o = i._.find(a, function (t) {
                    return t.name === e;
                  });
                  t.params.setFont({ weight: o.weight, style: o.style });
                });
            }),
            (e.prototype.initFontColorPicker = function () {
              var t = this;
              this.colorPicker
                .setLabel(this.chartTranslator.translate("color"))
                .setInputWidth(45)
                .setValue("" + this.params.initialFont.color)
                .onValueChange(function (e) {
                  return t.params.setFont({ color: e });
                });
            }),
            (e.prototype.destroyActiveComps = function () {
              var t = this;
              this.activeComps.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.destroy = function () {
              this.destroyActiveComps(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div class="ag-font-panel">\n            <ag-group-component ref="fontGroup">\n                <ag-select ref="familySelect"></ag-select>\n                <ag-select ref="weightStyleSelect"></ag-select>\n                <div class="ag-charts-font-size-color">\n                    <ag-select ref="sizeSelect"></ag-select>\n                    <ag-color-picker ref="colorPicker"></ag-color-picker>\n                </div>\n            </ag-group-component>\n        </div>'),
            Au([i.RefSelector("fontGroup")], e.prototype, "fontGroup", void 0),
            Au(
              [i.RefSelector("familySelect")],
              e.prototype,
              "familySelect",
              void 0
            ),
            Au(
              [i.RefSelector("weightStyleSelect")],
              e.prototype,
              "weightStyleSelect",
              void 0
            ),
            Au(
              [i.RefSelector("sizeSelect")],
              e.prototype,
              "sizeSelect",
              void 0
            ),
            Au(
              [i.RefSelector("colorPicker")],
              e.prototype,
              "colorPicker",
              void 0
            ),
            Au(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Au([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        xu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Fu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Nu = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            xu(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                legendGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.initLegendGroup(),
                this.initLegendPosition(),
                this.initLegendPadding(),
                this.initLegendItems(),
                this.initLabelPanel();
            }),
            (e.prototype.initLegendGroup = function () {
              var t = this;
              this.legendGroup
                .setTitle(this.chartTranslator.translate("legend"))
                .hideEnabledCheckbox(!1)
                .setEnabled(
                  this.chartController
                    .getChartProxy()
                    .getChartOption("legend.enabled") || !1
                )
                .toggleGroupExpand(!1)
                .onEnableChange(function (e) {
                  t.chartController
                    .getChartProxy()
                    .setChartOption("legend.enabled", e),
                    t.legendGroup.toggleGroupExpand(!0);
                });
            }),
            (e.prototype.initLegendPosition = function () {
              var t = this,
                e = [
                  i.LegendPosition.Top,
                  i.LegendPosition.Right,
                  i.LegendPosition.Bottom,
                  i.LegendPosition.Left,
                ];
              this.legendPositionSelect
                .setLabel(this.chartTranslator.translate("position"))
                .setLabelWidth("flex")
                .setInputWidth(80)
                .addOptions(
                  e.map(function (e) {
                    return { value: e, text: t.chartTranslator.translate(e) };
                  })
                )
                .setValue(
                  this.chartController
                    .getChartProxy()
                    .getChartOption("legend.position")
                )
                .onValueChange(function (e) {
                  return t.chartController
                    .getChartProxy()
                    .setChartOption("legend.position", e);
                });
            }),
            (e.prototype.initLegendPadding = function () {
              var t = this;
              this.legendPaddingSlider
                .setLabel(this.chartTranslator.translate("spacing"))
                .setValue(
                  this.chartController
                    .getChartProxy()
                    .getChartOption("legend.spacing")
                )
                .setTextFieldWidth(45)
                .setMaxValue(200)
                .onValueChange(function (e) {
                  return t.chartController
                    .getChartProxy()
                    .setChartOption("legend.spacing", e);
                });
            }),
            (e.prototype.initLegendItems = function () {
              var t = this,
                e = function (e, o, n, r) {
                  n.setLabel(t.chartTranslator.translate(o))
                    .setValue(
                      t.chartController
                        .getChartProxy()
                        .getChartOption("legend." + e)
                    )
                    .setMaxValue(r)
                    .setTextFieldWidth(45)
                    .onValueChange(function (o) {
                      return t.chartController
                        .getChartProxy()
                        .setChartOption("legend." + e, o);
                    });
                };
              e("item.marker.size", "markerSize", this.markerSizeSlider, 40),
                e(
                  "item.marker.strokeWidth",
                  "markerStroke",
                  this.markerStrokeSlider,
                  10
                ),
                e(
                  "item.marker.padding",
                  "itemSpacing",
                  this.markerPaddingSlider,
                  20
                ),
                e(
                  "item.paddingX",
                  "layoutHorizontalSpacing",
                  this.itemPaddingXSlider,
                  50
                ),
                e(
                  "item.paddingY",
                  "layoutVerticalSpacing",
                  this.itemPaddingYSlider,
                  50
                );
            }),
            (e.prototype.initLabelPanel = function () {
              var t = this,
                e = this.chartController.getChartProxy(),
                o = {
                  family: e.getChartOption("legend.item.label.fontFamily"),
                  style: e.getChartOption("legend.item.label.fontStyle"),
                  weight: e.getChartOption("legend.item.label.fontWeight"),
                  size: e.getChartOption("legend.item.label.fontSize"),
                  color: e.getChartOption("legend.item.label.color"),
                },
                n = this.createBean(
                  new Du({
                    enabled: !0,
                    suppressEnabledCheckbox: !0,
                    initialFont: o,
                    setFont: function (e) {
                      var o = t.chartController.getChartProxy();
                      e.family &&
                        o.setChartOption(
                          "legend.item.label.fontFamily",
                          e.family
                        ),
                        e.weight &&
                          o.setChartOption(
                            "legend.item.label.fontWeight",
                            e.weight
                          ),
                        e.style &&
                          o.setChartOption(
                            "legend.item.label.fontStyle",
                            e.style
                          ),
                        e.size &&
                          o.setChartOption(
                            "legend.item.label.fontSize",
                            e.size
                          ),
                        e.color &&
                          o.setChartOption("legend.item.label.color", e.color);
                    },
                  })
                );
              this.legendGroup.addItem(n), this.activePanels.push(n);
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="legendGroup">\n                <ag-select ref="legendPositionSelect"></ag-select>\n                <ag-slider ref="legendPaddingSlider"></ag-slider>\n                <ag-slider ref="markerSizeSlider"></ag-slider>\n                <ag-slider ref="markerStrokeSlider"></ag-slider>\n                <ag-slider ref="markerPaddingSlider"></ag-slider>\n                <ag-slider ref="itemPaddingXSlider"></ag-slider>\n                <ag-slider ref="itemPaddingYSlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            Fu(
              [i.RefSelector("legendGroup")],
              e.prototype,
              "legendGroup",
              void 0
            ),
            Fu(
              [i.RefSelector("legendPositionSelect")],
              e.prototype,
              "legendPositionSelect",
              void 0
            ),
            Fu(
              [i.RefSelector("legendPaddingSlider")],
              e.prototype,
              "legendPaddingSlider",
              void 0
            ),
            Fu(
              [i.RefSelector("markerSizeSlider")],
              e.prototype,
              "markerSizeSlider",
              void 0
            ),
            Fu(
              [i.RefSelector("markerStrokeSlider")],
              e.prototype,
              "markerStrokeSlider",
              void 0
            ),
            Fu(
              [i.RefSelector("markerPaddingSlider")],
              e.prototype,
              "markerPaddingSlider",
              void 0
            ),
            Fu(
              [i.RefSelector("itemPaddingXSlider")],
              e.prototype,
              "itemPaddingXSlider",
              void 0
            ),
            Fu(
              [i.RefSelector("itemPaddingYSlider")],
              e.prototype,
              "itemPaddingYSlider",
              void 0
            ),
            Fu(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Fu([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Mu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Iu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Lu = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.chartController = e), o;
          }
          return (
            Mu(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                shadowGroup: {
                  cssIdentifier: "charts-format-sub-level",
                  direction: "vertical",
                  suppressOpenCloseIcons: !0,
                },
              }),
                this.shadowBlurSlider.setTextFieldWidth(45),
                this.shadowXOffsetSlider.setTextFieldWidth(45),
                this.shadowYOffsetSlider.setTextFieldWidth(45),
                this.initSeriesShadow();
            }),
            (e.prototype.initSeriesShadow = function () {
              var t = this;
              this.shadowGroup
                .setTitle(this.chartTranslator.translate("shadow"))
                .setEnabled(
                  this.chartController.getChartProxy().getShadowEnabled()
                )
                .hideOpenCloseIcons(!0)
                .hideEnabledCheckbox(!1)
                .onEnableChange(function (e) {
                  return t.chartController
                    .getChartProxy()
                    .setShadowProperty("enabled", e);
                }),
                this.shadowColorPicker
                  .setLabel(this.chartTranslator.translate("color"))
                  .setLabelWidth("flex")
                  .setInputWidth(45)
                  .setValue("rgba(0,0,0,0.5)")
                  .onValueChange(function (e) {
                    return t.chartController
                      .getChartProxy()
                      .setShadowProperty("color", e);
                  });
              var e = function (e, o, n, r) {
                e.setLabel(t.chartTranslator.translate(o))
                  .setValue(
                    t.chartController.getChartProxy().getShadowProperty(o)
                  )
                  .setMinValue(n)
                  .setMaxValue(r)
                  .onValueChange(function (e) {
                    return t.chartController
                      .getChartProxy()
                      .setShadowProperty(o, e);
                  });
              };
              e(this.shadowBlurSlider, "blur", 0, 20),
                e(this.shadowXOffsetSlider, "xOffset", -10, 10),
                e(this.shadowYOffsetSlider, "yOffset", -10, 10);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="shadowGroup">\n                <ag-color-picker ref="shadowColorPicker"></ag-color-picker>\n                <ag-slider ref="shadowBlurSlider"></ag-slider>\n                <ag-slider ref="shadowXOffsetSlider"></ag-slider>\n                <ag-slider ref="shadowYOffsetSlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            Iu(
              [i.RefSelector("shadowGroup")],
              e.prototype,
              "shadowGroup",
              void 0
            ),
            Iu(
              [i.RefSelector("shadowColorPicker")],
              e.prototype,
              "shadowColorPicker",
              void 0
            ),
            Iu(
              [i.RefSelector("shadowBlurSlider")],
              e.prototype,
              "shadowBlurSlider",
              void 0
            ),
            Iu(
              [i.RefSelector("shadowXOffsetSlider")],
              e.prototype,
              "shadowXOffsetSlider",
              void 0
            ),
            Iu(
              [i.RefSelector("shadowYOffsetSlider")],
              e.prototype,
              "shadowYOffsetSlider",
              void 0
            ),
            Iu(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Iu([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component);
      function Gu(t, e, o) {
        t.setLabel(e.translate("strokeOpacity"))
          .setStep(0.05)
          .setMaxValue(1)
          .setTextFieldWidth(45)
          .setValue(o.getSeriesOption("stroke.opacity") || "1")
          .onValueChange(function (t) {
            return o.setSeriesOption("stroke.opacity", t);
          });
      }
      function ku(t, e, o) {
        t.setLabel(e.translate("fillOpacity"))
          .setStep(0.05)
          .setMaxValue(1)
          .setTextFieldWidth(45)
          .setValue(o.getSeriesOption("fill.opacity") || "1")
          .onValueChange(function (t) {
            return o.setSeriesOption("fill.opacity", t);
          });
      }
      function Vu(t, e) {
        var o = {
          family: e.getSeriesOption("label.fontFamily"),
          style: e.getSeriesOption("label.fontStyle"),
          weight: e.getSeriesOption("label.fontWeight"),
          size: e.getSeriesOption("label.fontSize"),
          color: e.getSeriesOption("label.color"),
        };
        return {
          name: t.translate("labels"),
          enabled: e.getSeriesOption("label.enabled") || !1,
          setEnabled: function (t) {
            return e.setSeriesOption("label.enabled", t);
          },
          suppressEnabledCheckbox: !1,
          initialFont: o,
          setFont: function (t) {
            t.family && e.setSeriesOption("label.fontFamily", t.family),
              t.weight && e.setSeriesOption("label.fontWeight", t.weight),
              t.style && e.setSeriesOption("label.fontStyle", t.style),
              t.size && e.setSeriesOption("label.fontSize", t.size),
              t.color && e.setSeriesOption("label.color", t.color);
          },
        };
      }
      var Wu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Hu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Bu = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            Wu(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                seriesGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.seriesGroup
                  .setTitle(this.chartTranslator.translate("series"))
                  .toggleGroupExpand(!1)
                  .hideEnabledCheckbox(!0),
                this.initSeriesTooltips(),
                this.initSeriesStrokeWidth(),
                this.initSeriesLineDash(),
                this.initOpacity(),
                this.initLabelPanel(),
                this.initShadowPanel();
            }),
            (e.prototype.initSeriesTooltips = function () {
              var t = this;
              this.seriesTooltipsToggle
                .setLabel(this.chartTranslator.translate("tooltips"))
                .setLabelAlignment("left")
                .setLabelWidth("flex")
                .setInputWidth(45)
                .setValue(
                  this.getChartProxy().getSeriesOption("tooltip.enabled") || !1
                )
                .onValueChange(function (e) {
                  return t
                    .getChartProxy()
                    .setSeriesOption("tooltip.enabled", e);
                });
            }),
            (e.prototype.initSeriesStrokeWidth = function () {
              var t = this;
              this.seriesStrokeWidthSlider
                .setLabel(this.chartTranslator.translate("strokeWidth"))
                .setMaxValue(10)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("stroke.width"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("stroke.width", e);
                });
            }),
            (e.prototype.initSeriesLineDash = function () {
              var t = this;
              this.seriesLineDashSlider
                .setLabel(this.chartTranslator.translate("lineDash"))
                .setMaxValue(30)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("lineDash"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("lineDash", [e]);
                });
            }),
            (e.prototype.initOpacity = function () {
              Gu(
                this.seriesLineOpacitySlider,
                this.chartTranslator,
                this.getChartProxy()
              ),
                ku(
                  this.seriesFillOpacitySlider,
                  this.chartTranslator,
                  this.getChartProxy()
                );
            }),
            (e.prototype.initLabelPanel = function () {
              var t = Vu(this.chartTranslator, this.getChartProxy()),
                e = this.createBean(new Du(t));
              this.activePanels.push(e), this.seriesGroup.addItem(e);
            }),
            (e.prototype.initShadowPanel = function () {
              var t = this.createBean(new Lu(this.chartController));
              this.seriesGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartController.getChartProxy();
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="seriesGroup">\n                <ag-toggle-button ref="seriesTooltipsToggle"></ag-toggle-button>\n                <ag-slider ref="seriesStrokeWidthSlider"></ag-slider>\n                <ag-slider ref="seriesLineDashSlider"></ag-slider>\n                <ag-slider ref="seriesLineOpacitySlider"></ag-slider>\n                <ag-slider ref="seriesFillOpacitySlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            Hu(
              [i.RefSelector("seriesGroup")],
              e.prototype,
              "seriesGroup",
              void 0
            ),
            Hu(
              [i.RefSelector("seriesTooltipsToggle")],
              e.prototype,
              "seriesTooltipsToggle",
              void 0
            ),
            Hu(
              [i.RefSelector("seriesStrokeWidthSlider")],
              e.prototype,
              "seriesStrokeWidthSlider",
              void 0
            ),
            Hu(
              [i.RefSelector("seriesLineDashSlider")],
              e.prototype,
              "seriesLineDashSlider",
              void 0
            ),
            Hu(
              [i.RefSelector("seriesLineOpacitySlider")],
              e.prototype,
              "seriesLineOpacitySlider",
              void 0
            ),
            Hu(
              [i.RefSelector("seriesFillOpacitySlider")],
              e.prototype,
              "seriesFillOpacitySlider",
              void 0
            ),
            Hu(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Hu([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        ju = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Uu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        zu = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.chartController = e), o;
          }
          return (
            ju(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                axisTicksGroup: {
                  cssIdentifier: "charts-format-sub-level",
                  direction: "vertical",
                  suppressOpenCloseIcons: !0,
                },
              }),
                this.initAxisTicks();
            }),
            (e.prototype.initAxisTicks = function () {
              var t = this;
              this.axisTicksGroup
                .setTitle(this.chartTranslator.translate("ticks"))
                .hideOpenCloseIcons(!0)
                .hideEnabledCheckbox(!0),
                this.axisTicksColorPicker
                  .setLabel(this.chartTranslator.translate("color"))
                  .setLabelWidth("flex")
                  .setInputWidth(45)
                  .setValue(this.getChartProxy().getAxisProperty("tick.color"))
                  .onValueChange(function (e) {
                    return t.getChartProxy().setAxisProperty("tick.color", e);
                  });
              var e = function (e, o, n, r) {
                o.setLabel(n)
                  .setValue(t.getChartProxy().getAxisProperty(e))
                  .setMaxValue(r)
                  .setTextFieldWidth(45)
                  .onValueChange(function (o) {
                    return t.getChartProxy().setAxisProperty(e, o);
                  });
              };
              e(
                "tick.width",
                this.axisTicksWidthSlider,
                this.chartTranslator.translate("width"),
                10
              ),
                e(
                  "tick.size",
                  this.axisTicksSizeSlider,
                  this.chartTranslator.translate("length"),
                  30
                );
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartController.getChartProxy();
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="axisTicksGroup">\n                <ag-color-picker ref="axisTicksColorPicker"></ag-color-picker>\n                <ag-slider ref="axisTicksWidthSlider"></ag-slider>\n                <ag-slider ref="axisTicksSizeSlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            Uu(
              [i.RefSelector("axisTicksGroup")],
              e.prototype,
              "axisTicksGroup",
              void 0
            ),
            Uu(
              [i.RefSelector("axisTicksColorPicker")],
              e.prototype,
              "axisTicksColorPicker",
              void 0
            ),
            Uu(
              [i.RefSelector("axisTicksWidthSlider")],
              e.prototype,
              "axisTicksWidthSlider",
              void 0
            ),
            Uu(
              [i.RefSelector("axisTicksSizeSlider")],
              e.prototype,
              "axisTicksSizeSlider",
              void 0
            ),
            Uu(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Uu([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Ku = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Yu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Xu = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            Ku(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                axisGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.initAxis(),
                this.initAxisTicks(),
                this.initAxisLabels();
            }),
            (e.prototype.initAxis = function () {
              var t = this,
                e = this.chartTranslator;
              if (
                (this.axisGroup
                  .setTitle(e.translate("axis"))
                  .toggleGroupExpand(!1)
                  .hideEnabledCheckbox(!0),
                this.axisColorInput
                  .setLabel(e.translate("color"))
                  .setLabelWidth("flex")
                  .setInputWidth(45)
                  .setValue(this.getChartProxy().getAxisProperty("line.color"))
                  .onValueChange(function (e) {
                    return t.getChartProxy().setAxisProperty("line.color", e);
                  }),
                this.axisLineWidthSlider
                  .setLabel(e.translate("thickness"))
                  .setMaxValue(10)
                  .setTextFieldWidth(45)
                  .setValue(this.getChartProxy().getAxisProperty("line.width"))
                  .onValueChange(function (e) {
                    return t.getChartProxy().setAxisProperty("line.width", e);
                  }),
                i._.includes(
                  ["line", "scatter", "bubble"],
                  this.chartController.getChartType()
                ) && !this.chartController.isGrouping())
              ) {
                var o = [{ value: "", text: e.translate("automatic") }];
                ["category", "time", "number"].forEach(function (t) {
                  o.push({ value: t, text: e.translate(t) });
                }),
                  this.xAxisTypeSelect
                    .setLabel(e.translate("xType"))
                    .setLabelWidth("flex")
                    .addOptions(o)
                    .setValue(
                      this.getChartProxy().getChartOption("xAxis.type") || ""
                    )
                    .onValueChange(function (e) {
                      t
                        .getChartProxy()
                        .setChartOption(
                          "xAxis.type",
                          "string" == typeof e && e.length && e
                        ),
                        t.chartController.updateForDataChange();
                    });
              } else this.xAxisTypeSelect.setDisplayed(!1);
            }),
            (e.prototype.initAxisTicks = function () {
              var t = this.createBean(new zu(this.chartController));
              this.axisGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.initAxisLabels = function () {
              var t = this,
                e = this.getChartProxy(),
                o = {
                  family: e.getAxisProperty("label.fontFamily"),
                  style: e.getAxisProperty("label.fontStyle"),
                  weight: e.getAxisProperty("label.fontWeight"),
                  size: e.getAxisProperty("label.fontSize"),
                  color: e.getAxisProperty("label.color"),
                },
                n = this.createBean(
                  new Du({
                    enabled: !0,
                    suppressEnabledCheckbox: !0,
                    initialFont: o,
                    setFont: function (e) {
                      var o = t.getChartProxy();
                      e.family &&
                        o.setAxisProperty("label.fontFamily", e.family),
                        e.weight &&
                          o.setAxisProperty("label.fontWeight", e.weight),
                        e.style &&
                          o.setAxisProperty("label.fontStyle", e.style),
                        e.size && o.setAxisProperty("label.fontSize", e.size),
                        e.color && o.setAxisProperty("label.color", e.color),
                        o.getChart().performLayout();
                    },
                  })
                );
              this.axisGroup.addItem(n),
                this.activePanels.push(n),
                this.addAdditionalLabelComps(n);
            }),
            (e.prototype.addAdditionalLabelComps = function (t) {
              var e = this,
                o = function (o, n, r) {
                  var s = e.createBean(
                    new i.AgAngleSelect()
                      .setLabel(o)
                      .setLabelWidth("flex")
                      .setValue(n || 0)
                      .onValueChange(r)
                  );
                  t.addCompToPanel(s);
                },
                n = String.fromCharCode(176),
                r = function (t) {
                  return function (o) {
                    var n = e.getChartProxy().getChart(),
                      r = br(n.axes, function (e) {
                        return e.position === t;
                      });
                    r && ((r.label.rotation = o), n.performLayout());
                  };
                },
                s = this.chartTranslator.translate("xRotation") + " " + n,
                a = this.chartTranslator.translate("yRotation") + " " + n;
              o(
                s,
                this.getChartProxy().getChartOption("xAxis.label.rotation"),
                r(ur.Bottom)
              ),
                o(
                  a,
                  this.getChartProxy().getChartOption("yAxis.label.rotation"),
                  r(ur.Left)
                );
              var l = this.createBean(new i.AgSlider());
              l
                .setLabel(this.chartTranslator.translate("padding"))
                .setValue(this.getChartProxy().getAxisProperty("label.padding"))
                .setMaxValue(30)
                .setTextFieldWidth(45)
                .onValueChange(function (t) {
                  return e.getChartProxy().setAxisProperty("label.padding", t);
                }),
                t.addCompToPanel(l);
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartController.getChartProxy();
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="axisGroup">\n                <ag-color-picker ref="axisColorInput"></ag-color-picker>\n                <ag-slider ref="axisLineWidthSlider"></ag-slider>\n                <ag-select ref="xAxisTypeSelect"></ag-select>\n            </ag-group-component>\n        </div>'),
            Yu([i.RefSelector("axisGroup")], e.prototype, "axisGroup", void 0),
            Yu(
              [i.RefSelector("axisColorInput")],
              e.prototype,
              "axisColorInput",
              void 0
            ),
            Yu(
              [i.RefSelector("axisLineWidthSlider")],
              e.prototype,
              "axisLineWidthSlider",
              void 0
            ),
            Yu(
              [i.RefSelector("xAxisTypeSelect")],
              e.prototype,
              "xAxisTypeSelect",
              void 0
            ),
            Yu(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Yu([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        qu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Qu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Zu = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            qu(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                navigatorGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.initNavigator();
            }),
            (e.prototype.initNavigator = function () {
              var t = this,
                e = this.chartTranslator;
              this.navigatorGroup
                .setTitle(e.translate("navigator"))
                .toggleGroupExpand(!1)
                .hideEnabledCheckbox(!1)
                .setEnabled(
                  this.getChartProxy().getChartOption("navigator.enabled") || !1
                )
                .onEnableChange(function (e) {
                  t.getChartProxy().setChartOption("navigator.enabled", e),
                    t.navigatorGroup.toggleGroupExpand(!0);
                }),
                this.navigatorHeightSlider
                  .setLabel(e.translate("height"))
                  .setMinValue(10)
                  .setMaxValue(60)
                  .setTextFieldWidth(45)
                  .setValue(
                    String(
                      this.getChartProxy().getChartOption("navigator.height") ||
                        "30"
                    )
                  )
                  .onValueChange(function (e) {
                    return t
                      .getChartProxy()
                      .setChartOption("navigator.height", e);
                  });
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartController.getChartProxy();
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="navigatorGroup">\n                <ag-slider ref="navigatorHeightSlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            Qu(
              [i.RefSelector("navigatorGroup")],
              e.prototype,
              "navigatorGroup",
              void 0
            ),
            Qu(
              [i.RefSelector("navigatorHeightSlider")],
              e.prototype,
              "navigatorHeightSlider",
              void 0
            ),
            Qu(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Qu([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component);
      function $u(t, e) {
        return !1 !== e.clone && e.isMergeableObject(t)
          ? np(
              (function (t) {
                return Array.isArray(t) ? [] : {};
              })(t),
              t,
              e
            )
          : t;
      }
      function Ju(t, e, o) {
        return t.concat(e).map(function (t) {
          return $u(t, o);
        });
      }
      function tp(t) {
        return Object.keys(t).concat(
          (function (t) {
            return Object.getOwnPropertySymbols
              ? Object.getOwnPropertySymbols(t).filter(function (e) {
                  return t.propertyIsEnumerable(e);
                })
              : [];
          })(t)
        );
      }
      function ep(t, e) {
        try {
          return e in t;
        } catch (o) {
          return !1;
        }
      }
      function op(t) {
        return (
          (function (t) {
            return !!t && "object" == typeof t;
          })(t) &&
          !(function (t) {
            var e = Object.prototype.toString.call(t);
            return "[object RegExp]" === e || "[object Date]" === e;
          })(t)
        );
      }
      function np(t, e, o) {
        ((o = o || {}).arrayMerge = o.arrayMerge || Ju),
          (o.isMergeableObject = o.isMergeableObject || op),
          (o.cloneUnlessOtherwiseSpecified = $u);
        var n = Array.isArray(e);
        return n === Array.isArray(t)
          ? n
            ? o.arrayMerge(t, e, o)
            : (function (t, e, o) {
                var n = {};
                return (
                  o.isMergeableObject(t) &&
                    tp(t).forEach(function (e) {
                      n[e] = $u(t[e], o);
                    }),
                  tp(e).forEach(function (r) {
                    (function (t, e) {
                      return (
                        ep(t, e) &&
                        !(
                          Object.hasOwnProperty.call(t, e) &&
                          Object.propertyIsEnumerable.call(t, e)
                        )
                      );
                    })(t, r) ||
                      (n[r] =
                        ep(t, r) && o.isMergeableObject(e[r])
                          ? (function (t, e) {
                              if (!e.customMerge) return np;
                              var o = e.customMerge(t);
                              return "function" == typeof o ? o : np;
                            })(r, o)(t[r], e[r], o)
                          : $u(e[r], o));
                  }),
                  n
                );
              })(t, e, o)
          : $u(e, o);
      }
      var rp,
        ip = function () {
          return (ip =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        sp = (function () {
          function t(t) {
            var e = this;
            (this.chartProxyParams = t),
              (this.isDarkTheme = function () {
                return e.chartProxyParams.isDarkTheme();
              }),
              (this.getFontColor = function () {
                return e.isDarkTheme()
                  ? "rgb(221, 221, 221)"
                  : "rgb(87, 87, 87)";
              }),
              (this.getAxisGridColor = function () {
                return e.isDarkTheme()
                  ? "rgb(100, 100, 100)"
                  : "rgb(219, 219, 219)";
              }),
              (this.getBackgroundColor = function () {
                return e.isDarkTheme() ? "#2d3436" : "white";
              }),
              (this.getChartPaddingOption = function (t) {
                return e.chartOptions.padding
                  ? "" + e.chartOptions.padding[t]
                  : "";
              }),
              (this.getShadowEnabled = function () {
                return !!e.getShadowProperty("enabled");
              }),
              (this.chartId = t.chartId),
              (this.chartType = t.chartType),
              (this.eventService = t.eventService),
              (this.gridApi = t.gridApi),
              (this.columnApi = t.columnApi),
              (this.crossFiltering = t.crossFiltering),
              (this.crossFilterCallback = t.crossFilterCallback);
          }
          return (
            (t.prototype.recreateChart = function (t) {
              var e = this;
              this.chart && this.destroyChart(),
                (this.chart = this.createChart(t)),
                this.crossFiltering &&
                  this.chart.addEventListener("click", function (t) {
                    return e.crossFilterCallback(t, !0);
                  });
            }),
            (t.prototype.getChart = function () {
              return this.chart;
            }),
            (t.prototype.downloadChart = function () {
              var t = this.chart;
              t.scene.download(t.title ? t.title.text : "chart");
            }),
            (t.prototype.getChartImageDataURL = function (t) {
              return this.chart.scene.getDataURL(t);
            }),
            (t.prototype.initChartOptions = function () {
              this.initChartTheme(),
                (this.chartOptions = this.getDefaultOptionsFromTheme(
                  this.chartTheme
                ));
              var t = this.chartProxyParams.processChartOptions;
              if (t) {
                var e = np({}, this.chartOptions),
                  o = t({ type: this.chartType, options: this.chartOptions }),
                  n = this.getDefaultOptions();
                i._.mergeDeep(n, o, !1),
                  this.overridePalette(e, n),
                  (this.chartOptions = n);
              }
            }),
            (t.prototype.paletteOverridden = function (t, e) {
              return (
                !i._.areEqual(
                  t.seriesDefaults.fill.colors,
                  e.seriesDefaults.fill.colors
                ) ||
                !i._.areEqual(
                  t.seriesDefaults.stroke.colors,
                  e.seriesDefaults.stroke.colors
                )
              );
            }),
            (t.prototype.initChartTheme = function () {
              var t = this.getSelectedTheme(),
                e = this.isStockTheme(t),
                o = this.chartProxyParams.getGridOptionsChartThemeOverrides(),
                n = this.chartProxyParams.apiChartThemeOverrides;
              if (o || n) {
                var r = { overrides: this.mergeThemeOverrides(o, n) },
                  i = e
                    ? ip({ baseTheme: t }, r)
                    : np(this.lookupCustomChartTheme(t), r);
                this.chartTheme = au(i);
              } else
                this.chartTheme = au(e ? t : this.lookupCustomChartTheme(t));
            }),
            (t.prototype.lookupCustomChartTheme = function (t) {
              var e = this.chartProxyParams.customChartThemes,
                o = e && e[t];
              return (
                o ||
                  console.warn(
                    "AG Grid: no stock theme exists with the name '" +
                      t +
                      "' and no custom chart theme with that name was supplied to 'customChartThemes'"
                  ),
                o
              );
            }),
            (t.prototype.isStockTheme = function (t) {
              return i._.includes(Object.keys(su), t);
            }),
            (t.prototype.mergeThemeOverrides = function (t, e) {
              return t ? (e ? np(t, e) : t) : e;
            }),
            (t.prototype.integratedToStandaloneChartType = function (t) {
              switch (t) {
                case i.ChartType.GroupedBar:
                case i.ChartType.StackedBar:
                case i.ChartType.NormalizedBar:
                  return "bar";
                case i.ChartType.GroupedColumn:
                case i.ChartType.StackedColumn:
                case i.ChartType.NormalizedColumn:
                  return "column";
                case i.ChartType.Line:
                  return "line";
                case i.ChartType.Area:
                case i.ChartType.StackedArea:
                case i.ChartType.NormalizedArea:
                  return "area";
                case i.ChartType.Scatter:
                case i.ChartType.Bubble:
                  return "scatter";
                case i.ChartType.Histogram:
                  return "histogram";
                case i.ChartType.Pie:
                case i.ChartType.Doughnut:
                  return "pie";
                default:
                  return "cartesian";
              }
            }),
            (t.prototype.overridePalette = function (t, e) {
              if (
                this.chartProxyParams.allowPaletteOverride &&
                this.paletteOverridden(t, e)
              ) {
                var o = e.seriesDefaults,
                  n = o.fill.colors,
                  r = o.stroke.colors;
                if (n || r) {
                  var s = i._.includes(n, void 0),
                    a = i._.includes(r, void 0);
                  if (s || a) return;
                  this.customPalette = { fills: n, strokes: r };
                }
              }
            }),
            (t.prototype.getStandaloneChartType = function () {
              return this.integratedToStandaloneChartType(this.chartType);
            }),
            (t.prototype.getDefaultOptionsFromTheme = function (t) {
              var e = {},
                o = this.getStandaloneChartType();
              return (
                (e.title = t.getConfig(o + ".title")),
                (e.subtitle = t.getConfig(o + ".subtitle")),
                (e.background = t.getConfig(o + ".background")),
                (e.legend = t.getConfig(o + ".legend")),
                (e.navigator = t.getConfig(o + ".navigator")),
                (e.tooltip = {
                  enabled: t.getConfig(o + ".tooltip.enabled"),
                  tracking: t.getConfig(o + ".tooltip.tracking"),
                  class: t.getConfig(o + ".tooltip.class"),
                  delay: t.getConfig(o + ".tooltip.delay"),
                }),
                (e.listeners = t.getConfig(o + ".listeners")),
                (e.padding = t.getConfig(o + ".padding")),
                e
              );
            }),
            (t.prototype.getSelectedTheme = function () {
              var t = this.chartProxyParams.getChartThemeName(),
                e = this.chartProxyParams.getChartThemes();
              return i._.includes(e, t) || (t = e[0]), t;
            }),
            (t.prototype.getChartOptions = function () {
              return this.chartOptions;
            }),
            (t.prototype.getCustomPalette = function () {
              return this.customPalette;
            }),
            (t.prototype.getChartOption = function (t) {
              return i._.get(this.chartOptions, t, void 0);
            }),
            (t.prototype.setChartOption = function (t, e) {
              i._.get(this.chartOptions, t, void 0) !== e &&
                (i._.set(this.chartOptions, t, e),
                i._.set(
                  this.chart,
                  {
                    "legend.item.marker.strokeWidth": "legend.strokeWidth",
                    "legend.item.marker.size": "legend.markerSize",
                    "legend.item.marker.padding": "legend.itemSpacing",
                    "legend.item.label.fontFamily": "legend.fontFamily",
                    "legend.item.label.fontStyle": "legend.fontStyle",
                    "legend.item.label.fontWeight": "legend.fontWeight",
                    "legend.item.label.fontSize": "legend.fontSize",
                    "legend.item.label.color": "legend.color",
                    "legend.item.paddingX": "legend.layoutHorizontalSpacing",
                    "legend.item.paddingY": "legend.layoutVerticalSpacing",
                  }[t] || t,
                  e
                ),
                this.raiseChartOptionsChangedEvent());
            }),
            (t.prototype.getSeriesOption = function (t) {
              return i._.get(this.chartOptions.seriesDefaults, t, void 0);
            }),
            (t.prototype.setSeriesOption = function (t, e) {
              if (i._.get(this.chartOptions.seriesDefaults, t, void 0) !== e) {
                i._.set(this.chartOptions.seriesDefaults, t, e);
                var o = {
                  "stroke.width": "strokeWidth",
                  "stroke.opacity": "strokeOpacity",
                  "fill.opacity": "fillOpacity",
                  "callout.colors": "calloutColors",
                };
                this.chart.series.forEach(function (n) {
                  return i._.set(n, o[t] || t, e);
                }),
                  this.raiseChartOptionsChangedEvent();
              }
            }),
            (t.prototype.setTitleOption = function (t, e) {
              i._.get(this.chartOptions.title, t, void 0) !== e &&
                ((this.chartOptions.title[t] = e),
                this.chart.title || (this.chart.title = {}),
                (this.chart.title[t] = e),
                "text" === t && this.setTitleOption("enabled", i._.exists(e)),
                this.raiseChartOptionsChangedEvent());
            }),
            (t.prototype.getTitleOption = function (t) {
              return this.chartOptions.title[t];
            }),
            (t.prototype.setChartPaddingOption = function (t, e) {
              var o = this.chartOptions.padding;
              i._.get(o, t, void 0) !== e &&
                (o ||
                  ((o = this.chartOptions.padding =
                    { top: 0, right: 0, bottom: 0, left: 0 }),
                  (this.chart.padding = new Qo(0))),
                (o[t] = e),
                (this.chart.padding[t] = e),
                this.chart.performLayout(),
                this.raiseChartOptionsChangedEvent());
            }),
            (t.prototype.getShadowProperty = function (t) {
              var e = this.chartOptions.seriesDefaults;
              return e.shadow ? e.shadow[t] : "";
            }),
            (t.prototype.setShadowProperty = function (t, e) {
              var o = this.chartOptions.seriesDefaults;
              i._.get(o.shadow, t, void 0) !== e &&
                (o.shadow ||
                  (o.shadow = {
                    enabled: !1,
                    blur: 0,
                    xOffset: 0,
                    yOffset: 0,
                    color: "rgba(0,0,0,0.5)",
                  }),
                (o.shadow[t] = e),
                this.getChart().series.forEach(function (o) {
                  if (!o.shadow) {
                    var n = new Aa();
                    (n.enabled = !1),
                      (n.blur = 0),
                      (n.xOffset = 0),
                      (n.yOffset = 0),
                      (n.color = "rgba(0,0,0,0.5)"),
                      (o.shadow = n);
                  }
                  o.shadow[t] = e;
                }),
                this.raiseChartOptionsChangedEvent());
            }),
            (t.prototype.raiseChartOptionsChangedEvent = function () {
              var t = Object.freeze({
                type: i.Events.EVENT_CHART_OPTIONS_CHANGED,
                chartId: this.chartId,
                chartType: this.chartType,
                chartThemeName: this.chartProxyParams.getChartThemeName(),
                chartOptions: this.chartOptions,
                api: this.gridApi,
                columnApi: this.columnApi,
              });
              this.eventService.dispatchEvent(t);
            }),
            (t.prototype.getDefaultFontOptions = function () {
              return {
                fontStyle: "normal",
                fontWeight: "normal",
                fontSize: 12,
                fontFamily: "Verdana, sans-serif",
                color: this.getFontColor(),
              };
            }),
            (t.prototype.getDefaultDropShadowOptions = function () {
              return {
                enabled: !1,
                blur: 5,
                xOffset: 3,
                yOffset: 3,
                color: "rgba(0, 0, 0, 0.5)",
              };
            }),
            (t.prototype.getPredefinedPalette = function () {
              return this.chartTheme.palette;
            }),
            (t.prototype.getPalette = function () {
              return this.customPalette || this.chartTheme.palette;
            }),
            (t.prototype.getDefaultChartOptions = function () {
              return {
                background: {},
                padding: {},
                title: {},
                subtitle: {},
                legend: {},
                navigator: {},
                seriesDefaults: {},
                listeners: {},
              };
            }),
            (t.prototype.transformData = function (t, e) {
              return this.chart.axes.filter(function (t) {
                return t instanceof wr;
              }).length < 1
                ? t
                : t.map(function (t, o) {
                    var n = t[e],
                      r = n && n.toString ? n.toString() : "",
                      i = ip({}, t);
                    return (
                      (i[e] = {
                        id: o,
                        value: n,
                        toString: function () {
                          return r;
                        },
                      }),
                      i
                    );
                  });
            }),
            (t.prototype.hexToRGBA = function (t, e) {
              var o = parseInt(t.slice(1, 3), 16),
                n = parseInt(t.slice(3, 5), 16),
                r = parseInt(t.slice(5, 7), 16);
              return e
                ? "rgba(" + o + ", " + n + ", " + r + ", " + e + ")"
                : "rgba(" + o + ", " + n + ", " + r + ")";
            }),
            (t.prototype.destroy = function () {
              this.destroyChart();
            }),
            (t.prototype.destroyChart = function () {
              this.chart && (this.chart.destroy(), (this.chart = void 0));
            }),
            t
          );
        })(),
        ap = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        lp = function () {
          return (lp =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        up = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return (
              (o.axisTypeToClassMap = {
                number: mr,
                category: wr,
                groupedCategory: Gr,
                time: Ti,
              }),
              o
            );
          }
          return (
            ap(e, t),
            (e.prototype.getDefaultOptionsFromTheme = function (e) {
              var o,
                n = t.prototype.getDefaultOptionsFromTheme.call(this, e),
                r = this.getStandaloneChartType(),
                i =
                  "scatter" === r || "histogram" === r ? "number" : "category",
                s = "number";
              "bar" === r && ((i = (o = [s, i])[0]), (s = o[1]));
              var a = {},
                l = {};
              return (
                (a = np(a, e.getConfig(r + ".axes." + i))),
                (a = np(a, e.getConfig(r + ".axes." + i + ".bottom"))),
                (l = np(l, e.getConfig(r + ".axes." + s))),
                (l = np(l, e.getConfig(r + ".axes." + s + ".left"))),
                (n.xAxis = a),
                (n.yAxis = l),
                n
              );
            }),
            (e.prototype.getAxisProperty = function (t) {
              return i._.get(this.chartOptions.xAxis, t, void 0);
            }),
            (e.prototype.setAxisProperty = function (t, e) {
              i._.set(this.chartOptions.xAxis, t, e),
                i._.set(this.chartOptions.yAxis, t, e);
              var o = this.chart;
              this.chart.axes.forEach(function (o) {
                return i._.set(o, t, e);
              }),
                o.performLayout(),
                this.raiseChartOptionsChangedEvent();
            }),
            (e.prototype.updateLabelRotation = function (t, e, o) {
              void 0 === e && (e = !1), void 0 === o && (o = "category");
              var n,
                r = 0,
                s = e ? "yAxis" : "xAxis",
                a = this.chartProxyParams.getGridOptionsChartThemeOverrides(),
                l = e ? ur.Left : ur.Bottom,
                u = this.getStandaloneChartType(),
                p = i._.get(a, "common.axes." + o + ".label.rotation", void 0),
                c = i._.get(
                  a,
                  "cartesian.axes." + o + ".label.rotation",
                  void 0
                ),
                d = i._.get(
                  a,
                  "cartesian.axes." + o + "." + l + ".label.rotation",
                  void 0
                ),
                h = i._.get(a, u + ".axes." + o + ".label.rotation", void 0),
                f = i._.get(
                  a,
                  u + ".axes." + o + "." + l + ".label.rotation",
                  void 0
                );
              if (
                ("number" == typeof f && isFinite(f)
                  ? (n = f)
                  : "number" == typeof h && isFinite(h)
                  ? (n = h)
                  : "number" == typeof d && isFinite(d)
                  ? (n = d)
                  : "number" == typeof c && isFinite(c)
                  ? (n = c)
                  : "number" == typeof p && isFinite(p) && (n = p),
                t !== qo.DEFAULT_CATEGORY && !this.chartProxyParams.grouping)
              ) {
                var g = this.chartOptions[s].label;
                g && (r = void 0 !== n ? n : g.rotation || 335);
              }
              var y = br(this.chart.axes, function (t) {
                return t.position === l;
              });
              y && (y.label.rotation = r);
            }),
            (e.prototype.getDefaultAxisOptions = function () {
              var t = this.getDefaultFontOptions(),
                e = this.getAxisGridColor(),
                o = "rgba(195, 195, 195, 1)";
              return {
                title: lp(lp({}, t), { enabled: !1, fontSize: 14 }),
                line: { color: o, width: 1 },
                tick: { color: o, size: 6, width: 1 },
                label: lp(lp({}, t), { padding: 5, rotation: 0 }),
                gridStyle: [{ stroke: e, lineDash: [4, 2] }],
              };
            }),
            (e.prototype.getDefaultCartesianChartOptions = function () {
              var t = this.getDefaultChartOptions();
              return (
                (t.xAxis = this.getDefaultAxisOptions()),
                (t.yAxis = this.getDefaultAxisOptions()),
                t
              );
            }),
            (e.prototype.getAxisClass = function (t) {
              return this.axisTypeToClassMap[t];
            }),
            (e.prototype.updateAxes = function (t, e) {
              void 0 === t && (t = "category"), void 0 === e && (e = !1);
              var o = e ? this.getYAxis() : this.getXAxis();
              if (o)
                if (this.chartProxyParams.grouping)
                  o instanceof Gr || this.recreateChart();
                else if (!(o instanceof this.axisTypeToClassMap[t])) {
                  var n = this.chartOptions;
                  e && !n.yAxis.type
                    ? (n = lp(lp({}, n), { yAxis: lp({ type: t }, n.yAxis) }))
                    : e ||
                      n.xAxis.type ||
                      (n = lp(lp({}, n), { xAxis: lp({ type: t }, n.xAxis) })),
                    this.recreateChart(n);
                }
            }),
            (e.prototype.isTimeAxis = function (t) {
              if (t.category && t.category.chartDataType)
                return "time" === t.category.chartDataType;
              var e = t.data[0];
              return (e && e[t.category.id]) instanceof Date;
            }),
            (e.prototype.getXAxisDefaults = function (t, e) {
              if ("time" === t) {
                var o = {},
                  n = this.getStandaloneChartType();
                return (
                  (o = np(o, this.chartTheme.getConfig(n + ".axes.time"))),
                  np(o, this.chartTheme.getConfig(n + ".axes.time.bottom"))
                );
              }
              return e.xAxis;
            }),
            (e.prototype.getXAxis = function () {
              return br(this.chart.axes, function (t) {
                return t.position === ur.Bottom;
              });
            }),
            (e.prototype.getYAxis = function () {
              return br(this.chart.axes, function (t) {
                return t.position === ur.Left;
              });
            }),
            (e.prototype.processDataForCrossFiltering = function (t, e, o) {
              var n = e,
                r = !1;
              return (
                this.crossFiltering &&
                  (t.forEach(function (t) {
                    (t[e + "-total"] = t[e] + t[e + "-filtered-out"]),
                      t[e + "-filtered-out"] > 0 && (r = !0);
                  }),
                  o.getCrossFilteringContext().lastSelectedChartId ===
                    o.chartId && (n = e + "-total")),
                { yKey: n, atLeastOneSelectedPoint: r }
              );
            }),
            (e.prototype.updateSeriesForCrossFiltering = function (
              t,
              e,
              o,
              n,
              r
            ) {
              if (this.crossFiltering) {
                (t.marker.enabled = !0),
                  (t.marker.formatter = function (t) {
                    return {
                      fill: t.highlighted ? "yellow" : t.fill,
                      size: t.highlighted ? 12 : t.datum[e] > 0 ? 8 : 0,
                    };
                  }),
                  (o.tooltip.delay = 500);
                var i =
                  n.getCrossFilteringContext().lastSelectedChartId ===
                    n.chartId && r;
                t instanceof Js && (t.fillOpacity = i ? 0.3 : 1),
                  t instanceof ha && (t.strokeOpacity = i ? 0.3 : 1),
                  t.addEventListener("nodeClick", this.crossFilterCallback);
              }
            }),
            e
          );
        })(sp),
        pp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        cp = function () {
          return (cp =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        dp = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return (
              (o.getMarkersEnabled = function () {
                return !0;
              }),
              o.initChartOptions(),
              o.recreateChart(),
              o
            );
          }
          return (
            pp(e, t),
            (e.prototype.getDefaultOptionsFromTheme = function (e) {
              var o = t.prototype.getDefaultOptionsFromTheme.call(this, e),
                n = e.getConfig("scatter.series.scatter");
              return (
                (o.seriesDefaults = {
                  tooltip: {
                    enabled: n.tooltip && n.tooltip.enabled,
                    renderer: n.tooltip && n.tooltip.renderer,
                  },
                  fill: { colors: e.palette.fills, opacity: n.fillOpacity },
                  stroke: {
                    colors: e.palette.strokes,
                    opacity: n.strokeOpacity,
                    width: n.strokeWidth,
                  },
                  marker: {
                    enabled: n.marker.enabled,
                    shape: n.marker.shape,
                    size: n.marker.size,
                    strokeWidth: n.marker.strokeWidth,
                  },
                  highlightStyle: n.highlightStyle,
                  listeners: n.listeners,
                  paired: !0,
                }),
                o
              );
            }),
            (e.prototype.createChart = function (t) {
              var e = (t = t || this.chartOptions);
              return (
                (e.autoSize = !0),
                (e.axes = [
                  cp({ type: "number", position: "bottom" }, t.xAxis),
                  cp({ type: "number", position: "left" }, t.yAxis),
                ]),
                pu.create(e, this.chartProxyParams.parentElement)
              );
            }),
            (e.prototype.update = function (t) {
              var e = this;
              if (t.fields.length < 2) this.chart.removeAllSeries();
              else {
                var o = t.fields;
                this.crossFiltering &&
                  o.forEach(function (t) {
                    var e = cp({}, t);
                    (e.colId = t.colId + "-filtered-out"), o.push(e);
                  });
                var n,
                  r = this.chartOptions.seriesDefaults,
                  s = this.getSeriesDefinitions(o, r.paired);
                this.crossFiltering &&
                  (n = this.getCrossFilteringDataDomain(s, t));
                var a = this.chart,
                  l = a.series.reduceRight(function (t, e, o) {
                    return (
                      i._.findIndex(s, function (t) {
                        return (
                          t.xField.colId === e.xKey &&
                          t.yField.colId === e.yKey &&
                          ((!t.sizeField && !e.sizeKey) ||
                            (t.sizeField && t.sizeField.colId === e.sizeKey))
                        );
                      }) === o
                        ? t.set(e.yKey, e)
                        : a.removeSeries(e),
                      t
                    );
                  }, new Map()),
                  u = this.getPalette(),
                  p = u.fills,
                  c = u.strokes;
                if (this.crossFiltering) {
                  var d = [];
                  p.forEach(function (t) {
                    d.push(t), d.push(e.hexToRGBA(t, "0.3"));
                  }),
                    (p = d);
                  var h = [];
                  c.forEach(function (t) {
                    h.push(t), h.push(e.hexToRGBA(t, "0.3"));
                  }),
                    (c = h);
                }
                var f,
                  g =
                    t.category.id === qo.DEFAULT_CATEGORY ? void 0 : t.category;
                s.forEach(function (o, i) {
                  var s = l.get(o.yField.colId),
                    u = cp({}, r.marker);
                  u.type && ((u.shape = u.type), delete u.type);
                  var d =
                    s ||
                    pu.createComponent(
                      cp(cp({}, r), {
                        type: "scatter",
                        fillOpacity: r.fill.opacity,
                        strokeOpacity: r.stroke.opacity,
                        strokeWidth: r.stroke.width,
                        marker: u,
                        tooltip: {
                          enabled: r.tooltip && r.tooltip.enabled,
                          renderer:
                            r.tooltip &&
                            r.tooltip.enabled &&
                            r.tooltip.renderer,
                        },
                      }),
                      "scatter.series"
                    );
                  if (d) {
                    var h = o.xField,
                      y = o.yField,
                      m = o.sizeField;
                    (d.title = y.displayName + " vs " + h.displayName),
                      (d.xKey = h.colId),
                      (d.xName = h.displayName),
                      (d.yKey = y.colId),
                      (d.yName = y.displayName),
                      (d.data = t.data),
                      (d.fill = p[i % p.length]),
                      (d.stroke = c[i % c.length]),
                      m
                        ? ((d.sizeKey = m.colId), (d.sizeName = m.displayName))
                        : (d.sizeKey = d.sizeName = void 0),
                      g
                        ? ((d.labelKey = g.id), (d.labelName = g.name))
                        : (d.labelKey = d.labelName = void 0);
                    var v = y.colId.indexOf("-filtered-out") > -1;
                    e.crossFiltering &&
                      (v ||
                        a.legend.addEventListener("click", function (t) {
                          d.toggleSeriesItem(
                            t.itemId + "-filtered-out",
                            t.enabled
                          );
                        }),
                      n && (d.marker.domain = n),
                      (a.tooltip.delay = 500),
                      v && (d.showInLegend = !1),
                      d.addEventListener("nodeClick", e.crossFilterCallback)),
                      s || a.addSeriesAfter(d, f),
                      (f = d);
                  }
                });
              }
            }),
            (e.prototype.getTooltipsEnabled = function () {
              return (
                null != this.chartOptions.seriesDefaults.tooltip &&
                !!this.chartOptions.seriesDefaults.tooltip.enabled
              );
            }),
            (e.prototype.getDefaultOptions = function () {
              var t = this.chartType === i.ChartType.Bubble,
                e = this.getDefaultCartesianChartOptions();
              return (
                (e.seriesDefaults = cp(cp({}, e.seriesDefaults), {
                  fill: cp(cp({}, e.seriesDefaults.fill), {
                    opacity: t ? 0.7 : 1,
                  }),
                  stroke: cp(cp({}, e.seriesDefaults.stroke), { width: 3 }),
                  marker: {
                    shape: "circle",
                    enabled: !0,
                    size: 6,
                    maxSize: 30,
                    strokeWidth: 1,
                  },
                  tooltip: { enabled: !0 },
                  paired: !0,
                })),
                e
              );
            }),
            (e.prototype.getSeriesDefinitions = function (t, e) {
              if (t.length < 2) return [];
              var o = this.chartType === i.ChartType.Bubble;
              if (e)
                return o
                  ? t
                      .map(function (e, o) {
                        return o % 3 == 0
                          ? { xField: e, yField: t[o + 1], sizeField: t[o + 2] }
                          : null;
                      })
                      .filter(function (t) {
                        return t && t.yField && t.sizeField;
                      })
                  : t
                      .map(function (e, o) {
                        return o % 2 == 0
                          ? { xField: e, yField: t[o + 1] }
                          : null;
                      })
                      .filter(function (t) {
                        return t && t.yField;
                      });
              var n = t[0];
              return o
                ? t
                    .map(function (e, o) {
                      return o % 2 == 1
                        ? { xField: n, yField: e, sizeField: t[o + 1] }
                        : null;
                    })
                    .filter(function (t) {
                      return t && t.sizeField;
                    })
                : t
                    .filter(function (t, e) {
                      return e > 0;
                    })
                    .map(function (t) {
                      return { xField: n, yField: t };
                    });
            }),
            (e.prototype.getCrossFilteringDataDomain = function (t, e) {
              var o;
              if (t[0] && t[0].sizeField) {
                var n = t[0].sizeField.colId,
                  r = [];
                e.data.forEach(function (t) {
                  void 0 !== t[n] && r.push(t[n]),
                    void 0 !== t[n + "-filtered-out"] &&
                      r.push(t[n + "-filtered-out"]);
                }),
                  r.length > 0 &&
                    (o = [Math.min.apply(Math, r), Math.max.apply(Math, r)]);
              }
              return o;
            }),
            e
          );
        })(up),
        hp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        fp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        gp = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.chartController = e), o;
          }
          return (
            hp(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                seriesMarkersGroup: {
                  cssIdentifier: "charts-format-sub-level",
                  direction: "vertical",
                },
              }),
                this.initMarkers();
            }),
            (e.prototype.initMarkers = function () {
              var t = this,
                e = this.chartController.getChartProxy() instanceof dp;
              this.seriesMarkerShapeSelect
                .addOptions([
                  { value: "square", text: "Square" },
                  { value: "circle", text: "Circle" },
                  { value: "cross", text: "Cross" },
                  { value: "diamond", text: "Diamond" },
                  { value: "plus", text: "Plus" },
                  { value: "triangle", text: "Triangle" },
                  { value: "heart", text: "Heart" },
                ])
                .setLabel(this.chartTranslator.translate("shape"))
                .setValue(
                  this.chartController
                    .getChartProxy()
                    .getSeriesOption("marker.shape")
                )
                .onValueChange(function (e) {
                  return t.chartController
                    .getChartProxy()
                    .setSeriesOption("marker.shape", e);
                }),
                this.seriesMarkersGroup
                  .setTitle(this.chartTranslator.translate("markers"))
                  .hideEnabledCheckbox(e)
                  .setEnabled(
                    this.chartController
                      .getChartProxy()
                      .getSeriesOption("marker.enabled") || !1
                  )
                  .hideOpenCloseIcons(!0)
                  .onEnableChange(function (e) {
                    return t.chartController
                      .getChartProxy()
                      .setSeriesOption("marker.enabled", e);
                  });
              var o = function (e, o, n, r) {
                o.setLabel(t.chartTranslator.translate(n))
                  .setValue(
                    t.chartController.getChartProxy().getSeriesOption(e)
                  )
                  .setMaxValue(r)
                  .setTextFieldWidth(45)
                  .onValueChange(function (o) {
                    return t.chartController
                      .getChartProxy()
                      .setSeriesOption(e, o);
                  });
              };
              this.chartController.getChartType() === i.ChartType.Bubble
                ? (o(
                    "marker.maxSize",
                    this.seriesMarkerMinSizeSlider,
                    "maxSize",
                    60
                  ),
                  o("marker.size", this.seriesMarkerSizeSlider, "minSize", 60))
                : (this.seriesMarkerMinSizeSlider.setDisplayed(!1),
                  o("marker.size", this.seriesMarkerSizeSlider, "size", 60)),
                o(
                  "marker.strokeWidth",
                  this.seriesMarkerStrokeWidthSlider,
                  "strokeWidth",
                  10
                );
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="seriesMarkersGroup">\n                <ag-select ref="seriesMarkerShapeSelect"></ag-select>\n                <ag-slider ref="seriesMarkerMinSizeSlider"></ag-slider>\n                <ag-slider ref="seriesMarkerSizeSlider"></ag-slider>\n                <ag-slider ref="seriesMarkerStrokeWidthSlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            fp(
              [i.RefSelector("seriesMarkersGroup")],
              e.prototype,
              "seriesMarkersGroup",
              void 0
            ),
            fp(
              [i.RefSelector("seriesMarkerShapeSelect")],
              e.prototype,
              "seriesMarkerShapeSelect",
              void 0
            ),
            fp(
              [i.RefSelector("seriesMarkerSizeSlider")],
              e.prototype,
              "seriesMarkerSizeSlider",
              void 0
            ),
            fp(
              [i.RefSelector("seriesMarkerMinSizeSlider")],
              e.prototype,
              "seriesMarkerMinSizeSlider",
              void 0
            ),
            fp(
              [i.RefSelector("seriesMarkerStrokeWidthSlider")],
              e.prototype,
              "seriesMarkerStrokeWidthSlider",
              void 0
            ),
            fp(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            fp([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        yp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        mp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        vp = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            yp(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                seriesGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.initSeriesGroup(),
                this.initSeriesTooltips(),
                this.initSeriesLineWidth(),
                this.initSeriesLineDash(),
                this.initMarkersPanel();
            }),
            (e.prototype.initSeriesGroup = function () {
              this.seriesGroup
                .setTitle(this.chartTranslator.translate("series"))
                .toggleGroupExpand(!1)
                .hideEnabledCheckbox(!0);
            }),
            (e.prototype.initSeriesTooltips = function () {
              var t = this;
              this.seriesTooltipsToggle
                .setLabel(this.chartTranslator.translate("tooltips"))
                .setLabelAlignment("left")
                .setLabelWidth("flex")
                .setInputWidth(45)
                .setValue(
                  this.getChartProxy().getSeriesOption("tooltip.enabled") || !1
                )
                .onValueChange(function (e) {
                  return t
                    .getChartProxy()
                    .setSeriesOption("tooltip.enabled", e);
                });
            }),
            (e.prototype.initSeriesLineWidth = function () {
              var t = this;
              this.seriesLineWidthSlider
                .setLabel(this.chartTranslator.translate("lineWidth"))
                .setMaxValue(10)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("stroke.width"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("stroke.width", e);
                });
            }),
            (e.prototype.initSeriesLineDash = function () {
              var t = this;
              this.seriesLineDashSlider
                .setLabel(this.chartTranslator.translate("lineDash"))
                .setMaxValue(30)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("lineDash"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("lineDash", [e]);
                });
            }),
            (e.prototype.initMarkersPanel = function () {
              var t = this.createBean(new gp(this.chartController));
              this.seriesGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartController.getChartProxy();
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="seriesGroup">\n                <ag-toggle-button ref="seriesTooltipsToggle"></ag-toggle-button>\n                <ag-slider ref="seriesLineWidthSlider"></ag-slider>\n                <ag-slider ref="seriesLineDashSlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            mp(
              [i.RefSelector("seriesGroup")],
              e.prototype,
              "seriesGroup",
              void 0
            ),
            mp(
              [i.RefSelector("seriesTooltipsToggle")],
              e.prototype,
              "seriesTooltipsToggle",
              void 0
            ),
            mp(
              [i.RefSelector("seriesLineWidthSlider")],
              e.prototype,
              "seriesLineWidthSlider",
              void 0
            ),
            mp(
              [i.RefSelector("seriesLineDashSlider")],
              e.prototype,
              "seriesLineDashSlider",
              void 0
            ),
            mp(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            mp([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Cp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        bp = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.chartController = e), o;
          }
          return (
            Cp(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                calloutGroup: {
                  cssIdentifier: "charts-format-sub-level",
                  direction: "vertical",
                },
              }),
                this.initCalloutOptions();
            }),
            (e.prototype.initCalloutOptions = function () {
              var t = this;
              this.calloutGroup
                .setTitle(this.chartTranslator.translate("callout"))
                .setEnabled(!0)
                .hideOpenCloseIcons(!0)
                .hideEnabledCheckbox(!0);
              var e = function (e, o, n, r) {
                o.setLabel(t.chartTranslator.translate(n))
                  .setValue(
                    t.chartController.getChartProxy().getSeriesOption(e)
                  )
                  .setMaxValue(r)
                  .setTextFieldWidth(45)
                  .onValueChange(function (o) {
                    return t.chartController
                      .getChartProxy()
                      .setSeriesOption(e, o);
                  });
              };
              e("callout.length", this.calloutLengthSlider, "length", 40),
                e(
                  "callout.strokeWidth",
                  this.calloutStrokeWidthSlider,
                  "strokeWidth",
                  10
                ),
                e("label.offset", this.labelOffsetSlider, "offset", 30);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="calloutGroup">\n                <ag-slider ref="calloutLengthSlider"></ag-slider>\n                <ag-slider ref="calloutStrokeWidthSlider"></ag-slider>\n                <ag-slider ref="labelOffsetSlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            wp(
              [i.RefSelector("calloutGroup")],
              e.prototype,
              "calloutGroup",
              void 0
            ),
            wp(
              [i.RefSelector("calloutLengthSlider")],
              e.prototype,
              "calloutLengthSlider",
              void 0
            ),
            wp(
              [i.RefSelector("calloutStrokeWidthSlider")],
              e.prototype,
              "calloutStrokeWidthSlider",
              void 0
            ),
            wp(
              [i.RefSelector("labelOffsetSlider")],
              e.prototype,
              "labelOffsetSlider",
              void 0
            ),
            wp(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            wp([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Ep = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Sp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Op = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            Ep(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                seriesGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.initGroup(),
                this.initSeriesTooltips(),
                this.initSeriesStrokeWidth(),
                this.initOpacity(),
                this.initLabelPanel(),
                this.initShadowPanel();
            }),
            (e.prototype.initGroup = function () {
              this.seriesGroup
                .setTitle(this.chartTranslator.translate("series"))
                .toggleGroupExpand(!1)
                .hideEnabledCheckbox(!0);
            }),
            (e.prototype.initSeriesTooltips = function () {
              var t = this;
              this.seriesTooltipsToggle
                .setLabel(this.chartTranslator.translate("tooltips"))
                .setLabelAlignment("left")
                .setLabelWidth("flex")
                .setInputWidth(45)
                .setValue(
                  this.getChartProxy().getSeriesOption("tooltip.enabled") || !1
                )
                .onValueChange(function (e) {
                  return t
                    .getChartProxy()
                    .setSeriesOption("tooltip.enabled", e);
                });
            }),
            (e.prototype.initSeriesStrokeWidth = function () {
              var t = this;
              this.seriesStrokeWidthSlider
                .setLabel(this.chartTranslator.translate("strokeWidth"))
                .setMaxValue(10)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("stroke.width"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("stroke.width", e);
                });
            }),
            (e.prototype.initOpacity = function () {
              var t = this;
              this.seriesLineOpacitySlider
                .setLabel(this.chartTranslator.translate("strokeOpacity"))
                .setStep(0.05)
                .setMaxValue(1)
                .setTextFieldWidth(45)
                .setValue(
                  this.getChartProxy().getSeriesOption("stroke.opacity") || "1"
                )
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("stroke.opacity", e);
                }),
                this.seriesFillOpacitySlider
                  .setLabel(this.chartTranslator.translate("fillOpacity"))
                  .setStep(0.05)
                  .setMaxValue(1)
                  .setTextFieldWidth(45)
                  .setValue(
                    this.getChartProxy().getSeriesOption("fillOpacity") || "1"
                  )
                  .onValueChange(function (e) {
                    return t.getChartProxy().setSeriesOption("fillOpacity", e);
                  });
            }),
            (e.prototype.initLabelPanel = function () {
              var t = this,
                e = this.getChartProxy(),
                o = {
                  family: e.getSeriesOption("label.fontFamily"),
                  style: e.getSeriesOption("label.fontStyle"),
                  weight: e.getSeriesOption("label.fontWeight"),
                  size: e.getSeriesOption("label.fontSize"),
                  color: e.getSeriesOption("label.color"),
                },
                n = {
                  name: this.chartTranslator.translate("labels"),
                  enabled: e.getSeriesOption("label.enabled") || !1,
                  setEnabled: function (e) {
                    return t
                      .getChartProxy()
                      .setSeriesOption("label.enabled", e);
                  },
                  suppressEnabledCheckbox: !1,
                  initialFont: o,
                  setFont: function (e) {
                    var o = t.getChartProxy();
                    e.family && o.setSeriesOption("label.fontFamily", e.family),
                      e.weight &&
                        o.setSeriesOption("label.fontWeight", e.weight),
                      e.style && o.setSeriesOption("label.fontStyle", e.style),
                      e.size && o.setSeriesOption("label.fontSize", e.size),
                      e.color && o.setSeriesOption("label.color", e.color);
                  },
                },
                r = this.createBean(new Du(n));
              this.activePanels.push(r);
              var i = this.createBean(new bp(this.chartController));
              r.addCompToPanel(i),
                this.activePanels.push(i),
                this.seriesGroup.addItem(r);
            }),
            (e.prototype.initShadowPanel = function () {
              var t = this.createBean(new Lu(this.chartController));
              this.seriesGroup.getGui().appendChild(t.getGui()),
                this.seriesGroup.addItem(t);
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartController.getChartProxy();
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="seriesGroup">\n                <ag-toggle-button ref="seriesTooltipsToggle"></ag-toggle-button>\n                <ag-slider ref="seriesStrokeWidthSlider"></ag-slider>\n                <ag-slider ref="seriesLineOpacitySlider"></ag-slider>\n                <ag-slider ref="seriesFillOpacitySlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            Sp(
              [i.RefSelector("seriesGroup")],
              e.prototype,
              "seriesGroup",
              void 0
            ),
            Sp(
              [i.RefSelector("seriesTooltipsToggle")],
              e.prototype,
              "seriesTooltipsToggle",
              void 0
            ),
            Sp(
              [i.RefSelector("seriesStrokeWidthSlider")],
              e.prototype,
              "seriesStrokeWidthSlider",
              void 0
            ),
            Sp(
              [i.RefSelector("seriesLineOpacitySlider")],
              e.prototype,
              "seriesLineOpacitySlider",
              void 0
            ),
            Sp(
              [i.RefSelector("seriesFillOpacitySlider")],
              e.prototype,
              "seriesFillOpacitySlider",
              void 0
            ),
            Sp(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Sp([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        _p = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Rp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Pp = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.chartController = e), o;
          }
          return (
            _p(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                chartPaddingGroup: {
                  cssIdentifier: "charts-format-sub-level",
                  direction: "vertical",
                  suppressOpenCloseIcons: !0,
                },
              }),
                this.initGroup(),
                this.initChartPaddingItems();
            }),
            (e.prototype.initGroup = function () {
              this.chartPaddingGroup
                .setTitle(this.chartTranslator.translate("padding"))
                .hideOpenCloseIcons(!0)
                .hideEnabledCheckbox(!0);
            }),
            (e.prototype.initChartPaddingItems = function () {
              var t = this,
                e = function (e, o) {
                  o.setLabel(t.chartTranslator.translate(e))
                    .setValue(
                      t.chartController.getChartProxy().getChartPaddingOption(e)
                    )
                    .setMaxValue(200)
                    .setTextFieldWidth(45)
                    .onValueChange(function (o) {
                      return t.chartController
                        .getChartProxy()
                        .setChartPaddingOption(e, o);
                    });
                };
              e("top", this.paddingTopSlider),
                e("right", this.paddingRightSlider),
                e("bottom", this.paddingBottomSlider),
                e("left", this.paddingLeftSlider);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="chartPaddingGroup">\n                <ag-slider ref="paddingTopSlider"></ag-slider>\n                <ag-slider ref="paddingRightSlider"></ag-slider>\n                <ag-slider ref="paddingBottomSlider"></ag-slider>\n                <ag-slider ref="paddingLeftSlider"></ag-slider>\n            </ag-group-component>\n        <div>'),
            Rp(
              [i.RefSelector("chartPaddingGroup")],
              e.prototype,
              "chartPaddingGroup",
              void 0
            ),
            Rp(
              [i.RefSelector("paddingTopSlider")],
              e.prototype,
              "paddingTopSlider",
              void 0
            ),
            Rp(
              [i.RefSelector("paddingRightSlider")],
              e.prototype,
              "paddingRightSlider",
              void 0
            ),
            Rp(
              [i.RefSelector("paddingBottomSlider")],
              e.prototype,
              "paddingBottomSlider",
              void 0
            ),
            Rp(
              [i.RefSelector("paddingLeftSlider")],
              e.prototype,
              "paddingLeftSlider",
              void 0
            ),
            Rp(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Rp([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Tp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ap = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Dp = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.chartController = e), o;
          }
          return (
            Tp(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                chartBackgroundGroup: {
                  cssIdentifier: "charts-format-sub-level",
                  direction: "vertical",
                  suppressOpenCloseIcons: !0,
                },
              }),
                this.initGroup(),
                this.initColorPicker();
            }),
            (e.prototype.initGroup = function () {
              var t = this;
              this.group
                .setTitle(this.chartTranslator.translate("background"))
                .setEnabled(
                  this.chartController
                    .getChartProxy()
                    .getChartOption("background.visible")
                )
                .hideOpenCloseIcons(!0)
                .hideEnabledCheckbox(!1)
                .onEnableChange(function (e) {
                  return t.chartController
                    .getChartProxy()
                    .setChartOption("background.visible", e);
                });
            }),
            (e.prototype.initColorPicker = function () {
              var t = this;
              this.colorPicker
                .setLabel(this.chartTranslator.translate("color"))
                .setLabelWidth("flex")
                .setInputWidth(45)
                .setValue(
                  this.chartController
                    .getChartProxy()
                    .getChartOption("background.fill")
                )
                .onValueChange(function (e) {
                  return t.chartController
                    .getChartProxy()
                    .setChartOption("background.fill", e);
                });
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="chartBackgroundGroup">\n                <ag-color-picker ref="colorPicker"></ag-color-picker>\n            </ag-group-component>\n        <div>'),
            Ap(
              [i.RefSelector("chartBackgroundGroup")],
              e.prototype,
              "group",
              void 0
            ),
            Ap(
              [i.RefSelector("colorPicker")],
              e.prototype,
              "colorPicker",
              void 0
            ),
            Ap(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Ap([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        xp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Fp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Np = (function (t) {
          function e(o) {
            var n = t.call(this, e.TEMPLATE) || this;
            return (n.activePanels = []), (n.chartController = o), n;
          }
          return (
            xp(e, t),
            (e.prototype.init = function () {
              this.initFontPanel();
            }),
            (e.prototype.hasTitle = function () {
              var t = this.chartController
                .getChartProxy()
                .getChartOption("title");
              return t && t.enabled && t.text && t.text.length > 0;
            }),
            (e.prototype.initFontPanel = function () {
              var t = this,
                e = this.chartController.getChartProxy(),
                o = this.hasTitle,
                n = function (e) {
                  var o = t.chartController.getChartProxy();
                  e.family && o.setTitleOption("fontFamily", e.family),
                    e.weight && o.setTitleOption("fontWeight", e.weight),
                    e.style && o.setTitleOption("fontStyle", e.style),
                    e.size && o.setTitleOption("fontSize", e.size),
                    e.color && o.setTitleOption("color", e.color);
                },
                r = {
                  family: e.getChartOption("title.fontFamily"),
                  style: e.getChartOption("title.fontStyle"),
                  weight: e.getChartOption("title.fontWeight"),
                  size: e.getChartOption("title.fontSize"),
                  color: e.getChartOption("title.color"),
                };
              o || n(r);
              var i = {
                  name: this.chartTranslator.translate("title"),
                  enabled: this.hasTitle(),
                  suppressEnabledCheckbox: !1,
                  initialFont: r,
                  setFont: n,
                  setEnabled: function (e) {
                    var o = t.chartController.getChartProxy();
                    if (e) {
                      var n =
                        t.disabledTitle ||
                        t.chartTranslator.translate("titlePlaceholder");
                      o.setTitleOption("text", n), (t.disabledTitle = "");
                    } else
                      (t.disabledTitle = o.getTitleOption("text")),
                        o.setTitleOption("text", "");
                  },
                },
                s = this.createBean(new Du(i));
              this.getGui().appendChild(s.getGui()),
                this.activePanels.push(s),
                this.addManagedListener(
                  this.eventService,
                  "chartTitleEdit",
                  function () {
                    s.setEnabled(t.hasTitle());
                  }
                );
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE = "<div></div>"),
            Fp(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Fp([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Mp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ip = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Lp = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            Mp(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                chartGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.initGroup(),
                this.initTitles(),
                this.initPaddingPanel(),
                this.initBackgroundPanel();
            }),
            (e.prototype.initGroup = function () {
              this.chartGroup
                .setTitle(this.chartTranslator.translate("chart"))
                .toggleGroupExpand(!0)
                .hideEnabledCheckbox(!0);
            }),
            (e.prototype.initTitles = function () {
              var t = this.createBean(new Np(this.chartController));
              this.chartGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.initPaddingPanel = function () {
              var t = this.createBean(new Pp(this.chartController));
              this.chartGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.initBackgroundPanel = function () {
              var t = this.createBean(new Dp(this.chartController));
              this.chartGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="chartGroup"></ag-group-component>\n        </div>'),
            Ip(
              [i.RefSelector("chartGroup")],
              e.prototype,
              "chartGroup",
              void 0
            ),
            Ip(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Ip([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Gp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        kp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Vp = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            Gp(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                seriesGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.initSeriesGroup(),
                this.initSeriesTooltips(),
                this.initSeriesLineWidth(),
                this.initSeriesLineDash(),
                this.initOpacity(),
                this.initMarkersPanel(),
                this.initShadowPanel();
            }),
            (e.prototype.initSeriesGroup = function () {
              this.seriesGroup
                .setTitle(this.chartTranslator.translate("series"))
                .toggleGroupExpand(!1)
                .hideEnabledCheckbox(!0);
            }),
            (e.prototype.initSeriesTooltips = function () {
              var t = this;
              this.seriesTooltipsToggle
                .setLabel(this.chartTranslator.translate("tooltips"))
                .setLabelAlignment("left")
                .setLabelWidth("flex")
                .setInputWidth(45)
                .setValue(
                  this.getChartProxy().getSeriesOption("tooltip.enabled") || !1
                )
                .onValueChange(function (e) {
                  return t
                    .getChartProxy()
                    .setSeriesOption("tooltip.enabled", e);
                });
            }),
            (e.prototype.initSeriesLineWidth = function () {
              var t = this;
              this.seriesLineWidthSlider
                .setLabel(this.chartTranslator.translate("lineWidth"))
                .setMaxValue(10)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("stroke.width"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("stroke.width", e);
                });
            }),
            (e.prototype.initSeriesLineDash = function () {
              var t = this;
              this.seriesLineDashSlider
                .setLabel(this.chartTranslator.translate("lineDash"))
                .setMaxValue(30)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("lineDash"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("lineDash", [e]);
                });
            }),
            (e.prototype.initOpacity = function () {
              Gu(
                this.seriesLineOpacitySlider,
                this.chartTranslator,
                this.getChartProxy()
              ),
                ku(
                  this.seriesFillOpacitySlider,
                  this.chartTranslator,
                  this.getChartProxy()
                );
            }),
            (e.prototype.initMarkersPanel = function () {
              var t = this.createBean(new gp(this.chartController));
              this.seriesGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.initShadowPanel = function () {
              var t = this.createBean(new Lu(this.chartController));
              this.seriesGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartController.getChartProxy();
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="seriesGroup">\n                <ag-toggle-button ref="seriesTooltipsToggle"></ag-toggle-button>\n                <ag-slider ref="seriesLineWidthSlider"></ag-slider>\n                <ag-slider ref="seriesLineDashSlider"></ag-slider>\n                <ag-slider ref="seriesLineOpacitySlider"></ag-slider>\n                <ag-slider ref="seriesFillOpacitySlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            kp(
              [i.RefSelector("seriesGroup")],
              e.prototype,
              "seriesGroup",
              void 0
            ),
            kp(
              [i.RefSelector("seriesTooltipsToggle")],
              e.prototype,
              "seriesTooltipsToggle",
              void 0
            ),
            kp(
              [i.RefSelector("seriesLineWidthSlider")],
              e.prototype,
              "seriesLineWidthSlider",
              void 0
            ),
            kp(
              [i.RefSelector("seriesLineDashSlider")],
              e.prototype,
              "seriesLineDashSlider",
              void 0
            ),
            kp(
              [i.RefSelector("seriesLineOpacitySlider")],
              e.prototype,
              "seriesLineOpacitySlider",
              void 0
            ),
            kp(
              [i.RefSelector("seriesFillOpacitySlider")],
              e.prototype,
              "seriesFillOpacitySlider",
              void 0
            ),
            kp(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            kp([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Wp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Hp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Bp = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            Wp(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                seriesGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.initSeriesGroup(),
                this.initSeriesTooltips(),
                this.initMarkersPanel();
            }),
            (e.prototype.initSeriesGroup = function () {
              this.seriesGroup
                .setTitle(this.chartTranslator.translate("series"))
                .toggleGroupExpand(!1)
                .hideEnabledCheckbox(!0);
            }),
            (e.prototype.initSeriesTooltips = function () {
              var t = this;
              this.seriesTooltipsToggle
                .setLabel(this.chartTranslator.translate("tooltips"))
                .setLabelAlignment("left")
                .setLabelWidth("flex")
                .setInputWidth(45)
                .setValue(
                  this.getChartProxy().getSeriesOption("tooltip.enabled") || !1
                )
                .onValueChange(function (e) {
                  return t
                    .getChartProxy()
                    .setSeriesOption("tooltip.enabled", e);
                });
            }),
            (e.prototype.initMarkersPanel = function () {
              var t = this.createBean(new gp(this.chartController));
              this.seriesGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartController.getChartProxy();
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="seriesGroup">\n                <ag-toggle-button ref="seriesTooltipsToggle"></ag-toggle-button>\n            </ag-group-component>\n        </div>'),
            Hp(
              [i.RefSelector("seriesGroup")],
              e.prototype,
              "seriesGroup",
              void 0
            ),
            Hp(
              [i.RefSelector("seriesTooltipsToggle")],
              e.prototype,
              "seriesTooltipsToggle",
              void 0
            ),
            Hp(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Hp([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        jp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Up = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        zp = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (o.activePanels = []), (o.chartController = e), o;
          }
          return (
            jp(e, t),
            (e.prototype.init = function () {
              this.setTemplate(e.TEMPLATE, {
                seriesGroup: {
                  cssIdentifier: "charts-format-top-level",
                  direction: "vertical",
                },
              }),
                this.seriesGroup
                  .setTitle(this.chartTranslator.translate("series"))
                  .toggleGroupExpand(!1)
                  .hideEnabledCheckbox(!0),
                this.initSeriesTooltips(),
                this.initSeriesStrokeWidth(),
                this.initSeriesLineDash(),
                this.initOpacity(),
                this.initLabelPanel(),
                this.initShadowPanel(),
                this.initBins();
            }),
            (e.prototype.initSeriesTooltips = function () {
              var t = this;
              this.seriesTooltipsToggle
                .setLabel(this.chartTranslator.translate("tooltips"))
                .setLabelAlignment("left")
                .setLabelWidth("flex")
                .setInputWidth(45)
                .setValue(
                  this.getChartProxy().getSeriesOption("tooltip.enabled") || !1
                )
                .onValueChange(function (e) {
                  return t
                    .getChartProxy()
                    .setSeriesOption("tooltip.enabled", e);
                });
            }),
            (e.prototype.initSeriesStrokeWidth = function () {
              var t = this;
              this.seriesStrokeWidthSlider
                .setLabel(this.chartTranslator.translate("strokeWidth"))
                .setMaxValue(10)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("stroke.width"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("stroke.width", e);
                });
            }),
            (e.prototype.initSeriesLineDash = function () {
              var t = this;
              this.seriesLineDashSlider
                .setLabel(this.chartTranslator.translate("lineDash"))
                .setMaxValue(30)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("lineDash"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("lineDash", [e]);
                });
            }),
            (e.prototype.initOpacity = function () {
              Gu(
                this.seriesLineOpacitySlider,
                this.chartTranslator,
                this.getChartProxy()
              ),
                ku(
                  this.seriesFillOpacitySlider,
                  this.chartTranslator,
                  this.getChartProxy()
                );
            }),
            (e.prototype.initBins = function () {
              var t = this;
              this.seriesBinCountSlider
                .setLabel(this.chartTranslator.translate("histogramBinCount"))
                .setMinValue(4)
                .setMaxValue(100)
                .setTextFieldWidth(45)
                .setValue(this.getChartProxy().getSeriesOption("binCount"))
                .onValueChange(function (e) {
                  return t.getChartProxy().setSeriesOption("binCount", e);
                });
            }),
            (e.prototype.initLabelPanel = function () {
              var t = Vu(this.chartTranslator, this.getChartProxy()),
                e = this.createBean(new Du(t));
              this.activePanels.push(e), this.seriesGroup.addItem(e);
            }),
            (e.prototype.initShadowPanel = function () {
              var t = this.createBean(new Lu(this.chartController));
              this.seriesGroup.addItem(t), this.activePanels.push(t);
            }),
            (e.prototype.destroyActivePanels = function () {
              var t = this;
              this.activePanels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.getChartProxy = function () {
              return this.chartController.getChartProxy();
            }),
            (e.prototype.destroy = function () {
              this.destroyActivePanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div>\n            <ag-group-component ref="seriesGroup">\n                <ag-toggle-button ref="seriesTooltipsToggle"></ag-toggle-button>\n                <ag-slider ref="binCountSlider"></ag-slider>\n                <ag-slider ref="seriesStrokeWidthSlider"></ag-slider>\n                <ag-slider ref="seriesLineDashSlider"></ag-slider>\n                <ag-slider ref="seriesLineOpacitySlider"></ag-slider>\n                <ag-slider ref="seriesFillOpacitySlider"></ag-slider>\n            </ag-group-component>\n        </div>'),
            Up(
              [i.RefSelector("seriesGroup")],
              e.prototype,
              "seriesGroup",
              void 0
            ),
            Up(
              [i.RefSelector("seriesTooltipsToggle")],
              e.prototype,
              "seriesTooltipsToggle",
              void 0
            ),
            Up(
              [i.RefSelector("binCountSlider")],
              e.prototype,
              "seriesBinCountSlider",
              void 0
            ),
            Up(
              [i.RefSelector("seriesStrokeWidthSlider")],
              e.prototype,
              "seriesStrokeWidthSlider",
              void 0
            ),
            Up(
              [i.RefSelector("seriesLineOpacitySlider")],
              e.prototype,
              "seriesLineOpacitySlider",
              void 0
            ),
            Up(
              [i.RefSelector("seriesLineDashSlider")],
              e.prototype,
              "seriesLineDashSlider",
              void 0
            ),
            Up(
              [i.RefSelector("seriesFillOpacitySlider")],
              e.prototype,
              "seriesFillOpacitySlider",
              void 0
            ),
            Up(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Up([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Kp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Yp = (function (t) {
          function e(o) {
            var n = t.call(this, e.TEMPLATE) || this;
            return (n.panels = []), (n.chartController = o), n;
          }
          return (
            Kp(e, t),
            (e.prototype.init = function () {
              this.createPanels(),
                this.addManagedListener(
                  this.chartController,
                  Su.EVENT_CHART_UPDATED,
                  this.createPanels.bind(this)
                );
            }),
            (e.prototype.createPanels = function () {
              var t = this.chartController.getChartType(),
                e = this.chartController.isGrouping();
              if (t !== this.chartType || e !== this.isGrouping) {
                switch (
                  (this.destroyPanels(),
                  this.addComponent(new Lp(this.chartController)),
                  this.addComponent(new Nu(this.chartController)),
                  t)
                ) {
                  case i.ChartType.GroupedColumn:
                  case i.ChartType.StackedColumn:
                  case i.ChartType.NormalizedColumn:
                  case i.ChartType.GroupedBar:
                  case i.ChartType.StackedBar:
                  case i.ChartType.NormalizedBar:
                    this.addComponent(new Xu(this.chartController)),
                      this.addComponent(new Zu(this.chartController)),
                      this.addComponent(new Bu(this.chartController));
                    break;
                  case i.ChartType.Pie:
                  case i.ChartType.Doughnut:
                    this.addComponent(new Op(this.chartController));
                    break;
                  case i.ChartType.Line:
                    this.addComponent(new Xu(this.chartController)),
                      this.addComponent(new Zu(this.chartController)),
                      this.addComponent(new vp(this.chartController));
                    break;
                  case i.ChartType.Scatter:
                  case i.ChartType.Bubble:
                    this.addComponent(new Xu(this.chartController)),
                      this.addComponent(new Zu(this.chartController)),
                      this.addComponent(new Bp(this.chartController));
                    break;
                  case i.ChartType.Area:
                  case i.ChartType.StackedArea:
                  case i.ChartType.NormalizedArea:
                    this.addComponent(new Xu(this.chartController)),
                      this.addComponent(new Zu(this.chartController)),
                      this.addComponent(new Vp(this.chartController));
                    break;
                  case i.ChartType.Histogram:
                    this.addComponent(new Xu(this.chartController)),
                      this.addComponent(new Zu(this.chartController)),
                      this.addComponent(new zp(this.chartController));
                    break;
                  default:
                    console.warn(
                      "AG Grid: ChartFormattingPanel - unexpected chart type index: " +
                        t +
                        " supplied"
                    );
                }
                (this.chartType = t), (this.isGrouping = e);
              }
            }),
            (e.prototype.addComponent = function (t) {
              this.createBean(t),
                this.panels.push(t),
                i._.addCssClass(t.getGui(), "ag-chart-format-section"),
                this.getGui().appendChild(t.getGui());
            }),
            (e.prototype.destroyPanels = function () {
              var t = this;
              this.panels.forEach(function (e) {
                i._.removeFromParent(e.getGui()), t.destroyBean(e);
              });
            }),
            (e.prototype.destroy = function () {
              this.destroyPanels(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE = '<div class="ag-chart-format-wrapper"></div>'),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Xp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        qp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Qp = (function (t) {
          function e(e, o) {
            var n = t.call(this) || this;
            (n.size = 58), (n.padding = 5), (n.root = new Hn());
            var r = new Ai(window.document, n.size, n.size);
            return (
              i._.addCssClass(
                r.canvas.element,
                "ag-chart-mini-thumbnail-canvas"
              ),
              (r.root = n.root),
              (r.container = e),
              (n.scene = r),
              (n.tooltipName = o),
              n
            );
          }
          return (
            Xp(e, t),
            (e.prototype.init = function () {
              this.scene.canvas.element.title = this.chartTranslator.translate(
                this.tooltipName
              );
            }),
            qp(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            qp([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Zp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        $p = (function (t) {
          function e(e, o) {
            var n = t.call(this, e, o) || this;
            return (n.stroke = "gray"), (n.axisOvershoot = 3), n;
          }
          return (
            Zp(e, t),
            (e.prototype.addAxes = function () {
              var t = this.size,
                e = this.padding,
                o = new zn();
              (o.x1 = e),
                (o.y1 = e),
                (o.x2 = e),
                (o.y2 = t - e + this.axisOvershoot),
                (o.stroke = this.stroke);
              var n = new zn();
              (n.x1 = e - this.axisOvershoot + 1),
                (n.y1 = t - e),
                (n.x2 = t - e + 1),
                (n.y2 = t - e),
                (n.stroke = this.stroke);
              var r = this.root;
              r.append(o), r.append(n);
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([i.PostConstruct], e.prototype, "addAxes", null),
            e
          );
        })(Qp),
        Jp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        tc = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, e, "groupedColumnTooltip") || this,
              i = r.padding,
              s = r.size,
              a = new vr();
            (a.domain = [0, 1, 2]),
              (a.range = [i, s - i]),
              (a.paddingInner = 0.3),
              (a.paddingOuter = 0.3);
            var l = new Vn();
            (l.domain = [0, 4]), (l.range = [s - i, i]);
            var u = l.convert(0),
              p = a.bandwidth;
            return (
              (r.bars = [2, 3, 4].map(function (t, e) {
                var o = l.convert(t),
                  n = new Ni();
                return (
                  (n.x = a.convert(e)),
                  (n.y = o),
                  (n.width = p),
                  (n.height = u - o),
                  (n.strokeWidth = 1),
                  (n.crisp = !0),
                  n
                );
              })),
              r.updateColors(o, n),
              r.root.append(r.bars),
              r
            );
          }
          return (
            Jp(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.bars.forEach(function (o, n) {
                (o.fill = t[n]), (o.stroke = e[n]);
              });
            }),
            (e.chartType = i.ChartType.GroupedColumn),
            e
          );
        })($p),
        ec = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        oc = (function (t) {
          function e(o, n, r, i, s, a) {
            void 0 === i && (i = e.data),
              void 0 === s && (s = [0, 16]),
              void 0 === a && (a = "stackedColumnTooltip");
            var l = t.call(this, o, a) || this,
              u = l.padding,
              p = l.size,
              c = new vr();
            (c.domain = [0, 1, 2]),
              (c.range = [u, p - u]),
              (c.paddingInner = 0.3),
              (c.paddingOuter = 0.3);
            var d = new Vn();
            (d.domain = s), (d.range = [p - u, u]);
            var h = d.convert(0),
              f = c.bandwidth;
            return (
              (l.bars = i.map(function (t) {
                return t.map(function (t, e) {
                  var o = d.convert(t),
                    n = new Ni();
                  return (
                    (n.x = c.convert(e)),
                    (n.y = o),
                    (n.width = f),
                    (n.height = h - o),
                    (n.strokeWidth = 1),
                    (n.crisp = !0),
                    n
                  );
                });
              })),
              l.updateColors(n, r),
              l.root.append([].concat.apply([], l.bars)),
              l
            );
          }
          return (
            ec(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.bars.forEach(function (o, n) {
                return o.forEach(function (o) {
                  (o.fill = t[n]), (o.stroke = e[n]);
                });
              });
            }),
            (e.chartType = i.ChartType.StackedColumn),
            (e.data = [
              [8, 12, 16],
              [6, 9, 12],
              [2, 3, 4],
            ]),
            e
          );
        })($p),
        nc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        rc = (function (t) {
          function e(o, n, r) {
            return (
              t.call(
                this,
                o,
                n,
                r,
                e.data,
                [0, 10],
                "normalizedColumnTooltip"
              ) || this
            );
          }
          return (
            nc(e, t),
            (e.chartType = i.ChartType.NormalizedColumn),
            (e.data = [
              [10, 10, 10],
              [6, 7, 8],
              [2, 4, 6],
            ]),
            e
          );
        })(oc),
        ic = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        sc = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, e, "groupedBarTooltip") || this,
              i = r.padding,
              s = r.size,
              a = new vr();
            (a.domain = [0, 1, 2]),
              (a.range = [i, s - i]),
              (a.paddingInner = 0.3),
              (a.paddingOuter = 0.3);
            var l = new Vn();
            (l.domain = [0, 4]), (l.range = [s - i, i]);
            var u = l.convert(0),
              p = a.bandwidth;
            return (
              (r.bars = [2, 3, 4].map(function (t, e) {
                var o = new Ni();
                return (
                  (o.x = i),
                  (o.y = a.convert(e)),
                  (o.width = u - l.convert(t)),
                  (o.height = p),
                  (o.strokeWidth = 1),
                  (o.crisp = !0),
                  o
                );
              })),
              r.updateColors(o, n),
              r.root.append(r.bars),
              r
            );
          }
          return (
            ic(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.bars.forEach(function (o, n) {
                (o.fill = t[n]), (o.stroke = e[n]);
              });
            }),
            (e.chartType = i.ChartType.GroupedBar),
            e
          );
        })($p),
        ac = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        lc = (function (t) {
          function e(o, n, r, i, s, a) {
            void 0 === i && (i = e.data),
              void 0 === s && (s = [0, 16]),
              void 0 === a && (a = "stackedBarTooltip");
            var l = t.call(this, o, a) || this,
              u = l.size,
              p = l.padding,
              c = new vr();
            (c.domain = [0, 1, 2]),
              (c.range = [p, u - p]),
              (c.paddingInner = 0.3),
              (c.paddingOuter = 0.3);
            var d = new Vn();
            (d.domain = s), (d.range = [u - p, p]);
            var h = d.convert(0),
              f = c.bandwidth;
            return (
              (l.bars = i.map(function (t) {
                return t.map(function (t, e) {
                  var o = new Ni();
                  return (
                    (o.x = p),
                    (o.y = c.convert(e)),
                    (o.width = h - d.convert(t)),
                    (o.height = f),
                    (o.strokeWidth = 1),
                    (o.crisp = !0),
                    o
                  );
                });
              })),
              l.updateColors(n, r),
              l.root.append([].concat.apply([], l.bars)),
              l
            );
          }
          return (
            ac(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.bars.forEach(function (o, n) {
                return o.forEach(function (o) {
                  (o.fill = t[n]), (o.stroke = e[n]);
                });
              });
            }),
            (e.chartType = i.ChartType.StackedBar),
            (e.data = [
              [8, 12, 16],
              [6, 9, 12],
              [2, 3, 4],
            ]),
            e
          );
        })($p),
        uc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        pc = (function (t) {
          function e(o, n, r) {
            return (
              t.call(this, o, n, r, e.data, [0, 10], "normalizedBarTooltip") ||
              this
            );
          }
          return (
            uc(e, t),
            (e.chartType = i.ChartType.NormalizedBar),
            (e.data = [
              [10, 10, 10],
              [6, 7, 8],
              [2, 4, 6],
            ]),
            e
          );
        })(lc),
        cc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        dc = (function (t) {
          function e(e, o, n, r, i) {
            void 0 === r && (r = 0.6), void 0 === i && (i = "doughnutTooltip");
            var s = t.call(this, e, i) || this,
              a = (s.size - 2 * s.padding) / 2,
              l = a + s.padding,
              u = [
                [Xn(-90), Xn(30)],
                [Xn(30), Xn(120)],
                [Xn(120), Xn(180)],
                [Xn(180), Xn(210)],
                [Xn(210), Xn(240)],
                [Xn(240), Xn(270)],
              ];
            return (
              (s.sectors = u.map(function (t) {
                var e = t[0],
                  o = t[1],
                  n = new Xa();
                return (
                  (n.centerX = l),
                  (n.centerY = l),
                  (n.innerRadius = a * r),
                  (n.outerRadius = a),
                  (n.startAngle = e),
                  (n.endAngle = o),
                  (n.stroke = void 0),
                  (n.strokeWidth = 1),
                  n
                );
              })),
              s.updateColors(o, n),
              s.root.append(s.sectors),
              s
            );
          }
          return (
            cc(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.sectors.forEach(function (o, n) {
                (o.fill = t[n % t.length]), (o.stroke = e[n % e.length]);
              });
            }),
            (e.chartType = i.ChartType.Doughnut),
            e
          );
        })(Qp),
        hc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        fc = (function (t) {
          function e(e, o, n) {
            return t.call(this, e, o, n, 0, "pieTooltip") || this;
          }
          return hc(e, t), (e.chartType = i.ChartType.Pie), e;
        })(dc),
        gc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        yc = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, e, "lineTooltip") || this,
              i = r.size,
              s = r.padding,
              a = new Vn();
            (a.domain = [0, 4]), (a.range = [s, i - s]);
            var l = new Vn();
            (l.domain = [0, 10]),
              (l.range = [i - s, s]),
              (r.lines = [
                [9, 7, 8, 5, 6],
                [5, 6, 3, 4, 1],
                [1, 3, 4, 8, 7],
              ].map(function (t) {
                var e = new er();
                return (
                  (e.strokeWidth = 3),
                  (e.lineCap = "round"),
                  (e.fill = void 0),
                  t.forEach(function (t, o) {
                    e.path[o > 0 ? "lineTo" : "moveTo"](
                      a.convert(o),
                      l.convert(t)
                    );
                  }),
                  e
                );
              })),
              r.updateColors(o, n);
            var u = new Rs();
            return (
              (u.x = u.y = s),
              (u.width = u.height = i - 2 * s),
              u.append(r.lines),
              r.root.append(u),
              r
            );
          }
          return (
            gc(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.lines.forEach(function (e, o) {
                e.stroke = t[o];
              });
            }),
            (e.chartType = i.ChartType.Line),
            e
          );
        })($p),
        mc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        vc = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, e, "scatterTooltip") || this,
              i = r.size,
              s = r.padding,
              a = new Vn();
            (a.domain = [-0.5, 4]), (a.range = [2 * s, i - s]);
            var l = new Vn();
            (l.domain = [-0.5, 3.5]), (l.range = [i - s, s]);
            var u = [];
            [
              [
                [0.3, 3],
                [1.1, 0.9],
                [2, 0.4],
                [3.4, 2.4],
              ],
              [
                [0, 0.3],
                [1, 2],
                [2.4, 1.4],
                [3, 0],
              ],
            ].forEach(function (t) {
              t.forEach(function (t) {
                var e = t[0],
                  o = t[1],
                  n = new ar();
                (n.strokeWidth = 1),
                  (n.centerX = a.convert(e)),
                  (n.centerY = l.convert(o)),
                  (n.radiusX = n.radiusY = 2.5),
                  u.push(n);
              });
            }),
              (r.points = u),
              r.updateColors(o, n);
            var p = new Rs();
            return (
              (p.x = p.y = s),
              (p.width = p.height = i - 2 * s),
              p.append(r.points),
              r.root.append(p),
              r
            );
          }
          return (
            mc(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.points.forEach(function (o, n) {
                (o.stroke = e[n % e.length]), (o.fill = t[n % t.length]);
              });
            }),
            (e.chartType = i.ChartType.Scatter),
            e
          );
        })($p),
        Cc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wc = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, e, "bubbleTooltip") || this,
              i = r.size,
              s = r.padding,
              a = new Vn();
            (a.domain = [0, 1]), (a.range = [2 * s, i - s]);
            var l = new Vn();
            (l.domain = [0, 1]), (l.range = [i - s, s]);
            var u = [];
            [
              [
                [0.1, 0.3, 5],
                [0.5, 0.4, 7],
                [0.2, 0.8, 7],
              ],
              [
                [0.8, 0.7, 5],
                [0.7, 0.3, 9],
              ],
            ].forEach(function (t) {
              t.forEach(function (t) {
                var e = t[0],
                  o = t[1],
                  n = t[2],
                  r = new ar();
                (r.strokeWidth = 1),
                  (r.centerX = a.convert(e)),
                  (r.centerY = l.convert(o)),
                  (r.radiusX = r.radiusY = n),
                  (r.fillOpacity = 0.7),
                  u.push(r);
              });
            }),
              (r.points = u),
              r.updateColors(o, n);
            var p = new Rs();
            return (
              (p.x = s),
              (p.y = s),
              (p.width = i - 2 * s),
              (p.height = i - 2 * s),
              p.append(r.points),
              r.root.append(p),
              r
            );
          }
          return (
            Cc(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.points.forEach(function (o, n) {
                (o.stroke = e[n % e.length]), (o.fill = t[n % t.length]);
              });
            }),
            (e.chartType = i.ChartType.Bubble),
            e
          );
        })($p),
        bc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ec = (function (t) {
          function e(o, n, r, i) {
            void 0 === i && (i = e.data);
            var s = t.call(this, o, "groupedAreaTooltip") || this,
              a = s.size,
              l = s.padding,
              u = new vr();
            (u.domain = [0, 1, 2]),
              (u.paddingInner = 1),
              (u.paddingOuter = 0),
              (u.range = [l + 0.5, a - l - 0.5]);
            var p = new Vn();
            (p.domain = [0, 6]), (p.range = [a - l + 0.5, l]);
            var c = 2 * i.length - 1,
              d = [],
              h = p.convert(0);
            return (
              i.forEach(function (t, e) {
                var o = u.convert(e);
                t.forEach(function (t, n) {
                  var r = p.convert(t),
                    i = d[n] || (d[n] = []);
                  (i[e] = { x: o, y: r }), (i[c - e] = { x: o, y: h });
                });
              }),
              (s.areas = d.reverse().map(function (t) {
                var e = new er();
                (e.strokeWidth = 1), (e.fillOpacity = 0.7);
                var o = e.path;
                return (
                  o.clear(),
                  t.forEach(function (t, e) {
                    return o[e > 0 ? "lineTo" : "moveTo"](t.x, t.y);
                  }),
                  o.closePath(),
                  e
                );
              })),
              s.updateColors(n, r),
              s.root.append(s.areas),
              s
            );
          }
          return (
            bc(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.areas.forEach(function (o, n) {
                (o.fill = t[n]), (o.stroke = e[n]);
              });
            }),
            (e.chartType = i.ChartType.Area),
            (e.data = [
              [1, 3, 5],
              [2, 6, 4],
              [5, 3, 1],
            ]),
            e
          );
        })($p),
        Sc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Oc = (function (t) {
          function e(o, n, r, i, s) {
            void 0 === i && (i = e.data),
              void 0 === s && (s = "stackedAreaTooltip");
            var a = t.call(this, o, s) || this,
              l = a.size,
              u = a.padding,
              p = new vr();
            (p.domain = [0, 1, 2]),
              (p.paddingInner = 1),
              (p.paddingOuter = 0),
              (p.range = [u + 0.5, l - u - 0.5]);
            var c = new Vn();
            (c.domain = [0, 16]), (c.range = [l - u + 0.5, u + 0.5]);
            var d = 2 * i.length - 1,
              h = [];
            return (
              i.forEach(function (t, e) {
                var o = p.convert(e),
                  n = 0;
                t.forEach(function (t, r) {
                  var i = c.convert(n + t),
                    s = h[r] || (h[r] = []);
                  (s[e] = { x: o, y: i }),
                    (s[d - e] = { x: o, y: c.convert(n) }),
                    (n += t);
                });
              }),
              (a.areas = h.map(function (t) {
                var e = new er();
                e.strokeWidth = 1;
                var o = e.path;
                return (
                  o.clear(),
                  t.forEach(function (t, e) {
                    return o[e > 0 ? "lineTo" : "moveTo"](t.x, t.y);
                  }),
                  o.closePath(),
                  e
                );
              })),
              a.updateColors(n, r),
              a.root.append(a.areas),
              a
            );
          }
          return (
            Sc(e, t),
            (e.prototype.updateColors = function (t, e) {
              this.areas.forEach(function (o, n) {
                (o.fill = t[n]), (o.stroke = e[n]);
              });
            }),
            (e.chartType = i.ChartType.StackedArea),
            (e.data = [
              [2, 3, 2],
              [3, 6, 5],
              [6, 2, 2],
            ]),
            e
          );
        })($p),
        _c = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Rc = (function (t) {
          function e(o, n, r, i) {
            return (
              void 0 === i && (i = e.data),
              t.call(this, o, n, r, i, "normalizedAreaTooltip") || this
            );
          }
          return (
            _c(e, t),
            (e.chartType = i.ChartType.NormalizedArea),
            (e.data = Oc.data.map(function (t) {
              var e = t.reduce(function (t, e) {
                return t + e;
              }, 0);
              return t.map(function (t) {
                return (t / e) * 16;
              });
            })),
            e
          );
        })(Oc),
        Pc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Tc = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, e, "histogramTooltip") || this,
              i = r.padding,
              s = r.size,
              a = [2, 5, 11, 13, 10, 6, 1],
              l = new Vn();
            (l.domain = [0, a.length]), (l.range = [i, s - i]);
            var u = new Vn();
            (u.domain = [
              0,
              a.reduce(function (t, e) {
                return Math.max(t, e);
              }, 0),
            ]),
              (u.range = [s - i, i]);
            var p = u.convert(0);
            return (
              (r.bars = a.map(function (t, e) {
                var o = u.convert(t),
                  n = l.convert(e),
                  r = l.convert(e + 1),
                  i = new Ni();
                return (
                  (i.x = n),
                  (i.y = o),
                  (i.width = r - n),
                  (i.height = p - o),
                  (i.strokeWidth = 1),
                  (i.crisp = !0),
                  i
                );
              })),
              r.updateColors(o, n),
              r.root.append(r.bars),
              r
            );
          }
          return (
            Pc(e, t),
            (e.prototype.updateColors = function (t, e) {
              var o = t[0],
                n = e[0];
              this.bars.forEach(function (t) {
                (t.fill = o), (t.stroke = n);
              });
            }),
            (e.chartType = i.ChartType.Histogram),
            e
          );
        })($p),
        Ac = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Dc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        xc = (function (t) {
          function e(o, n, r) {
            var i = t.call(this, e.TEMPLATE) || this;
            return (
              (i.wrappers = {}),
              (i.chartController = o),
              (i.fills = n),
              (i.strokes = r),
              i
            );
          }
          return (
            Ac(e, t),
            (e.prototype.init = function () {
              var t = this,
                e = {
                  columnGroup: [tc, oc, rc],
                  barGroup: [sc, lc, pc],
                  pieGroup: [fc, dc],
                  lineGroup: [yc],
                  scatterGroup: [vc, wc],
                  areaGroup: [Ec, Oc, Rc],
                  histogramGroup: [Tc],
                },
                o = this.getGui();
              Object.keys(e).forEach(function (n) {
                var r = e[n],
                  s = t.createBean(
                    new i.AgGroupComponent({
                      title: t.chartTranslator.translate(n),
                      suppressEnabledCheckbox: !0,
                      enabled: !0,
                      suppressOpenCloseIcons: !0,
                      cssIdentifier: "charts-settings",
                      direction: "horizontal",
                    })
                  );
                r.forEach(function (e) {
                  var o = document.createElement("div");
                  i._.addCssClass(o, "ag-chart-mini-thumbnail"),
                    t.addManagedListener(o, "click", function () {
                      t.chartController.setChartType(e.chartType),
                        t.refreshSelected();
                    }),
                    (t.wrappers[e.chartType] = o),
                    t.createBean(new e(o, t.fills, t.strokes)),
                    s.addItem(o);
                }),
                  o.appendChild(s.getGui());
              }),
                this.refreshSelected();
            }),
            (e.prototype.refreshSelected = function () {
              var t = this.chartController.getChartType();
              for (var e in this.wrappers)
                i._.addOrRemoveCssClass(
                  this.wrappers[e],
                  "ag-selected",
                  e === t
                );
            }),
            (e.TEMPLATE = '<div class="ag-chart-settings-mini-wrapper"></div>'),
            Dc(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Dc([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Fc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Nc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Mc = (function (t) {
          function e(o) {
            var n = t.call(this, e.TEMPLATE) || this;
            return (
              (n.miniCharts = []),
              (n.cardItems = []),
              (n.activePaletteIndex = 0),
              (n.palettes = []),
              (n.themes = []),
              (n.chartController = o),
              n
            );
          }
          return (
            Fc(e, t),
            (e.prototype.postConstruct = function () {
              var t = this;
              this.resetPalettes(),
                this.ePrevBtn.insertAdjacentElement(
                  "afterbegin",
                  i._.createIconNoSpan("previous", this.gridOptionsWrapper)
                ),
                this.eNextBtn.insertAdjacentElement(
                  "afterbegin",
                  i._.createIconNoSpan("next", this.gridOptionsWrapper)
                ),
                this.addManagedListener(this.ePrevBtn, "click", function () {
                  return t.setActivePalette(t.getPrev(), "left");
                }),
                this.addManagedListener(this.eNextBtn, "click", function () {
                  return t.setActivePalette(t.getNext(), "right");
                }),
                this.addManagedListener(
                  this.chartController,
                  Su.EVENT_CHART_UPDATED,
                  this.resetPalettes.bind(this)
                );
            }),
            (e.prototype.resetPalettes = function () {
              var t = this,
                e = this.chartController.getPalettes();
              i._.shallowCompare(e, this.palettes) ||
                ((this.palettes = e),
                (this.themes = this.chartController.getThemes()),
                (this.activePaletteIndex = i._.findIndex(
                  this.themes,
                  function (e) {
                    return e === t.chartController.getThemeName();
                  }
                )),
                (this.cardItems = []),
                i._.clearElement(this.eCardSelector),
                this.destroyMiniCharts(),
                this.palettes.forEach(function (e, o) {
                  var n = t.activePaletteIndex === o,
                    r = t.createBean(
                      new xc(t.chartController, e.fills, e.strokes)
                    );
                  t.miniCharts.push(r),
                    t.eMiniChartsContainer.appendChild(r.getGui()),
                    t.addCardLink(o),
                    n
                      ? r.refreshSelected()
                      : i._.addCssClass(r.getGui(), "ag-hidden");
                }),
                i._.addOrRemoveCssClass(
                  this.eNavBar,
                  "ag-hidden",
                  this.palettes.length <= 1
                ),
                i._.radioCssClass(
                  this.cardItems[this.activePaletteIndex],
                  "ag-selected",
                  "ag-not-selected"
                ));
            }),
            (e.prototype.addCardLink = function (t) {
              var e = this,
                o = document.createElement("div");
              i._.addCssClass(o, "ag-chart-settings-card-item"),
                this.addManagedListener(o, "click", function () {
                  e.setActivePalette(
                    t,
                    t < e.activePaletteIndex ? "left" : "right"
                  );
                }),
                this.eCardSelector.appendChild(o),
                this.cardItems.push(o);
            }),
            (e.prototype.getPrev = function () {
              var t = this.activePaletteIndex - 1;
              return t < 0 && (t = this.palettes.length - 1), t;
            }),
            (e.prototype.getNext = function () {
              var t = this.activePaletteIndex + 1;
              return t >= this.palettes.length && (t = 0), t;
            }),
            (e.prototype.setActivePalette = function (t, e) {
              var o = this;
              if (!this.isAnimating && this.activePaletteIndex !== t) {
                i._.radioCssClass(
                  this.cardItems[t],
                  "ag-selected",
                  "ag-not-selected"
                );
                var n = this.miniCharts[this.activePaletteIndex],
                  r = n.getGui(),
                  s = this.miniCharts[t],
                  a = s.getGui();
                n.refreshSelected(), s.refreshSelected();
                var l = "left" === e ? -1 : 1,
                  u = (a.style.left =
                    i._.getAbsoluteWidth(this.getGui()) * l + "px"),
                  p = "ag-animating";
                i._.removeCssClass(a, "ag-hidden"),
                  i._.addCssClass(r, p),
                  i._.addCssClass(a, p),
                  (this.activePaletteIndex = t),
                  this.chartController.setChartThemeName(this.themes[t]),
                  (this.isAnimating = !0),
                  window.setTimeout(function () {
                    (r.style.left = -parseFloat(u) + "px"),
                      (a.style.left = "0px");
                  }, 0),
                  window.setTimeout(function () {
                    (o.isAnimating = !1),
                      i._.removeCssClass(r, p),
                      i._.removeCssClass(a, p),
                      i._.addCssClass(r, "ag-hidden");
                  }, 300);
              }
            }),
            (e.prototype.destroyMiniCharts = function () {
              i._.clearElement(this.eMiniChartsContainer),
                (this.miniCharts = this.destroyBeans(this.miniCharts));
            }),
            (e.prototype.destroy = function () {
              this.destroyMiniCharts(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div class="ag-chart-settings-wrapper">\n            <div ref="eMiniChartsContainer" class="ag-chart-settings-mini-charts-container"></div>\n            <div ref="eNavBar" class="ag-chart-settings-nav-bar">\n                <div ref="ePrevBtn" class="ag-chart-settings-prev">\n                    <button type="button" class="ag-chart-settings-prev-button"></button>\n                </div>\n                <div ref="eCardSelector" class="ag-chart-settings-card-selector"></div>\n                <div ref="eNextBtn" class="ag-chart-settings-next">\n                    <button type="button" class="ag-chart-settings-next-button"></button>\n                </div>\n            </div>\n        </div>'),
            Nc(
              [i.RefSelector("eMiniChartsContainer")],
              e.prototype,
              "eMiniChartsContainer",
              void 0
            ),
            Nc([i.RefSelector("eNavBar")], e.prototype, "eNavBar", void 0),
            Nc(
              [i.RefSelector("eCardSelector")],
              e.prototype,
              "eCardSelector",
              void 0
            ),
            Nc([i.RefSelector("ePrevBtn")], e.prototype, "ePrevBtn", void 0),
            Nc([i.RefSelector("eNextBtn")], e.prototype, "eNextBtn", void 0),
            Nc([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        Ic = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Lc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Gc = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            (o.tabs = []), (o.chartIcons = {});
            var n = e.type,
              r = e.panels;
            return (
              (o.chartController = e.controller),
              (o.currentChartType = n),
              (o.panels = r),
              o
            );
          }
          return (
            Ic(e, t),
            (e.prototype.init = function () {
              var t = this;
              this.panels.forEach(function (e) {
                var o = e.replace("chart", "").toLowerCase(),
                  n = t.createTab(e, o, t.getPanelClass(o)),
                  r = n.comp;
                t.tabs.push(n.tab),
                  t.addDestroyFunc(function () {
                    return t.destroyBean(r);
                  });
              }),
                (this.tabbedLayout = new i.TabbedLayout({
                  items: this.tabs,
                  cssClass: "ag-chart-tabbed-menu",
                })),
                this.getContext().createBean(this.tabbedLayout);
            }),
            (e.prototype.createTab = function (t, e, o) {
              var n = document.createElement("div");
              i._.addCssClass(n, "ag-chart-tab"),
                i._.addCssClass(n, "ag-chart-" + e);
              var r = new o(this.chartController);
              this.getContext().createBean(r), n.appendChild(r.getGui());
              var s = document.createElement("div"),
                a = this.chartTranslator.translate(e);
              return (
                (s.innerText = a),
                {
                  comp: r,
                  tab: {
                    title: s,
                    titleLabel: a,
                    bodyPromise: i.AgPromise.resolve(n),
                    name: t,
                  },
                }
              );
            }),
            (e.prototype.getMinDimensions = function () {
              return this.tabbedLayout.getMinDimensions();
            }),
            (e.prototype.updateCurrentChartType = function (t) {
              i._.removeCssClass(
                this.chartIcons[this.currentChartType],
                "ag-selected"
              ),
                (this.currentChartType = t),
                i._.addCssClass(this.chartIcons[t], "ag-selected");
            }),
            (e.prototype.showTab = function (t) {
              this.tabbedLayout.showItem(this.tabs[t]);
            }),
            (e.prototype.getGui = function () {
              return this.tabbedLayout && this.tabbedLayout.getGui();
            }),
            (e.prototype.destroy = function () {
              this.parentComponent &&
                this.parentComponent.isAlive() &&
                this.destroyBean(this.parentComponent),
                t.prototype.destroy.call(this);
            }),
            (e.prototype.getPanelClass = function (t) {
              switch (t) {
                case e.TAB_DATA:
                  return Pu;
                case e.TAB_FORMAT:
                  return Yp;
                default:
                  return Mc;
              }
            }),
            (e.EVENT_TAB_SELECTED = "tabSelected"),
            (e.TAB_MAIN = "settings"),
            (e.TAB_DATA = "data"),
            (e.TAB_FORMAT = "format"),
            Lc(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Lc([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        kc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Vc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Wc = (function (t) {
          function e(o, n, r) {
            var i = t.call(this, e.TEMPLATE) || this;
            return (
              (i.eChartContainer = o),
              (i.eMenuPanelContainer = n),
              (i.chartController = r),
              (i.buttons = {
                chartSettings: [
                  "menu",
                  function () {
                    return i.showMenu("chartSettings");
                  },
                ],
                chartData: [
                  "menu",
                  function () {
                    return i.showMenu("chartData");
                  },
                ],
                chartFormat: [
                  "menu",
                  function () {
                    return i.showMenu("chartFormat");
                  },
                ],
                chartLink: [
                  "linked",
                  function (t) {
                    return i.toggleDetached(t);
                  },
                ],
                chartUnlink: [
                  "unlinked",
                  function (t) {
                    return i.toggleDetached(t);
                  },
                ],
                chartDownload: [
                  "save",
                  function () {
                    return i.saveChart();
                  },
                ],
              }),
              (i.tabs = []),
              (i.menuVisible = !1),
              i
            );
          }
          return (
            kc(e, t),
            (e.prototype.postConstruct = function () {
              this.createButtons(), this.refreshMenuClasses();
            }),
            (e.prototype.isVisible = function () {
              return this.menuVisible;
            }),
            (e.prototype.getToolbarOptions = function () {
              var t = this,
                e = [
                  "chartSettings",
                  "chartData",
                  "chartFormat",
                  this.chartController.isChartLinked()
                    ? "chartLink"
                    : "chartUnlink",
                  "chartDownload",
                ],
                o = this.gridOptionsWrapper.getChartToolbarItemsFunc();
              o &&
                (e = o({
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                  defaultItems: e,
                }).filter(function (e) {
                  return (
                    !!t.buttons[e] ||
                    (console.warn(
                      "AG Grid: '" + e + " is not a valid Chart Toolbar Option"
                    ),
                    !1)
                  );
                })),
                this.chartController.isPivotChart() &&
                  (e = e.filter(function (t) {
                    return "chartData" !== t;
                  }));
              var n = ["chartUnlink", "chartLink", "chartDownload"];
              return (
                (this.tabs = e.filter(function (t) {
                  return -1 === n.indexOf(t);
                })),
                e.filter(function (e) {
                  return (
                    -1 !== n.indexOf(e) || (t.tabs.length && e === t.tabs[0])
                  );
                })
              );
            }),
            (e.prototype.toggleDetached = function (t) {
              var e = t.target,
                o = i._.containsClass(e, "ag-icon-linked");
              i._.addOrRemoveCssClass(e, "ag-icon-linked", !o),
                i._.addOrRemoveCssClass(e, "ag-icon-unlinked", o);
              var n = this.chartTranslator.translate(
                o ? "chartUnlinkToolbarTooltip" : "chartLinkToolbarTooltip"
              );
              n && (e.title = n), this.chartController.detachChartRange();
            }),
            (e.prototype.createButtons = function () {
              var t = this,
                e = this.getToolbarOptions(),
                o = this.getGui();
              e.forEach(function (e) {
                var n = t.buttons[e],
                  r = n[1],
                  s = i._.createIconNoSpan(
                    n[0],
                    t.gridOptionsWrapper,
                    void 0,
                    !0
                  );
                i._.addCssClass(s, "ag-chart-menu-icon");
                var a = t.chartTranslator.translate(e + "ToolbarTooltip");
                a && (s.title = a),
                  t.addManagedListener(s, "click", r),
                  o.appendChild(s);
              });
            }),
            (e.prototype.saveChart = function () {
              this.dispatchEvent({ type: e.EVENT_DOWNLOAD_CHART });
            }),
            (e.prototype.createMenuPanel = function (t) {
              var e = this,
                o = this.gridOptionsWrapper.chartMenuPanelWidth(),
                n = (this.menuPanel = this.createBean(
                  new i.AgPanel({
                    minWidth: o,
                    width: o,
                    height: "100%",
                    closable: !0,
                    hideTitleBar: !0,
                    cssIdentifier: "chart-menu",
                  })
                ));
              return (
                n.setParentComponent(this),
                this.eMenuPanelContainer.appendChild(n.getGui()),
                (this.tabbedMenu = this.createBean(
                  new Gc({
                    controller: this.chartController,
                    type: this.chartController.getChartType(),
                    panels: this.tabs,
                  })
                )),
                this.addManagedListener(
                  n,
                  i.Component.EVENT_DESTROYED,
                  function () {
                    return e.destroyBean(e.tabbedMenu);
                  }
                ),
                new i.AgPromise(function (o) {
                  window.setTimeout(function () {
                    n.setBodyComponent(e.tabbedMenu),
                      e.tabbedMenu.showTab(t),
                      e.addManagedListener(
                        e.eChartContainer,
                        "click",
                        function (t) {
                          e.getGui().contains(t.target) ||
                            (e.menuVisible && e.hideMenu());
                        }
                      ),
                      o(n);
                  }, 100);
                })
              );
            }),
            (e.prototype.showContainer = function () {
              this.menuPanel &&
                ((this.menuVisible = !0),
                this.showParent(this.menuPanel.getWidth()),
                this.refreshMenuClasses());
            }),
            (e.prototype.showMenu = function (t) {
              var e = this.tabs.indexOf(t);
              this.menuPanel
                ? this.showContainer()
                : this.createMenuPanel(e).then(this.showContainer.bind(this));
            }),
            (e.prototype.hideMenu = function () {
              var t = this;
              this.hideParent(),
                window.setTimeout(function () {
                  (t.menuVisible = !1), t.refreshMenuClasses();
                }, 500);
            }),
            (e.prototype.refreshMenuClasses = function () {
              i._.addOrRemoveCssClass(
                this.eChartContainer,
                "ag-chart-menu-visible",
                this.menuVisible
              ),
                i._.addOrRemoveCssClass(
                  this.eChartContainer,
                  "ag-chart-menu-hidden",
                  !this.menuVisible
                );
            }),
            (e.prototype.showParent = function (t) {
              this.eMenuPanelContainer.style.minWidth = t + "px";
            }),
            (e.prototype.hideParent = function () {
              this.eMenuPanelContainer.style.minWidth = "0";
            }),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this),
                this.menuPanel &&
                  this.menuPanel.isAlive() &&
                  this.destroyBean(this.menuPanel);
            }),
            (e.EVENT_DOWNLOAD_CHART = "downloadChart"),
            (e.TEMPLATE = '<div class="ag-chart-menu"></div>'),
            Vc(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            Vc([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        Hc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Bc = function () {
          return (Bc =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        jc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Uc = (function (t) {
          function e(o) {
            var n = t.call(this, e.TEMPLATE) || this;
            return (n.chartMenu = o), n;
          }
          return (
            Hc(e, t),
            (e.prototype.init = function () {
              var t = this;
              this.addManagedListener(this.getGui(), "keypress", function (e) {
                "Enter" === e.key && t.endEditing();
              }),
                this.addManagedListener(
                  this.getGui(),
                  "blur",
                  this.endEditing.bind(this)
                );
            }),
            (e.prototype.setChartProxy = function (t) {
              var e = this;
              if (this.chartProxy) {
                for (var o = 0; o++; o < this.destroyableChartListeners.length)
                  this.destroyableChartListeners[o]();
                this.destroyableChartListeners = [];
              }
              this.chartProxy = t;
              var n = this.chartProxy.getChart(),
                r = n.scene.canvas.element,
                i = this.addManagedListener(r, "dblclick", function (t) {
                  var o = n.title;
                  if (o && o.node.containsPoint(t.offsetX, t.offsetY)) {
                    var r = o.node.computeBBox(),
                      i = o.node.inverseTransformPoint(r.x, r.y);
                    e.startEditing(Bc(Bc({}, r), i));
                  }
                }),
                s = this.addManagedListener(r, "mousemove", function (t) {
                  var e = n.title,
                    o =
                      e &&
                      e.enabled &&
                      e.node.containsPoint(t.offsetX, t.offsetY);
                  r.style.cursor = o ? "pointer" : "";
                });
              this.destroyableChartListeners = [i, s];
            }),
            (e.prototype.startEditing = function (t) {
              if (!this.chartMenu || !this.chartMenu.isVisible()) {
                var e = this.chartProxy.getChart().width,
                  o = Math.max(Math.min(t.width + 20, e), 300),
                  n = this.getGui();
                i._.addCssClass(n, "currently-editing");
                var r = n.style;
                (r.fontFamily = this.chartProxy.getTitleOption("fontFamily")),
                  (r.fontWeight = this.chartProxy.getTitleOption("fontWeight")),
                  (r.fontStyle = this.chartProxy.getTitleOption("fontStyle")),
                  (r.fontSize =
                    this.chartProxy.getTitleOption("fontSize") + "px"),
                  (r.color = this.chartProxy.getTitleOption("color"));
                var s = this.chartProxy.getTitleOption("text"),
                  a =
                    s === this.chartTranslator.translate("titlePlaceholder")
                      ? ""
                      : s;
                n.value = a;
                var l = n.getBoundingClientRect();
                (r.left = Math.round(t.x + t.width / 2 - o / 2) + "px"),
                  (r.top =
                    Math.round(t.y + t.height / 2 - l.height / 2) + "px"),
                  (r.width = Math.round(o) + "px"),
                  n.focus();
              }
            }),
            (e.prototype.endEditing = function () {
              var t = this.getGui().value;
              this.chartProxy.setTitleOption("text", t),
                this.eventService.dispatchEvent({ type: "chartTitleEdit" }),
                i._.removeCssClass(this.getGui(), "currently-editing");
            }),
            (e.TEMPLATE =
              '<input\n            class="ag-chart-title-edit"\n            style="padding:0; border:none; border-radius: 0; min-height: 0; text-align: center;" />\n        '),
            jc(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            jc([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        zc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Kc = function () {
          return (Kc =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Yc = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return o.initChartOptions(), o.recreateChart(), o;
          }
          return (
            zc(e, t),
            (e.prototype.getDefaultOptionsFromTheme = function (e) {
              var o = t.prototype.getDefaultOptionsFromTheme.call(this, e),
                n = this.chartType,
                r = this.getStandaloneChartType(),
                s = e.getConfig(
                  r +
                    ".series." +
                    (n === i.ChartType.GroupedBar ||
                    n === i.ChartType.StackedBar ||
                    n === i.ChartType.NormalizedBar
                      ? "bar"
                      : "column")
                );
              return (
                (o.seriesDefaults = {
                  shadow: s.shadow,
                  label: s.label,
                  tooltip: {
                    enabled: s.tooltip && s.tooltip.enabled,
                    renderer: s.tooltip && s.tooltip.renderer,
                  },
                  fill: {
                    colors: s.fills || e.palette.fills,
                    opacity: s.fillOpacity,
                  },
                  stroke: {
                    colors: s.strokes || e.palette.strokes,
                    opacity: s.strokeOpacity,
                    width: s.strokeWidth,
                  },
                  lineDash: s.lineDash ? s.lineDash : [0],
                  lineDashOffset: s.lineDashOffset,
                  highlightStyle: s.highlightStyle,
                  listeners: s.listeners,
                }),
                o
              );
            }),
            (e.prototype.createChart = function (t) {
              var e = this.chartProxyParams,
                o = e.grouping,
                n = e.parentElement,
                r = this.isColumnChart(),
                i = (t = t || this.chartOptions).seriesDefaults,
                s = t;
              return (
                o && (s.type = "groupedCategory"),
                (s.autoSize = !0),
                (s.axes = [
                  Kc(Kc({}, r ? t.xAxis : t.yAxis), {
                    position: r ? "bottom" : "left",
                    type: o ? "groupedCategory" : "category",
                  }),
                  Kc(Kc({}, r ? t.yAxis : t.xAxis), {
                    position: r ? "left" : "bottom",
                    type: "number",
                  }),
                ]),
                (s.series = [
                  Kc(Kc({}, this.getSeriesDefaults()), {
                    fills: i.fill.colors,
                    fillOpacity: i.fill.opacity,
                    strokes: i.stroke.colors,
                    strokeOpacity: i.stroke.opacity,
                    strokeWidth: i.stroke.width,
                    tooltip: {
                      enabled: i.tooltip && i.tooltip.enabled,
                      renderer:
                        i.tooltip && i.tooltip.enabled && i.tooltip.renderer,
                    },
                  }),
                ]),
                (s.container = n),
                pu.create(s)
              );
            }),
            (e.prototype.update = function (t) {
              var e = this;
              (this.chartProxyParams.grouping = t.grouping),
                this.updateAxes("category", !this.isColumnChart());
              var o = this.chart,
                n = o.series[0],
                r = this.getPalette(),
                i = t.fields;
              if (this.crossFiltering) {
                i.forEach(function (t) {
                  var e = Kc({}, t);
                  (e.colId = t.colId + "-filtered-out"), i.push(e);
                });
                var s = [];
                r.fills.forEach(function (t) {
                  s.push(t), s.push(e.hexToRGBA(t, "0.3"));
                }),
                  (n.fills = s),
                  r.strokes.forEach(function (t) {
                    s.push(t), s.push(e.hexToRGBA(t, "0.3"));
                  }),
                  (n.strokes = []),
                  (n.highlightStyle.fill = void 0);
                var a = t.fields.map(function (t) {
                  return t.colId;
                });
                (n.hideInLegend = a.filter(function (t) {
                  return t.includes("-filtered-out");
                })),
                  o.legend.addEventListener("click", function (t) {
                    n.toggleSeriesItem(t.itemId + "-filtered-out", t.enabled);
                  }),
                  (o.tooltip.delay = 500),
                  n.addEventListener("nodeClick", this.crossFilterCallback);
              } else (n.fills = r.fills), (n.strokes = r.strokes);
              (n.data = this.transformData(t.data, t.category.id)),
                (n.xKey = t.category.id),
                (n.xName = t.category.name),
                (n.yKeys = t.fields.map(function (t) {
                  return t.colId;
                })),
                (n.yNames = t.fields.map(function (t) {
                  return t.displayName;
                })),
                this.updateLabelRotation(t.category.id, !this.isColumnChart());
            }),
            (e.prototype.getDefaultOptions = function () {
              var t = this.getDefaultFontOptions(),
                e = this.getDefaultCartesianChartOptions();
              return (
                (e.seriesDefaults = Kc(Kc({}, e.seriesDefaults), {
                  tooltip: { enabled: !0 },
                  label: Kc(Kc({}, t), { enabled: !1 }),
                  shadow: this.getDefaultDropShadowOptions(),
                })),
                e
              );
            }),
            (e.prototype.isColumnChart = function () {
              return i._.includes(
                [
                  i.ChartType.Column,
                  i.ChartType.GroupedColumn,
                  i.ChartType.StackedColumn,
                  i.ChartType.NormalizedColumn,
                ],
                this.chartType
              );
            }),
            (e.prototype.getSeriesDefaults = function () {
              var t = this.chartType,
                e = this.isColumnChart(),
                o =
                  !this.crossFiltering &&
                  (t === i.ChartType.GroupedColumn ||
                    t === i.ChartType.GroupedBar),
                n =
                  !this.crossFiltering &&
                  (t === i.ChartType.NormalizedColumn ||
                    t === i.ChartType.NormalizedBar);
              return Kc(Kc({}, this.chartOptions.seriesDefaults), {
                type: e ? "column" : "bar",
                grouped: o,
                normalizedTo: n ? 100 : void 0,
              });
            }),
            e
          );
        })(up),
        Xc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        qc = function () {
          return (qc =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Qc = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return o.initChartOptions(), o.recreateChart(), o;
          }
          return (
            Xc(e, t),
            (e.prototype.createChart = function (t) {
              var e = this.chartProxyParams,
                o = e.grouping,
                n = e.parentElement,
                r = this.getSeriesDefaults(),
                i = qc({}, r.marker);
              i.type && ((i.shape = i.type), delete i.type);
              var s = (t = t || this.chartOptions),
                a = t.xAxis.type ? t.xAxis.type : "category";
              return (
                o && (s.type = "groupedCategory"),
                (s.autoSize = !0),
                (s.axes = [
                  qc(
                    {
                      type: o ? "groupedCategory" : a,
                      position: "bottom",
                      paddingInner: 1,
                      paddingOuter: 0,
                    },
                    this.getXAxisDefaults(a, t)
                  ),
                  qc({ type: "number", position: "left" }, t.yAxis),
                ]),
                (s.series = [
                  qc(qc({}, r), {
                    type: "area",
                    fills: r.fill.colors,
                    fillOpacity: r.fill.opacity,
                    strokes: r.stroke.colors,
                    strokeOpacity: r.stroke.opacity,
                    strokeWidth: r.stroke.width,
                    tooltip: {
                      enabled: r.tooltip && r.tooltip.enabled,
                      renderer: r.tooltip && r.tooltip.renderer,
                    },
                    marker: i,
                  }),
                ]),
                pu.create(s, n)
              );
            }),
            (e.prototype.update = function (t) {
              this.chartProxyParams.grouping = t.grouping;
              var e = this.isTimeAxis(t) ? "time" : "category";
              if ((this.updateAxes(e), this.chartType === i.ChartType.Area))
                this.updateAreaChart(t);
              else {
                var o = this.chart.series[0];
                if (!o) {
                  var n = this.getSeriesDefaults(),
                    r = qc({}, n.marker);
                  if (
                    (r.type && ((r.shape = r.type), delete r.type),
                    !(o = pu.createComponent(
                      qc(qc({}, n), {
                        fills: n.fill.colors,
                        fillOpacity: n.fill.opacity,
                        strokes: n.stroke.colors,
                        strokeOpacity: n.stroke.opacity,
                        strokeWidth: n.stroke.width,
                        marker: r,
                      }),
                      "area.series"
                    )))
                  )
                    return;
                  this.chart.addSeries(o);
                }
                var s = this.getPalette(),
                  a = s.fills,
                  l = s.strokes;
                (o.data = this.transformData(t.data, t.category.id)),
                  (o.xKey = t.category.id),
                  (o.xName = t.category.name),
                  (o.yKeys = t.fields.map(function (t) {
                    return t.colId;
                  })),
                  (o.yNames = t.fields.map(function (t) {
                    return t.displayName;
                  })),
                  (o.fills = a),
                  (o.strokes = l);
              }
              this.updateLabelRotation(t.category.id, !1, e);
            }),
            (e.prototype.updateAreaChart = function (t) {
              var e = this,
                o = this.chart;
              if (0 !== t.fields.length) {
                var n,
                  r = t.fields.map(function (t) {
                    return t.colId;
                  }),
                  i = o.series.reduceRight(function (t, e, n) {
                    var i = e.yKeys[0];
                    return (
                      r.indexOf(i) === n ? t.set(i, e) : o.removeSeries(e), t
                    );
                  }, new Map()),
                  s = this.transformData(t.data, t.category.id),
                  a = this.getPalette(),
                  l = a.fills,
                  u = a.strokes;
                t.fields.forEach(function (r, a) {
                  var p = e.processDataForCrossFiltering(s, r.colId, t),
                    c = p.yKey,
                    d = p.atLeastOneSelectedPoint,
                    h = i.get(r.colId),
                    f = l[a % l.length],
                    g = u[a % u.length];
                  if (h)
                    (h.data = s),
                      (h.xKey = t.category.id),
                      (h.xName = t.category.name),
                      (h.yKeys = [c]),
                      (h.yNames = [r.displayName]),
                      (h.fills = [f]),
                      (h.strokes = [g]);
                  else {
                    var y = e.getSeriesDefaults(),
                      m = qc({}, y.marker);
                    m.type && ((m.shape = m.type), delete m.type);
                    var v = qc(qc({}, y), {
                      data: s,
                      xKey: t.category.id,
                      xName: t.category.name,
                      yKeys: [c],
                      yNames: [r.displayName],
                      fills: [f],
                      strokes: [g],
                      fillOpacity: y.fill.opacity,
                      strokeOpacity: y.stroke.opacity,
                      strokeWidth: y.stroke.width,
                      marker: m,
                    });
                    (h = pu.createComponent(v, "area.series")),
                      o.addSeriesAfter(h, n);
                  }
                  e.updateSeriesForCrossFiltering(h, r.colId, o, t, d), (n = h);
                });
              } else o.removeAllSeries();
            }),
            (e.prototype.getDefaultOptionsFromTheme = function (e) {
              var o = t.prototype.getDefaultOptionsFromTheme.call(this, e),
                n = e.getConfig("area.series.area");
              return (
                (o.seriesDefaults = {
                  shadow: n.shadow,
                  tooltip: {
                    enabled: n.tooltip && n.tooltip.enabled,
                    renderer: n.tooltip && n.tooltip.renderer,
                  },
                  fill: { colors: e.palette.fills, opacity: n.fillOpacity },
                  stroke: {
                    colors: e.palette.strokes,
                    opacity: n.strokeOpacity,
                    width: n.strokeWidth,
                  },
                  marker: {
                    enabled: n.marker.enabled,
                    shape: n.marker.shape,
                    size: n.marker.size,
                    strokeWidth: n.marker.strokeWidth,
                    formatter: n.marker.formatter,
                  },
                  lineDash: n.lineDash ? n.lineDash : [0],
                  lineDashOffset: n.lineDashOffset,
                  highlightStyle: n.highlightStyle,
                  listeners: n.listeners,
                }),
                o
              );
            }),
            (e.prototype.getDefaultOptions = function () {
              var t = this.getDefaultCartesianChartOptions();
              return (
                (t.xAxis.label.rotation = 335),
                (t.seriesDefaults = qc(qc({}, t.seriesDefaults), {
                  fill: qc(qc({}, t.seriesDefaults.fill), {
                    opacity: this.chartType === i.ChartType.Area ? 0.7 : 1,
                  }),
                  stroke: qc(qc({}, t.seriesDefaults.stroke), { width: 3 }),
                  marker: {
                    shape: "circle",
                    enabled: !0,
                    size: 6,
                    strokeWidth: 1,
                  },
                  tooltip: { enabled: !0 },
                  shadow: this.getDefaultDropShadowOptions(),
                })),
                t
              );
            }),
            (e.prototype.getSeriesDefaults = function () {
              return qc(qc({}, this.chartOptions.seriesDefaults), {
                type: "area",
                normalizedTo:
                  this.chartType === i.ChartType.NormalizedArea ? 100 : void 0,
              });
            }),
            e
          );
        })(up),
        Zc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        $c = function () {
          return ($c =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Jc = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return o.initChartOptions(), o.recreateChart(), o;
          }
          return (
            Zc(e, t),
            (e.prototype.createChart = function (t) {
              var e = this.chartProxyParams,
                o = e.grouping,
                n = e.parentElement,
                r = (t = t || this.chartOptions);
              r.autoSize = !0;
              var i = t.xAxis.type ? t.xAxis.type : "category";
              return (
                o && (r.type = "groupedCategory"),
                (r.axes = [
                  $c(
                    { type: o ? "groupedCategory" : i, position: "bottom" },
                    this.getXAxisDefaults(i, t)
                  ),
                  $c({ type: "number", position: "left" }, t.yAxis),
                ]),
                pu.create(r, n)
              );
            }),
            (e.prototype.update = function (t) {
              var e = this;
              if (
                ((this.chartProxyParams.grouping = t.grouping),
                0 !== t.fields.length)
              ) {
                var o = this.isTimeAxis(t) ? "time" : "category";
                this.updateAxes(o);
                var n,
                  r = this.chart,
                  i = t.fields,
                  s = i.map(function (t) {
                    return t.colId;
                  }),
                  a = this.transformData(t.data, t.category.id),
                  l = r.series.reduceRight(function (t, e, o) {
                    var n = e.yKey;
                    return (
                      s.indexOf(n) === o ? t.set(n, e) : r.removeSeries(e), t
                    );
                  }, new Map()),
                  u = this.getPalette(),
                  p = u.fills,
                  c = u.strokes;
                i.forEach(function (o, i) {
                  var s = e.processDataForCrossFiltering(a, o.colId, t),
                    u = s.yKey,
                    d = s.atLeastOneSelectedPoint,
                    h = l.get(o.colId),
                    f = p[i % p.length],
                    g = c[i % c.length];
                  if (h)
                    (h.title = o.displayName),
                      (h.data = a),
                      (h.xKey = t.category.id),
                      (h.xName = t.category.name),
                      (h.yKey = u),
                      (h.yName = o.displayName),
                      (h.marker.fill = f),
                      (h.marker.stroke = g),
                      (h.stroke = f);
                  else {
                    var y = e.chartOptions.seriesDefaults,
                      m = $c($c({}, y.marker), { fill: f, stroke: g });
                    m.type && ((m.shape = m.type), delete m.type);
                    var v = $c($c({}, y), {
                      type: "line",
                      title: o.displayName,
                      data: a,
                      xKey: t.category.id,
                      xName: t.category.name,
                      yKey: u,
                      yName: o.displayName,
                      fill: f,
                      stroke: f,
                      fillOpacity: y.fill.opacity,
                      strokeOpacity: y.stroke.opacity,
                      strokeWidth: y.stroke.width,
                      tooltip: {
                        enabled: y.tooltip && y.tooltip.enabled,
                        renderer:
                          y.tooltip && y.tooltip.enabled && y.tooltip.renderer,
                      },
                      marker: m,
                    });
                    (h = pu.createComponent(v, "line.series")),
                      r.addSeriesAfter(h, n);
                  }
                  e.updateSeriesForCrossFiltering(h, o.colId, r, t, d), (n = h);
                }),
                  this.updateLabelRotation(t.category.id, !1, o);
              } else this.chart.removeAllSeries();
            }),
            (e.prototype.getDefaultOptionsFromTheme = function (e) {
              var o = t.prototype.getDefaultOptionsFromTheme.call(this, e),
                n = e.getConfig("line.series.line");
              return (
                (o.seriesDefaults = {
                  tooltip: {
                    enabled: n.tooltip && n.tooltip.enabled,
                    renderer: n.tooltip && n.tooltip.renderer,
                  },
                  fill: { colors: [], opacity: 1 },
                  stroke: {
                    colors: e.palette.strokes,
                    opacity: n.strokeOpacity,
                    width: n.strokeWidth,
                  },
                  marker: {
                    enabled: n.marker.enabled,
                    shape: n.marker.shape,
                    size: n.marker.size,
                    strokeWidth: n.marker.strokeWidth,
                    formatter: n.marker.formatter,
                  },
                  lineDash: n.lineDash ? n.lineDash : [0],
                  lineDashOffset: n.lineDashOffset,
                  highlightStyle: n.highlightStyle,
                  listeners: n.listeners,
                }),
                o
              );
            }),
            (e.prototype.getDefaultOptions = function () {
              var t = this.getDefaultCartesianChartOptions();
              return (
                (t.xAxis.label.rotation = 335),
                (t.seriesDefaults = $c($c({}, t.seriesDefaults), {
                  stroke: $c($c({}, t.seriesDefaults.stroke), { width: 3 }),
                  marker: {
                    enabled: !0,
                    shape: "circle",
                    size: 6,
                    strokeWidth: 1,
                  },
                  tooltip: { enabled: !0 },
                })),
                t
              );
            }),
            e
          );
        })(up),
        td = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ed = (function (t) {
          function e(e) {
            return t.call(this, e) || this;
          }
          return (
            td(e, t),
            (e.prototype.addCrossFilteringTooltipRenderer = function (t) {
              t.tooltip.renderer = function (t) {
                return {
                  content:
                    t.datum[t.labelKey] +
                    ": " +
                    t.angleValue * t.datum[t.radiusKey],
                };
              };
            }),
            e
          );
        })(sp),
        od = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        nd = function () {
          return (nd =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        rd = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return o.initChartOptions(), o.recreateChart(), o;
          }
          return (
            od(e, t),
            (e.prototype.createChart = function (t) {
              var e = (t = t || this.chartOptions).seriesDefaults,
                o = t;
              return (
                (o.autoSize = !0),
                (o.series = [
                  nd(nd({}, e), {
                    fills: e.fill.colors,
                    fillOpacity: e.fill.opacity,
                    strokes: e.stroke.colors,
                    strokeOpacity: e.stroke.opacity,
                    strokeWidth: e.stroke.width,
                    type: "pie",
                  }),
                ]),
                pu.create(o, this.chartProxyParams.parentElement)
              );
            }),
            (e.prototype.getDefaultOptionsFromTheme = function (e) {
              var o = t.prototype.getDefaultOptionsFromTheme.call(this, e),
                n = e.getConfig("pie.series.pie");
              return (
                (o.seriesDefaults = {
                  title: n.title,
                  label: n.label,
                  callout: n.callout,
                  shadow: n.shadow,
                  tooltip: {
                    enabled: n.tooltip && n.tooltip.enabled,
                    renderer: n.tooltip && n.tooltip.renderer,
                  },
                  fill: { colors: e.palette.fills, opacity: n.fillOpacity },
                  stroke: {
                    colors: e.palette.strokes,
                    opacity: n.strokeOpacity,
                    width: n.strokeWidth,
                  },
                  lineDash: n.lineDash,
                  lineDashOffset: n.lineDashOffset,
                  highlightStyle: n.highlightStyle,
                  listeners: n.listeners,
                }),
                o
              );
            }),
            (e.prototype.update = function (t) {
              var e = this.chart;
              if (0 !== t.fields.length) {
                var o = t.fields[0],
                  n = o;
                if (this.crossFiltering) {
                  var r = t.fields;
                  r.forEach(function (t) {
                    var e = nd({}, t);
                    (e.colId = t.colId + "-filtered-out"), r.push(e);
                  });
                  var i = r[1];
                  t.data.forEach(function (t) {
                    (t[o.colId + "-total"] = t[o.colId] + t[i.colId]),
                      (t[o.colId] = t[o.colId] / t[o.colId + "-total"]),
                      (t[i.colId] = 1);
                  });
                  var s = e.series[1],
                    a = i;
                  (s = this.updateSeries(e, s, n, a, t, void 0)),
                    this.updateSeries(e, e.series[0], n, (a = n), t, s);
                } else this.updateSeries(e, e.series[0], n, n, t, void 0);
              } else e.removeAllSeries();
            }),
            (e.prototype.updateSeries = function (t, e, o, n, r, i) {
              var s = this,
                a = e && e.angleKey,
                l = this.getPalette(),
                u = l.fills,
                p = l.strokes,
                c = this.chartOptions.seriesDefaults,
                d = e,
                h = c.callout && c.callout.colors;
              return (
                a !== n.colId &&
                  (t.removeSeries(e),
                  (d = pu.createComponent(
                    nd(nd({}, c), {
                      type: "pie",
                      angleKey: this.crossFiltering
                        ? o.colId + "-total"
                        : o.colId,
                      radiusKey: this.crossFiltering ? n.colId : void 0,
                      title: nd(nd({}, c.title), {
                        text: c.title.text || r.fields[0].displayName,
                      }),
                      fills: c.fill.colors,
                      fillOpacity: c.fill.opacity,
                      strokes: c.stroke.colors,
                      strokeOpacity: c.stroke.opacity,
                      strokeWidth: c.stroke.width,
                      tooltip: {
                        enabled: c.tooltip && c.tooltip.enabled,
                        renderer:
                          c.tooltip && c.tooltip.enabled && c.tooltip.renderer,
                      },
                    }),
                    "pie.series"
                  )),
                  this.crossFiltering &&
                    !d.tooltip.renderer &&
                    this.addCrossFilteringTooltipRenderer(d)),
                (d.angleName = n.displayName),
                (d.labelKey = r.category.id),
                (d.labelName = r.category.name),
                (d.data = r.data),
                this.crossFiltering
                  ? ((d.radiusMin = 0),
                    (d.radiusMax = 1),
                    i
                      ? (t.legend.addEventListener("click", function (t) {
                          i && i.toggleSeriesItem(t.itemId, t.enabled);
                        }),
                        (d.fills = u),
                        (d.strokes = p),
                        h && (d.callout.colors = p))
                      : ((d.fills = u.map(function (t) {
                          return s.hexToRGBA(t, "0.3");
                        })),
                        (d.strokes = p.map(function (t) {
                          return s.hexToRGBA(t, "0.3");
                        })),
                        (d.showInLegend = !1)),
                    (t.tooltip.delay = 500),
                    (d.highlightStyle.fill = void 0),
                    d.addEventListener("nodeClick", this.crossFilterCallback))
                  : ((d.fills = u),
                    (d.strokes = p),
                    h && (d.callout.colors = p)),
                t.addSeries(d),
                d
              );
            }),
            (e.prototype.getDefaultOptions = function () {
              var t = this.getPredefinedPalette().strokes,
                e = this.getDefaultChartOptions(),
                o = this.getDefaultFontOptions();
              return (
                (e.seriesDefaults = nd(nd({}, e.seriesDefaults), {
                  title: nd(nd({}, o), {
                    enabled: !1,
                    fontSize: 12,
                    fontWeight: "bold",
                  }),
                  callout: { colors: t, length: 10, strokeWidth: 2 },
                  label: nd(nd({}, o), { enabled: !1, offset: 3, minAngle: 0 }),
                  tooltip: { enabled: !0 },
                  shadow: this.getDefaultDropShadowOptions(),
                })),
                e
              );
            }),
            e
          );
        })(ed),
        id = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        sd = function () {
          return (sd =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        ad = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return o.initChartOptions(), o.recreateChart(), o;
          }
          return (
            id(e, t),
            (e.prototype.getDefaultOptionsFromTheme = function (e) {
              var o = t.prototype.getDefaultOptionsFromTheme.call(this, e),
                n = e.getConfig("pie.series.pie");
              return (
                (o.seriesDefaults = {
                  title: n.title,
                  label: n.label,
                  callout: n.callout,
                  shadow: n.shadow,
                  tooltip: {
                    enabled: n.tooltip && n.tooltip.enabled,
                    renderer: n.tooltip && n.tooltip.renderer,
                  },
                  fill: { colors: e.palette.fills, opacity: n.fillOpacity },
                  stroke: {
                    colors: e.palette.strokes,
                    opacity: n.strokeOpacity,
                    width: n.strokeWidth,
                  },
                  lineDash: n.lineDash,
                  lineDashOffset: n.lineDashOffset,
                  highlightStyle: n.highlightStyle,
                  listeners: n.listeners,
                }),
                o
              );
            }),
            (e.prototype.createChart = function (t) {
              var e = (t = t || this.chartOptions);
              return (
                (e.type = "pie"),
                (e.autoSize = !0),
                (e.series = []),
                pu.create(e, this.chartProxyParams.parentElement)
              );
            }),
            (e.prototype.update = function (t) {
              var e = this;
              if (0 !== t.fields.length) {
                var o = this.chart,
                  n = t.fields.map(function (t) {
                    return t.colId;
                  }),
                  r = {};
                o.series.forEach(function (t) {
                  var e = t,
                    o = e.angleKey;
                  i._.includes(n, o) && (r[o] = e);
                });
                var s = this.chartOptions.seriesDefaults,
                  a = this.getPalette(),
                  l = a.fills,
                  u = a.strokes,
                  p = t.fields.length,
                  c = 0;
                t.fields.forEach(
                  this.crossFiltering
                    ? function (n, i) {
                        var a = sd({}, n);
                        (a.colId = n.colId + "-filtered-out"),
                          t.data.forEach(function (t) {
                            (t[n.colId + "-total"] = t[n.colId] + t[a.colId]),
                              (t[n.colId] = t[n.colId] / t[n.colId + "-total"]),
                              (t[a.colId] = 1);
                          });
                        var d = e.updateSeries({
                            seriesMap: r,
                            angleField: n,
                            field: a,
                            seriesDefaults: s,
                            index: i,
                            params: t,
                            fills: l,
                            strokes: u,
                            doughnutChart: o,
                            offset: c,
                            numFields: p,
                            opaqueSeries: void 0,
                          }),
                          h = d.updatedOffset;
                        e.updateSeries({
                          seriesMap: r,
                          angleField: n,
                          field: n,
                          seriesDefaults: s,
                          index: i,
                          params: t,
                          fills: l,
                          strokes: u,
                          doughnutChart: o,
                          offset: c,
                          numFields: p,
                          opaqueSeries: d.pieSeries,
                        }),
                          (c = h);
                      }
                    : function (n, i) {
                        var a = e.updateSeries({
                          seriesMap: r,
                          angleField: n,
                          field: n,
                          seriesDefaults: s,
                          index: i,
                          params: t,
                          fills: l,
                          strokes: u,
                          doughnutChart: o,
                          offset: c,
                          numFields: p,
                          opaqueSeries: void 0,
                        }).updatedOffset;
                        c = a;
                      }
                ),
                  (o.series = i._.values(r));
              } else this.chart.removeAllSeries();
            }),
            (e.prototype.updateSeries = function (t) {
              var e = this,
                o = t.seriesMap[t.field.colId],
                n = sd(sd({}, t.seriesDefaults), {
                  type: "pie",
                  angleKey: this.crossFiltering
                    ? t.angleField.colId + "-total"
                    : t.angleField.colId,
                  radiusKey: this.crossFiltering ? t.field.colId : void 0,
                  showInLegend: 0 === t.index,
                  title: sd(sd({}, t.seriesDefaults.title), {
                    text: t.seriesDefaults.title.text || t.field.displayName,
                  }),
                  fills: t.seriesDefaults.fill.colors,
                  fillOpacity: t.seriesDefaults.fill.opacity,
                  strokes: t.seriesDefaults.stroke.colors,
                  strokeOpacity: t.seriesDefaults.stroke.opacity,
                  strokeWidth: t.seriesDefaults.stroke.width,
                  tooltip: {
                    enabled:
                      t.seriesDefaults.tooltip &&
                      t.seriesDefaults.tooltip.enabled,
                    renderer:
                      (t.seriesDefaults.tooltip &&
                        t.seriesDefaults.tooltip.enabled &&
                        t.seriesDefaults.tooltip.renderer) ||
                      void 0,
                  },
                }),
                r = n.callout && n.callout.colors,
                i = o || pu.createComponent(n, "pie.series");
              o ||
                (this.crossFiltering &&
                  !i.tooltip.renderer &&
                  this.addCrossFilteringTooltipRenderer(i)),
                (i.angleName = t.field.displayName),
                (i.labelKey = t.params.category.id),
                (i.labelName = t.params.category.name),
                (i.data = t.params.data),
                0 === t.index &&
                  (i.toggleSeriesItem = function (e, o) {
                    t.doughnutChart &&
                      t.doughnutChart.series.forEach(function (t) {
                        t.seriesItemEnabled[e] = o;
                      }),
                      i.scheduleData();
                  }),
                this.crossFiltering
                  ? ((i.radiusMin = 0),
                    (i.radiusMax = 1),
                    t.opaqueSeries
                      ? (t.doughnutChart.legend.addEventListener(
                          "click",
                          function (e) {
                            t.opaqueSeries &&
                              t.opaqueSeries.toggleSeriesItem(
                                e.itemId,
                                e.enabled
                              );
                          }
                        ),
                        (i.fills = t.fills),
                        (i.strokes = t.strokes),
                        r && (i.callout.colors = t.strokes))
                      : ((i.fills = t.fills.map(function (t) {
                          return e.hexToRGBA(t, "0.3");
                        })),
                        (i.strokes = t.strokes.map(function (t) {
                          return e.hexToRGBA(t, "0.3");
                        })),
                        (i.showInLegend = !1)),
                    (i.highlightStyle.fill = void 0),
                    i.addEventListener("nodeClick", this.crossFilterCallback),
                    (t.doughnutChart.tooltip.delay = 500))
                  : ((i.fills = t.fills),
                    (i.strokes = t.strokes),
                    r && (i.callout.colors = t.strokes));
              var s = t.numFields > 1 ? 20 : 40;
              return (
                (i.outerRadiusOffset = t.offset),
                (t.offset -= s),
                (i.innerRadiusOffset = t.offset),
                (t.offset -= s),
                o || (t.seriesMap[t.field.colId] = i),
                { updatedOffset: t.offset, pieSeries: i }
              );
            }),
            (e.prototype.getDefaultOptions = function () {
              var t = this.getPredefinedPalette().strokes,
                e = this.getDefaultChartOptions(),
                o = this.getDefaultFontOptions();
              return (
                (e.seriesDefaults = sd(sd({}, e.seriesDefaults), {
                  title: sd(sd({}, o), {
                    enabled: !0,
                    fontSize: 12,
                    fontWeight: "bold",
                  }),
                  callout: { colors: t, length: 10, strokeWidth: 2 },
                  label: sd(sd({}, o), { enabled: !1, offset: 3, minAngle: 0 }),
                  tooltip: { enabled: !0 },
                  shadow: this.getDefaultDropShadowOptions(),
                })),
                e
              );
            }),
            e
          );
        })(ed),
        ld = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ud = function () {
          return (ud =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        pd = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return o.initChartOptions(), o.recreateChart(), o;
          }
          return (
            ld(e, t),
            (e.prototype.getDefaultOptionsFromTheme = function (e) {
              var o = t.prototype.getDefaultOptionsFromTheme.call(this, e),
                n = e.getConfig("histogram.series.histogram");
              return (
                (o.seriesDefaults = {
                  shadow: this.getDefaultDropShadowOptions(),
                  label: n.label,
                  tooltip: {
                    enabled: n.tooltip && n.tooltip.enabled,
                    renderer: n.tooltip && n.tooltip.renderer,
                  },
                  fill: { colors: e.palette.fills, opacity: n.fillOpacity },
                  stroke: {
                    colors: e.palette.strokes,
                    opacity: n.strokeOpacity,
                    width: n.strokeWidth,
                  },
                  lineDash: n.lineDash ? n.lineDash : [0],
                  lineDashOffset: n.lineDashOffset,
                  highlightStyle: n.highlightStyle,
                  listeners: n.listeners,
                }),
                o
              );
            }),
            (e.prototype.createChart = function (t) {
              var e = this.chartProxyParams.parentElement,
                o = this.getSeriesDefaults(),
                n = (t = t || this.chartOptions);
              return (
                (n.autoSize = !0),
                (n.axes = [
                  ud({ type: "number", position: "bottom" }, t.xAxis),
                  ud({ type: "number", position: "left" }, t.yAxis),
                ]),
                (n.series = [
                  ud(ud({}, o), {
                    fill: o.fill.colors[0],
                    fillOpacity: o.fill.opacity,
                    stroke: o.stroke.colors[0],
                    strokeOpacity: o.stroke.opacity,
                    strokeWidth: o.stroke.width,
                    tooltip: {
                      enabled: o.tooltip && o.tooltip.enabled,
                      renderer:
                        (o.tooltip &&
                          o.tooltip.enabled &&
                          o.tooltip.renderer) ||
                        void 0,
                    },
                    type: "histogram",
                  }),
                ]),
                pu.create(n, e)
              );
            }),
            (e.prototype.update = function (t) {
              var e = t.fields[0],
                o = this.chart.series[0];
              (o.data = t.data),
                (o.xKey = e.colId),
                (o.xName = e.displayName),
                (o.areaPlot = !1);
              var n = this.getPalette(),
                r = n.strokes;
              (o.fill = n.fills[0]), (o.stroke = r[0]);
            }),
            (e.prototype.getDefaultOptions = function () {
              var t = this.getDefaultFontOptions(),
                e = this.getDefaultCartesianChartOptions();
              return (
                (e.xAxis.label.rotation = 0),
                (e.yAxis.label.rotation = 0),
                (e.seriesDefaults = ud(ud({}, e.seriesDefaults), {
                  tooltip: { enabled: !0 },
                  label: ud(ud({}, t), { enabled: !1 }),
                  shadow: this.getDefaultDropShadowOptions(),
                  binCount: 10,
                })),
                e
              );
            }),
            (e.prototype.getSeriesDefaults = function () {
              return ud({}, this.chartOptions.seriesDefaults);
            }),
            e
          );
        })(up),
        cd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        dd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        hd = (function (t) {
          function e(o) {
            var n = t.call(this, e.TEMPLATE) || this;
            return (n.params = o), n;
          }
          return (
            cd(e, t),
            (e.prototype.init = function () {
              var t = this.gridOptionsWrapper.getChartThemes();
              if (t.length < 1)
                throw new Error(
                  "Cannot create chart: no chart themes are available to be used."
                );
              var e = this.params.chartThemeName;
              i._.includes(t, e) || (e = t[0]);
              var o = {
                  pivotChart: this.params.pivotChart,
                  chartType: this.params.chartType,
                  chartThemeName: e,
                  aggFunc: this.params.aggFunc,
                  cellRange: this.params.cellRange,
                  suppressChartRanges: this.params.suppressChartRanges,
                  unlinkChart: this.params.unlinkChart,
                  crossFiltering: this.params.crossFiltering,
                },
                n = this.gridOptionsWrapper.isEnableRtl();
              i._.addCssClass(this.getGui(), n ? "ag-rtl" : "ag-ltr"),
                (this.model = this.createBean(new qo(o))),
                (this.chartController = this.createManagedBean(
                  new Su(this.model)
                )),
                this.validateCustomThemes(),
                this.createChart(),
                this.params.insideDialog && this.addDialog(),
                this.addMenu(),
                this.addTitleEditComp(),
                this.addManagedListener(
                  this.getGui(),
                  "focusin",
                  this.setActiveChartCellRange.bind(this)
                ),
                this.addManagedListener(
                  this.chartController,
                  Su.EVENT_CHART_UPDATED,
                  this.refresh.bind(this)
                ),
                this.chartMenu &&
                  this.addManagedListener(
                    this.chartMenu,
                    Wc.EVENT_DOWNLOAD_CHART,
                    this.downloadChart.bind(this)
                  ),
                this.refresh(),
                this.raiseChartCreatedEvent();
            }),
            (e.prototype.validateCustomThemes = function () {
              var t = this.gridOptionsWrapper.getChartThemes(),
                e = this.gridOptionsWrapper.getCustomChartThemes();
              e &&
                i._.getAllKeysInObjects([e]).forEach(function (e) {
                  i._.includes(t, e) ||
                    console.warn(
                      "AG Grid: a custom chart theme with the name '" +
                        e +
                        "' has been supplied but not added to the 'chartThemes' list"
                    );
                });
            }),
            (e.prototype.createChart = function () {
              var t,
                o,
                n = this;
              if (this.chartProxy) {
                var r = this.chartProxy.getChart();
                r && ((t = r.width), (o = r.height)), this.chartProxy.destroy();
              }
              var s =
                  this.params.processChartOptions ||
                  this.gridOptionsWrapper.getProcessChartOptionsFunc(),
                a = this.gridOptionsWrapper.getCustomChartThemes(),
                l = this.model.getChartType(),
                u = this.model.isGrouping(),
                p = {
                  chartId: this.model.getChartId(),
                  chartType: l,
                  chartThemeName: this.model.getChartThemeName(),
                  processChartOptions: s,
                  getChartThemeName: this.getChartThemeName.bind(this),
                  getChartThemes: this.getChartThemes.bind(this),
                  customChartThemes: a,
                  getGridOptionsChartThemeOverrides:
                    this.getGridOptionsChartThemeOverrides.bind(this),
                  apiChartThemeOverrides: this.params.chartThemeOverrides,
                  allowPaletteOverride: !this.params.chartThemeName,
                  isDarkTheme: this.environment.isThemeDark.bind(
                    this.environment
                  ),
                  crossFiltering: this.params.crossFiltering,
                  crossFilterCallback: function (t, e) {
                    (n.params.crossFilteringContext.lastSelectedChartId = e
                      ? ""
                      : n.model.getChartId()),
                      n.crossFilter.filter(t, e);
                  },
                  parentElement: this.eChart,
                  width: t,
                  height: o,
                  grouping: u,
                  document: this.gridOptionsWrapper.getDocument(),
                  eventService: this.eventService,
                  gridApi: this.gridApi,
                  columnApi: this.columnApi,
                };
              if (
                ((this.chartType = l),
                (this.chartThemeName = this.model.getChartThemeName()),
                (this.chartProxy = e.createChartProxy(p)),
                this.chartProxy)
              ) {
                this.titleEdit && this.titleEdit.setChartProxy(this.chartProxy);
                var c = this.eChart.querySelector("canvas");
                c && i._.addCssClass(c, "ag-charts-canvas"),
                  this.chartController.setChartProxy(this.chartProxy);
              } else
                console.warn(
                  "AG Grid: invalid chart type supplied: ",
                  p.chartType
                );
            }),
            (e.prototype.getChartThemeName = function () {
              return this.chartController.getThemeName();
            }),
            (e.prototype.getChartThemes = function () {
              return this.chartController.getThemes();
            }),
            (e.prototype.getGridOptionsChartThemeOverrides = function () {
              return this.gridOptionsWrapper.getChartThemeOverrides();
            }),
            (e.createChartProxy = function (t) {
              switch (t.chartType) {
                case i.ChartType.Column:
                case i.ChartType.Bar:
                case i.ChartType.GroupedColumn:
                case i.ChartType.StackedColumn:
                case i.ChartType.NormalizedColumn:
                case i.ChartType.GroupedBar:
                case i.ChartType.StackedBar:
                case i.ChartType.NormalizedBar:
                  return new Yc(t);
                case i.ChartType.Pie:
                  return new rd(t);
                case i.ChartType.Doughnut:
                  return new ad(t);
                case i.ChartType.Area:
                case i.ChartType.StackedArea:
                case i.ChartType.NormalizedArea:
                  return new Qc(t);
                case i.ChartType.Line:
                  return new Jc(t);
                case i.ChartType.Scatter:
                case i.ChartType.Bubble:
                  return new dp(t);
                case i.ChartType.Histogram:
                  return new pd(t);
              }
            }),
            (e.prototype.addDialog = function () {
              var t = this,
                e = this.chartTranslator.translate(
                  this.params.pivotChart ? "pivotChartTitle" : "rangeChartTitle"
                ),
                o = this.getBestDialogSize();
              (this.chartDialog = new i.AgDialog({
                resizable: !0,
                movable: !0,
                maximizable: !0,
                title: e,
                width: o.width,
                height: o.height,
                component: this,
                centered: !0,
                closable: !0,
              })),
                this.getContext().createBean(this.chartDialog),
                this.chartDialog.addEventListener(
                  i.AgDialog.EVENT_DESTROYED,
                  function () {
                    return t.destroy();
                  }
                );
            }),
            (e.prototype.getBestDialogSize = function () {
              var t = this.popupService.getPopupParent(),
                e = 0.75 * i._.getAbsoluteWidth(t),
                o = 0.75 * i._.getAbsoluteHeight(t),
                n = this.chartProxy.getChartOptions(),
                r = n.width,
                s = n.height;
              if (r && s) return { width: r, height: s };
              var a = this.chartProxy.getChart();
              return (
                (s = this.params.insideDialog ? 470 : a.height),
                ((r = this.params.insideDialog ? 850 : a.width) > e || s > o) &&
                  ((r = Math.min(r, e)),
                  (s = Math.round(0.553 * r)) > o &&
                    ((s = o), (r = Math.min(r, Math.round(s / 0.553))))),
                { width: r, height: s }
              );
            }),
            (e.prototype.addMenu = function () {
              this.params.crossFiltering ||
                ((this.chartMenu = this.createBean(
                  new Wc(
                    this.eChartContainer,
                    this.eMenuContainer,
                    this.chartController
                  )
                )),
                this.eChartContainer.appendChild(this.chartMenu.getGui()));
            }),
            (e.prototype.addTitleEditComp = function () {
              (this.titleEdit = this.createBean(new Uc(this.chartMenu))),
                this.eTitleEditContainer.appendChild(this.titleEdit.getGui()),
                this.chartProxy &&
                  this.titleEdit.setChartProxy(this.chartProxy);
            }),
            (e.prototype.refresh = function () {
              this.shouldRecreateChart() && this.createChart(),
                this.updateChart();
            }),
            (e.prototype.shouldRecreateChart = function () {
              return (
                this.chartType !== this.model.getChartType() ||
                this.chartThemeName !== this.model.getChartThemeName()
              );
            }),
            (e.prototype.getCurrentChartType = function () {
              return this.chartType;
            }),
            (e.prototype.getChartModel = function () {
              return this.chartController.getChartModel();
            }),
            (e.prototype.updateChart = function () {
              var t = this,
                e = this.model,
                o = this.chartProxy,
                n = e.getSelectedValueColState().map(function (t) {
                  return { colId: t.colId, displayName: t.displayName };
                }),
                r = e.getData();
              if (!this.handleEmptyChart(r, n)) {
                var i = e.getSelectedDimension(),
                  s = {
                    data: r,
                    grouping: e.isGrouping(),
                    category: {
                      id: i.colId,
                      name: i.displayName,
                      chartDataType: this.getChartDataType(i.colId),
                    },
                    fields: n,
                    chartId: this.model.getChartId(),
                    getCrossFilteringContext: function () {
                      return t.params.crossFilteringContext;
                    },
                  };
                o.update(s), this.titleEdit.setChartProxy(this.chartProxy);
              }
            }),
            (e.prototype.getChartDataType = function (t) {
              var e = this.columnController.getPrimaryColumn(t);
              return e ? e.getColDef().chartDataType : void 0;
            }),
            (e.prototype.handleEmptyChart = function (t, e) {
              var o = this.chartProxy.getChart().container,
                n = this.model.isPivotChart() && !this.model.isPivotMode(),
                r = 1;
              this.chartController.isActiveXYChart() &&
                (r = this.model.getChartType() === i.ChartType.Bubble ? 3 : 2);
              var s = e.length < r || 0 === t.length;
              if (o) {
                var a = n || s;
                i._.setDisplayed(this.eChart, !a),
                  i._.setDisplayed(this.eEmpty, a);
              }
              return n
                ? ((this.eEmpty.innerText = this.chartTranslator.translate(
                    "pivotChartRequiresPivotMode"
                  )),
                  !0)
                : !!s &&
                    ((this.eEmpty.innerText =
                      this.chartTranslator.translate("noDataToChart")),
                    !0);
            }),
            (e.prototype.downloadChart = function () {
              this.chartProxy.downloadChart();
            }),
            (e.prototype.getUnderlyingChart = function () {
              return this.chartProxy.getChart();
            }),
            (e.prototype.refreshCanvasSize = function () {
              if (this.params.insideDialog) {
                var t = this.chartProxy,
                  e = this.eChart;
                if (this.chartMenu.isVisible()) {
                  var o = this.chartProxy.getChart();
                  (o.height = i._.getInnerHeight(e)),
                    (o.width = i._.getInnerWidth(e));
                } else
                  t.setChartOption("width", i._.getInnerWidth(e)),
                    t.setChartOption("height", i._.getInnerHeight(e));
              }
            }),
            (e.prototype.setActiveChartCellRange = function (t) {
              this.getGui().contains(t.relatedTarget) ||
                (this.chartController.setChartRange(!0),
                this.gridApi.focusController.clearFocusedCell());
            }),
            (e.prototype.raiseChartCreatedEvent = function () {
              var t = this.chartController.getChartModel(),
                e = Object.freeze({
                  type: i.Events.EVENT_CHART_CREATED,
                  chartId: t.chartId,
                  chartModel: t,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
              this.eventService.dispatchEvent(e);
            }),
            (e.prototype.raiseChartDestroyedEvent = function () {
              var t = Object.freeze({
                type: i.Events.EVENT_CHART_DESTROYED,
                chartId: this.model.getChartId(),
                api: this.gridApi,
                columnApi: this.columnApi,
              });
              this.eventService.dispatchEvent(t);
            }),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this),
                this.chartProxy && this.chartProxy.destroy(),
                this.destroyBean(this.chartMenu),
                this.chartDialog &&
                  this.chartDialog.isAlive() &&
                  this.destroyBean(this.chartDialog);
              var e = this.getGui();
              i._.clearElement(e),
                i._.removeFromParent(e),
                this.raiseChartDestroyedEvent();
            }),
            (e.TEMPLATE =
              '<div class="ag-chart" tabindex="-1">\n            <div ref="eChartContainer" tabindex="-1" class="ag-chart-components-wrapper">\n                <div ref="eChart" class="ag-chart-canvas-wrapper"></div>\n                <div ref="eEmpty" class="ag-chart-empty-text ag-unselectable"></div>\n            </div>\n            <div ref="eTitleEditContainer"></div>\n            <div ref="eMenuContainer" class="ag-chart-docked-container"></div>\n        </div>'),
            dd([i.RefSelector("eChart")], e.prototype, "eChart", void 0),
            dd(
              [i.RefSelector("eChartContainer")],
              e.prototype,
              "eChartContainer",
              void 0
            ),
            dd(
              [i.RefSelector("eMenuContainer")],
              e.prototype,
              "eMenuContainer",
              void 0
            ),
            dd([i.RefSelector("eEmpty")], e.prototype, "eEmpty", void 0),
            dd(
              [i.RefSelector("eTitleEditContainer")],
              e.prototype,
              "eTitleEditContainer",
              void 0
            ),
            dd(
              [i.Autowired("environment")],
              e.prototype,
              "environment",
              void 0
            ),
            dd(
              [i.Autowired("chartTranslator")],
              e.prototype,
              "chartTranslator",
              void 0
            ),
            dd(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            dd(
              [i.Autowired("chartCrossFilter")],
              e.prototype,
              "crossFilter",
              void 0
            ),
            dd([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            dd([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            dd(
              [i.Autowired("popupService")],
              e.prototype,
              "popupService",
              void 0
            ),
            dd([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        fd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        gd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        yd = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.activeCharts = new Set()),
              (e.activeChartComps = new Set()),
              (e.crossFilteringContext = { lastSelectedChartId: "" }),
              e
            );
          }
          return (
            fd(e, t),
            (e.prototype.getChartModels = function () {
              var t = [];
              return (
                this.activeChartComps.forEach(function (e) {
                  return t.push(e.getChartModel());
                }),
                t
              );
            }),
            (e.prototype.createChartFromCurrentRange = function (t) {
              void 0 === t && (t = i.ChartType.GroupedColumn);
              var e = this.getSelectedRange();
              return this.createChart(e, t);
            }),
            (e.prototype.restoreChart = function (t, e) {
              if (t)
                return t.modelType && "pivot" === t.modelType
                  ? this.createPivotChart(this.mapToPivotParams(t, e))
                  : this.createRangeChart(this.mapToRangeParam(t, e));
              console.warn(
                "AG Grid - unable to restore chart as no chart model is provided"
              );
            }),
            (e.prototype.createRangeChart = function (t) {
              var e = this.rangeController
                ? this.rangeController.createCellRangeFromCellRangeParams(
                    t.cellRange
                  )
                : void 0;
              if (e)
                return this.createChart(
                  e,
                  t.chartType,
                  t.chartThemeName,
                  !1,
                  t.suppressChartRanges,
                  t.chartContainer,
                  t.aggFunc,
                  t.chartThemeOverrides,
                  t.unlinkChart,
                  t.processChartOptions
                );
              console.warn(
                "AG Grid - unable to create chart as no range is selected"
              );
            }),
            (e.prototype.createPivotChart = function (t) {
              this.columnController.isPivotMode() ||
                this.columnController.setPivotMode(!0, "pivotChart");
              var e = {
                  rowStartIndex: null,
                  rowEndIndex: null,
                  columns: this.columnController
                    .getAllDisplayedColumns()
                    .map(function (t) {
                      return t.getColId();
                    }),
                },
                o = this.rangeController
                  ? this.rangeController.createCellRangeFromCellRangeParams(e)
                  : void 0;
              if (o)
                return this.createChart(
                  o,
                  t.chartType,
                  t.chartThemeName,
                  !0,
                  !0,
                  t.chartContainer,
                  void 0,
                  t.chartThemeOverrides,
                  t.unlinkChart,
                  t.processChartOptions
                );
              console.warn(
                "AG Grid - unable to create chart as there are no columns in the grid."
              );
            }),
            (e.prototype.createCrossFilterChart = function (t) {
              var e = this.rangeController
                ? this.rangeController.createCellRangeFromCellRangeParams(
                    t.cellRange
                  )
                : void 0;
              if (e)
                return this.createChart(
                  e,
                  t.chartType,
                  t.chartThemeName,
                  !1,
                  !(null != t.suppressChartRanges) || t.suppressChartRanges,
                  t.chartContainer,
                  t.aggFunc,
                  t.chartThemeOverrides,
                  t.unlinkChart,
                  void 0,
                  !0
                );
              console.warn(
                "AG Grid - unable to create chart as no range is selected"
              );
            }),
            (e.prototype.createChart = function (
              t,
              e,
              o,
              n,
              r,
              s,
              a,
              l,
              u,
              p,
              c
            ) {
              var d = this;
              void 0 === n && (n = !1),
                void 0 === r && (r = !1),
                void 0 === u && (u = !1),
                void 0 === c && (c = !1);
              var h = this.gridOptionsWrapper.getCreateChartContainerFunc(),
                f = new hd({
                  pivotChart: n,
                  cellRange: t,
                  chartType: e,
                  chartThemeName: o,
                  insideDialog: !(s || h),
                  suppressChartRanges: r,
                  aggFunc: a,
                  chartThemeOverrides: l,
                  processChartOptions: p,
                  unlinkChart: u,
                  crossFiltering: c,
                  crossFilteringContext: this.crossFilteringContext,
                });
              this.context.createBean(f);
              var g = this.createChartRef(f);
              if (s) {
                s.appendChild(f.getGui());
                var y = this.environment.getTheme();
                y.el && !y.el.contains(s) && i._.addCssClass(s, y.theme);
              } else
                h
                  ? h(g)
                  : f.addEventListener(hd.EVENT_DESTROYED, function () {
                      d.activeChartComps.delete(f), d.activeCharts.delete(g);
                    });
              return g;
            }),
            (e.prototype.createChartRef = function (t) {
              var e = this,
                o = {
                  destroyChart: function () {
                    e.activeCharts.has(o) &&
                      (e.context.destroyBean(t),
                      e.activeChartComps.delete(t),
                      e.activeCharts.delete(o));
                  },
                  chartElement: t.getGui(),
                  chart: t.getUnderlyingChart(),
                };
              return this.activeCharts.add(o), this.activeChartComps.add(t), o;
            }),
            (e.prototype.getSelectedRange = function () {
              var t = this.rangeController.getCellRanges();
              return t.length > 0 ? t[0] : {};
            }),
            (e.prototype.mapToRangeParam = function (t, e) {
              return {
                cellRange: t.cellRange,
                chartType: t.chartType,
                chartThemeName: t.chartThemeName,
                chartContainer: e,
                suppressChartRanges: t.suppressChartRanges,
                aggFunc: t.aggFunc,
                unlinkChart: t.unlinkChart,
                processChartOptions: function () {
                  return t.chartOptions;
                },
              };
            }),
            (e.prototype.mapToPivotParams = function (t, e) {
              return {
                chartType: t.chartType,
                chartThemeName: t.chartThemeName,
                chartContainer: e,
                unlinkChart: t.unlinkChart,
                processChartOptions: function () {
                  return t.chartOptions;
                },
              };
            }),
            (e.prototype.destroyAllActiveCharts = function () {
              this.activeCharts.forEach(function (t) {
                return t.destroyChart();
              });
            }),
            gd(
              [i.Optional("rangeController")],
              e.prototype,
              "rangeController",
              void 0
            ),
            gd(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            gd(
              [i.Autowired("environment")],
              e.prototype,
              "environment",
              void 0
            ),
            gd([i.PreDestroy], e.prototype, "destroyAllActiveCharts", null),
            gd([i.Bean("chartService")], e)
          );
        })(i.BeanStub),
        md = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        vd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          var o;
          return (
            md(e, t),
            (o = e),
            (e.prototype.translate = function (t) {
              return this.gridOptionsWrapper.getLocaleTextFunc()(
                t,
                o.DEFAULT_TRANSLATIONS[t]
              );
            }),
            (e.DEFAULT_TRANSLATIONS = {
              pivotChartTitle: "Pivot Chart",
              rangeChartTitle: "Range Chart",
              settings: "Settings",
              data: "Data",
              format: "Format",
              categories: "Categories",
              defaultCategory: "(None)",
              series: "Series",
              xyValues: "X Y Values",
              paired: "Paired Mode",
              axis: "Axis",
              navigator: "Navigator",
              color: "Color",
              thickness: "Thickness",
              xType: "X Type",
              automatic: "Automatic",
              category: "Category",
              number: "Number",
              time: "Time",
              xRotation: "X Rotation",
              yRotation: "Y Rotation",
              ticks: "Ticks",
              width: "Width",
              height: "Height",
              length: "Length",
              padding: "Padding",
              spacing: "Spacing",
              chart: "Chart",
              title: "Title",
              titlePlaceholder: "Chart title - double click to edit",
              background: "Background",
              font: "Font",
              top: "Top",
              right: "Right",
              bottom: "Bottom",
              left: "Left",
              labels: "Labels",
              size: "Size",
              shape: "Shape",
              minSize: "Minimum Size",
              maxSize: "Maximum Size",
              legend: "Legend",
              position: "Position",
              markerSize: "Marker Size",
              markerStroke: "Marker Stroke",
              markerPadding: "Marker Padding",
              itemSpacing: "Item Spacing",
              itemPaddingX: "Item Padding X",
              itemPaddingY: "Item Padding Y",
              layoutHorizontalSpacing: "Horizontal Spacing",
              layoutVerticalSpacing: "Vertical Spacing",
              strokeWidth: "Stroke Width",
              offset: "Offset",
              offsets: "Offsets",
              tooltips: "Tooltips",
              callout: "Callout",
              markers: "Markers",
              shadow: "Shadow",
              blur: "Blur",
              xOffset: "X Offset",
              yOffset: "Y Offset",
              lineWidth: "Line Width",
              lineDash: "Line Dash",
              normal: "Normal",
              bold: "Bold",
              italic: "Italic",
              boldItalic: "Bold Italic",
              predefined: "Predefined",
              fillOpacity: "Fill Opacity",
              strokeOpacity: "Line Opacity",
              histogramBinCount: "Bin count",
              columnGroup: "Column",
              barGroup: "Bar",
              pieGroup: "Pie",
              lineGroup: "Line",
              scatterGroup: "X Y (Scatter)",
              areaGroup: "Area",
              histogramGroup: "Histogram",
              groupedColumnTooltip: "Grouped",
              stackedColumnTooltip: "Stacked",
              normalizedColumnTooltip: "100% Stacked",
              groupedBarTooltip: "Grouped",
              stackedBarTooltip: "Stacked",
              normalizedBarTooltip: "100% Stacked",
              pieTooltip: "Pie",
              doughnutTooltip: "Doughnut",
              lineTooltip: "Line",
              groupedAreaTooltip: "Area",
              stackedAreaTooltip: "Stacked",
              normalizedAreaTooltip: "100% Stacked",
              scatterTooltip: "Scatter",
              bubbleTooltip: "Bubble",
              histogramTooltip: "Histogram",
              noDataToChart: "No data available to be charted.",
              pivotChartRequiresPivotMode:
                "Pivot Chart requires Pivot Mode enabled.",
              chartSettingsToolbarTooltip: "Menu",
              chartLinkToolbarTooltip: "Linked to Grid",
              chartUnlinkToolbarTooltip: "Unlinked from Grid",
              chartDownloadToolbarTooltip: "Download Chart",
            }),
            (o = (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([i.Bean("chartTranslator")], e))
          );
        })(i.BeanStub),
        Cd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        bd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          var o;
          return (
            Cd(e, t),
            (o = e),
            (e.prototype.filter = function (t, e) {
              void 0 === e && (e = !1);
              var n = this.gridApi.getFilterModel();
              if (e) this.resetFilters(n);
              else {
                var r = o.extractFilterColId(t);
                this.isValidColumnFilter(r)
                  ? this.updateFilters(n, t)
                  : console.warn(
                      "AG Grid: cross filtering requires a 'agSetColumnFilter' or 'agMultiColumnFilter' to be defined on the column with id: '" +
                        r +
                        "'"
                    );
              }
            }),
            (e.prototype.resetFilters = function (t) {
              Object.keys(t).length > 0 &&
                (this.gridApi.setFilterModel(null),
                this.gridApi.onFilterChanged());
            }),
            (e.prototype.updateFilters = function (t, e) {
              var n,
                r = o.extractFilterColId(e),
                s = e.datum[r];
              if (void 0 !== s) {
                var a = s.toString(),
                  l = r.replace("-filtered-out", "");
                if (e.event.metaKey || e.event.ctrlKey) {
                  var u = this.getCurrentGridValuesForCategory(l),
                    p = void 0;
                  i._.includes(u, a)
                    ? (p = u.filter(function (t) {
                        return t !== a;
                      }))
                    : (p = u).push(a),
                    (t[l] = this.getUpdatedFilterModel(l, p));
                } else
                  ((n = {})[l] = this.getUpdatedFilterModel(l, (p = [a]))),
                    (t = n);
                this.gridApi.setFilterModel(t);
              }
            }),
            (e.prototype.getUpdatedFilterModel = function (t, e) {
              return "agMultiColumnFilter" === this.getColumnFilterType(t)
                ? {
                    filterType: "multi",
                    filterModels: [null, { filterType: "set", values: e }],
                  }
                : { filterType: "set", values: e };
            }),
            (e.prototype.getCurrentGridValuesForCategory = function (t) {
              var e = [],
                o = i._.includes;
              return (
                this.gridApi.forEachNodeAfterFilter(function (n) {
                  if (!n.group) {
                    var r = n.data[t] + "";
                    o(e, r) || e.push(r);
                  }
                }),
                e
              );
            }),
            (e.extractFilterColId = function (t) {
              return t.xKey ? t.xKey : t.labelKey;
            }),
            (e.prototype.isValidColumnFilter = function (t) {
              t.indexOf("-filtered-out") &&
                (t = t.replace("-filtered-out", ""));
              var e = this.getColumnFilterType(t);
              return "boolean" == typeof e
                ? e
                : i._.includes(["agSetColumnFilter", "agMultiColumnFilter"], e);
            }),
            (e.prototype.getColumnFilterType = function (t) {
              var e = this.columnController.getGridColumn(t);
              return e ? e.getColDef().filter : void 0;
            }),
            wd([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            wd(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            (o = wd([i.Bean("chartCrossFilter")], e))
          );
        })(i.BeanStub),
        Ed = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Sd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Od = function () {
          for (var t = 0, e = 0, o = arguments.length; e < o; e++)
            t += arguments[e].length;
          var n = Array(t),
            r = 0;
          for (e = 0; e < o; e++)
            for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
              n[r] = i[s];
          return n;
        },
        _d = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.cellRanges = []),
              (e.bodyScrollListener = e.onBodyScroll.bind(e)),
              (e.dragging = !1),
              e
            );
          }
          return (
            Ed(e, t),
            (e.prototype.registerGridComp = function (t) {
              (this.gridPanel = t),
                (this.autoScrollService = new Rd(
                  this.gridPanel,
                  this.gridOptionsWrapper
                ));
            }),
            (e.prototype.init = function () {
              (this.logger = this.loggerFactory.create("RangeController")),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_NEW_COLUMNS_LOADED,
                  this.removeAllCellRanges.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  this.removeAllCellRanges.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  this.removeAllCellRanges.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_CHANGED,
                  this.removeAllCellRanges.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_GROUP_OPENED,
                  this.refreshLastRangeStart.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_MOVED,
                  this.refreshLastRangeStart.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PINNED,
                  this.refreshLastRangeStart.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_VISIBLE,
                  this.onColumnVisibleChange.bind(this)
                );
            }),
            (e.prototype.onColumnVisibleChange = function () {
              var t = this;
              this.refreshLastRangeStart(),
                this.cellRanges.forEach(function (e) {
                  var o = e.columns;
                  (e.columns = e.columns.filter(function (t) {
                    return t.isVisible();
                  })),
                    !i._.areEqual(o, e.columns) &&
                      t.dispatchChangedEvent(!1, !0, e.id);
                });
            }),
            (e.prototype.refreshLastRangeStart = function () {
              var t = i._.last(this.cellRanges);
              t && this.refreshRangeStart(t);
            }),
            (e.prototype.isContiguousRange = function (t) {
              var e = t.columns;
              if (!e.length) return !1;
              var o = this.columnController.getAllDisplayedColumns(),
                n = e
                  .map(function (t) {
                    return o.indexOf(t);
                  })
                  .sort(function (t, e) {
                    return t - e;
                  });
              return i._.last(n) - n[0] + 1 === e.length;
            }),
            (e.prototype.getRangeStartRow = function (t) {
              return t.startRow && t.endRow
                ? this.rowPositionUtils.before(t.startRow, t.endRow)
                  ? t.startRow
                  : t.endRow
                : {
                    rowIndex: 0,
                    rowPinned:
                      this.pinnedRowModel.getPinnedTopRowCount() > 0
                        ? i.Constants.PINNED_TOP
                        : void 0,
                  };
            }),
            (e.prototype.getRangeEndRow = function (t) {
              if (t.startRow && t.endRow)
                return this.rowPositionUtils.before(t.startRow, t.endRow)
                  ? t.endRow
                  : t.startRow;
              var e = this.pinnedRowModel.getPinnedBottomRowCount();
              return e > 0
                ? { rowIndex: e - 1, rowPinned: i.Constants.PINNED_BOTTOM }
                : {
                    rowIndex: this.rowModel.getRowCount() - 1,
                    rowPinned: void 0,
                  };
            }),
            (e.prototype.setRangeToCell = function (t, e) {
              if (
                (void 0 === e && (e = !1),
                this.gridOptionsWrapper.isEnableRangeSelection())
              ) {
                var o = this.calculateColumnsBetween(t.column, t.column);
                if (o) {
                  (this.gridOptionsWrapper.isSuppressMultiRangeSelection() ||
                    !e ||
                    i._.missing(this.cellRanges)) &&
                    this.removeAllCellRanges(!0);
                  for (
                    var n,
                      r = { rowIndex: t.rowIndex, rowPinned: t.rowPinned },
                      s = 0;
                    s < this.cellRanges.length;
                    s++
                  ) {
                    var a = this.cellRanges[s];
                    if (
                      a.columns &&
                      1 === a.columns.length &&
                      a.columns[0] === t.column &&
                      this.rowPositionUtils.sameRow(r, a.startRow) &&
                      this.rowPositionUtils.sameRow(r, a.endRow)
                    ) {
                      n = a;
                      break;
                    }
                  }
                  n
                    ? i._.last(this.cellRanges) !== n &&
                      (i._.removeFromArray(this.cellRanges, n),
                      this.cellRanges.push(n))
                    : this.cellRanges.push(
                        (n = {
                          startRow: r,
                          endRow: r,
                          columns: o,
                          startColumn: t.column,
                        })
                      ),
                    (this.newestRangeStartCell = t),
                    this.onDragStop(),
                    this.dispatchChangedEvent(!0, !0, n.id);
                }
              }
            }),
            (e.prototype.extendLatestRangeToCell = function (t) {
              if (!this.isEmpty() && this.newestRangeStartCell) {
                var e = i._.last(this.cellRanges);
                this.updateRangeEnd(e, t);
              }
            }),
            (e.prototype.updateRangeEnd = function (t, e, o) {
              void 0 === o && (o = !1);
              var n = this.calculateColumnsBetween(t.startColumn, e.column);
              n &&
                !this.isLastCellOfRange(t, e) &&
                ((t.columns = n),
                (t.endRow = { rowIndex: e.rowIndex, rowPinned: e.rowPinned }),
                o || this.dispatchChangedEvent(!0, !0, t.id));
            }),
            (e.prototype.refreshRangeStart = function (t) {
              var e = t.startColumn,
                o = t.columns,
                n = function (e, o) {
                  var n = t.columns.filter(function (t) {
                    return t !== e;
                  });
                  e
                    ? ((t.startColumn = e),
                      (t.columns = o ? Od([e], n) : Od(n, [e])))
                    : (t.columns = n);
                },
                r = this.getRangeEdgeColumns(t),
                s = r.left,
                a = r.right;
              e === o[0] && e !== s
                ? n(s, !0)
                : e === i._.last(o) && e === a && n(a, !1);
            }),
            (e.prototype.getRangeEdgeColumns = function (t) {
              var e = this.columnController.getAllDisplayedColumns(),
                o = t.columns
                  .map(function (t) {
                    return e.indexOf(t);
                  })
                  .filter(function (t) {
                    return t > -1;
                  })
                  .sort(function (t, e) {
                    return t - e;
                  });
              return { left: e[o[0]], right: e[i._.last(o)] };
            }),
            (e.prototype.extendLatestRangeInDirection = function (t) {
              if (!this.isEmpty() && this.newestRangeStartCell) {
                var e = i._.last(this.cellRanges),
                  o = this.newestRangeStartCell,
                  n = e.columns[0],
                  r = i._.last(e.columns),
                  s = this.cellNavigationService.getNextCellToFocus(t, {
                    column: o.column === n ? r : n,
                    rowIndex: e.endRow.rowIndex,
                    rowPinned: e.endRow.rowPinned,
                  });
                if (s)
                  return (
                    this.setCellRange({
                      rowStartIndex: o.rowIndex,
                      rowStartPinned: o.rowPinned,
                      rowEndIndex: s.rowIndex,
                      rowEndPinned: s.rowPinned,
                      columnStart: o.column,
                      columnEnd: s.column,
                    }),
                    s
                  );
              }
            }),
            (e.prototype.setCellRange = function (t) {
              this.gridOptionsWrapper.isEnableRangeSelection() &&
                (this.removeAllCellRanges(!0), this.addCellRange(t));
            }),
            (e.prototype.setCellRanges = function (t) {
              var e = this;
              i._.shallowCompare(this.cellRanges, t) ||
                (this.removeAllCellRanges(!0),
                t.forEach(function (t) {
                  t.columns &&
                    t.startRow &&
                    (e.newestRangeStartCell = {
                      rowIndex: t.startRow.rowIndex,
                      rowPinned: t.startRow.rowPinned,
                      column: t.columns[0],
                    }),
                    e.cellRanges.push(t);
                }),
                this.dispatchChangedEvent(!1, !0));
            }),
            (e.prototype.createCellRangeFromCellRangeParams = function (t) {
              var e,
                o = this;
              if (t.columns)
                e = t.columns
                  .map(function (t) {
                    return o.columnController.getColumnWithValidation(t);
                  })
                  .filter(function (t) {
                    return t;
                  });
              else {
                var n = this.columnController.getColumnWithValidation(
                    t.columnStart
                  ),
                  r = this.columnController.getColumnWithValidation(
                    t.columnEnd
                  );
                if (!n || !r) return;
                e = this.calculateColumnsBetween(n, r);
              }
              if (e)
                return {
                  startRow:
                    null != t.rowStartIndex
                      ? {
                          rowIndex: t.rowStartIndex,
                          rowPinned: t.rowStartPinned,
                        }
                      : void 0,
                  endRow:
                    null != t.rowEndIndex
                      ? { rowIndex: t.rowEndIndex, rowPinned: t.rowEndPinned }
                      : void 0,
                  columns: e,
                  startColumn: e[0],
                };
            }),
            (e.prototype.addCellRange = function (t) {
              if (this.gridOptionsWrapper.isEnableRangeSelection()) {
                var e = this.createCellRangeFromCellRangeParams(t);
                e &&
                  (this.cellRanges.push(e),
                  this.dispatchChangedEvent(!1, !0, e.id));
              }
            }),
            (e.prototype.getCellRanges = function () {
              return this.cellRanges;
            }),
            (e.prototype.isEmpty = function () {
              return 0 === this.cellRanges.length;
            }),
            (e.prototype.isMoreThanOneCell = function () {
              if (0 === this.cellRanges.length) return !1;
              if (this.cellRanges.length > 1) return !0;
              var t = this.cellRanges[0],
                e = this.getRangeStartRow(t),
                o = this.getRangeEndRow(t);
              return (
                e.rowPinned !== o.rowPinned ||
                e.rowIndex !== o.rowIndex ||
                1 !== t.columns.length
              );
            }),
            (e.prototype.removeAllCellRanges = function (t) {
              this.isEmpty() ||
                (this.onDragStop(),
                (this.cellRanges.length = 0),
                t || this.dispatchChangedEvent(!1, !0));
            }),
            (e.prototype.onBodyScroll = function () {
              this.onDragging(this.lastMouseEvent);
            }),
            (e.prototype.isCellInAnyRange = function (t) {
              return this.getCellRangeCount(t) > 0;
            }),
            (e.prototype.isCellInSpecificRange = function (t, e) {
              var o = null !== e.columns && i._.includes(e.columns, t.column),
                n = this.isRowInRange(t.rowIndex, t.rowPinned, e);
              return o && n;
            }),
            (e.prototype.isLastCellOfRange = function (t, e) {
              var o = t.startRow,
                n = t.endRow,
                r = this.rowPositionUtils.before(o, n) ? n : o,
                s = e.rowIndex === r.rowIndex && e.rowPinned === r.rowPinned,
                a = t.columns[0],
                l = i._.last(t.columns);
              return e.column === (t.startColumn === a ? l : a) && s;
            }),
            (e.prototype.isBottomRightCell = function (t, e) {
              var o = this.columnController.getAllDisplayedColumns(),
                n = t.columns
                  .map(function (t) {
                    return o.indexOf(t);
                  })
                  .sort(function (t, e) {
                    return t - e;
                  }),
                r = t.startRow,
                s = t.endRow,
                a = this.rowPositionUtils.before(r, s) ? s : r,
                l = o.indexOf(e.column) === i._.last(n),
                u =
                  e.rowIndex === a.rowIndex &&
                  i._.makeNull(e.rowPinned) === i._.makeNull(a.rowPinned);
              return l && u;
            }),
            (e.prototype.getCellRangeCount = function (t) {
              var e = this;
              return this.isEmpty()
                ? 0
                : this.cellRanges.filter(function (o) {
                    return e.isCellInSpecificRange(t, o);
                  }).length;
            }),
            (e.prototype.isRowInRange = function (t, e, o) {
              var n = this.getRangeStartRow(o),
                r = this.getRangeEndRow(o),
                i = { rowIndex: t, rowPinned: e };
              if (
                (i.rowIndex === n.rowIndex && i.rowPinned == n.rowPinned) ||
                (i.rowIndex === r.rowIndex && i.rowPinned == r.rowPinned)
              )
                return !0;
              var s = !this.rowPositionUtils.before(i, n),
                a = this.rowPositionUtils.before(i, r);
              return s && a;
            }),
            (e.prototype.getDraggingRange = function () {
              return this.draggingRange;
            }),
            (e.prototype.onDragStart = function (t) {
              if (this.gridOptionsWrapper.isEnableRangeSelection()) {
                var e = t.shiftKey,
                  o = t.ctrlKey || t.metaKey,
                  n =
                    !this.gridOptionsWrapper.isSuppressMultiRangeSelection() &&
                    o,
                  r = this.mouseEventService.getCellPositionForEvent(t),
                  s = e && i._.existsAndNotEmpty(this.cellRanges);
                if (!i._.missing(r)) {
                  if (
                    (n ||
                      (s && !i._.exists(i._.last(this.cellRanges).type)) ||
                      this.removeAllCellRanges(!0),
                    (this.dragging = !0),
                    (this.draggingCell = r),
                    (this.lastMouseEvent = t),
                    s || (this.newestRangeStartCell = r),
                    this.cellRanges.length > 0)
                  )
                    this.draggingRange = i._.last(this.cellRanges);
                  else {
                    var a = { rowIndex: r.rowIndex, rowPinned: r.rowPinned };
                    (this.draggingRange = {
                      startRow: a,
                      endRow: a,
                      columns: [r.column],
                      startColumn: this.newestRangeStartCell.column,
                    }),
                      this.cellRanges.push(this.draggingRange);
                  }
                  this.gridPanel.addScrollEventListener(
                    this.bodyScrollListener
                  ),
                    this.dispatchChangedEvent(!0, !1, this.draggingRange.id);
                }
              }
            }),
            (e.prototype.onDragging = function (t) {
              var e = this;
              if (this.dragging && t) {
                this.lastMouseEvent = t;
                var o = this.mouseEventService.getCellPositionForEvent(t),
                  n = function (t) {
                    return (
                      o &&
                      o.rowPinned === t &&
                      e.newestRangeStartCell.rowPinned === t
                    );
                  },
                  r = n("top") || n("bottom");
                if (
                  (this.autoScrollService.check(t, r),
                  o &&
                    this.draggingCell &&
                    !this.cellPositionUtils.equals(this.draggingCell, o))
                ) {
                  var i = this.calculateColumnsBetween(
                    this.newestRangeStartCell.column,
                    o.column
                  );
                  i &&
                    ((this.draggingCell = o),
                    (this.draggingRange.endRow = {
                      rowIndex: o.rowIndex,
                      rowPinned: o.rowPinned,
                    }),
                    (this.draggingRange.columns = i),
                    this.dispatchChangedEvent(!1, !1, this.draggingRange.id));
                }
              }
            }),
            (e.prototype.onDragStop = function () {
              if (this.dragging) {
                var t = this.draggingRange.id;
                this.autoScrollService.ensureCleared(),
                  this.gridPanel.removeScrollEventListener(
                    this.bodyScrollListener
                  ),
                  (this.lastMouseEvent = null),
                  (this.dragging = !1),
                  (this.draggingRange = void 0),
                  (this.draggingCell = void 0),
                  this.dispatchChangedEvent(!1, !0, t);
              }
            }),
            (e.prototype.dispatchChangedEvent = function (t, e, o) {
              var n = Object.freeze({
                type: i.Events.EVENT_RANGE_SELECTION_CHANGED,
                api: this.gridApi,
                columnApi: this.columnApi,
                started: t,
                finished: e,
                id: o,
              });
              this.eventService.dispatchEvent(n);
            }),
            (e.prototype.calculateColumnsBetween = function (t, e) {
              var o = this.columnController.getAllDisplayedColumns(),
                n = t === e,
                r = o.indexOf(t);
              if (r < 0)
                console.warn(
                  "AG Grid: column " + t.getId() + " is not visible"
                );
              else {
                var i = n ? r : o.indexOf(e);
                if (!(i < 0)) {
                  if (n) return [t];
                  for (
                    var s = Math.min(r, i), a = s === r ? i : r, l = [], u = s;
                    u <= a;
                    u++
                  )
                    l.push(o[u]);
                  return l;
                }
                console.warn(
                  "AG Grid: column " + e.getId() + " is not visible"
                );
              }
            }),
            Sd(
              [i.Autowired("loggerFactory")],
              e.prototype,
              "loggerFactory",
              void 0
            ),
            Sd([i.Autowired("rowModel")], e.prototype, "rowModel", void 0),
            Sd(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Sd(
              [i.Autowired("mouseEventService")],
              e.prototype,
              "mouseEventService",
              void 0
            ),
            Sd([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            Sd([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Sd(
              [i.Autowired("cellNavigationService")],
              e.prototype,
              "cellNavigationService",
              void 0
            ),
            Sd(
              [i.Autowired("pinnedRowModel")],
              e.prototype,
              "pinnedRowModel",
              void 0
            ),
            Sd(
              [i.Autowired("rowPositionUtils")],
              e.prototype,
              "rowPositionUtils",
              void 0
            ),
            Sd(
              [i.Autowired("cellPositionUtils")],
              e.prototype,
              "cellPositionUtils",
              void 0
            ),
            Sd([i.PostConstruct], e.prototype, "init", null),
            Sd([i.Bean("rangeController")], e)
          );
        })(i.BeanStub),
        Rd = (function () {
          function t(t, e) {
            (this.tickingInterval = null),
              (this.gridPanel = t),
              (this.gridOptionsWrapper = e);
          }
          return (
            (t.prototype.check = function (t, e) {
              void 0 === e && (e = !1);
              var o = this.gridPanel.getBodyClientRect();
              ((e =
                e ||
                this.gridOptionsWrapper.getDomLayout() !==
                  i.Constants.DOM_LAYOUT_NORMAL) &&
                !this.gridPanel.isHorizontalScrollShowing()) ||
                ((this.tickLeft = t.clientX < o.left + 20),
                (this.tickRight = t.clientX > o.right - 20),
                (this.tickUp = t.clientY < o.top + 20 && !e),
                (this.tickDown = t.clientY > o.bottom - 20 && !e),
                this.tickLeft || this.tickRight || this.tickUp || this.tickDown
                  ? this.ensureTickingStarted()
                  : this.ensureCleared());
            }),
            (t.prototype.ensureTickingStarted = function () {
              null === this.tickingInterval &&
                ((this.tickingInterval = window.setInterval(
                  this.doTick.bind(this),
                  100
                )),
                (this.tickCount = 0));
            }),
            (t.prototype.doTick = function () {
              this.tickCount++;
              var t,
                e = this.gridPanel.getVScrollPosition(),
                o = this.gridPanel.getHScrollPosition();
              (t = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40),
                this.tickUp &&
                  this.gridPanel.setVerticalScrollPosition(e.top - t),
                this.tickDown &&
                  this.gridPanel.setVerticalScrollPosition(e.top + t),
                this.tickLeft &&
                  this.gridPanel.setHorizontalScrollPosition(o.left - t),
                this.tickRight &&
                  this.gridPanel.setHorizontalScrollPosition(o.left + t);
            }),
            (t.prototype.ensureCleared = function () {
              this.tickingInterval &&
                (window.clearInterval(this.tickingInterval),
                (this.tickingInterval = null));
            }),
            t
          );
        })(),
        Pd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Td = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ad = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.changedCalculatedValues = !1),
              (e.dragging = !1),
              (e.shouldDestroyOnEndDragging = !1),
              e
            );
          }
          return (
            Pd(e, t),
            (e.prototype.init = function () {
              var t = this;
              this.dragService.addDragSource({
                dragStartPixels: 0,
                eElement: this.getGui(),
                onDragStart: this.onDragStart.bind(this),
                onDragging: function (e) {
                  (t.dragging = !0),
                    t.rangeController.autoScrollService.check(e),
                    t.changedCalculatedValues &&
                      (t.onDrag(e), (t.changedCalculatedValues = !1));
                },
                onDragStop: function (e) {
                  (t.dragging = !1),
                    t.onDragEnd(e),
                    t.clearValues(),
                    t.rangeController.autoScrollService.ensureCleared(),
                    i._.removeCssClass(document.body, t.getDraggingCssClass()),
                    t.shouldDestroyOnEndDragging && t.destroy();
                },
              }),
                this.addManagedListener(
                  this.getGui(),
                  "mousedown",
                  this.preventRangeExtension.bind(this)
                );
            }),
            (e.prototype.isDragging = function () {
              return this.dragging;
            }),
            (e.prototype.getCellComp = function () {
              return this.cellComp;
            }),
            (e.prototype.setCellComp = function (t) {
              this.cellComp = t;
            }),
            (e.prototype.getCellRange = function () {
              return this.cellRange;
            }),
            (e.prototype.setCellRange = function (t) {
              this.cellRange = t;
            }),
            (e.prototype.getRangeStartRow = function () {
              return this.rangeStartRow;
            }),
            (e.prototype.setRangeStartRow = function (t) {
              this.rangeStartRow = t;
            }),
            (e.prototype.getRangeEndRow = function () {
              return this.rangeEndRow;
            }),
            (e.prototype.setRangeEndRow = function (t) {
              this.rangeEndRow = t;
            }),
            (e.prototype.getLastCellHovered = function () {
              return this.lastCellHovered;
            }),
            (e.prototype.preventRangeExtension = function (t) {
              t.preventDefault(), t.stopPropagation();
            }),
            (e.prototype.onDragStart = function (t) {
              (this.cellHoverListener = this.addManagedListener(
                this.rowRenderer.getGridCore().getRootGui(),
                "mousemove",
                this.updateValuesOnMove.bind(this)
              )),
                i._.addCssClass(document.body, this.getDraggingCssClass());
            }),
            (e.prototype.getDraggingCssClass = function () {
              return (
                "ag-dragging-" +
                (this.type === i.SelectionHandleType.FILL ? "fill" : "range") +
                "-handle"
              );
            }),
            (e.prototype.updateValuesOnMove = function (t) {
              var e = this.mouseEventService.getCellPositionForEvent(t);
              e !== this.lastCellHovered &&
                ((this.lastCellHovered = e),
                (this.changedCalculatedValues = !0));
            }),
            (e.prototype.getType = function () {
              return this.type;
            }),
            (e.prototype.refresh = function (t) {
              var e = this,
                o = this.getCellComp(),
                n = this.getGui(),
                r = i._.last(this.rangeController.getCellRanges()),
                s = r.startRow,
                a = r.endRow;
              s &&
                a &&
                (this.rowPositionUtils.before(a, s)
                  ? (this.setRangeStartRow(a), this.setRangeEndRow(s))
                  : (this.setRangeStartRow(s), this.setRangeEndRow(a))),
                (o === t && i._.isVisible(n)) ||
                  (this.setCellComp(t),
                  window.setTimeout(function () {
                    e.isAlive() && t.appendChild(n);
                  }, 1)),
                this.setCellRange(r);
            }),
            (e.prototype.clearValues = function () {
              (this.lastCellHovered = void 0), this.removeListeners();
            }),
            (e.prototype.removeListeners = function () {
              this.cellHoverListener &&
                (this.cellHoverListener(), (this.cellHoverListener = void 0));
            }),
            (e.prototype.destroy = function () {
              if (!this.shouldDestroyOnEndDragging && this.isDragging())
                return (
                  i._.setDisplayed(this.getGui(), !1),
                  void (this.shouldDestroyOnEndDragging = !0)
                );
              (this.shouldDestroyOnEndDragging = !1),
                t.prototype.destroy.call(this),
                this.removeListeners();
              var e = this.getGui();
              e.parentElement && e.parentElement.removeChild(e);
            }),
            Td(
              [i.Autowired("rowRenderer")],
              e.prototype,
              "rowRenderer",
              void 0
            ),
            Td(
              [i.Autowired("dragService")],
              e.prototype,
              "dragService",
              void 0
            ),
            Td(
              [i.Autowired("rangeController")],
              e.prototype,
              "rangeController",
              void 0
            ),
            Td(
              [i.Autowired("mouseEventService")],
              e.prototype,
              "mouseEventService",
              void 0
            ),
            Td(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Td(
              [i.Autowired("cellNavigationService")],
              e.prototype,
              "cellNavigationService",
              void 0
            ),
            Td(
              [i.Autowired("rowPositionUtils")],
              e.prototype,
              "rowPositionUtils",
              void 0
            ),
            Td([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        Dd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        xd = function () {
          return (xd =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Fd = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (
              (o.markedCellComps = []),
              (o.cellValues = []),
              (o.isUp = !1),
              (o.isLeft = !1),
              (o.isReduce = !1),
              (o.type = i.SelectionHandleType.FILL),
              o
            );
          }
          return (
            Dd(e, t),
            (e.prototype.updateValuesOnMove = function (e) {
              t.prototype.updateValuesOnMove.call(this, e),
                this.initialXY ||
                  (this.initialXY =
                    this.mouseEventService.getNormalisedPosition(e));
              var o,
                n = this.initialXY,
                r = n.x,
                i = n.y,
                s = this.mouseEventService.getNormalisedPosition(e),
                a = s.y,
                l = Math.abs(r - s.x),
                u = Math.abs(i - a),
                p = this.gridOptionsWrapper.getFillHandleDirection();
              (o = "xy" === p ? (l > u ? "x" : "y") : p) !== this.dragAxis &&
                ((this.dragAxis = o), (this.changedCalculatedValues = !0));
            }),
            (e.prototype.onDrag = function (t) {
              if (!this.initialPosition) {
                var e = this.getCellComp();
                if (!e) return;
                this.initialPosition = e.getCellPosition();
              }
              var o = this.getLastCellHovered();
              o && this.markPathFrom(this.initialPosition, o);
            }),
            (e.prototype.onDragEnd = function (t) {
              if (((this.initialXY = null), this.markedCellComps.length)) {
                var e,
                  o = "x" === this.dragAxis,
                  n = this.getCellRange(),
                  r = n.columns.length,
                  i = this.getRangeStartRow(),
                  s = this.getRangeEndRow();
                if (this.isUp || this.isLeft) {
                  var a = o ? i : this.lastCellMarked;
                  e = this.rangeController.createCellRangeFromCellRangeParams({
                    rowStartIndex: a.rowIndex,
                    rowStartPinned: a.rowPinned,
                    columnStart: o ? this.lastCellMarked.column : n.columns[0],
                    rowEndIndex: s.rowIndex,
                    rowEndPinned: s.rowPinned,
                    columnEnd: n.columns[r - 1],
                  });
                } else
                  e = this.rangeController.createCellRangeFromCellRangeParams({
                    rowStartIndex: i.rowIndex,
                    rowStartPinned: i.rowPinned,
                    columnStart: n.columns[0],
                    rowEndIndex: o ? s.rowIndex : this.lastCellMarked.rowIndex,
                    rowEndPinned: o
                      ? s.rowPinned
                      : this.lastCellMarked.rowPinned,
                    columnEnd: o
                      ? this.lastCellMarked.column
                      : n.columns[r - 1],
                  });
                e &&
                  (this.raiseFillStartEvent(),
                  this.handleValueChanged(n, e, t),
                  this.rangeController.setCellRanges([e]),
                  this.raiseFillEndEvent(n, e));
              }
            }),
            (e.prototype.raiseFillStartEvent = function () {
              var t = {
                type: i.Events.EVENT_FILL_START,
                columnApi: this.gridOptionsWrapper.getColumnApi(),
                api: this.gridOptionsWrapper.getApi(),
              };
              this.eventService.dispatchEvent(t);
            }),
            (e.prototype.raiseFillEndEvent = function (t, e) {
              var o = {
                type: i.Events.EVENT_FILL_END,
                columnApi: this.gridOptionsWrapper.getColumnApi(),
                api: this.gridOptionsWrapper.getApi(),
                initialRange: t,
                finalRange: e,
              };
              this.eventService.dispatchEvent(o);
            }),
            (e.prototype.handleValueChanged = function (t, e, o) {
              var n = this,
                r = this.rangeController.getRangeEndRow(t),
                s = this.rangeController.getRangeStartRow(t),
                a = this.rangeController.getRangeEndRow(e),
                l = this.rangeController.getRangeStartRow(e),
                u = "y" === this.dragAxis;
              if (
                !this.isReduce ||
                this.gridOptionsWrapper.isSuppressClearOnFillReduction()
              ) {
                var p = !0,
                  c = [],
                  d = [],
                  h = 0,
                  f = function () {
                    (c.length = 0), (d.length = 0), (h = 0);
                  },
                  g = function (e, o) {
                    var d = n.isUp ? r : s,
                      h = !1;
                    u && ((p = !0), f());
                    for (
                      var g = function () {
                        var g = n.rowPositionUtils.getRowNode(d);
                        if (!g) return "break";
                        u && e
                          ? y(c, e, g, function () {
                              return !n.rowPositionUtils.sameRow(
                                d,
                                n.isUp ? s : r
                              );
                            })
                          : o &&
                            ((p = !0),
                            f(),
                            o.forEach(function (e) {
                              return y(c, e, g, function () {
                                return (
                                  e !==
                                  (n.isLeft
                                    ? t.columns[0]
                                    : i._.last(t.columns))
                                );
                              });
                            })),
                          (h = n.rowPositionUtils.sameRow(d, n.isUp ? l : a)),
                          (d = n.isUp
                            ? n.cellNavigationService.getRowAbove(d)
                            : n.cellNavigationService.getRowBelow(d));
                      };
                      !h && d && "break" !== g();

                    );
                  },
                  y = function (t, e, r, i) {
                    var s;
                    p
                      ? ((s = n.valueService.getValue(e, r)),
                        d.push(s),
                        (p = i()))
                      : ((s = n.processValues(o, t, d, e, r, h++)),
                        e.isCellEditable(r) && r.setDataValue(e, s)),
                      t.push(s);
                  };
                u
                  ? t.columns.forEach(function (t) {
                      g(t);
                    })
                  : ((m = this.isLeft
                      ? (function () {
                          for (
                            var t = 0, e = 0, o = arguments.length;
                            e < o;
                            e++
                          )
                            t += arguments[e].length;
                          var n = Array(t),
                            r = 0;
                          for (e = 0; e < o; e++)
                            for (
                              var i = arguments[e], s = 0, a = i.length;
                              s < a;
                              s++, r++
                            )
                              n[r] = i[s];
                          return n;
                        })(e.columns).reverse()
                      : e.columns),
                    g(void 0, m));
              } else {
                var m = u
                    ? t.columns
                    : t.columns.filter(function (t) {
                        return e.columns.indexOf(t) < 0;
                      }),
                  v = u ? this.cellNavigationService.getRowBelow(a) : l;
                v && this.clearCellsInRange(v, r, m);
              }
            }),
            (e.prototype.clearCellsInRange = function (t, e, o) {
              for (
                var n = this,
                  r = t,
                  i = !1,
                  s = function () {
                    var t = a.rowPositionUtils.getRowNode(r);
                    if (!t) return "break";
                    o.forEach(function (e) {
                      e.isCellEditable(t) &&
                        n.valueService.setValue(t, e, null);
                    }),
                      (i = a.rowPositionUtils.sameRow(r, e)),
                      (r = a.cellNavigationService.getRowBelow(r));
                  },
                  a = this;
                !i && r && "break" !== s();

              );
            }),
            (e.prototype.processValues = function (t, e, o, n, r, s) {
              var a,
                l = this.gridOptionsWrapper.getFillOperation(),
                u = "y" === this.dragAxis;
              if (
                ((a = u
                  ? this.isUp
                    ? "up"
                    : "down"
                  : this.isLeft
                  ? "left"
                  : "right"),
                l)
              ) {
                var p = l({
                  event: t,
                  values: e,
                  initialValues: o,
                  currentIndex: s,
                  currentCellValue: this.valueService.getValue(n, r),
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                  context: this.gridOptionsWrapper.getContext(),
                  direction: a,
                  column: u ? n : void 0,
                  rowNode: u ? void 0 : r,
                });
                if (!1 !== p) return p;
              }
              var c = !e.some(function (t) {
                var e = parseFloat(t);
                return isNaN(e) || e.toString() !== t.toString();
              });
              if (t.altKey || !c) {
                if (c && 1 === o.length) {
                  var d = this.isUp || this.isLeft ? -1 : 1;
                  return parseFloat(i._.last(e)) + 1 * d;
                }
                return e[s % e.length];
              }
              return i._.last(i._.findLineByLeastSquares(e.map(Number)));
            }),
            (e.prototype.clearValues = function () {
              this.clearMarkedPath(),
                this.clearCellValues(),
                (this.lastCellMarked = void 0),
                t.prototype.clearValues.call(this);
            }),
            (e.prototype.clearMarkedPath = function () {
              this.markedCellComps.forEach(function (t) {
                var e = t.getGui();
                i._.removeCssClass(e, "ag-selection-fill-top"),
                  i._.removeCssClass(e, "ag-selection-fill-right"),
                  i._.removeCssClass(e, "ag-selection-fill-bottom"),
                  i._.removeCssClass(e, "ag-selection-fill-left");
              }),
                (this.markedCellComps.length = 0),
                (this.isUp = !1),
                (this.isLeft = !1),
                (this.isReduce = !1);
            }),
            (e.prototype.clearCellValues = function () {
              this.cellValues.length = 0;
            }),
            (e.prototype.markPathFrom = function (t, e) {
              if (
                (this.clearMarkedPath(),
                this.clearCellValues(),
                "y" === this.dragAxis)
              ) {
                if (this.rowPositionUtils.sameRow(e, t)) return;
                var o = this.rowPositionUtils.before(e, t),
                  n = this.getRangeStartRow(),
                  r = this.getRangeEndRow();
                o &&
                ((e.rowPinned == n.rowPinned && e.rowIndex >= n.rowIndex) ||
                  (n.rowPinned != r.rowPinned &&
                    e.rowPinned == r.rowPinned &&
                    e.rowIndex <= r.rowIndex))
                  ? (this.reduceVertical(t, e), (this.isReduce = !0))
                  : (this.extendVertical(t, e, o), (this.isReduce = !1));
              } else {
                var i = t.column,
                  s = e.column;
                if (i === s) return;
                var a = this.columnController.getAllDisplayedColumns(),
                  l = a.indexOf(i),
                  u = a.indexOf(s);
                u <= l && u >= a.indexOf(this.getCellRange().columns[0])
                  ? (this.reduceHorizontal(t, e), (this.isReduce = !0))
                  : (this.extendHorizontal(t, e, u < l), (this.isReduce = !1));
              }
              this.lastCellMarked = e;
            }),
            (e.prototype.extendVertical = function (t, e, o) {
              var n = this.rowRenderer,
                r = this.rangeController,
                s = t;
              do {
                for (
                  var a = this.getCellRange(), l = a.columns.length, u = 0;
                  u < l;
                  u++
                ) {
                  var p = a.columns[u],
                    c = xd(
                      xd({}, { rowIndex: s.rowIndex, rowPinned: s.rowPinned }),
                      { column: p }
                    ),
                    d = r.isCellInSpecificRange(c, a),
                    h = this.rowPositionUtils.sameRow(s, t);
                  if ((o && (this.isUp = !0), !h)) {
                    var f = n.getComponentForCell(c);
                    if (f) {
                      this.markedCellComps.push(f);
                      var g = f.getGui();
                      d ||
                        (i._.addOrRemoveCssClass(
                          g,
                          "ag-selection-fill-left",
                          0 === u
                        ),
                        i._.addOrRemoveCssClass(
                          g,
                          "ag-selection-fill-right",
                          u === l - 1
                        )),
                        i._.addOrRemoveCssClass(
                          g,
                          o
                            ? "ag-selection-fill-top"
                            : "ag-selection-fill-bottom",
                          this.rowPositionUtils.sameRow(s, e)
                        );
                    }
                  }
                }
                if (this.rowPositionUtils.sameRow(s, e)) break;
              } while (
                (s = o
                  ? this.cellNavigationService.getRowAbove(s)
                  : this.cellNavigationService.getRowBelow(s))
              );
            }),
            (e.prototype.reduceVertical = function (t, e) {
              var o = t;
              do {
                for (
                  var n = this.getCellRange(),
                    r = n.columns.length,
                    s = this.rowPositionUtils.sameRow(o, e),
                    a = 0;
                  a < r;
                  a++
                ) {
                  var l = xd(
                      xd({}, { rowIndex: o.rowIndex, rowPinned: o.rowPinned }),
                      { column: n.columns[a] }
                    ),
                    u = this.rowRenderer.getComponentForCell(l);
                  if (u) {
                    this.markedCellComps.push(u);
                    var p = u.getGui();
                    i._.addOrRemoveCssClass(
                      p,
                      "ag-selection-fill-bottom",
                      this.rowPositionUtils.sameRow(o, e)
                    );
                  }
                }
                if (s) break;
              } while ((o = this.cellNavigationService.getRowAbove(o)));
            }),
            (e.prototype.extendHorizontal = function (t, e, o) {
              var n = this,
                r = this.columnController.getAllDisplayedColumns(),
                s = r.indexOf(o ? e.column : t.column),
                a = r.indexOf(o ? this.getCellRange().columns[0] : e.column),
                l = o ? 0 : 1,
                u = r.slice(s + l, a + l),
                p = this.getRangeStartRow(),
                c = this.getRangeEndRow();
              u.forEach(function (t) {
                var e = p,
                  r = !1;
                do {
                  r = n.rowPositionUtils.sameRow(e, c);
                  var s = n.rowRenderer.getComponentForCell({
                    rowIndex: e.rowIndex,
                    rowPinned: e.rowPinned,
                    column: t,
                  });
                  if (s) {
                    n.markedCellComps.push(s);
                    var a = s.getGui();
                    i._.addOrRemoveCssClass(
                      a,
                      "ag-selection-fill-top",
                      n.rowPositionUtils.sameRow(e, p)
                    ),
                      i._.addOrRemoveCssClass(
                        a,
                        "ag-selection-fill-bottom",
                        n.rowPositionUtils.sameRow(e, c)
                      ),
                      o
                        ? ((n.isLeft = !0),
                          i._.addOrRemoveCssClass(
                            a,
                            "ag-selection-fill-left",
                            t === u[0]
                          ))
                        : i._.addOrRemoveCssClass(
                            a,
                            "ag-selection-fill-right",
                            t === i._.last(u)
                          );
                  }
                  e = n.cellNavigationService.getRowBelow(e);
                } while (!r);
              });
            }),
            (e.prototype.reduceHorizontal = function (t, e) {
              var o = this,
                n = this.columnController.getAllDisplayedColumns(),
                r = n.indexOf(e.column),
                s = n.indexOf(t.column),
                a = n.slice(r, s),
                l = this.getRangeStartRow(),
                u = this.getRangeEndRow();
              a.forEach(function (t) {
                var e = l,
                  n = !1;
                do {
                  n = o.rowPositionUtils.sameRow(e, u);
                  var r = o.rowRenderer.getComponentForCell({
                    rowIndex: e.rowIndex,
                    rowPinned: e.rowPinned,
                    column: t,
                  });
                  if (r) {
                    o.markedCellComps.push(r);
                    var s = r.getGui();
                    i._.addOrRemoveCssClass(
                      s,
                      "ag-selection-fill-right",
                      t === a[0]
                    );
                  }
                  e = o.cellNavigationService.getRowBelow(e);
                } while (!n);
              });
            }),
            (e.prototype.refresh = function (e) {
              var o = this.rangeController.getCellRanges()[0];
              o.startRow && o.endRow
                ? t.prototype.refresh.call(this, e)
                : this.destroy();
            }),
            (e.TEMPLATE = '<div class="ag-fill-handle"></div>'),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            e
          );
        })(Ad),
        Nd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Md = function () {
          return (Md =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Id = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (
              (o.type = i.SelectionHandleType.RANGE), (o.rangeFixed = !1), o
            );
          }
          return (
            Nd(e, t),
            (e.prototype.onDrag = function (t) {
              var e = this.getLastCellHovered();
              if (e) {
                var o = this.rangeController.getCellRanges(),
                  n = i._.last(o);
                this.rangeFixed ||
                  (this.fixRangeStartEnd(n), (this.rangeFixed = !0)),
                  (this.endPosition = {
                    rowIndex: e.rowIndex,
                    rowPinned: e.rowPinned,
                    column: e.column,
                  }),
                  2 === o.length &&
                    o[0].type === i.CellRangeType.DIMENSION &&
                    n.type === i.CellRangeType.VALUE &&
                    !this.rowPositionUtils.sameRow(
                      this.endPosition,
                      this.rangeController.getRangeEndRow(n)
                    ) &&
                    this.rangeController.updateRangeEnd(
                      o[0],
                      Md(Md({}, this.endPosition), { column: o[0].columns[0] }),
                      !0
                    ),
                  this.rangeController.extendLatestRangeToCell(
                    this.endPosition
                  );
              }
            }),
            (e.prototype.onDragEnd = function (t) {
              var e = i._.last(this.rangeController.getCellRanges());
              this.fixRangeStartEnd(e), (this.rangeFixed = !1);
            }),
            (e.prototype.fixRangeStartEnd = function (t) {
              var e = this.rangeController.getRangeStartRow(t),
                o = this.rangeController.getRangeEndRow(t),
                n = t.columns[0];
              (t.startRow = e), (t.endRow = o), (t.startColumn = n);
            }),
            (e.TEMPLATE = '<div class="ag-range-handle"></div>'),
            e
          );
        })(Ad),
        Ld = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Gd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ld(e, t),
            (e.prototype.createSelectionHandle = function (t) {
              return this.createBean(
                t === i.SelectionHandleType.RANGE ? new Id() : new Fd()
              );
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([i.Bean("selectionHandleFactory")], e)
          );
        })(i.BeanStub),
        kd = {
          moduleName: i.ModuleNames.RangeSelectionModule,
          beans: [_d, Gd],
          agStackComponents: [
            { componentName: "AgFillHandle", componentClass: Fd },
            { componentName: "AgRangeHandle", componentClass: Id },
          ],
          dependantModules: [g],
        },
        Vd = {
          moduleName: i.ModuleNames.GridChartsModule,
          beans: [yd, vd, bd],
          dependantModules: [kd, g],
        },
        Wd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Hd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Bd = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.needRefresh = !1), (e.loadRowDataVersion = 0), e;
          }
          return (
            Wd(e, t),
            (e.prototype.init = function (t) {
              var e = this;
              if (t.pinned)
                this.setTemplate('<div class="ag-details-row"></div>');
              else {
                this.params = t;
                var o = this.gridOptionsWrapper.isDetailRowAutoHeight();
                this.checkForDeprecations(),
                  this.ensureValidRefreshStrategy(),
                  this.selectAndSetTemplate(o),
                  i._.exists(this.eDetailGrid)
                    ? (this.addThemeToDetailGrid(),
                      this.createDetailsGrid(o),
                      this.registerDetailWithMaster(),
                      this.loadRowData(),
                      window.setTimeout(function () {
                        e.detailGridOptions.api &&
                          e.detailGridOptions.api.doLayout();
                      }, 0))
                    : console.warn(
                        'AG Grid: reference to eDetailGrid was missing from the details template. Please add ref="eDetailGrid" to the template.'
                      ),
                  this.addManagedListener(
                    t.node.parent,
                    i.RowNode.EVENT_DATA_CHANGED,
                    function () {
                      e.needRefresh = !0;
                    }
                  );
              }
            }),
            (e.prototype.refresh = function () {
              return (
                !this.needRefresh ||
                "nothing" === this.params.refreshStrategy ||
                ((this.needRefresh = !1),
                "everything" !== this.params.refreshStrategy &&
                  (this.loadRowData(), !0))
              );
            }),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.checkForDeprecations = function () {
              this.params.suppressRefresh &&
                (console.warn(
                  "AG Grid: as of v23.2.0, cellRendererParams.suppressRefresh for Detail Cell Renderer is no longer used. Please set cellRendererParams.refreshStrategy = 'nothing' instead."
                ),
                (this.params.refreshStrategy = "nothing"));
            }),
            (e.prototype.ensureValidRefreshStrategy = function () {
              switch (this.params.refreshStrategy) {
                case "rows":
                case "nothing":
                case "everything":
                  return;
              }
              this.params.refreshStrategy &&
                console.warn(
                  "AG Grid: invalid cellRendererParams.refreshStrategy = '" +
                    this.params.refreshStrategy +
                    "' supplied, defaulting to refreshStrategy = 'rows'."
                ),
                (this.params.refreshStrategy = "rows");
            }),
            (e.prototype.addThemeToDetailGrid = function () {
              var t = this.environment.getTheme().theme;
              t && i._.addCssClass(this.eDetailGrid, t);
            }),
            (e.prototype.registerDetailWithMaster = function () {
              var t = this.params.node.id,
                e = this.params.api,
                o = {
                  id: t,
                  api: this.detailGridOptions.api,
                  columnApi: this.detailGridOptions.columnApi,
                },
                n = this.params.node;
              e.addDetailGridInfo(t, o),
                (n.detailGridInfo = o),
                this.addDestroyFunc(function () {
                  e.removeDetailGridInfo(t), (n.detailGridInfo = null);
                });
            }),
            (e.prototype.selectAndSetTemplate = function (t) {
              var o = this,
                n = function () {
                  o.setTemplate(e.TEMPLATE),
                    o.addCssClass(
                      t
                        ? "ag-details-row-auto-height"
                        : "ag-details-row-fixed-height"
                    ),
                    i._.addCssClass(
                      o.eDetailGrid,
                      t
                        ? "ag-details-grid-auto-height"
                        : "ag-details-grid-fixed-height"
                    );
                };
              if (i._.missing(this.params.template)) n();
              else if ("string" == typeof this.params.template)
                this.setTemplate(this.params.template);
              else if ("function" == typeof this.params.template) {
                var r = (0, this.params.template)(this.params);
                this.setTemplate(r);
              } else
                console.warn(
                  "AG Grid: detailCellRendererParams.template should be function or string"
                ),
                  n();
            }),
            (e.prototype.createDetailsGrid = function (t) {
              var e = this,
                o = this.params.detailGridOptions;
              i._.missing(o) &&
                console.warn(
                  "AG Grid: could not find detail grid options for master detail, please set gridOptions.detailCellRendererParams.detailGridOptions"
                ),
                (this.detailGridOptions = i._.cloneObject(o)),
                t && (this.detailGridOptions.domLayout = "autoHeight"),
                new i.Grid(this.eDetailGrid, this.detailGridOptions, {
                  $scope: this.params.$scope,
                  $compile: this.params.$compile,
                  providedBeanInstances: {
                    agGridReact: this.params.agGridReact,
                    frameworkComponentWrapper:
                      this.params.frameworkComponentWrapper,
                  },
                }),
                this.addDestroyFunc(function () {
                  e.detailGridOptions.api && e.detailGridOptions.api.destroy();
                });
            }),
            (e.prototype.loadRowData = function () {
              var t = this;
              this.loadRowDataVersion++;
              var e = this.loadRowDataVersion,
                o = this.params.getDetailRowData;
              o
                ? o({
                    node: this.params.node,
                    data: this.params.node.data,
                    successCallback: function (o) {
                      t.loadRowDataVersion === e && t.setRowData(o);
                    },
                    context: this.gridOptionsWrapper.getContext(),
                  })
                : console.warn(
                    "AG Grid: could not find getDetailRowData for master / detail, please set gridOptions.detailCellRendererParams.getDetailRowData"
                  );
            }),
            (e.prototype.setRowData = function (t) {
              this.detailGridOptions.api &&
                this.detailGridOptions.api.setRowData(t);
            }),
            (e.TEMPLATE =
              '<div class="ag-details-row">\n            <div ref="eDetailGrid" class="ag-details-grid"></div>\n        </div>'),
            Hd(
              [i.Autowired("environment")],
              e.prototype,
              "environment",
              void 0
            ),
            Hd(
              [i.RefSelector("eDetailGrid")],
              e.prototype,
              "eDetailGrid",
              void 0
            ),
            e
          );
        })(i.Component),
        jd = {
          moduleName: i.ModuleNames.MasterDetailModule,
          beans: [],
          userComponents: [
            { componentName: "agDetailCellRenderer", componentClass: Bd },
          ],
          dependantModules: [g],
        },
        Ud = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        zd = (function (t) {
          function e(e) {
            var o = t.call(this, void 0, !0) || this;
            return (
              (o.wrappedComponent = e), o.setTemplateFromElement(e.getGui()), o
            );
          }
          return (
            Ud(e, t),
            (e.prototype.handleKeyDown = function (t) {
              t.keyCode === i.KeyCode.ESCAPE && this.closePanel();
            }),
            (e.prototype.onTabKeyDown = function (e) {
              t.prototype.onTabKeyDown.call(this, e),
                e.defaultPrevented || (this.closePanel(), e.preventDefault());
            }),
            (e.prototype.closePanel = function () {
              var t = this.parentComponent;
              t.closeSubMenu(),
                setTimeout(function () {
                  return t.getGui().focus();
                }, 0);
            }),
            e
          );
        })(i.ManagedFocusComponent),
        Kd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Yd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Xd = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (
              (o.params = e),
              (o.isActive = !1),
              (o.subMenuIsOpen = !1),
              o.setTemplate(
                '<div class="' +
                  o.getClassName() +
                  '" tabindex="-1" role="treeitem"></div>'
              ),
              o
            );
          }
          return (
            Kd(e, t),
            (e.prototype.init = function () {
              var t = this;
              this.addIcon(),
                this.addName(),
                this.addShortcut(),
                this.addSubMenu(),
                this.addTooltip();
              var e = this.getGui();
              this.params.disabled
                ? (this.addCssClass(this.getClassName("disabled")),
                  i._.setAriaDisabled(e, !0))
                : (this.addGuiEventListener("click", function (e) {
                    return t.onItemSelected(e);
                  }),
                  this.addGuiEventListener("keydown", function (e) {
                    (e.keyCode !== i.KeyCode.ENTER &&
                      e.keyCode !== i.KeyCode.SPACE) ||
                      (e.preventDefault(), t.onItemSelected(e));
                  }),
                  this.addGuiEventListener("mouseenter", function () {
                    return t.onMouseEnter();
                  }),
                  this.addGuiEventListener("mouseleave", function () {
                    return t.onMouseLeave();
                  })),
                this.params.cssClasses &&
                  this.params.cssClasses.forEach(function (t) {
                    return i._.addCssClass(e, t);
                  });
            }),
            (e.prototype.isDisabled = function () {
              return !!this.params.disabled;
            }),
            (e.prototype.openSubMenu = function (t) {
              var o = this;
              if (
                (void 0 === t && (t = !1),
                this.closeSubMenu(),
                this.params.subMenu)
              ) {
                var n,
                  r = i._.loadTemplate(
                    '<div class="ag-menu" role="presentation"></div>'
                  );
                if (this.params.subMenu instanceof Array) {
                  var s = i._.getAriaLevel(this.getGui()),
                    a = isNaN(s) ? 1 : s + 1,
                    l = this.createBean(new Zd(a));
                  l.setParentComponent(this),
                    l.addMenuItems(this.params.subMenu),
                    r.appendChild(l.getGui()),
                    this.addManagedListener(
                      l,
                      e.EVENT_MENU_ITEM_SELECTED,
                      function (t) {
                        return o.dispatchEvent(t);
                      }
                    ),
                    l.addGuiEventListener("mouseenter", function () {
                      return o.cancelDeactivate();
                    }),
                    (n = function () {
                      return o.destroyBean(l);
                    }),
                    t &&
                      setTimeout(function () {
                        return l.activateFirstItem();
                      }, 0);
                } else {
                  var u = this.params.subMenu,
                    p = this.createBean(new zd(u));
                  p.setParentComponent(this);
                  var c = p.getGui(),
                    d = "mouseenter",
                    h = function () {
                      return o.cancelDeactivate();
                    };
                  c.addEventListener(d, h),
                    (n = function () {
                      return c.removeEventListener(d, h);
                    }),
                    r.appendChild(c),
                    u.afterGuiAttached &&
                      setTimeout(function () {
                        return u.afterGuiAttached();
                      }, 0);
                }
                var f = this.getGui(),
                  g = this.popupService.positionPopupForMenu.bind(
                    this.popupService,
                    { eventSource: f, ePopup: r }
                  ),
                  y = this.popupService.addPopup({
                    modal: !0,
                    eChild: r,
                    positionCallback: g,
                    anchorToElement: f,
                  });
                (this.subMenuIsOpen = !0),
                  i._.setAriaExpanded(f, !0),
                  (this.hideSubMenu = function () {
                    y && y.hideFunc(),
                      (o.subMenuIsOpen = !1),
                      i._.setAriaExpanded(f, !1),
                      n();
                  });
              }
            }),
            (e.prototype.closeSubMenu = function () {
              this.hideSubMenu &&
                (this.hideSubMenu(),
                (this.hideSubMenu = null),
                i._.setAriaExpanded(this.getGui(), !1));
            }),
            (e.prototype.isSubMenuOpen = function () {
              return this.subMenuIsOpen;
            }),
            (e.prototype.activate = function (t) {
              var e = this;
              this.cancelActivate(),
                this.params.disabled ||
                  ((this.isActive = !0),
                  this.addCssClass(this.getClassName("active")),
                  this.getGui().focus(),
                  t &&
                    this.params.subMenu &&
                    window.setTimeout(function () {
                      e.isAlive() && e.isActive && e.openSubMenu();
                    }, 300),
                  this.onItemActivated());
            }),
            (e.prototype.deactivate = function () {
              this.cancelDeactivate(),
                this.removeCssClass(this.getClassName("active")),
                (this.isActive = !1),
                this.subMenuIsOpen && this.hideSubMenu();
            }),
            (e.prototype.addIcon = function () {
              if (
                this.params.checked ||
                this.params.icon ||
                !this.params.isCompact
              ) {
                var t = i._.loadTemplate(
                  '<span ref="eIcon" class="' +
                    this.getClassName("part") +
                    " " +
                    this.getClassName("icon") +
                    '" role="presentation"></span>'
                );
                this.params.checked
                  ? t.appendChild(
                      i._.createIconNoSpan("check", this.gridOptionsWrapper)
                    )
                  : this.params.icon &&
                    (i._.isNodeOrElement(this.params.icon)
                      ? t.appendChild(this.params.icon)
                      : "string" == typeof this.params.icon
                      ? (t.innerHTML = this.params.icon)
                      : console.warn(
                          "AG Grid: menu item icon must be DOM node or string"
                        )),
                  this.getGui().appendChild(t);
              }
            }),
            (e.prototype.addName = function () {
              if (this.params.name || !this.params.isCompact) {
                var t = i._.loadTemplate(
                  '<span ref="eName" class="' +
                    this.getClassName("part") +
                    " " +
                    this.getClassName("text") +
                    '">' +
                    (this.params.name || "") +
                    "</span>"
                );
                this.getGui().appendChild(t);
              }
            }),
            (e.prototype.addTooltip = function () {
              this.params.tooltip &&
                ((this.tooltip = this.params.tooltip),
                this.gridOptionsWrapper.isEnableBrowserTooltips()
                  ? this.getGui().setAttribute("title", this.tooltip)
                  : this.createManagedBean(new i.TooltipFeature(this)));
            }),
            (e.prototype.getTooltipParams = function () {
              return { location: "menu", value: this.tooltip };
            }),
            (e.prototype.addShortcut = function () {
              if (this.params.shortcut || !this.params.isCompact) {
                var t = i._.loadTemplate(
                  '<span ref="eShortcut" class="' +
                    this.getClassName("part") +
                    " " +
                    this.getClassName("shortcut") +
                    '">' +
                    (this.params.shortcut || "") +
                    "</span>"
                );
                this.getGui().appendChild(t);
              }
            }),
            (e.prototype.addSubMenu = function () {
              if (this.params.subMenu || !this.params.isCompact) {
                var t = i._.loadTemplate(
                    '<span ref="ePopupPointer" class="' +
                      this.getClassName("part") +
                      " " +
                      this.getClassName("popup-pointer") +
                      '"></span>'
                  ),
                  e = this.getGui();
                if (this.params.subMenu) {
                  var o = this.gridOptionsWrapper.isEnableRtl()
                    ? "smallLeft"
                    : "smallRight";
                  i._.setAriaExpanded(e, !1),
                    t.appendChild(
                      i._.createIconNoSpan(o, this.gridOptionsWrapper)
                    );
                }
                e.appendChild(t);
              }
            }),
            (e.prototype.onItemSelected = function (t) {
              this.params.action
                ? this.params.action()
                : this.openSubMenu(t && "keydown" === t.type),
                (!this.params.subMenu || this.params.action) &&
                  this.dispatchEvent({
                    type: e.EVENT_MENU_ITEM_SELECTED,
                    action: this.params.action,
                    checked: this.params.checked,
                    cssClasses: this.params.cssClasses,
                    disabled: this.params.disabled,
                    icon: this.params.icon,
                    name: this.params.name,
                    shortcut: this.params.shortcut,
                    subMenu: this.params.subMenu,
                    tooltip: this.params.tooltip,
                    event: t,
                  });
            }),
            (e.prototype.onItemActivated = function () {
              this.dispatchEvent({
                type: e.EVENT_MENU_ITEM_ACTIVATED,
                menuItem: this,
              });
            }),
            (e.prototype.cancelActivate = function () {
              this.activateTimeoutId &&
                (window.clearTimeout(this.activateTimeoutId),
                (this.activateTimeoutId = 0));
            }),
            (e.prototype.cancelDeactivate = function () {
              this.deactivateTimeoutId &&
                (window.clearTimeout(this.deactivateTimeoutId),
                (this.deactivateTimeoutId = 0));
            }),
            (e.prototype.onMouseEnter = function () {
              var t = this;
              this.cancelDeactivate(),
                this.params.isAnotherSubMenuOpen()
                  ? (this.activateTimeoutId = window.setTimeout(function () {
                      return t.activate(!0);
                    }, e.ACTIVATION_DELAY))
                  : this.activate(!0);
            }),
            (e.prototype.onMouseLeave = function () {
              var t = this;
              this.cancelActivate(),
                this.isSubMenuOpen()
                  ? (this.deactivateTimeoutId = window.setTimeout(function () {
                      return t.deactivate();
                    }, e.ACTIVATION_DELAY))
                  : this.deactivate();
            }),
            (e.prototype.getClassName = function (t) {
              var e = this.params.isCompact
                ? "ag-compact-menu-option"
                : "ag-menu-option";
              return t ? e + "-" + t : e;
            }),
            (e.EVENT_MENU_ITEM_SELECTED = "menuItemSelected"),
            (e.EVENT_MENU_ITEM_ACTIVATED = "menuItemActivated"),
            (e.ACTIVATION_DELAY = 80),
            Yd(
              [i.Autowired("popupService")],
              e.prototype,
              "popupService",
              void 0
            ),
            Yd([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        qd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Qd = function () {
          return (Qd =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Zd = (function (t) {
          function e(e) {
            void 0 === e && (e = 1);
            var o =
              t.call(
                this,
                '<div class="ag-menu-list" role="tree"></div>',
                !0
              ) || this;
            return (o.level = e), (o.menuItems = []), o;
          }
          return (
            qd(e, t),
            (e.prototype.onTabKeyDown = function (t) {
              var e = this.getParentComponent();
              (e && e instanceof i.ManagedFocusComponent) || t.preventDefault(),
                t.shiftKey && this.closeIfIsChild(t);
            }),
            (e.prototype.handleKeyDown = function (t) {
              switch (t.keyCode) {
                case i.KeyCode.UP:
                case i.KeyCode.RIGHT:
                case i.KeyCode.DOWN:
                case i.KeyCode.LEFT:
                  t.preventDefault(), this.handleNavKey(t.keyCode);
                  break;
                case i.KeyCode.ESCAPE:
                  var e = this.findTopMenu();
                  e && this.focusController.focusInto(e.getGui());
              }
            }),
            (e.prototype.clearActiveItem = function () {
              this.activeMenuItem &&
                (this.activeMenuItem.deactivate(),
                (this.activeMenuItem = null));
            }),
            (e.prototype.addMenuItems = function (t) {
              var e = this;
              null != t &&
                t.forEach(function (t) {
                  "separator" === t
                    ? e.addSeparator()
                    : "string" == typeof t
                    ? console.warn("AG Grid: unrecognised menu item " + t)
                    : e.addItem(t);
                });
            }),
            (e.prototype.addItem = function (t) {
              var e = this,
                o = this.createManagedBean(
                  new Xd(
                    Qd(Qd({}, t), {
                      isAnotherSubMenuOpen: function () {
                        return i._.some(e.menuItems, function (t) {
                          return t.isSubMenuOpen();
                        });
                      },
                    })
                  )
                );
              o.setParentComponent(this),
                i._.setAriaLevel(o.getGui(), this.level),
                this.menuItems.push(o),
                this.appendChild(o.getGui()),
                this.addManagedListener(
                  o,
                  Xd.EVENT_MENU_ITEM_SELECTED,
                  function (t) {
                    e.dispatchEvent(t);
                  }
                ),
                this.addManagedListener(
                  o,
                  Xd.EVENT_MENU_ITEM_ACTIVATED,
                  function (t) {
                    e.activeMenuItem &&
                      e.activeMenuItem !== t.menuItem &&
                      e.activeMenuItem.deactivate(),
                      (e.activeMenuItem = t.menuItem);
                  }
                );
            }),
            (e.prototype.activateFirstItem = function () {
              var t = this.menuItems.filter(function (t) {
                return !t.isDisabled();
              })[0];
              t && t.activate();
            }),
            (e.prototype.addSeparator = function () {
              this.appendChild(
                i._.loadTemplate(
                  '\n            <div class="ag-menu-separator" aria-hidden="true">\n                <div class="ag-menu-separator-part"></div>\n                <div class="ag-menu-separator-part"></div>\n                <div class="ag-menu-separator-part"></div>\n                <div class="ag-menu-separator-part"></div>\n            </div>'
                )
              );
            }),
            (e.prototype.findTopMenu = function () {
              var t = this.getParentComponent();
              if (!t && this instanceof e) return this;
              for (;;) {
                var o = t && t.getParentComponent && t.getParentComponent();
                if (!o || !(o instanceof e || o instanceof Xd)) break;
                t = o;
              }
              return t instanceof e ? t : void 0;
            }),
            (e.prototype.handleNavKey = function (t) {
              switch (t) {
                case i.KeyCode.UP:
                case i.KeyCode.DOWN:
                  var e = this.findNextItem(t === i.KeyCode.UP);
                  return void (e && e !== this.activeMenuItem && e.activate());
              }
              t ===
              (this.gridOptionsWrapper.isEnableRtl()
                ? i.KeyCode.RIGHT
                : i.KeyCode.LEFT)
                ? this.closeIfIsChild()
                : this.openChild();
            }),
            (e.prototype.closeIfIsChild = function (t) {
              var e = this.getParentComponent();
              e &&
                e instanceof Xd &&
                (t && t.preventDefault(), e.closeSubMenu(), e.getGui().focus());
            }),
            (e.prototype.openChild = function () {
              this.activeMenuItem && this.activeMenuItem.openSubMenu(!0);
            }),
            (e.prototype.findNextItem = function (t) {
              var e = this.menuItems.filter(function (t) {
                return !t.isDisabled();
              });
              if (e.length) {
                if (!this.activeMenuItem) return t ? i._.last(e) : e[0];
                var o;
                t && e.reverse();
                for (var n = !1, r = 0; r < e.length; r++) {
                  var s = e[r];
                  if (n) {
                    o = s;
                    break;
                  }
                  s === this.activeMenuItem && (n = !0);
                }
                return o || this.activeMenuItem;
              }
            }),
            (e.prototype.destroy = function () {
              this.clearActiveItem(), t.prototype.destroy.call(this);
            }),
            e
          );
        })(i.ManagedFocusComponent),
        $d = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Jd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        th = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            $d(e, t),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.hideActiveMenu = function () {
              this.destroyBean(this.activeMenu);
            }),
            (e.prototype.showMenuAfterMouseEvent = function (t, e, o) {
              var n = this;
              this.showMenu(
                t,
                function (r) {
                  var i = r.getGui();
                  n.popupService.positionPopupUnderMouseEvent({
                    type: "columnMenu",
                    column: t,
                    mouseEvent: e,
                    ePopup: i,
                  }),
                    o && r.showTab(o);
                },
                o,
                void 0,
                e.target
              );
            }),
            (e.prototype.showMenuAfterButtonClick = function (t, e, o, n) {
              var r = this,
                i = -1,
                s = "left";
              this.gridOptionsWrapper.isEnableRtl() && ((i = 1), (s = "right")),
                this.showMenu(
                  t,
                  function (n) {
                    var a = n.getMinDimensions(),
                      l = a.width,
                      u = a.height,
                      p = n.getGui();
                    r.popupService.positionPopupUnderComponent({
                      type: "columnMenu",
                      column: t,
                      eventSource: e,
                      ePopup: p,
                      minWidth: l,
                      minHeight: u,
                      alignSide: s,
                      nudgeX: 9 * i,
                      nudgeY: -23,
                      keepWithinBounds: !0,
                    }),
                      o && n.showTab(o);
                  },
                  o,
                  n,
                  e
                );
            }),
            (e.prototype.showMenu = function (t, e, o, n, r) {
              var s = this,
                a = this.createBean(new eh(t, this.lastSelectedTab, n)),
                l = a.getGui(),
                u = r || this.gridPanel.getGui(),
                p = [];
              p.push(function (e) {
                if (
                  (s.destroyBean(a),
                  t.setMenuVisible(!1, "contextMenu"),
                  e instanceof KeyboardEvent && r && i._.isVisible(r))
                ) {
                  var o = s.focusController.findTabbableParent(r);
                  o && o.focus();
                }
              });
              var c = this.popupService.addPopup({
                modal: !0,
                eChild: l,
                closeOnEsc: !0,
                closedCallback: function (t) {
                  p.forEach(function (e) {
                    return e(t);
                  });
                },
                afterGuiAttached: function (t) {
                  return a.afterGuiAttached(t);
                },
                positionCallback: function () {
                  return e(a);
                },
                anchorToElement: u,
              });
              if (c) {
                var d = c.stopAnchoringFunc;
                d &&
                  (t.addEventListener(i.Column.EVENT_LEFT_CHANGED, d),
                  t.addEventListener(i.Column.EVENT_VISIBLE_CHANGED, d),
                  p.push(function () {
                    t.removeEventListener(i.Column.EVENT_LEFT_CHANGED, d),
                      t.removeEventListener(i.Column.EVENT_VISIBLE_CHANGED, d);
                  }));
              }
              o || a.showTabBasedOnPreviousSelection(),
                a.addEventListener(eh.EVENT_TAB_SELECTED, function (t) {
                  s.lastSelectedTab = t.key;
                }),
                t.setMenuVisible(!0, "contextMenu"),
                (this.activeMenu = a),
                a.addEventListener(i.BeanStub.EVENT_DESTROYED, function () {
                  s.activeMenu === a && (s.activeMenu = null);
                });
            }),
            (e.prototype.isMenuEnabled = function (t) {
              return t.getMenuTabs(eh.TABS_DEFAULT).length > 0;
            }),
            Jd(
              [i.Autowired("popupService")],
              e.prototype,
              "popupService",
              void 0
            ),
            Jd(
              [i.Autowired("focusController")],
              e.prototype,
              "focusController",
              void 0
            ),
            Jd([i.Bean("menuFactory")], e)
          );
        })(i.BeanStub),
        eh = (function (t) {
          function e(o, n, r) {
            var i = t.call(this) || this;
            return (
              (i.tabFactories = {}),
              (i.includeChecks = {}),
              (i.timeOfLastColumnChange = Date.now()),
              (i.column = o),
              (i.initialSelection = n),
              (i.tabFactories[e.TAB_GENERAL] = i.createMainPanel.bind(i)),
              (i.tabFactories[e.TAB_FILTER] = i.createFilterPanel.bind(i)),
              (i.tabFactories[e.TAB_COLUMNS] = i.createColumnsPanel.bind(i)),
              (i.includeChecks[e.TAB_GENERAL] = function () {
                return !0;
              }),
              (i.includeChecks[e.TAB_FILTER] = function () {
                return o.isFilterAllowed();
              }),
              (i.includeChecks[e.TAB_COLUMNS] = function () {
                return !0;
              }),
              (i.restrictTo = r),
              i
            );
          }
          return (
            $d(e, t),
            (e.prototype.getMinDimensions = function () {
              return this.tabbedLayout.getMinDimensions();
            }),
            (e.prototype.init = function () {
              var t = this,
                e = this.getTabsToCreate().map(function (e) {
                  return t.createTab(e);
                });
              (this.tabbedLayout = new i.TabbedLayout({
                items: e,
                cssClass: "ag-menu",
                onActiveItemClicked: this.onHidePopup.bind(this),
                onItemClicked: this.onTabItemClicked.bind(this),
              })),
                this.createBean(this.tabbedLayout),
                this.mainMenuList &&
                  this.mainMenuList.setParentComponent(this.tabbedLayout),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_DISPLAYED_COLUMNS_CHANGED,
                  this.onDisplayedColumnsChanged.bind(this)
                );
            }),
            (e.prototype.getTabsToCreate = function () {
              var t = this;
              return this.restrictTo
                ? this.restrictTo
                : this.column
                    .getMenuTabs(e.TABS_DEFAULT)
                    .filter(function (e) {
                      return t.isValidMenuTabItem(e);
                    })
                    .filter(function (e) {
                      return t.isNotSuppressed(e);
                    })
                    .filter(function (e) {
                      return t.isModuleLoaded(e);
                    });
            }),
            (e.prototype.isModuleLoaded = function (t) {
              return (
                t !== e.TAB_COLUMNS ||
                i.ModuleRegistry.isRegistered(
                  i.ModuleNames.ColumnToolPanelModule
                )
              );
            }),
            (e.prototype.isValidMenuTabItem = function (t) {
              var o = !0,
                n = e.TABS_DEFAULT;
              return (
                null != this.restrictTo &&
                  ((o = this.restrictTo.indexOf(t) > -1),
                  (n = this.restrictTo)),
                (o = o && e.TABS_DEFAULT.indexOf(t) > -1) ||
                  console.warn(
                    "Trying to render an invalid menu item '" +
                      t +
                      "'. Check that your 'menuTabs' contains one of [" +
                      n +
                      "]"
                  ),
                o
              );
            }),
            (e.prototype.isNotSuppressed = function (t) {
              return this.includeChecks[t]();
            }),
            (e.prototype.createTab = function (t) {
              return this.tabFactories[t]();
            }),
            (e.prototype.showTabBasedOnPreviousSelection = function () {
              this.showTab(this.initialSelection);
            }),
            (e.prototype.showTab = function (t) {
              this.tabItemColumns && t === e.TAB_COLUMNS
                ? this.tabbedLayout.showItem(this.tabItemColumns)
                : this.tabItemFilter && t === e.TAB_FILTER
                ? this.tabbedLayout.showItem(this.tabItemFilter)
                : this.tabItemGeneral && t === e.TAB_GENERAL
                ? this.tabbedLayout.showItem(this.tabItemGeneral)
                : this.tabbedLayout.showFirstItem();
            }),
            (e.prototype.onTabItemClicked = function (t) {
              var o = null;
              switch (t.item) {
                case this.tabItemColumns:
                  o = e.TAB_COLUMNS;
                  break;
                case this.tabItemFilter:
                  o = e.TAB_FILTER;
                  break;
                case this.tabItemGeneral:
                  o = e.TAB_GENERAL;
              }
              o && this.activateTab(o);
            }),
            (e.prototype.activateTab = function (t) {
              this.dispatchEvent({ type: e.EVENT_TAB_SELECTED, key: t });
            }),
            (e.prototype.getMenuItems = function () {
              var t,
                o = this.getDefaultMenuOptions(),
                n = this.gridOptionsWrapper.getMainMenuItemsFunc();
              return (
                (t = n
                  ? n({
                      column: this.column,
                      api: this.gridOptionsWrapper.getApi(),
                      columnApi: this.gridOptionsWrapper.getColumnApi(),
                      context: this.gridOptionsWrapper.getContext(),
                      defaultItems: o,
                    })
                  : o),
                i._.removeRepeatsFromArray(t, e.MENU_ITEM_SEPARATOR),
                t
              );
            }),
            (e.prototype.getDefaultMenuOptions = function () {
              var t = [],
                o = !this.column.getColDef().lockPinned,
                n = this.columnController.getRowGroupColumns().length,
                r = n > 0,
                s =
                  this.columnController
                    .getRowGroupColumns()
                    .indexOf(this.column) >= 0,
                a = this.column.isAllowValue(),
                l = this.column.isAllowRowGroup(),
                u = this.column.isPrimary(),
                p = this.columnController.isPivotMode(),
                c =
                  this.rowModel.getType() ===
                  i.Constants.ROW_MODEL_TYPE_CLIENT_SIDE,
                d = this.gridOptionsWrapper.isTreeData(),
                h = (u && r && a) || !u;
              return (
                o && t.push("pinSubMenu"),
                h && t.push("valueAggSubMenu"),
                (o || h) && t.push(e.MENU_ITEM_SEPARATOR),
                t.push("autoSizeThis"),
                t.push("autoSizeAll"),
                t.push(e.MENU_ITEM_SEPARATOR),
                l &&
                  this.column.isPrimary() &&
                  t.push(s ? "rowUnGroup" : "rowGroup"),
                t.push(e.MENU_ITEM_SEPARATOR),
                t.push("resetColumns"),
                c &&
                  (d || n > (p ? 1 : 0)) &&
                  (t.push("expandAll"), t.push("contractAll")),
                t
              );
            }),
            (e.prototype.createMainPanel = function () {
              this.mainMenuList = this.createManagedBean(new Zd());
              var t = this.getMenuItems(),
                o = this.menuItemMapper.mapWithStockItems(t, this.column);
              return (
                this.mainMenuList.addMenuItems(o),
                this.mainMenuList.addEventListener(
                  Xd.EVENT_MENU_ITEM_SELECTED,
                  this.onHidePopup.bind(this)
                ),
                (this.tabItemGeneral = {
                  title: i._.createIconNoSpan(
                    "menu",
                    this.gridOptionsWrapper,
                    this.column
                  ),
                  titleLabel: e.TAB_GENERAL.replace("MenuTab", ""),
                  bodyPromise: i.AgPromise.resolve(this.mainMenuList.getGui()),
                  name: e.TAB_GENERAL,
                }),
                this.tabItemGeneral
              );
            }),
            (e.prototype.onHidePopup = function () {
              this.hidePopupFunc();
              var t = this.focusController.getFocusedCell();
              t &&
                this.focusController.setFocusedCell(
                  t.rowIndex,
                  t.column,
                  t.rowPinned,
                  !0
                );
            }),
            (e.prototype.createFilterPanel = function () {
              var t = this.filterManager.getOrCreateFilterWrapper(
                this.column,
                "COLUMN_MENU"
              );
              return (
                (this.tabItemFilter = {
                  title: i._.createIconNoSpan(
                    "filter",
                    this.gridOptionsWrapper,
                    this.column
                  ),
                  titleLabel: e.TAB_FILTER.replace("MenuTab", ""),
                  bodyPromise: t.guiPromise,
                  afterAttachedCallback: function (e) {
                    t.filterPromise &&
                      t.filterPromise.then(function (t) {
                        t && t.afterGuiAttached && t.afterGuiAttached(e);
                      });
                  },
                  name: e.TAB_FILTER,
                }),
                this.tabItemFilter
              );
            }),
            (e.prototype.createColumnsPanel = function () {
              var t = document.createElement("div");
              i._.addCssClass(t, "ag-menu-column-select-wrapper"),
                (this.columnSelectPanel = this.createManagedBean(new Nt()));
              var o = this.column.getColDef().columnsMenuParams;
              return (
                o || (o = {}),
                this.columnSelectPanel.init(
                  !1,
                  {
                    suppressValues: !1,
                    suppressPivots: !1,
                    suppressRowGroups: !1,
                    suppressPivotMode: !1,
                    contractColumnSelection: !!o.contractColumnSelection,
                    suppressColumnExpandAll: !!o.suppressColumnExpandAll,
                    suppressColumnFilter: !!o.suppressColumnFilter,
                    suppressColumnSelectAll: !!o.suppressColumnSelectAll,
                    suppressSideButtons: !1,
                    suppressSyncLayoutWithGrid: !!o.suppressSyncLayoutWithGrid,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  },
                  "columnMenu"
                ),
                i._.addCssClass(
                  this.columnSelectPanel.getGui(),
                  "ag-menu-column-select"
                ),
                t.appendChild(this.columnSelectPanel.getGui()),
                (this.tabItemColumns = {
                  title: i._.createIconNoSpan(
                    "columns",
                    this.gridOptionsWrapper,
                    this.column
                  ),
                  titleLabel: e.TAB_COLUMNS.replace("MenuTab", ""),
                  bodyPromise: i.AgPromise.resolve(t),
                  name: e.TAB_COLUMNS,
                }),
                this.tabItemColumns
              );
            }),
            (e.prototype.afterGuiAttached = function (t) {
              var e = t.hidePopup;
              this.tabbedLayout.setAfterAttachedParams({
                container: "columnMenu",
                hidePopup: e,
              }),
                (this.hidePopupFunc = e),
                this.addDestroyFunc(e);
            }),
            (e.prototype.getGui = function () {
              return this.tabbedLayout.getGui();
            }),
            (e.prototype.onDisplayedColumnsChanged = function () {
              this.timeOfLastColumnChange = Date.now();
            }),
            (e.EVENT_TAB_SELECTED = "tabSelected"),
            (e.TAB_FILTER = "filterMenuTab"),
            (e.TABS_DEFAULT = [
              (e.TAB_GENERAL = "generalMenuTab"),
              e.TAB_FILTER,
              (e.TAB_COLUMNS = "columnsMenuTab"),
            ]),
            (e.MENU_ITEM_SEPARATOR = "separator"),
            Jd(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Jd(
              [i.Autowired("filterManager")],
              e.prototype,
              "filterManager",
              void 0
            ),
            Jd([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Jd([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            Jd(
              [i.Autowired("menuItemMapper")],
              e.prototype,
              "menuItemMapper",
              void 0
            ),
            Jd([i.Autowired("rowModel")], e.prototype, "rowModel", void 0),
            Jd(
              [i.Autowired("focusController")],
              e.prototype,
              "focusController",
              void 0
            ),
            Jd([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.BeanStub),
        oh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        nh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        rh = " ag-context-menu-open",
        ih = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            oh(e, t),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.hideActiveMenu = function () {
              this.destroyBean(this.activeMenu);
            }),
            (e.prototype.getMenuItems = function (t, e, o) {
              var n = [];
              if (
                (i._.exists(t) &&
                  i.ModuleRegistry.isRegistered(
                    i.ModuleNames.ClipboardModule
                  ) &&
                  e &&
                  n.push("copy", "copyWithHeaders", "paste", "separator"),
                this.gridOptionsWrapper.isEnableCharts() &&
                  i.ModuleRegistry.isRegistered(
                    i.ModuleNames.RangeSelectionModule
                  ) &&
                  i.ModuleRegistry.isRegistered(
                    i.ModuleNames.GridChartsModule
                  ) &&
                  (this.columnController.isPivotMode() && n.push("pivotChart"),
                  this.rangeController &&
                    !this.rangeController.isEmpty() &&
                    n.push("chartRange")),
                i._.exists(t))
              ) {
                var r = !i.ModuleRegistry.isRegistered(
                    i.ModuleNames.CsvExportModule
                  ),
                  s = !i.ModuleRegistry.isRegistered(
                    i.ModuleNames.ExcelExportModule
                  ),
                  a = this.gridOptionsWrapper.isSuppressExcelExport() || s,
                  l = this.gridOptionsWrapper.isSuppressCsvExport() || r;
                !(i._.isIOSUserAgent() || (a && l)) && n.push("export");
              }
              if (this.gridOptionsWrapper.getContextMenuItemsFunc()) {
                var u = this.gridOptionsWrapper.getContextMenuItemsFunc(),
                  p = {
                    node: t,
                    column: e,
                    value: o,
                    defaultItems: n.length ? n : void 0,
                    api: this.gridOptionsWrapper.getApi(),
                    columnApi: this.gridOptionsWrapper.getColumnApi(),
                    context: this.gridOptionsWrapper.getContext(),
                  };
                return u ? u(p) : void 0;
              }
              return n;
            }),
            (e.prototype.showMenu = function (t, e, o, n, r) {
              var s = this,
                a = this.getMenuItems(t, e, o),
                l = this.gridPanel.getGui();
              if (void 0 === a || i._.missingOrEmpty(a)) return !1;
              var u = new sh(a);
              this.createBean(u);
              var p = u.getGui(),
                c = this.popupService.positionPopupUnderMouseEvent.bind(
                  this.popupService,
                  {
                    column: e,
                    rowNode: t,
                    type: "contextMenu",
                    mouseEvent: n,
                    ePopup: p,
                    nudgeX: 1,
                    nudgeY: 1,
                  }
                ),
                d = this.popupService.addPopup({
                  modal: !0,
                  eChild: p,
                  closeOnEsc: !0,
                  closedCallback: function () {
                    i._.removeCssClass(l, rh), s.destroyBean(u);
                  },
                  click: n,
                  positionCallback: c,
                  anchorToElement: r,
                });
              return (
                d &&
                  (i._.addCssClass(l, rh),
                  u.afterGuiAttached({
                    container: "contextMenu",
                    hidePopup: d.hideFunc,
                  })),
                this.activeMenu && this.hideActiveMenu(),
                (this.activeMenu = u),
                u.addEventListener(i.BeanStub.EVENT_DESTROYED, function () {
                  s.activeMenu === u && (s.activeMenu = null);
                }),
                d &&
                  u.addEventListener(Xd.EVENT_MENU_ITEM_SELECTED, d.hideFunc),
                !0
              );
            }),
            nh(
              [i.Autowired("popupService")],
              e.prototype,
              "popupService",
              void 0
            ),
            nh(
              [i.Optional("rangeController")],
              e.prototype,
              "rangeController",
              void 0
            ),
            nh(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            nh([i.Bean("contextMenuFactory")], e)
          );
        })(i.BeanStub),
        sh = (function (t) {
          function e(e) {
            var o =
              t.call(this, '<div class="ag-menu" role="presentation"></div>') ||
              this;
            return (
              (o.menuList = null), (o.focusedCell = null), (o.menuItems = e), o
            );
          }
          return (
            oh(e, t),
            (e.prototype.addMenuItems = function () {
              var t = this,
                e = this.createBean(new Zd()),
                o = this.menuItemMapper.mapWithStockItems(this.menuItems, null);
              e.addMenuItems(o),
                this.appendChild(e),
                (this.menuList = e),
                e.addEventListener(Xd.EVENT_MENU_ITEM_SELECTED, function (e) {
                  return t.dispatchEvent(e);
                });
            }),
            (e.prototype.afterGuiAttached = function (t) {
              t.hidePopup && this.addDestroyFunc(t.hidePopup),
                (this.focusedCell = this.focusController.getFocusedCell()),
                this.menuList &&
                  this.focusController.focusInto(this.menuList.getGui());
            }),
            (e.prototype.restoreFocusedCell = function () {
              var t = this.focusController.getFocusedCell();
              if (
                t &&
                this.focusedCell &&
                this.cellPositionUtils.equals(t, this.focusedCell)
              ) {
                var e = this.focusedCell,
                  o = e.rowIndex,
                  n = e.rowPinned,
                  r = e.column,
                  i = this.gridOptionsWrapper.getDocument();
                i.activeElement === i.body &&
                  this.focusController.setFocusedCell(o, r, n, !0);
              }
            }),
            (e.prototype.destroy = function () {
              this.restoreFocusedCell(), t.prototype.destroy.call(this);
            }),
            nh(
              [i.Autowired("menuItemMapper")],
              e.prototype,
              "menuItemMapper",
              void 0
            ),
            nh(
              [i.Autowired("focusController")],
              e.prototype,
              "focusController",
              void 0
            ),
            nh(
              [i.Autowired("cellPositionUtils")],
              e.prototype,
              "cellPositionUtils",
              void 0
            ),
            nh([i.PostConstruct], e.prototype, "addMenuItems", null),
            e
          );
        })(i.Component),
        ah = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        lh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        uh = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            ah(e, t),
            (e.prototype.mapWithStockItems = function (t, e) {
              var o = this;
              if (!t) return [];
              var n = [];
              return (
                t.forEach(function (t) {
                  var r;
                  if (
                    (r = "string" == typeof t ? o.getStockMenuItem(t, e) : t)
                  ) {
                    var i = r.subMenu;
                    i &&
                      i instanceof Array &&
                      (r.subMenu = o.mapWithStockItems(r.subMenu, e)),
                      null != r && n.push(r);
                  }
                }),
                n
              );
            }),
            (e.prototype.getStockMenuItem = function (t, e) {
              var o = this,
                n = this.gridOptionsWrapper.getLocaleTextFunc(),
                r = this.gridOptionsWrapper.isSkipHeaderOnAutoSize();
              switch (t) {
                case "pinSubMenu":
                  return {
                    name: n("pinColumn", "Pin Column"),
                    icon: i._.createIconNoSpan(
                      "menuPin",
                      this.gridOptionsWrapper,
                      null
                    ),
                    subMenu: ["pinLeft", "pinRight", "clearPinned"],
                  };
                case "pinLeft":
                  return {
                    name: n("pinLeft", "Pin Left"),
                    action: function () {
                      return o.columnController.setColumnPinned(
                        e,
                        i.Constants.PINNED_LEFT,
                        "contextMenu"
                      );
                    },
                    checked: !!e && e.isPinnedLeft(),
                  };
                case "pinRight":
                  return {
                    name: n("pinRight", "Pin Right"),
                    action: function () {
                      return o.columnController.setColumnPinned(
                        e,
                        i.Constants.PINNED_RIGHT,
                        "contextMenu"
                      );
                    },
                    checked: !!e && e.isPinnedRight(),
                  };
                case "clearPinned":
                  return {
                    name: n("noPin", "No Pin"),
                    action: function () {
                      return o.columnController.setColumnPinned(
                        e,
                        null,
                        "contextMenu"
                      );
                    },
                    checked: !!e && !e.isPinned(),
                  };
                case "valueAggSubMenu":
                  return i.ModuleRegistry.assertRegistered(
                    i.ModuleNames.RowGroupingModule,
                    "Aggregation from Menu"
                  )
                    ? {
                        name: n("valueAggregation", "Value Aggregation"),
                        icon: i._.createIconNoSpan(
                          "menuValue",
                          this.gridOptionsWrapper,
                          null
                        ),
                        subMenu: this.createAggregationSubMenu(e),
                      }
                    : null;
                case "autoSizeThis":
                  return {
                    name: n("autosizeThiscolumn", "Autosize This Column"),
                    action: function () {
                      return o.columnController.autoSizeColumn(
                        e,
                        r,
                        "contextMenu"
                      );
                    },
                  };
                case "autoSizeAll":
                  return {
                    name: n("autosizeAllColumns", "Autosize All Columns"),
                    action: function () {
                      return o.columnController.autoSizeAllColumns(
                        r,
                        "contextMenu"
                      );
                    },
                  };
                case "rowGroup":
                  return {
                    name:
                      n("groupBy", "Group by") +
                      " " +
                      i._.escapeString(
                        this.columnController.getDisplayNameForColumn(
                          e,
                          "header"
                        )
                      ),
                    action: function () {
                      return o.columnController.addRowGroupColumn(
                        e,
                        "contextMenu"
                      );
                    },
                    icon: i._.createIconNoSpan(
                      "menuAddRowGroup",
                      this.gridOptionsWrapper,
                      null
                    ),
                  };
                case "rowUnGroup":
                  return {
                    name:
                      n("ungroupBy", "Un-Group by") +
                      " " +
                      i._.escapeString(
                        this.columnController.getDisplayNameForColumn(
                          e,
                          "header"
                        )
                      ),
                    action: function () {
                      return o.columnController.removeRowGroupColumn(
                        e,
                        "contextMenu"
                      );
                    },
                    icon: i._.createIconNoSpan(
                      "menuRemoveRowGroup",
                      this.gridOptionsWrapper,
                      null
                    ),
                  };
                case "resetColumns":
                  return {
                    name: n("resetColumns", "Reset Columns"),
                    action: function () {
                      return o.columnController.resetColumnState("contextMenu");
                    },
                  };
                case "expandAll":
                  return {
                    name: n("expandAll", "Expand All"),
                    action: function () {
                      return o.gridApi.expandAll();
                    },
                  };
                case "contractAll":
                  return {
                    name: n("collapseAll", "Collapse All"),
                    action: function () {
                      return o.gridApi.collapseAll();
                    },
                  };
                case "copy":
                  return i.ModuleRegistry.assertRegistered(
                    i.ModuleNames.ClipboardModule,
                    "Copy from Menu"
                  )
                    ? {
                        name: n("copy", "Copy"),
                        shortcut: n("ctrlC", "Ctrl+C"),
                        icon: i._.createIconNoSpan(
                          "clipboardCopy",
                          this.gridOptionsWrapper,
                          null
                        ),
                        action: function () {
                          return o.clipboardService.copyToClipboard(!1);
                        },
                      }
                    : null;
                case "copyWithHeaders":
                  return i.ModuleRegistry.assertRegistered(
                    i.ModuleNames.ClipboardModule,
                    "Copy with Headers from Menu"
                  )
                    ? {
                        name: n("copyWithHeaders", "Copy with Headers"),
                        icon: i._.createIconNoSpan(
                          "clipboardCopy",
                          this.gridOptionsWrapper,
                          null
                        ),
                        action: function () {
                          return o.clipboardService.copyToClipboard(!0);
                        },
                      }
                    : null;
                case "paste":
                  return i.ModuleRegistry.assertRegistered(
                    i.ModuleNames.ClipboardModule,
                    "Copy with Headers from Menu"
                  )
                    ? {
                        name: n("paste", "Paste"),
                        shortcut: n("ctrlV", "Ctrl+V"),
                        disabled: !0,
                        icon: i._.createIconNoSpan(
                          "clipboardPaste",
                          this.gridOptionsWrapper,
                          null
                        ),
                        action: function () {
                          return o.clipboardService.pasteFromClipboard();
                        },
                      }
                    : null;
                case "export":
                  var s = [],
                    a = i.ModuleRegistry.isRegistered(
                      i.ModuleNames.CsvExportModule
                    ),
                    l = i.ModuleRegistry.isRegistered(
                      i.ModuleNames.ExcelExportModule
                    );
                  return (
                    !this.gridOptionsWrapper.isSuppressCsvExport() &&
                      a &&
                      s.push("csvExport"),
                    !this.gridOptionsWrapper.isSuppressExcelExport() &&
                      l &&
                      (s.push("excelExport"), s.push("excelXmlExport")),
                    {
                      name: n("export", "Export"),
                      subMenu: s,
                      icon: i._.createIconNoSpan(
                        "save",
                        this.gridOptionsWrapper,
                        null
                      ),
                    }
                  );
                case "csvExport":
                  return {
                    name: n("csvExport", "CSV Export"),
                    action: function () {
                      return o.gridApi.exportDataAsCsv({});
                    },
                  };
                case "excelExport":
                  return {
                    name: n("excelExport", "Excel Export (.xlsx)&lrm;"),
                    action: function () {
                      return o.gridApi.exportDataAsExcel({
                        exportMode: "xlsx",
                      });
                    },
                  };
                case "excelXmlExport":
                  return {
                    name: n("excelXmlExport", "Excel Export (.xml)&lrm;"),
                    action: function () {
                      return o.gridApi.exportDataAsExcel({ exportMode: "xml" });
                    },
                  };
                case "separator":
                  return "separator";
                default:
                  return (
                    this.getChartItems(t) ||
                    (console.warn("AG Grid: unknown menu item type " + t), null)
                  );
              }
            }),
            (e.prototype.getChartItems = function (t) {
              var e = this,
                o = this.gridOptionsWrapper.getLocaleTextFunc(),
                n = function (t, n, r) {
                  return {
                    name: o(t, n),
                    action: function () {
                      return e.chartService.createPivotChart({ chartType: r });
                    },
                  };
                },
                r = function (t, n, r) {
                  return {
                    name: o(t, n),
                    action: function () {
                      return e.chartService.createChartFromCurrentRange(r);
                    },
                  };
                };
              switch (t) {
                case "pivotChart":
                  return {
                    name: o("pivotChart", "Pivot Chart"),
                    subMenu: [
                      "pivotColumnChart",
                      "pivotBarChart",
                      "pivotPieChart",
                      "pivotLineChart",
                      "pivotXYChart",
                      "pivotAreaChart",
                    ],
                    icon: i._.createIconNoSpan(
                      "chart",
                      this.gridOptionsWrapper,
                      null
                    ),
                  };
                case "chartRange":
                  return {
                    name: o("chartRange", "Chart Range"),
                    subMenu: [
                      "rangeColumnChart",
                      "rangeBarChart",
                      "rangePieChart",
                      "rangeLineChart",
                      "rangeXYChart",
                      "rangeAreaChart",
                      "rangeHistogramChart",
                    ],
                    icon: i._.createIconNoSpan(
                      "chart",
                      this.gridOptionsWrapper,
                      null
                    ),
                  };
                case "pivotColumnChart":
                  return {
                    name: o("columnChart", "Column"),
                    subMenu: [
                      "pivotGroupedColumn",
                      "pivotStackedColumn",
                      "pivotNormalizedColumn",
                    ],
                  };
                case "pivotGroupedColumn":
                  return n(
                    "groupedColumn",
                    "Grouped&lrm;",
                    i.ChartType.GroupedColumn
                  );
                case "pivotStackedColumn":
                  return n(
                    "stackedColumn",
                    "Stacked&lrm;",
                    i.ChartType.StackedColumn
                  );
                case "pivotNormalizedColumn":
                  return n(
                    "normalizedColumn",
                    "100% Stacked&lrm;",
                    i.ChartType.NormalizedColumn
                  );
                case "rangeColumnChart":
                  return {
                    name: o("columnChart", "Column"),
                    subMenu: [
                      "rangeGroupedColumn",
                      "rangeStackedColumn",
                      "rangeNormalizedColumn",
                    ],
                  };
                case "rangeGroupedColumn":
                  return r(
                    "groupedColumn",
                    "Grouped&lrm;",
                    i.ChartType.GroupedColumn
                  );
                case "rangeStackedColumn":
                  return r(
                    "stackedColumn",
                    "Stacked&lrm;",
                    i.ChartType.StackedColumn
                  );
                case "rangeNormalizedColumn":
                  return r(
                    "normalizedColumn",
                    "100% Stacked&lrm;",
                    i.ChartType.NormalizedColumn
                  );
                case "pivotBarChart":
                  return {
                    name: o("barChart", "Bar"),
                    subMenu: [
                      "pivotGroupedBar",
                      "pivotStackedBar",
                      "pivotNormalizedBar",
                    ],
                  };
                case "pivotGroupedBar":
                  return n(
                    "groupedBar",
                    "Grouped&lrm;",
                    i.ChartType.GroupedBar
                  );
                case "pivotStackedBar":
                  return n(
                    "stackedBar",
                    "Stacked&lrm;",
                    i.ChartType.StackedBar
                  );
                case "pivotNormalizedBar":
                  return n(
                    "normalizedBar",
                    "100% Stacked&lrm;",
                    i.ChartType.NormalizedBar
                  );
                case "rangeBarChart":
                  return {
                    name: o("barChart", "Bar"),
                    subMenu: [
                      "rangeGroupedBar",
                      "rangeStackedBar",
                      "rangeNormalizedBar",
                    ],
                  };
                case "rangeGroupedBar":
                  return r(
                    "groupedBar",
                    "Grouped&lrm;",
                    i.ChartType.GroupedBar
                  );
                case "rangeStackedBar":
                  return r(
                    "stackedBar",
                    "Stacked&lrm;",
                    i.ChartType.StackedBar
                  );
                case "rangeNormalizedBar":
                  return r(
                    "normalizedBar",
                    "100% Stacked&lrm;",
                    i.ChartType.NormalizedBar
                  );
                case "pivotPieChart":
                  return {
                    name: o("pieChart", "Pie"),
                    subMenu: ["pivotPie", "pivotDoughnut"],
                  };
                case "pivotPie":
                  return n("pie", "Pie&lrm;", i.ChartType.Pie);
                case "pivotDoughnut":
                  return n("doughnut", "Doughnut&lrm;", i.ChartType.Doughnut);
                case "rangePieChart":
                  return {
                    name: o("pieChart", "Pie"),
                    subMenu: ["rangePie", "rangeDoughnut"],
                  };
                case "rangePie":
                  return r("pie", "Pie&lrm;", i.ChartType.Pie);
                case "rangeDoughnut":
                  return r("doughnut", "Doughnut&lrm;", i.ChartType.Doughnut);
                case "pivotLineChart":
                  return n("line", "Line&lrm;", i.ChartType.Line);
                case "rangeLineChart":
                  return r("line", "Line&lrm;", i.ChartType.Line);
                case "pivotXYChart":
                  return {
                    name: o("xyChart", "X Y (Scatter)"),
                    subMenu: ["pivotScatter", "pivotBubble"],
                  };
                case "pivotScatter":
                  return n("scatter", "Scatter&lrm;", i.ChartType.Scatter);
                case "pivotBubble":
                  return n("bubble", "Bubble&lrm;", i.ChartType.Bubble);
                case "rangeXYChart":
                  return {
                    name: o("xyChart", "X Y (Scatter)"),
                    subMenu: ["rangeScatter", "rangeBubble"],
                  };
                case "rangeScatter":
                  return r("scatter", "Scatter&lrm;", i.ChartType.Scatter);
                case "rangeBubble":
                  return r("bubble", "Bubble&lrm;", i.ChartType.Bubble);
                case "pivotAreaChart":
                  return {
                    name: o("areaChart", "Area"),
                    subMenu: [
                      "pivotArea",
                      "pivotStackedArea",
                      "pivotNormalizedArea",
                    ],
                  };
                case "pivotArea":
                  return n("area", "Area&lrm;", i.ChartType.Area);
                case "pivotStackedArea":
                  return n(
                    "stackedArea",
                    "Stacked&lrm;",
                    i.ChartType.StackedArea
                  );
                case "pivotNormalizedArea":
                  return n(
                    "normalizedArea",
                    "100% Stacked&lrm;",
                    i.ChartType.NormalizedArea
                  );
                case "rangeAreaChart":
                  return {
                    name: o("areaChart", "Area"),
                    subMenu: [
                      "rangeArea",
                      "rangeStackedArea",
                      "rangeNormalizedArea",
                    ],
                  };
                case "rangeArea":
                  return r("area", "Area&lrm;", i.ChartType.Area);
                case "rangeStackedArea":
                  return r(
                    "stackedArea",
                    "Stacked&lrm;",
                    i.ChartType.StackedArea
                  );
                case "rangeNormalizedArea":
                  return r(
                    "normalizedArea",
                    "100% Stacked&lrm;",
                    i.ChartType.NormalizedArea
                  );
                case "rangeHistogramChart":
                  return r(
                    "histogramChart",
                    "Histogram&lrm;",
                    i.ChartType.Histogram
                  );
                default:
                  return null;
              }
            }),
            (e.prototype.createAggregationSubMenu = function (t) {
              var e,
                o = this,
                n = this.gridOptionsWrapper.getLocaleTextFunc(),
                r = t.isValueActive(),
                s = this.aggFuncService.getFuncNames(t);
              if (t.isPrimary()) e = t;
              else {
                var a = t.getColDef().pivotValueColumn;
                e = i._.exists(a) ? a : void 0;
              }
              var l = [];
              return (
                s.forEach(function (t) {
                  l.push({
                    name: n(t, t),
                    action: function () {
                      o.columnController.setColumnAggFunc(e, t, "contextMenu"),
                        o.columnController.addValueColumn(e, "contextMenu");
                    },
                    checked: r && e.getAggFunc() === t,
                  });
                }),
                l
              );
            }),
            lh(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            lh([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            lh(
              [i.Optional("clipboardService")],
              e.prototype,
              "clipboardService",
              void 0
            ),
            lh(
              [i.Optional("aggFuncService")],
              e.prototype,
              "aggFuncService",
              void 0
            ),
            lh(
              [i.Optional("chartService")],
              e.prototype,
              "chartService",
              void 0
            ),
            lh([i.Bean("menuItemMapper")], e)
          );
        })(i.BeanStub),
        ph = {
          moduleName: i.ModuleNames.MenuModule,
          beans: [th, ih, uh],
          dependantModules: [g],
        },
        ch = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        dh = function () {
          return (dh =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        hh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        fh = (function (t) {
          function e() {
            var e =
              t.call(
                this,
                '<div class="ag-multi-filter ag-menu-list-compact"></div>',
                !0
              ) || this;
            return (
              (e.filterDefs = []),
              (e.filters = []),
              (e.guiDestroyFuncs = []),
              (e.activeFilterIndices = []),
              (e.lastActivatedMenuItem = null),
              e
            );
          }
          return (
            ch(e, t),
            (e.getFilterDefs = function (t) {
              var e = t.filters;
              return e && e.length > 0
                ? e
                : [
                    { filter: "agTextColumnFilter" },
                    { filter: "agSetColumnFilter" },
                  ];
            }),
            (e.prototype.init = function (t) {
              var o = this;
              (this.params = t), (this.filterDefs = e.getFilterDefs(t));
              var n = t.filterChangedCallback;
              (this.column = t.column), (this.filterChangedCallback = n);
              var r = [];
              return (
                i._.forEach(this.filterDefs, function (t, e) {
                  var n = o.createFilter(t, e);
                  null != n && r.push(n);
                }),
                i.AgPromise.all(r).then(function (t) {
                  (o.filters = t), o.refreshGui("columnMenu");
                })
              );
            }),
            (e.prototype.refreshGui = function (t) {
              var e = this;
              t !== this.lastOpenedInContainer &&
                (this.clearGui(),
                this.destroyChildren(),
                i._.forEach(this.filters, function (o, n) {
                  n > 0 &&
                    e.appendChild(
                      i._.loadTemplate(
                        '<div class="ag-filter-separator"></div>'
                      )
                    );
                  var r,
                    s = e.filterDefs[n],
                    a = e.getFilterTitle(o, s);
                  (r =
                    "subMenu" === s.display && "toolPanel" !== t
                      ? e.insertFilterMenu(o, a).getGui()
                      : "subMenu" === s.display || "accordion" === s.display
                      ? e.insertFilterGroup(o, a).getGui()
                      : o.getGui()),
                    e.appendChild(r);
                }),
                (this.lastOpenedInContainer = t));
            }),
            (e.prototype.getFilterTitle = function (t, e) {
              return null != e.title
                ? e.title
                : "function" == typeof t.getFilterTitle
                ? t.getFilterTitle()
                : "Filter";
            }),
            (e.prototype.destroyChildren = function () {
              i._.forEach(this.guiDestroyFuncs, function (t) {
                return t();
              }),
                (this.guiDestroyFuncs.length = 0);
            }),
            (e.prototype.insertFilterMenu = function (t, e) {
              var o = this,
                n = this.createBean(
                  new Xd({
                    name: e,
                    subMenu: t,
                    cssClasses: ["ag-multi-filter-menu-item"],
                    isCompact: !0,
                    isAnotherSubMenuOpen: function () {
                      return !1;
                    },
                  })
                );
              return (
                n.setParentComponent(this),
                this.guiDestroyFuncs.push(function () {
                  return o.destroyBean(n);
                }),
                this.addManagedListener(
                  n,
                  Xd.EVENT_MENU_ITEM_ACTIVATED,
                  function (t) {
                    o.lastActivatedMenuItem &&
                      o.lastActivatedMenuItem !== t.menuItem &&
                      o.lastActivatedMenuItem.deactivate(),
                      (o.lastActivatedMenuItem = t.menuItem);
                  }
                ),
                n.addGuiEventListener("focusin", function () {
                  return n.activate();
                }),
                n.addGuiEventListener("focusout", function () {
                  n.isSubMenuOpen() || n.deactivate();
                }),
                n
              );
            }),
            (e.prototype.insertFilterGroup = function (t, e) {
              var o = this,
                n = this.createBean(
                  new i.AgGroupComponent({
                    title: e,
                    cssIdentifier: "multi-filter",
                  })
                );
              if (
                (this.guiDestroyFuncs.push(function () {
                  return o.destroyBean(n);
                }),
                n.addItem(t.getGui()),
                n.toggleGroupExpand(!1),
                t.afterGuiAttached)
              ) {
                var r = {
                  container: this.lastOpenedInContainer,
                  suppressFocus: !0,
                };
                n.addManagedListener(
                  n,
                  i.AgGroupComponent.EVENT_EXPANDED,
                  function () {
                    return t.afterGuiAttached(r);
                  }
                );
              }
              return n;
            }),
            (e.prototype.isFilterActive = function () {
              return i._.some(this.filters, function (t) {
                return t.isFilterActive();
              });
            }),
            (e.prototype.getLastActiveFilterIndex = function () {
              return this.activeFilterIndices.length > 0
                ? this.activeFilterIndices[this.activeFilterIndices.length - 1]
                : null;
            }),
            (e.prototype.doesFilterPass = function (t, e) {
              var o = !0;
              return (
                this.filters.forEach(function (n) {
                  o &&
                    n !== e &&
                    n.isFilterActive() &&
                    (o = n.doesFilterPass(t));
                }),
                o
              );
            }),
            (e.prototype.getFilterType = function () {
              return "multi";
            }),
            (e.prototype.getModelFromUi = function () {
              return {
                filterType: this.getFilterType(),
                filterModels: i._.map(this.filters, function (t) {
                  return "function" == typeof t.getModelFromUi
                    ? t.getModelFromUi()
                    : null;
                }),
              };
            }),
            (e.prototype.getModel = function () {
              return this.isFilterActive()
                ? {
                    filterType: this.getFilterType(),
                    filterModels: i._.map(this.filters, function (t) {
                      return t.isFilterActive() ? t.getModel() : null;
                    }),
                  }
                : null;
            }),
            (e.prototype.setModel = function (t) {
              var e = function (t, e) {
                  return new i.AgPromise(function (o) {
                    var n = t.setModel(e);
                    n
                      ? n.then(function () {
                          return o();
                        })
                      : o();
                  });
                },
                o = [];
              return (
                null == t
                  ? (o = i._.map(this.filters, function (t) {
                      return e(t, null);
                    }))
                  : i._.forEach(this.filters, function (n, r) {
                      o.push(
                        e(
                          n,
                          t.filterModels.length > r ? t.filterModels[r] : null
                        )
                      );
                    }),
                i.AgPromise.all(o).then(function () {})
              );
            }),
            (e.prototype.getChildFilterInstance = function (t) {
              return this.filters[t];
            }),
            (e.prototype.afterGuiAttached = function (t) {
              t && this.refreshGui(t.container);
              var e = this.params.filters,
                o =
                  e &&
                  i._.some(e, function (t) {
                    return t.display && "inline" !== t.display;
                  });
              this.executeFunctionIfExists(
                "afterGuiAttached",
                dh(dh({}, t || {}), { suppressFocus: o })
              ),
                o && this.forceFocusOutOfContainer(!0);
            }),
            (e.prototype.onAnyFilterChanged = function () {
              this.executeFunctionIfExists("onAnyFilterChanged");
            }),
            (e.prototype.onNewRowsLoaded = function () {
              this.executeFunctionIfExists("onNewRowsLoaded");
            }),
            (e.prototype.destroy = function () {
              var e = this;
              i._.forEach(this.filters, function (t) {
                t.setModel(null), e.destroyBean(t);
              }),
                (this.filters.length = 0),
                this.destroyChildren(),
                t.prototype.destroy.call(this);
            }),
            (e.prototype.executeFunctionIfExists = function (t) {
              for (var e = [], o = 1; o < arguments.length; o++)
                e[o - 1] = arguments[o];
              i._.forEachReverse(this.filters, function (o) {
                var n = o[t];
                "function" == typeof n && n.apply(o, e);
              });
            }),
            (e.prototype.createFilter = function (t, e) {
              var o,
                n = this,
                r = this.params,
                i = r.filterModifiedCallback,
                s = r.doesRowPassOtherFilter,
                a = dh(
                  dh(
                    {},
                    this.filterManager.createFilterParams(
                      this.column,
                      this.column.getColDef()
                    )
                  ),
                  {
                    filterModifiedCallback: i,
                    filterChangedCallback: function () {
                      return n.filterChanged(e);
                    },
                    doesRowPassOtherFilter: function (t) {
                      return (
                        s(t) && n.doesFilterPass({ node: t, data: t.data }, o)
                      );
                    },
                  }
                ),
                l = this.userComponentFactory.newFilterComponent(
                  t,
                  a,
                  "agTextColumnFilter"
                );
              return null != l
                ? l.then(function (t) {
                    return (o = t);
                  })
                : l;
            }),
            (e.prototype.filterChanged = function (t) {
              var e = this.filters[t];
              i._.removeFromArray(this.activeFilterIndices, t),
                e.isFilterActive() && this.activeFilterIndices.push(t),
                this.filterChangedCallback(),
                i._.forEach(this.filters, function (t) {
                  t !== e &&
                    "function" == typeof t.onAnyFilterChanged &&
                    t.onAnyFilterChanged();
                });
            }),
            (e.prototype.onFocusIn = function (t) {
              null == this.lastActivatedMenuItem ||
                this.lastActivatedMenuItem.getGui().contains(t.target) ||
                (this.lastActivatedMenuItem.deactivate(),
                (this.lastActivatedMenuItem = null));
            }),
            hh(
              [i.Autowired("filterManager")],
              e.prototype,
              "filterManager",
              void 0
            ),
            hh(
              [i.Autowired("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            e
          );
        })(i.ManagedFocusComponent),
        gh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        yh = function () {
          return (yh =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        mh = (function (t) {
          function e() {
            var e =
              t.call(
                this,
                '<div class="ag-multi-floating-filter ag-floating-filter-input"></div>'
              ) || this;
            return (e.floatingFilters = []), e;
          }
          return (
            gh(e, t),
            (e.prototype.init = function (t) {
              var e = this;
              this.params = t;
              var o = [];
              return (
                i._.forEach(fh.getFilterDefs(t.filterParams), function (n, r) {
                  var i = yh(yh({}, t), {
                      parentFilterInstance: function (e) {
                        t.parentFilterInstance(function (t) {
                          var o = t.getChildFilterInstance(r);
                          e(o);
                        });
                      },
                    }),
                    s = e.createFloatingFilter(n, i);
                  null != s && o.push(s);
                }),
                i.AgPromise.all(o).then(function (t) {
                  i._.forEach(t, function (t, o) {
                    e.floatingFilters.push(t);
                    var n = t.getGui();
                    e.appendChild(n), o > 0 && i._.setDisplayed(n, !1);
                  });
                })
              );
            }),
            (e.prototype.onParentModelChanged = function (t, e) {
              var o = this;
              (e && e.afterFloatingFilter) ||
                this.params.parentFilterInstance(function (n) {
                  if (null == t)
                    i._.forEach(o.floatingFilters, function (t, o) {
                      t.onParentModelChanged(null, e),
                        i._.setDisplayed(t.getGui(), 0 === o);
                    });
                  else {
                    var r = n.getLastActiveFilterIndex();
                    i._.forEach(o.floatingFilters, function (o, n) {
                      o.onParentModelChanged(
                        t.filterModels.length > n ? t.filterModels[n] : null,
                        e
                      );
                      var s = null == r ? 0 === n : n === r;
                      i._.setDisplayed(o.getGui(), s);
                    });
                  }
                });
            }),
            (e.prototype.destroy = function () {
              this.destroyBeans(this.floatingFilters),
                (this.floatingFilters.length = 0),
                t.prototype.destroy.call(this);
            }),
            (e.prototype.createFloatingFilter = function (t, e) {
              var o =
                i.FloatingFilterWrapper.getDefaultFloatingFilterType(t) ||
                "agTextColumnFloatingFilter";
              return this.userComponentFactory.newFloatingFilterComponent(
                t,
                e,
                o
              );
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })(
              [i.Autowired("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            e
          );
        })(i.Component),
        vh = {
          moduleName: i.ModuleNames.MultiFilterModule,
          beans: [],
          userComponents: [
            { componentName: "agMultiColumnFilter", componentClass: fh },
            {
              componentName: "agMultiColumnFloatingFilter",
              componentClass: mh,
            },
          ],
          dependantModules: [g],
        },
        Ch = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wh = (function (t) {
          function e(e) {
            var o =
              t.call(this, '<div class="ag-rich-select-row"></div>') || this;
            return (o.params = e), o;
          }
          return (
            Ch(e, t),
            (e.prototype.setState = function (t, e, o) {
              this.populateWithRenderer(t, e) ||
                this.populateWithoutRenderer(t, e),
                i._.addOrRemoveCssClass(
                  this.getGui(),
                  "ag-rich-select-row-selected",
                  o
                );
            }),
            (e.prototype.populateWithoutRenderer = function (t, e) {
              var o = null != e ? e : t;
              i._.exists(o) && "" !== o
                ? (this.getGui().textContent = o.toString())
                : (this.getGui().innerHTML = "&nbsp;");
            }),
            (e.prototype.populateWithRenderer = function (t, e) {
              var o = this,
                n = {
                  value: t,
                  valueFormatted: e,
                  api: this.gridOptionsWrapper.getApi(),
                },
                r = this.userComponentFactory.newCellRenderer(this.params, n);
              return (
                null != r
                  ? i._.bindCellRendererToHtmlElement(r, this.getGui())
                  : (this.getGui().innerText =
                      null != n.valueFormatted ? n.valueFormatted : n.value),
                !!r &&
                  (r.then(function (t) {
                    o.addDestroyFunc(function () {
                      o.getContext().destroyBean(t);
                    });
                  }),
                  !0)
              );
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })(
              [i.Autowired("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            e
          );
        })(i.Component),
        bh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Eh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Sh = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (o.selectionConfirmed = !1), (o.searchString = ""), o;
          }
          return (
            bh(e, t),
            (e.prototype.init = function (t) {
              (this.params = t),
                (this.selectedValue = t.value),
                (this.originalSelectedValue = t.value),
                (this.focusAfterAttached = t.cellStartedEdit);
              var e = i._.createIconNoSpan(
                "smallDown",
                this.gridOptionsWrapper
              );
              if (
                (i._.addCssClass(e, "ag-rich-select-value-icon"),
                this.eValue.appendChild(e),
                (this.virtualList = this.getContext().createBean(
                  new i.VirtualList("rich-select")
                )),
                this.virtualList.setComponentCreator(
                  this.createRowComponent.bind(this)
                ),
                this.eList.appendChild(this.virtualList.getGui()),
                i._.exists(this.params.cellHeight) &&
                  this.virtualList.setRowHeight(this.params.cellHeight),
                this.renderSelectedValue(),
                i._.missing(t.values))
              )
                console.warn(
                  "AG Grid: richSelectCellEditor requires values for it to work"
                );
              else {
                var o = t.values;
                this.virtualList.setModel({
                  getRowCount: function () {
                    return o.length;
                  },
                  getRow: function (t) {
                    return o[t];
                  },
                }),
                  this.addGuiEventListener(
                    "keydown",
                    this.onKeyDown.bind(this)
                  );
                var n = this.virtualList.getGui();
                this.addManagedListener(n, "click", this.onClick.bind(this)),
                  this.addManagedListener(
                    n,
                    "mousemove",
                    this.onMouseMove.bind(this)
                  );
                var r = i._.exists(t.searchDebounceDelay)
                  ? t.searchDebounceDelay
                  : 300;
                (this.clearSearchString = i._.debounce(
                  this.clearSearchString,
                  r
                )),
                  i._.exists(t.charPress) && this.searchText(t.charPress);
              }
            }),
            (e.prototype.onKeyDown = function (t) {
              var e = t.key;
              switch (e) {
                case i.KeyName.ENTER:
                  this.onEnterKeyDown();
                  break;
                case i.KeyName.DOWN:
                case i.KeyName.UP:
                  this.onNavigationKeyPressed(t, e);
                  break;
                default:
                  this.searchText(t);
              }
            }),
            (e.prototype.onEnterKeyDown = function () {
              (this.selectionConfirmed = !0), this.params.stopEditing();
            }),
            (e.prototype.onNavigationKeyPressed = function (t, e) {
              t.preventDefault();
              var o = this.params.values.indexOf(this.selectedValue),
                n = e === i.KeyName.UP ? o - 1 : o + 1;
              n >= 0 &&
                n < this.params.values.length &&
                this.setSelectedValue(this.params.values[n]);
            }),
            (e.prototype.searchText = function (t) {
              if ("string" == typeof t)
                (this.searchString += t),
                  this.runSearch(),
                  this.clearSearchString();
              else {
                var e = t.key;
                if (e === i.KeyName.BACKSPACE)
                  (this.searchString = this.searchString.slice(0, -1)),
                    (e = "");
                else if (!i._.isEventFromPrintableCharacter(t)) return;
                this.searchText(e);
              }
            }),
            (e.prototype.runSearch = function () {
              var t,
                e = this.params.values;
              if (
                (("number" != typeof e[0] && "string" != typeof e[0]) ||
                  (t = e.map(String)),
                "object" == typeof e[0] &&
                  this.params.colDef.keyCreator &&
                  (t = e.map(this.params.colDef.keyCreator)),
                t)
              ) {
                var o = i._.fuzzySuggestions(this.searchString, t, !0, !0)[0];
                if (o) {
                  var n = t.indexOf(o);
                  this.setSelectedValue(e[n]);
                }
              }
            }),
            (e.prototype.clearSearchString = function () {
              this.searchString = "";
            }),
            (e.prototype.renderSelectedValue = function () {
              var t = this,
                e = this.params.formatValue(this.selectedValue),
                o = this.eValue,
                n = {
                  value: this.selectedValue,
                  valueFormatted: e,
                  api: this.gridOptionsWrapper.getApi(),
                },
                r = this.userComponentFactory.newCellRenderer(this.params, n);
              i._.exists(r)
                ? (i._.bindCellRendererToHtmlElement(r, o),
                  r.then(function (e) {
                    t.addDestroyFunc(function () {
                      return t.getContext().destroyBean(e);
                    });
                  }))
                : i._.exists(this.selectedValue)
                ? (o.innerHTML = e)
                : i._.clearElement(o);
            }),
            (e.prototype.setSelectedValue = function (t) {
              if (this.selectedValue !== t) {
                var e = this.params.values.indexOf(t);
                -1 !== e &&
                  ((this.selectedValue = t),
                  this.virtualList.ensureIndexVisible(e),
                  this.virtualList.refresh());
              }
            }),
            (e.prototype.createRowComponent = function (t) {
              var e = this.params.formatValue(t),
                o = new wh(this.params);
              return (
                this.getContext().createBean(o),
                o.setState(t, e, t === this.selectedValue),
                o
              );
            }),
            (e.prototype.onMouseMove = function (t) {
              var e = this.virtualList.getGui().getBoundingClientRect(),
                o = this.virtualList.getScrollTop(),
                n = Math.floor(
                  (t.clientY - e.top + o) / this.virtualList.getRowHeight()
                ),
                r = this.params.values[n];
              void 0 !== r && this.setSelectedValue(r);
            }),
            (e.prototype.onClick = function () {
              (this.selectionConfirmed = !0), this.params.stopEditing();
            }),
            (e.prototype.afterGuiAttached = function () {
              var t = this.params.values.indexOf(this.selectedValue);
              this.virtualList.refresh(),
                t >= 0 && this.virtualList.ensureIndexVisible(t),
                this.virtualList.refresh(),
                this.focusAfterAttached && this.getGui().focus();
            }),
            (e.prototype.getValue = function () {
              return this.selectionConfirmed
                ? this.selectedValue
                : this.originalSelectedValue;
            }),
            (e.TEMPLATE =
              '<div class="ag-rich-select" tabindex="-1">\n            <div ref="eValue" class="ag-rich-select-value"></div>\n            <div ref="eList" class="ag-rich-select-list"></div>\n        </div>'),
            Eh(
              [i.Autowired("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            Eh([i.RefSelector("eValue")], e.prototype, "eValue", void 0),
            Eh([i.RefSelector("eList")], e.prototype, "eList", void 0),
            e
          );
        })(i.PopupComponent),
        Oh = {
          moduleName: i.ModuleNames.RichSelectModule,
          beans: [],
          userComponents: [
            { componentName: "agRichSelect", componentClass: Sh },
            { componentName: "agRichSelectCellEditor", componentClass: Sh },
          ],
          dependantModules: [g],
        },
        _h = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Rh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ph = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.pauseStoreUpdateListening = !1), e;
          }
          return (
            _h(e, t),
            (e.prototype.ensureRowHeightsValid = function () {
              return !1;
            }),
            (e.prototype.start = function () {
              var t = this.gridOptionsWrapper.getServerSideDatasource();
              t && this.setDatasource(t);
            }),
            (e.prototype.destroyDatasource = function () {
              this.datasource &&
                (this.datasource.destroy && this.datasource.destroy(),
                this.rowRenderer.datasourceChanged(),
                (this.datasource = void 0));
            }),
            (e.prototype.setBeans = function (t) {
              this.logger = t.create("ServerSideRowModel");
            }),
            (e.prototype.addEventListeners = function () {
              this.addManagedListener(
                this.eventService,
                i.Events.EVENT_NEW_COLUMNS_LOADED,
                this.onColumnEverything.bind(this)
              ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_STORE_UPDATED,
                  this.onStoreUpdated.bind(this)
                );
              var t = this.resetRootStore.bind(this);
              this.addManagedListener(
                this.eventService,
                i.Events.EVENT_COLUMN_VALUE_CHANGED,
                t
              ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_CHANGED,
                  t
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  t
                ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  t
                );
            }),
            (e.prototype.setDatasource = function (t) {
              this.destroyDatasource(),
                (this.datasource = t),
                this.resetRootStore();
            }),
            (e.prototype.isLastRowIndexKnown = function () {
              var t = this.getRootStore();
              return !!t && t.isLastRowIndexKnown();
            }),
            (e.prototype.onColumnEverything = function () {
              if (
                !this.gridOptionsWrapper.isSuppressEnterpriseResetOnNewColumns()
              )
                if (this.storeParams) {
                  var t = this.columnsToValueObjects(
                      this.columnController.getRowGroupColumns()
                    ),
                    e = this.columnsToValueObjects(
                      this.columnController.getValueColumns()
                    ),
                    o = this.columnsToValueObjects(
                      this.columnController.getPivotColumns()
                    ),
                    n = !i._.jsonEquals(
                      this.storeParams.sortModel,
                      this.sortController.getSortModel()
                    ),
                    r = !i._.jsonEquals(this.storeParams.rowGroupCols, t),
                    s = !i._.jsonEquals(this.storeParams.pivotCols, o),
                    a = !i._.jsonEquals(this.storeParams.valueCols, e);
                  (n || r || s || a) && this.resetRootStore();
                } else this.resetRootStore();
            }),
            (e.prototype.destroyRootStore = function () {
              this.rootNode &&
                this.rootNode.childStore &&
                ((this.rootNode.childStore = this.destroyBean(
                  this.rootNode.childStore
                )),
                this.nodeManager.clear());
            }),
            (e.prototype.refreshAfterSort = function (t, e) {
              this.storeParams && (this.storeParams.sortModel = t);
              var o = this.getRootStore();
              o && (o.refreshAfterSort(e), this.onStoreUpdated());
            }),
            (e.prototype.resetRootStore = function () {
              this.destroyRootStore(),
                (this.rootNode = new i.RowNode()),
                (this.rootNode.group = !0),
                (this.rootNode.level = -1),
                this.createBean(this.rootNode),
                this.datasource &&
                  ((this.storeParams = this.createStoreParams()),
                  (this.rootNode.childStore = this.createBean(
                    this.storeFactory.createStore(
                      this.storeParams,
                      this.rootNode
                    )
                  )),
                  this.updateRowIndexesAndBounds()),
                this.eventService.dispatchEvent({
                  type: i.Events.EVENT_ROW_DATA_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                }),
                this.dispatchModelUpdated(!0);
            }),
            (e.prototype.columnsToValueObjects = function (t) {
              var e = this;
              return t.map(function (t) {
                return {
                  id: t.getId(),
                  aggFunc: t.getAggFunc(),
                  displayName: e.columnController.getDisplayNameForColumn(
                    t,
                    "model"
                  ),
                  field: t.getColDef().field,
                };
              });
            }),
            (e.prototype.createStoreParams = function () {
              var t = this.columnsToValueObjects(
                  this.columnController.getRowGroupColumns()
                ),
                e = this.columnsToValueObjects(
                  this.columnController.getValueColumns()
                ),
                o = this.columnsToValueObjects(
                  this.columnController.getPivotColumns()
                ),
                n = this.gridOptionsWrapper.isDynamicRowHeight();
              return {
                valueCols: e,
                rowGroupCols: t,
                pivotCols: o,
                pivotMode: this.columnController.isPivotMode(),
                filterModel: this.filterManager.getFilterModel(),
                sortModel: this.sortListener.extractSortModel(),
                datasource: this.datasource,
                lastAccessedSequence: new i.NumberSequence(),
                dynamicRowHeight: n,
              };
            }),
            (e.prototype.getParams = function () {
              return this.storeParams;
            }),
            (e.prototype.dispatchModelUpdated = function (t) {
              void 0 === t && (t = !1),
                this.eventService.dispatchEvent({
                  type: i.Events.EVENT_MODEL_UPDATED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  animate: !t,
                  keepRenderedRows: !t,
                  newPage: !1,
                  newData: !1,
                });
            }),
            (e.prototype.onStoreUpdated = function () {
              this.pauseStoreUpdateListening ||
                (this.updateRowIndexesAndBounds(), this.dispatchModelUpdated());
            }),
            (e.prototype.onRowHeightChanged = function () {
              this.updateRowIndexesAndBounds(), this.dispatchModelUpdated();
            }),
            (e.prototype.updateRowIndexesAndBounds = function () {
              var t = this.getRootStore();
              t && t.setDisplayIndexes(new i.NumberSequence(), { value: 0 });
            }),
            (e.prototype.retryLoads = function () {
              var t = this.getRootStore();
              t && (t.retryLoads(), this.onStoreUpdated());
            }),
            (e.prototype.getRow = function (t) {
              var e = this.getRootStore();
              return e ? e.getRowUsingDisplayIndex(t) : null;
            }),
            (e.prototype.expandAll = function (t) {
              (this.pauseStoreUpdateListening = !0),
                this.forEachNode(function (e) {
                  e.group && e.setExpanded(t);
                }),
                (this.pauseStoreUpdateListening = !1),
                this.onStoreUpdated();
            }),
            (e.prototype.refreshAfterFilter = function (t, e) {
              this.storeParams && (this.storeParams.filterModel = t);
              var o = this.getRootStore();
              o && (o.refreshAfterFilter(e), this.onStoreUpdated());
            }),
            (e.prototype.getRootStore = function () {
              if (this.rootNode && this.rootNode.childStore)
                return this.rootNode.childStore;
            }),
            (e.prototype.getRowCount = function () {
              var t = this.getRootStore();
              return t ? t.getDisplayIndexEnd() : 1;
            }),
            (e.prototype.getTopLevelRowCount = function () {
              var t = this.getRootStore();
              return t ? t.getRowCount() : 1;
            }),
            (e.prototype.getTopLevelRowDisplayedIndex = function (t) {
              var e = this.getRootStore();
              return e ? e.getTopLevelRowDisplayedIndex(t) : t;
            }),
            (e.prototype.getRowBounds = function (t) {
              var e = this.getRootStore();
              return e
                ? e.getRowBounds(t)
                : {
                    rowTop: 0,
                    rowHeight: this.gridOptionsWrapper.getRowHeightAsNumber(),
                  };
            }),
            (e.prototype.getRowIndexAtPixel = function (t) {
              var e = this.getRootStore();
              return t <= 0 || !e ? 0 : e.getRowIndexAtPixel(t);
            }),
            (e.prototype.isEmpty = function () {
              return !1;
            }),
            (e.prototype.isRowsToRender = function () {
              return null != this.getRootStore() && this.getRowCount() > 0;
            }),
            (e.prototype.getType = function () {
              return i.Constants.ROW_MODEL_TYPE_SERVER_SIDE;
            }),
            (e.prototype.forEachNode = function (t) {
              var e = this.getRootStore();
              e && e.forEachNodeDeep(t);
            }),
            (e.prototype.executeOnStore = function (t, e) {
              var o = this.getRootStore();
              if (o) {
                var n = o.getChildStore(t);
                n && e(n);
              }
            }),
            (e.prototype.refreshStore = function (t) {
              void 0 === t && (t = {}),
                this.executeOnStore(t.route ? t.route : [], function (e) {
                  return e.refreshStore(1 == t.purge);
                });
            }),
            (e.prototype.getStoreState = function () {
              var t = [],
                e = this.getRootStore();
              return e && e.addStoreStates(t), t;
            }),
            (e.prototype.getNodesInRangeForSelection = function (t, e) {
              return i._.exists(e) && t.parent !== e.parent
                ? []
                : t.parent.childStore.getRowNodesInRange(e, t);
            }),
            (e.prototype.getRowNode = function (t) {
              var e = null;
              return (
                this.forEachNode(function (o) {
                  o.id === t && (e = o),
                    o.detailNode && o.detailNode.id === t && (e = o.detailNode);
                }),
                e
              );
            }),
            (e.prototype.isRowPresent = function (t) {
              return !!this.getRowNode(t.id);
            }),
            Rh(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Rh(
              [i.Autowired("filterManager")],
              e.prototype,
              "filterManager",
              void 0
            ),
            Rh(
              [i.Autowired("sortController")],
              e.prototype,
              "sortController",
              void 0
            ),
            Rh([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Rh([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            Rh(
              [i.Autowired("rowRenderer")],
              e.prototype,
              "rowRenderer",
              void 0
            ),
            Rh(
              [i.Autowired("ssrmSortService")],
              e.prototype,
              "sortListener",
              void 0
            ),
            Rh(
              [i.Autowired("ssrmNodeManager")],
              e.prototype,
              "nodeManager",
              void 0
            ),
            Rh(
              [i.Autowired("ssrmStoreFactory")],
              e.prototype,
              "storeFactory",
              void 0
            ),
            Rh([i.PreDestroy], e.prototype, "destroyDatasource", null),
            Rh(
              [
                (0,
                (o = i.Qualifier("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            Rh([i.PostConstruct], e.prototype, "addEventListeners", null),
            Rh([i.PreDestroy], e.prototype, "destroyRootStore", null),
            Rh([i.Bean("rowModel")], e)
          );
          var o;
        })(i.BeanStub),
        Th = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ah = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Dh = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Th(e, t),
            (e.prototype.createGroupKeys = function (t) {
              for (var e = [], o = t; o && o.level >= 0; )
                e.push(o.key), (o = o.parent);
              return e.reverse(), e;
            }),
            (e.prototype.loadFromDatasource = function (t) {
              var e = this.createGroupKeys(t.parentNode),
                o = t.storeParams;
              if (o.datasource) {
                var n = {
                  successCallback: t.successCallback,
                  success: t.success,
                  failCallback: t.failCallback,
                  fail: t.fail,
                  request: {
                    startRow: t.startRow,
                    endRow: t.endRow,
                    rowGroupCols: o.rowGroupCols,
                    valueCols: o.valueCols,
                    pivotCols: o.pivotCols,
                    pivotMode: o.pivotMode,
                    groupKeys: e,
                    filterModel: o.filterModel,
                    sortModel: o.sortModel,
                  },
                  parentNode: t.parentNode,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                };
                window.setTimeout(function () {
                  o.datasource && o.datasource.getRows(n);
                }, 0);
              }
            }),
            (e.prototype.getChildStore = function (t, e, o) {
              if (i._.missingOrEmpty(t)) return e;
              var n = o(t[0]);
              if (n) {
                var r = t.slice(1, t.length),
                  s = n.childStore;
                return s ? s.getChildStore(r) : null;
              }
              return null;
            }),
            (e.prototype.isServerRefreshNeeded = function (t, e, o) {
              if (o.alwaysReset || o.valueColChanged || o.secondaryColChanged)
                return !0;
              var n = t.level + 1;
              return !(
                n < e.length && !(o.changedColumns.indexOf(e[n].id) > -1)
              );
            }),
            Ah([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            Ah([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Ah([i.Bean("ssrmCacheUtils")], e)
          );
        })(i.BeanStub),
        xh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Fh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Nh = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            xh(e, t),
            (e.prototype.postConstruct = function () {
              (this.rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber()),
                (this.usingTreeData = this.gridOptionsWrapper.isTreeData()),
                (this.usingMasterDetail =
                  this.gridOptionsWrapper.isMasterDetail());
            }),
            (e.prototype.createRowNode = function (t) {
              var e = this.getContext().createBean(new i.RowNode());
              return (
                e.setRowHeight(this.rowHeight),
                (e.group = t.group),
                (e.leafGroup = t.leafGroup),
                (e.level = t.level),
                (e.uiLevel = t.level),
                (e.parent = t.parent),
                (e.stub = !0),
                e.group &&
                  ((e.expanded = !1),
                  (e.field = t.field),
                  (e.rowGroupColumn = t.rowGroupColumn)),
                e
              );
            }),
            (e.prototype.destroyRowNodes = function (t) {
              t && t.forEach(this.destroyRowNode.bind(this));
            }),
            (e.prototype.destroyRowNode = function (t) {
              t.childStore &&
                (this.destroyBean(t.childStore), (t.childStore = null)),
                t.clearRowTopAndRowIndex(),
                null != t.id && this.nodeManager.removeNode(t);
            }),
            (e.prototype.setDataIntoRowNode = function (t, e, o) {
              if (((t.stub = !1), i._.exists(e))) {
                if ((t.setDataAndId(e, o), this.usingTreeData)) {
                  var n = this.gridOptionsWrapper.getIsServerSideGroupFunc(),
                    r = this.gridOptionsWrapper.getServerSideGroupKeyFunc();
                  null != n &&
                    ((t.group = n(t.data)),
                    t.group && null != r && (t.key = r(t.data)));
                } else if (t.group)
                  (t.key = this.valueService.getValue(t.rowGroupColumn, t)),
                    null == t.key &&
                      i._.doOnce(function () {
                        console.warn(
                          "null and undefined values are not allowed for server side row model keys"
                        ),
                          t.rowGroupColumn &&
                            console.warn(
                              "column = " + t.rowGroupColumn.getId()
                            ),
                          console.warn("data is ", t.data);
                      }, "ServerSideBlock-CannotHaveNullOrUndefinedForKey");
                else if (this.usingMasterDetail) {
                  var s = this.gridOptionsWrapper.getIsRowMasterFunc();
                  t.master = null == s || s(t.data);
                }
              } else t.setDataAndId(void 0, void 0), (t.key = null);
              (this.usingTreeData || t.group) &&
                (this.setGroupDataIntoRowNode(t),
                this.setChildCountIntoRowNode(t)),
                i._.exists(e) &&
                  t.setRowHeight(
                    this.gridOptionsWrapper.getRowHeightForNode(t).height
                  );
            }),
            (e.prototype.setChildCountIntoRowNode = function (t) {
              var e = this.gridOptionsWrapper.getChildCountFunc();
              e && (t.allChildrenCount = e(t.data));
            }),
            (e.prototype.setGroupDataIntoRowNode = function (t) {
              var e = this,
                o = this.columnController.getGroupDisplayColumns(),
                n = this.gridOptionsWrapper.isTreeData();
              o.forEach(function (o) {
                if ((null == t.groupData && (t.groupData = {}), n))
                  t.groupData[o.getColId()] = t.key;
                else if (o.isRowGroupDisplayed(t.rowGroupColumn.getId())) {
                  var r = e.valueService.getValue(t.rowGroupColumn, t);
                  t.groupData[o.getColId()] = r;
                }
              });
            }),
            (e.prototype.clearDisplayIndex = function (t) {
              t.clearRowTopAndRowIndex(),
                t.group &&
                  i._.exists(t.childStore) &&
                  t.childStore.clearDisplayIndexes(),
                t.master &&
                  t.detailNode &&
                  t.detailNode.clearRowTopAndRowIndex();
            }),
            (e.prototype.setDisplayIndex = function (t, e, o) {
              if (
                (t.setRowIndex(e.next()),
                t.setRowTop(o.value),
                (o.value += t.rowHeight),
                t.master &&
                  (t.expanded && t.detailNode
                    ? (t.detailNode.setRowIndex(e.next()),
                      t.detailNode.setRowTop(o.value),
                      (o.value += t.detailNode.rowHeight))
                    : t.detailNode && t.detailNode.clearRowTopAndRowIndex()),
                t.group && i._.exists(t.childStore))
              ) {
                var n = t.childStore;
                t.expanded
                  ? n.setDisplayIndexes(e, o)
                  : n.clearDisplayIndexes();
              }
            }),
            (e.prototype.binarySearchForDisplayIndex = function (t, e) {
              var o = 0,
                n = e.length - 1;
              if (i._.missing(n) || i._.missing(o))
                return (
                  console.warn(
                    "ag-grid: error: topPointer = " +
                      n +
                      ", bottomPointer = " +
                      o
                  ),
                  null
                );
              for (;;) {
                var r = Math.floor((o + n) / 2),
                  s = e[r];
                if (s.rowIndex === t) return s;
                if (s.master && s.expanded && s.detailNode.rowIndex === t)
                  return s.detailNode;
                var a = s.childStore;
                if (s.expanded && a && a.isDisplayIndexInStore(t))
                  return a.getRowUsingDisplayIndex(t);
                if (s.rowIndex < t) o = r + 1;
                else {
                  if (!(s.rowIndex > t))
                    return (
                      console.warn(
                        "AG Grid: error: unable to locate rowIndex = " +
                          t +
                          " in cache"
                      ),
                      null
                    );
                  n = r - 1;
                }
              }
            }),
            (e.prototype.extractRowBounds = function (t, e) {
              var o = function (t) {
                return { rowHeight: t.rowHeight, rowTop: t.rowTop };
              };
              if (t.rowIndex === e) return o(t);
              if (t.group && t.expanded && i._.exists(t.childStore)) {
                var n = t.childStore;
                if (n.isDisplayIndexInStore(e)) return n.getRowBounds(e);
              } else if (
                t.master &&
                t.expanded &&
                i._.exists(t.detailNode) &&
                t.detailNode.rowIndex === e
              )
                return o(t.detailNode);
            }),
            (e.prototype.getIndexAtPixel = function (t, e) {
              if (t.isPixelInRange(e)) return t.rowIndex;
              if (t.master && t.expanded && t.detailNode.isPixelInRange(e))
                return t.detailNode.rowIndex;
              if (t.group && t.expanded && i._.exists(t.childStore)) {
                var o = t.childStore;
                if (o.isPixelInRange(e)) return o.getRowIndexAtPixel(e);
              }
              return null;
            }),
            (e.prototype.createNodeIdPrefix = function (t) {
              for (var e = [], o = t; o && o.level >= 0; )
                e.push(o.key), (o = o.parent);
              return e.length > 0 ? e.reverse().join("-") : void 0;
            }),
            (e.prototype.checkOpenByDefault = function (t) {
              if (t.isExpandable()) {
                var e =
                  this.gridOptionsWrapper.getIsServerSideGroupOpenByDefaultFunc();
                e &&
                  e({ data: t.data, rowNode: t }) &&
                  window.setTimeout(function () {
                    return t.setExpanded(!0);
                  }, 0);
              }
            }),
            Fh(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            Fh(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Fh(
              [i.Autowired("ssrmNodeManager")],
              e.prototype,
              "nodeManager",
              void 0
            ),
            Fh([i.PostConstruct], e.prototype, "postConstruct", null),
            Fh([i.Bean("ssrmBlockUtils")], e)
          );
        })(i.BeanStub),
        Mh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ih = (function () {
          function t() {
            this.rowNodes = {};
          }
          return (
            (t.prototype.addRowNode = function (t) {
              var e = t.id;
              this.rowNodes[e] &&
                (console.warn("AG Grid: duplicate node id " + t.id),
                console.warn("first instance", this.rowNodes[e].data),
                console.warn("second instance", t.data)),
                (this.rowNodes[e] = t);
            }),
            (t.prototype.removeNode = function (t) {
              var e = t.id;
              this.rowNodes[e] && (this.rowNodes[e] = void 0);
            }),
            (t.prototype.clear = function () {
              this.rowNodes = {};
            }),
            Mh([i.PreDestroy], t.prototype, "clear", null),
            Mh([i.Bean("ssrmNodeManager")], t)
          );
        })(),
        Lh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Gh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        kh = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.asyncTransactions = []), e;
          }
          return (
            Lh(e, t),
            (e.prototype.postConstruct = function () {
              this.gridOptionsWrapper.isRowModelServerSide();
            }),
            (e.prototype.applyTransactionAsync = function (t, e) {
              null == this.asyncTransactionsTimeout &&
                this.scheduleExecuteAsync(),
                this.asyncTransactions.push({ transaction: t, callback: e });
            }),
            (e.prototype.scheduleExecuteAsync = function () {
              var t = this,
                e = this.gridOptionsWrapper.getAsyncTransactionWaitMillis();
              this.asyncTransactionsTimeout = window.setTimeout(function () {
                t.executeAsyncTransactions();
              }, e);
            }),
            (e.prototype.executeAsyncTransactions = function () {
              var t = this;
              if (this.asyncTransactions) {
                var e = [],
                  o = [],
                  n = [],
                  r = !1;
                if (
                  (this.asyncTransactions.forEach(function (s) {
                    var a;
                    t.serverSideRowModel.executeOnStore(
                      s.transaction.route,
                      function (t) {
                        a = t.applyTransaction(s.transaction);
                      }
                    ),
                      null == a &&
                        (a = {
                          status:
                            i.ServerSideTransactionResultStatus.StoreNotFound,
                        }),
                      o.push(a),
                      a.status ==
                      i.ServerSideTransactionResultStatus.StoreLoading
                        ? n.push(s)
                        : (s.callback &&
                            e.push(function () {
                              return s.callback(a);
                            }),
                          a.status ===
                            i.ServerSideTransactionResultStatus.Applied &&
                            (r = !0));
                  }),
                  e.length > 0 &&
                    window.setTimeout(function () {
                      e.forEach(function (t) {
                        return t();
                      });
                    }, 0),
                  (this.asyncTransactionsTimeout = void 0),
                  (this.asyncTransactions = n),
                  r &&
                    (this.valueCache.onDataChanged(),
                    this.eventService.dispatchEvent({
                      type: i.Events.EVENT_STORE_UPDATED,
                    })),
                  o.length > 0)
                ) {
                  var s = {
                    api: this.gridOptionsWrapper.getApi(),
                    columnApi: this.gridOptionsWrapper.getColumnApi(),
                    type: i.Events.EVENT_ASYNC_TRANSACTIONS_FLUSHED,
                    results: o,
                  };
                  this.eventService.dispatchEvent(s);
                }
              }
            }),
            (e.prototype.flushAsyncTransactions = function () {
              null != this.asyncTransactionsTimeout &&
                clearTimeout(this.asyncTransactionsTimeout),
                this.executeAsyncTransactions();
            }),
            (e.prototype.applyTransaction = function (t) {
              var e;
              return (
                this.serverSideRowModel.executeOnStore(t.route, function (o) {
                  e = o.applyTransaction(t);
                }),
                e
                  ? (this.valueCache.onDataChanged(),
                    this.eventService.dispatchEvent({
                      type: i.Events.EVENT_STORE_UPDATED,
                    }),
                    e)
                  : {
                      status: i.ServerSideTransactionResultStatus.StoreNotFound,
                    }
              );
            }),
            Gh(
              [i.Autowired("rowNodeBlockLoader")],
              e.prototype,
              "rowNodeBlockLoader",
              void 0
            ),
            Gh([i.Autowired("valueCache")], e.prototype, "valueCache", void 0),
            Gh(
              [i.Autowired("rowModel")],
              e.prototype,
              "serverSideRowModel",
              void 0
            ),
            Gh([i.PostConstruct], e.prototype, "postConstruct", null),
            Gh([i.Bean("ssrmTransactionManager")], e)
          );
        })(i.BeanStub),
        Vh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Wh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Hh = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Vh(e, t),
            (e.prototype.postConstruct = function () {
              this.gridOptionsWrapper.isRowModelServerSide() &&
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_ROW_GROUP_OPENED,
                  this.onRowGroupOpened.bind(this)
                );
            }),
            (e.prototype.onRowGroupOpened = function (t) {
              var e = t.node;
              if (e.expanded) {
                if (e.master) this.createDetailNode(e);
                else if (i._.missing(e.childStore)) {
                  var o = this.serverSideRowModel.getParams();
                  e.childStore = this.createBean(
                    this.storeFactory.createStore(o, e)
                  );
                }
              } else
                this.gridOptionsWrapper.isPurgeClosedRowNodes() &&
                  i._.exists(e.childStore) &&
                  (e.childStore = this.destroyBean(e.childStore));
              this.eventService.dispatchEvent({
                type: i.Events.EVENT_STORE_UPDATED,
              });
            }),
            (e.prototype.createDetailNode = function (t) {
              if (i._.exists(t.detailNode)) return t.detailNode;
              var e = new i.RowNode();
              this.getContext().createBean(e),
                (e.detail = !0),
                (e.selectable = !1),
                (e.parent = t),
                i._.exists(t.id) && (e.id = "detail_" + t.id),
                (e.data = t.data),
                (e.level = t.level + 1);
              var o = this.gridOptionsWrapper.getRowHeightForNode(e).height;
              return (e.rowHeight = o || 200), (t.detailNode = e), e;
            }),
            Wh(
              [i.Autowired("rowModel")],
              e.prototype,
              "serverSideRowModel",
              void 0
            ),
            Wh(
              [i.Autowired("ssrmStoreFactory")],
              e.prototype,
              "storeFactory",
              void 0
            ),
            Wh([i.PostConstruct], e.prototype, "postConstruct", null),
            Wh([i.Bean("ssrmExpandListener")], e)
          );
        })(i.BeanStub),
        Bh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        jh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Uh = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Bh(e, t),
            (e.prototype.postConstruct = function () {
              this.gridOptionsWrapper.isRowModelServerSide() &&
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_SORT_CHANGED,
                  this.onSortChanged.bind(this)
                );
            }),
            (e.prototype.extractSortModel = function () {
              var t = this.sortController.getSortModel();
              return (
                this.gridOptionsWrapper.isTreeData() ||
                  (this.replaceAutoGroupColumnWithActualRowGroupColumns(t),
                  this.removeMultiColumnPrefixOnColumnIds(t)),
                t
              );
            }),
            (e.prototype.removeMultiColumnPrefixOnColumnIds = function (t) {
              if (this.gridOptionsWrapper.isGroupMultiAutoColumn())
                for (
                  var e = i.Constants.GROUP_AUTO_COLUMN_ID + "-", o = 0;
                  o < t.length;
                  ++o
                )
                  t[o].colId.indexOf(e) > -1 &&
                    (t[o].colId = t[o].colId.substr(e.length));
            }),
            (e.prototype.replaceAutoGroupColumnWithActualRowGroupColumns =
              function (t) {
                var e = i._.find(t, function (t) {
                  return t.colId == i.Constants.GROUP_AUTO_COLUMN_ID;
                });
                if (e) {
                  var o = t.indexOf(e);
                  i._.removeFromArray(t, e);
                  var n = this.columnController
                    .getRowGroupColumns()
                    .filter(function (e) {
                      return (
                        0 ==
                        t.filter(function (t) {
                          return t.colId === e.getColId();
                        }).length
                      );
                    })
                    .map(function (t) {
                      return { colId: t.getId(), sort: e.sort };
                    });
                  i._.insertArrayIntoArray(t, n, o);
                }
              }),
            (e.prototype.onSortChanged = function () {
              var t = this.serverSideRowModel.getParams(),
                e = this.extractSortModel(),
                o = this.findChangedColumnsInSort(e, t.sortModel),
                n = this.listenerUtils.isSortingWithValueColumn(o),
                r = this.listenerUtils.isSortingWithSecondaryColumn(o),
                i = this.gridOptionsWrapper.isServerSideSortingAlwaysResets();
              this.serverSideRowModel.refreshAfterSort(e, {
                valueColChanged: n,
                secondaryColChanged: r,
                alwaysReset: i,
                changedColumns: o,
              });
            }),
            (e.prototype.findChangedColumnsInSort = function (t, e) {
              var o = [];
              return (
                [t, e].forEach(function (t) {
                  if (t) {
                    var e = t.map(function (t) {
                      return t.colId;
                    });
                    o = o.concat(e);
                  }
                }),
                o.filter(function (o) {
                  var n = i._.find(e, function (t) {
                      return t.colId === o;
                    }),
                    r = i._.find(t, function (t) {
                      return t.colId === o;
                    });
                  return (
                    (function (t, e) {
                      return (t ? t.sort : null) !== (e ? e.sort : null);
                    })(n, r) ||
                    (function (o, n) {
                      return e.indexOf(o) !== t.indexOf(n);
                    })(n, r)
                  );
                })
              );
            }),
            jh(
              [i.Autowired("sortController")],
              e.prototype,
              "sortController",
              void 0
            ),
            jh(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            jh(
              [i.Autowired("rowModel")],
              e.prototype,
              "serverSideRowModel",
              void 0
            ),
            jh(
              [i.Autowired("ssrmListenerUtils")],
              e.prototype,
              "listenerUtils",
              void 0
            ),
            jh([i.PostConstruct], e.prototype, "postConstruct", null),
            jh([i.Bean("ssrmSortService")], e)
          );
        })(i.BeanStub),
        zh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Kh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Yh = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            zh(e, t),
            (e.prototype.postConstruct = function () {
              this.gridOptionsWrapper.isRowModelServerSide() &&
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_FILTER_CHANGED,
                  this.onFilterChanged.bind(this)
                );
            }),
            (e.prototype.onFilterChanged = function () {
              var t = this.filterManager.getFilterModel(),
                e = this.serverSideRowModel.getParams(),
                o = this.findChangedColumns(t, e ? e.filterModel : {}),
                n = this.listenerUtils.isSortingWithValueColumn(o),
                r = this.listenerUtils.isSortingWithSecondaryColumn(o),
                i = this.gridOptionsWrapper.isServerSideFilteringAlwaysResets();
              this.serverSideRowModel.refreshAfterFilter(t, {
                valueColChanged: n,
                secondaryColChanged: r,
                alwaysReset: i,
                changedColumns: o,
              });
            }),
            (e.prototype.findChangedColumns = function (t, e) {
              var o = {};
              Object.keys(t).forEach(function (t) {
                return (o[t] = !0);
              }),
                Object.keys(e).forEach(function (t) {
                  return (o[t] = !0);
                });
              var n = [];
              return (
                Object.keys(o).forEach(function (o) {
                  JSON.stringify(t[o]) != JSON.stringify(e[o]) && n.push(o);
                }),
                n
              );
            }),
            Kh(
              [i.Autowired("rowModel")],
              e.prototype,
              "serverSideRowModel",
              void 0
            ),
            Kh(
              [i.Autowired("filterManager")],
              e.prototype,
              "filterManager",
              void 0
            ),
            Kh(
              [i.Autowired("ssrmListenerUtils")],
              e.prototype,
              "listenerUtils",
              void 0
            ),
            Kh([i.PostConstruct], e.prototype, "postConstruct", null),
            Kh([i.Bean("ssrmFilterListener")], e)
          );
        })(i.BeanStub),
        Xh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        qh = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Qh = (function (t) {
          function e(e, o, n, r, i) {
            var s = t.call(this, e) || this;
            return (
              (s.ssrmParams = n),
              (s.storeParams = r),
              (s.parentRowNode = o),
              (s.startRow = e * r.cacheBlockSize),
              (s.parentStore = i),
              (s.level = o.level + 1),
              (s.groupLevel = n.rowGroupCols
                ? s.level < n.rowGroupCols.length
                : void 0),
              (s.leafGroup =
                !!n.rowGroupCols && s.level === n.rowGroupCols.length - 1),
              s
            );
          }
          return (
            Xh(e, t),
            (e.prototype.postConstruct = function () {
              (this.usingTreeData = this.gridOptionsWrapper.isTreeData()),
                (this.usingMasterDetail =
                  this.gridOptionsWrapper.isMasterDetail()),
                (this.defaultRowHeight =
                  this.gridOptionsWrapper.getRowHeightAsNumber()),
                !this.usingTreeData &&
                  this.groupLevel &&
                  ((this.groupField =
                    this.ssrmParams.rowGroupCols[this.level].field),
                  (this.rowGroupColumn =
                    this.columnController.getRowGroupColumns()[this.level])),
                (this.nodeIdPrefix = this.blockUtils.createNodeIdPrefix(
                  this.parentRowNode
                )),
                this.setData([]);
            }),
            (e.prototype.isDisplayIndexInBlock = function (t) {
              return t >= this.displayIndexStart && t < this.displayIndexEnd;
            }),
            (e.prototype.isBlockBefore = function (t) {
              return t >= this.displayIndexEnd;
            }),
            (e.prototype.getDisplayIndexStart = function () {
              return this.displayIndexStart;
            }),
            (e.prototype.getDisplayIndexEnd = function () {
              return this.displayIndexEnd;
            }),
            (e.prototype.getBlockHeightPx = function () {
              return this.blockHeightPx;
            }),
            (e.prototype.getBlockTopPx = function () {
              return this.blockTopPx;
            }),
            (e.prototype.isGroupLevel = function () {
              return this.groupLevel;
            }),
            (e.prototype.getGroupField = function () {
              return this.groupField;
            }),
            (e.prototype.prefixId = function (t) {
              return this.nodeIdPrefix
                ? this.nodeIdPrefix + "-" + t
                : t.toString();
            }),
            (e.prototype.getBlockStateJson = function () {
              return {
                id: this.prefixId(this.getId()),
                state: {
                  blockNumber: this.getId(),
                  startRow: this.startRow,
                  endRow: this.startRow + this.storeParams.cacheBlockSize,
                  pageStatus: this.getState(),
                },
              };
            }),
            (e.prototype.isAnyNodeOpen = function () {
              return (
                this.rowNodes.filter(function (t) {
                  return t.expanded;
                }).length > 0
              );
            }),
            (e.prototype.forEachNode = function (t, e, o) {
              void 0 === e && (e = new i.NumberSequence()),
                this.rowNodes.forEach(function (n) {
                  t(n, e.next()),
                    o && n.childStore && n.childStore.forEachNodeDeep(t, e);
                });
            }),
            (e.prototype.forEachNodeDeep = function (t, e) {
              this.forEachNode(t, e, !0);
            }),
            (e.prototype.forEachNodeShallow = function (t, e) {
              this.forEachNode(t, e, !1);
            }),
            (e.prototype.getLastAccessed = function () {
              return this.lastAccessed;
            }),
            (e.prototype.getRowUsingLocalIndex = function (t) {
              return this.rowNodes[t - this.startRow];
            }),
            (e.prototype.touchLastAccessed = function () {
              this.lastAccessed = this.ssrmParams.lastAccessedSequence.next();
            }),
            (e.prototype.processServerFail = function () {
              this.parentStore.onBlockLoadFailed(this);
            }),
            (e.prototype.retryLoads = function () {
              this.getState() === i.RowNodeBlock.STATE_FAILED &&
                (this.setStateWaitingToLoad(),
                this.rowNodeBlockLoader.checkBlockToLoad(),
                this.setData()),
                this.forEachNodeShallow(function (t) {
                  t.childStore && t.childStore.retryLoads();
                });
            }),
            (e.prototype.processServerResult = function (t) {
              this.parentStore.onBlockLoaded(this, t);
            }),
            (e.prototype.setData = function (t, e) {
              void 0 === t && (t = []),
                void 0 === e && (e = !1),
                this.destroyRowNodes();
              for (
                var o = this.parentStore.getRowCount(),
                  n = this.getId() * this.storeParams.cacheBlockSize,
                  r = Math.min(n + this.storeParams.cacheBlockSize, o) - n,
                  i = 0;
                i < r;
                i++
              ) {
                var s = this.blockUtils.createRowNode({
                  field: this.groupField,
                  group: this.groupLevel,
                  leafGroup: this.leafGroup,
                  level: this.level,
                  parent: this.parentRowNode,
                  rowGroupColumn: this.rowGroupColumn,
                });
                if (i < t.length) {
                  var a = t[i],
                    l = this.prefixId(this.startRow + i);
                  this.blockUtils.setDataIntoRowNode(s, a, l),
                    this.parentStore.removeDuplicateNode(s.id),
                    this.nodeManager.addRowNode(s),
                    (this.allNodesMap[s.id] = s);
                }
                this.rowNodes.push(s), e && (s.failedLoad = !0);
              }
            }),
            (e.prototype.removeDuplicateNode = function (t) {
              var e = this.allNodesMap[t];
              if (e) {
                this.blockUtils.destroyRowNode(e);
                var o = this.rowNodes.indexOf(e),
                  n = this.blockUtils.createRowNode({
                    field: this.groupField,
                    group: this.groupLevel,
                    leafGroup: this.leafGroup,
                    level: this.level,
                    parent: this.parentRowNode,
                    rowGroupColumn: this.rowGroupColumn,
                  });
                this.rowNodes[o] = n;
              }
            }),
            (e.prototype.refresh = function () {
              this.getState() !== i.RowNodeBlock.STATE_WAITING_TO_LOAD &&
                this.setStateWaitingToLoad();
            }),
            (e.prototype.destroyRowNodes = function () {
              this.blockUtils.destroyRowNodes(this.rowNodes),
                (this.rowNodes = []),
                (this.allNodesMap = {});
            }),
            (e.prototype.setBeans = function (t) {
              this.logger = t.create("ServerSideBlock");
            }),
            (e.prototype.getRowUsingDisplayIndex = function (t) {
              return (
                this.touchLastAccessed(),
                this.blockUtils.binarySearchForDisplayIndex(t, this.rowNodes)
              );
            }),
            (e.prototype.loadFromDatasource = function () {
              this.cacheUtils.loadFromDatasource({
                startRow: this.startRow,
                endRow: this.startRow + this.storeParams.cacheBlockSize,
                parentNode: this.parentRowNode,
                storeParams: this.ssrmParams,
                successCallback: this.pageLoaded.bind(this, this.getVersion()),
                success: this.success.bind(this, this.getVersion()),
                failCallback: this.pageLoadFailed.bind(this, this.getVersion()),
                fail: this.pageLoadFailed.bind(this, this.getVersion()),
              });
            }),
            (e.prototype.isPixelInRange = function (t) {
              return (
                t >= this.blockTopPx && t < this.blockTopPx + this.blockHeightPx
              );
            }),
            (e.prototype.getRowBounds = function (t) {
              var e,
                o = this;
              return (
                this.touchLastAccessed(),
                i._.find(this.rowNodes, function (n) {
                  return null != (e = o.blockUtils.extractRowBounds(n, t));
                }),
                e
              );
            }),
            (e.prototype.getRowIndexAtPixel = function (t) {
              var e = this;
              this.touchLastAccessed();
              var o = null;
              return (
                i._.find(this.rowNodes, function (n) {
                  return null != (o = e.blockUtils.getIndexAtPixel(n, t));
                }),
                o
              );
            }),
            (e.prototype.clearDisplayIndexes = function () {
              var t = this;
              (this.displayIndexEnd = void 0),
                (this.displayIndexStart = void 0),
                this.rowNodes.forEach(function (e) {
                  return t.blockUtils.clearDisplayIndex(e);
                });
            }),
            (e.prototype.setDisplayIndexes = function (t, e) {
              var o = this;
              (this.displayIndexStart = t.peek()),
                (this.blockTopPx = e.value),
                this.rowNodes.forEach(function (n) {
                  return o.blockUtils.setDisplayIndex(n, t, e);
                }),
                (this.displayIndexEnd = t.peek()),
                (this.blockHeightPx = e.value - this.blockTopPx);
            }),
            qh(
              [i.Autowired("rowRenderer")],
              e.prototype,
              "rowRenderer",
              void 0
            ),
            qh(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            qh(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            qh([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            qh([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            qh(
              [i.Autowired("ssrmCacheUtils")],
              e.prototype,
              "cacheUtils",
              void 0
            ),
            qh(
              [i.Autowired("ssrmBlockUtils")],
              e.prototype,
              "blockUtils",
              void 0
            ),
            qh(
              [i.Autowired("ssrmNodeManager")],
              e.prototype,
              "nodeManager",
              void 0
            ),
            qh(
              [i.Autowired("rowNodeBlockLoader")],
              e.prototype,
              "rowNodeBlockLoader",
              void 0
            ),
            qh([i.PostConstruct], e.prototype, "postConstruct", null),
            qh([i.PreDestroy], e.prototype, "destroyRowNodes", null),
            qh(
              [
                (0,
                (o = i.Qualifier("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            e
          );
          var o;
        })(i.RowNodeBlock),
        Zh = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        $h = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.FOUND = 0)] = "FOUND"),
          (t[(t.CONTINUE_FIND = 1)] = "CONTINUE_FIND"),
          (t[(t.BREAK_FIND = 2)] = "BREAK_FIND");
      })(rp || (rp = {}));
      var Jh,
        tf = (function (t) {
          function e(o, n, r) {
            var i = t.call(this) || this;
            return (
              (i.blocks = {}),
              (i.blockHeights = {}),
              (i.blockCount = 0),
              (i.lastRowIndexKnown = !1),
              (i.displayIndexStart = 0),
              (i.displayIndexEnd = 0),
              (i.cacheTopPixel = 0),
              (i.info = {}),
              (i.ssrmParams = o),
              (i.storeParams = n),
              (i.parentRowNode = r),
              (i.rowCount = e.INITIAL_ROW_COUNT),
              i
            );
          }
          return (
            Zh(e, t),
            (e.prototype.postConstruct = function () {
              this.defaultRowHeight =
                this.gridOptionsWrapper.getRowHeightAsNumber();
            }),
            (e.prototype.destroyAllBlocks = function () {
              var t = this;
              this.getBlocksInOrder().forEach(function (e) {
                return t.destroyBlock(e);
              });
            }),
            (e.prototype.setBeans = function (t) {
              this.logger = t.create("ServerSideCache");
            }),
            (e.prototype.getRowCount = function () {
              return this.rowCount;
            }),
            (e.prototype.isLastRowIndexKnown = function () {
              return this.lastRowIndexKnown;
            }),
            (e.prototype.retryLoads = function () {
              this.getBlocksInOrder().forEach(function (t) {
                return t.retryLoads();
              });
            }),
            (e.prototype.onBlockLoadFailed = function (t) {
              t.setData([], !0), this.fireCacheUpdatedEvent();
            }),
            (e.prototype.onBlockLoaded = function (t, e) {
              this.logger.log(
                "onPageLoaded: page = " +
                  t.getId() +
                  ", lastRow = " +
                  e.rowCount
              ),
                e.storeInfo && i._.assign(this.info, e.storeInfo),
                e.rowData ||
                  i._.doOnce(function () {
                    return console.warn(
                      'AG Grid: "params.rowData" is missing from Server-Side Row Model success() callback. Please use the "rowData" attribute. If no data is returned, set an empty list.',
                      e
                    );
                  }, "InfiniteStore.noData");
              var o =
                null != e.rowCount && e.rowCount >= 0 ? e.rowCount : void 0;
              this.isAlive() &&
                (this.checkRowCount(t, o),
                t.setData(e.rowData),
                this.destroyAllBlocksPastVirtualRowCount(),
                this.fireCacheUpdatedEvent());
            }),
            (e.prototype.purgeBlocksIfNeeded = function (t) {
              var o = this,
                n = this.getBlocksInOrder().filter(function (e) {
                  return e != t;
                });
              n.sort(function (t, e) {
                return e.getLastAccessed() - t.getLastAccessed();
              });
              var r = this.storeParams.maxBlocksInCache > 0,
                i = r ? this.storeParams.maxBlocksInCache - 1 : null,
                s = e.MAX_EMPTY_BLOCKS_TO_KEEP - 1;
              n.forEach(function (t, e) {
                if (
                  (t.getState() === Qh.STATE_WAITING_TO_LOAD && e >= s) ||
                  (r && e >= i)
                ) {
                  if (t.isAnyNodeOpen()) return;
                  if (o.isBlockCurrentlyDisplayed(t)) return;
                  if (o.isBlockFocused(t)) return;
                  o.destroyBlock(t);
                }
              });
            }),
            (e.prototype.isBlockFocused = function (t) {
              var e = this.focusController.getFocusCellToUseAfterRefresh();
              if (!e) return !1;
              if (null != e.rowPinned) return !1;
              var o = t.getDisplayIndexStart(),
                n = t.getDisplayIndexEnd();
              return (
                null != n && null != o && e.rowIndex >= o && e.rowIndex < n
              );
            }),
            (e.prototype.isBlockCurrentlyDisplayed = function (t) {
              var e = t.getDisplayIndexStart(),
                o = t.getDisplayIndexEnd() - 1;
              return this.rowRenderer.isRangeInRenderedViewport(e, o);
            }),
            (e.prototype.removeDuplicateNode = function (t) {
              this.getBlocksInOrder().forEach(function (e) {
                return e.removeDuplicateNode(t);
              });
            }),
            (e.prototype.checkRowCount = function (t, o) {
              if ("number" == typeof o && o >= 0)
                (this.rowCount = o), (this.lastRowIndexKnown = !0);
              else if (!this.lastRowIndexKnown) {
                var n =
                  (t.getId() + 1) * this.storeParams.cacheBlockSize +
                  e.OVERFLOW_SIZE;
                this.rowCount < n && (this.rowCount = n);
              }
            }),
            (e.prototype.forEachNodeDeep = function (t, e) {
              void 0 === e && (e = new i.NumberSequence()),
                this.getBlocksInOrder().forEach(function (o) {
                  return o.forEachNodeDeep(t, e);
                });
            }),
            (e.prototype.getBlocksInOrder = function () {
              return i._.getAllValuesInObject(this.blocks).sort(function (
                t,
                e
              ) {
                return t.getId() - e.getId();
              });
            }),
            (e.prototype.destroyBlock = function (t) {
              delete this.blocks[t.getId()],
                this.destroyBean(t),
                this.blockCount--,
                this.rowNodeBlockLoader.removeBlock(t);
            }),
            (e.prototype.fireCacheUpdatedEvent = function () {
              this.eventService.dispatchEvent({
                type: i.Events.EVENT_STORE_UPDATED,
              });
            }),
            (e.prototype.destroyAllBlocksPastVirtualRowCount = function () {
              var t = this,
                e = [];
              this.getBlocksInOrder().forEach(function (o) {
                o.getId() * t.storeParams.cacheBlockSize >= t.rowCount &&
                  e.push(o);
              }),
                e.length > 0 &&
                  e.forEach(function (e) {
                    return t.destroyBlock(e);
                  });
            }),
            (e.prototype.refreshStore = function (t) {
              t ? this.resetStore() : this.refreshBlocks(),
                this.fireCacheUpdatedEvent();
            }),
            (e.prototype.refreshBlocks = function () {
              this.getBlocksInOrder().forEach(function (t) {
                t.refresh();
              }),
                (this.lastRowIndexKnown = !1),
                this.rowNodeBlockLoader.checkBlockToLoad();
            }),
            (e.prototype.resetStore = function () {
              this.destroyAllBlocks(),
                (this.lastRowIndexKnown = !1),
                0 === this.rowCount && (this.rowCount = e.INITIAL_ROW_COUNT);
            }),
            (e.prototype.getRowNodesInRange = function (t, e) {
              var o = [],
                n = -1,
                r = !1;
              i._.missing(t) && (r = !0);
              var s = !1;
              return (
                this.getBlocksInOrder().forEach(function (i) {
                  s ||
                    (r && n + 1 !== i.getId()
                      ? (s = !0)
                      : ((n = i.getId()),
                        i.forEachNodeShallow(function (n) {
                          var i = n === t || n === e;
                          (r || i) && o.push(n), i && (r = !r);
                        })));
                }),
                s || r ? [] : o
              );
            }),
            (e.prototype.findBlockAndExecute = function (t, e, o) {
              var n,
                r = !1,
                i = !1,
                s = null;
              return (
                this.getBlocksInOrder().forEach(function (o) {
                  if (!r && !i) {
                    var a = t(o);
                    a == rp.FOUND
                      ? ((n = e(o)), (r = !0))
                      : a == rp.CONTINUE_FIND
                      ? (s = o)
                      : a == rp.BREAK_FIND && (i = !0);
                  }
                }),
                r || (n = o(s)),
                n
              );
            }),
            (e.prototype.getRowBounds = function (t) {
              var e = this;
              return this.findBlockAndExecute(
                function (e) {
                  return e.isDisplayIndexInBlock(t)
                    ? rp.FOUND
                    : e.isBlockBefore(t)
                    ? rp.CONTINUE_FIND
                    : rp.BREAK_FIND;
                },
                function (e) {
                  return e.getRowBounds(t);
                },
                function (o) {
                  var n, r;
                  return (
                    null !== o
                      ? ((n = o.getBlockTopPx() + o.getBlockHeightPx()),
                        (r = o.getDisplayIndexEnd()))
                      : ((n = e.cacheTopPixel), (r = e.displayIndexStart)),
                    {
                      rowHeight: e.defaultRowHeight,
                      rowTop: n + (t - r) * e.defaultRowHeight,
                    }
                  );
                }
              );
            }),
            (e.prototype.getRowIndexAtPixel = function (t) {
              var e = this,
                o = this.findBlockAndExecute(
                  function (e) {
                    return e.isPixelInRange(t)
                      ? rp.FOUND
                      : e.getBlockTopPx() < t
                      ? rp.CONTINUE_FIND
                      : rp.BREAK_FIND;
                  },
                  function (e) {
                    return e.getRowIndexAtPixel(t);
                  },
                  function (o) {
                    var n, r;
                    return (
                      o
                        ? ((n = o.getBlockTopPx() + o.getBlockHeightPx()),
                          (r = o.getDisplayIndexEnd()))
                        : ((n = e.cacheTopPixel), (r = e.displayIndexStart)),
                      r + (((t - n) / e.defaultRowHeight) | 0)
                    );
                  }
                ),
                n = this.getDisplayIndexEnd() - 1;
              return Math.min(o, n);
            }),
            (e.prototype.clearDisplayIndexes = function () {
              (this.displayIndexStart = void 0),
                (this.displayIndexEnd = void 0),
                this.getBlocksInOrder().forEach(function (t) {
                  return t.clearDisplayIndexes();
                });
            }),
            (e.prototype.setDisplayIndexes = function (t, e) {
              var o = this;
              (this.displayIndexStart = t.peek()),
                (this.cacheTopPixel = e.value);
              var n = -1,
                r = this.storeParams.cacheBlockSize;
              this.getBlocksInOrder().forEach(function (s) {
                var a = s.getId(),
                  l = a - n - 1,
                  u = l * r;
                u > 0 && t.skip(u);
                for (var p = 1; p <= l; p++) {
                  var c = a - p;
                  i._.exists(o.blockHeights[c])
                    ? (e.value += o.blockHeights[c])
                    : (e.value += r * o.defaultRowHeight);
                }
                (n = a),
                  s.setDisplayIndexes(t, e),
                  (o.blockHeights[a] = s.getBlockHeightPx());
              });
              var s = (n + 1) * r - 1,
                a = this.getRowCount() - s - 1;
              a > 0 && (t.skip(a), (e.value += a * this.defaultRowHeight)),
                (this.displayIndexEnd = t.peek()),
                (this.cacheHeightPixels = e.value - this.cacheTopPixel);
            }),
            (e.prototype.getRowUsingDisplayIndex = function (t, e) {
              var o = this;
              return (
                void 0 === e && (e = !1),
                this.isDisplayIndexInStore(t)
                  ? this.findBlockAndExecute(
                      function (e) {
                        return e.isDisplayIndexInBlock(t)
                          ? rp.FOUND
                          : e.isBlockBefore(t)
                          ? rp.CONTINUE_FIND
                          : rp.BREAK_FIND;
                      },
                      function (e) {
                        return e.getRowUsingDisplayIndex(t);
                      },
                      function (n) {
                        if (!e) {
                          var r,
                            s,
                            a,
                            l = o.storeParams.cacheBlockSize;
                          if (n)
                            for (
                              r = n.getId() + 1,
                                s = n.getDisplayIndexEnd(),
                                a = n.getBlockHeightPx() + n.getBlockTopPx();
                              !(t >= s && t < s + l);

                            ) {
                              s += l;
                              var u = o.blockHeights[r];
                              i._.exists(u)
                                ? (a += u)
                                : (a += o.defaultRowHeight * l),
                                r++;
                            }
                          else
                            (r = Math.floor((t - o.displayIndexStart) / l)),
                              (s = o.displayIndexStart + r * l),
                              (a =
                                o.cacheTopPixel + r * l * o.defaultRowHeight);
                          return (
                            o.logger.log(
                              "block missing, rowIndex = " +
                                t +
                                ", creating #" +
                                r +
                                ", displayIndexStart = " +
                                s
                            ),
                            o
                              .createBlock(r, s, { value: a })
                              .getRowUsingDisplayIndex(t)
                          );
                        }
                      }
                    )
                  : null
              );
            }),
            (e.prototype.getTopLevelRowDisplayedIndex = function (t) {
              var e = this.storeParams.cacheBlockSize,
                o = Math.floor(t / e);
              return this.findBlockAndExecute(
                function (t) {
                  return t.getId() === o
                    ? rp.FOUND
                    : t.getId() < o
                    ? rp.CONTINUE_FIND
                    : rp.BREAK_FIND;
                },
                function (e) {
                  return e.getRowUsingLocalIndex(t).rowIndex;
                },
                function (o) {
                  if (!o) return t;
                  var n = e * (o.getId() + 1) - 1,
                    r = o.getRowUsingLocalIndex(n);
                  return (
                    (r.expanded && r.childStore
                      ? r.childStore.getDisplayIndexEnd() - 1
                      : r.expanded && r.detailNode
                      ? r.detailNode.rowIndex
                      : r.rowIndex) +
                    (t - n)
                  );
                }
              );
            }),
            (e.prototype.addStoreStates = function (t) {
              t.push({
                type: i.ServerSideStoreType.Partial,
                route: this.storeUtils.createGroupKeys(this.parentRowNode),
                rowCount: this.rowCount,
                lastRowIndexKnown: this.lastRowIndexKnown,
                info: this.info,
                maxBlocksInCache: this.storeParams.maxBlocksInCache,
                cacheBlockSize: this.storeParams.cacheBlockSize,
              }),
                this.forEachChildStoreShallow(function (e) {
                  return e.addStoreStates(t);
                });
            }),
            (e.prototype.createBlock = function (t, e, o) {
              var n = this.createBean(
                new Qh(
                  t,
                  this.parentRowNode,
                  this.ssrmParams,
                  this.storeParams,
                  this
                )
              );
              return (
                n.setDisplayIndexes(new i.NumberSequence(e), o),
                (this.blocks[n.getId()] = n),
                this.blockCount++,
                this.purgeBlocksIfNeeded(n),
                this.rowNodeBlockLoader.addBlock(n),
                n
              );
            }),
            (e.prototype.getDisplayIndexEnd = function () {
              return this.displayIndexEnd;
            }),
            (e.prototype.isDisplayIndexInStore = function (t) {
              return (
                0 !== this.getRowCount() &&
                t >= this.displayIndexStart &&
                t < this.displayIndexEnd
              );
            }),
            (e.prototype.applyTransaction = function (t) {
              return {
                status: i.ServerSideTransactionResultStatus.StoreWrongType,
              };
            }),
            (e.prototype.getChildStore = function (t) {
              var e = this;
              return this.storeUtils.getChildStore(t, this, function (t) {
                var o = null;
                return (
                  e.getBlocksInOrder().forEach(function (e) {
                    e.forEachNodeShallow(function (e) {
                      e.key === t && (o = e);
                    }, new i.NumberSequence());
                  }),
                  o
                );
              });
            }),
            (e.prototype.isPixelInRange = function (t) {
              return (
                0 !== this.getRowCount() &&
                t >= this.cacheTopPixel &&
                t < this.cacheTopPixel + this.cacheHeightPixels
              );
            }),
            (e.prototype.refreshAfterFilter = function (t) {
              this.resetStore();
            }),
            (e.prototype.refreshAfterSort = function (t) {
              this.storeUtils.isServerRefreshNeeded(
                this.parentRowNode,
                this.ssrmParams.rowGroupCols,
                t
              )
                ? this.resetStore()
                : this.forEachChildStoreShallow(function (e) {
                    return e.refreshAfterSort(t);
                  });
            }),
            (e.prototype.forEachChildStoreShallow = function (t) {
              this.getBlocksInOrder().forEach(function (e) {
                e.isGroupLevel() &&
                  e.forEachNodeShallow(function (e) {
                    var o = e.childStore;
                    o && t(o);
                  }, new i.NumberSequence());
              });
            }),
            (e.MAX_EMPTY_BLOCKS_TO_KEEP = 2),
            (e.INITIAL_ROW_COUNT = 1),
            (e.OVERFLOW_SIZE = 1),
            $h(
              [i.Autowired("rowRenderer")],
              e.prototype,
              "rowRenderer",
              void 0
            ),
            $h(
              [i.Autowired("rowNodeBlockLoader")],
              e.prototype,
              "rowNodeBlockLoader",
              void 0
            ),
            $h(
              [i.Autowired("ssrmCacheUtils")],
              e.prototype,
              "storeUtils",
              void 0
            ),
            $h(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            $h(
              [i.Autowired("focusController")],
              e.prototype,
              "focusController",
              void 0
            ),
            $h([i.PostConstruct], e.prototype, "postConstruct", null),
            $h([i.PreDestroy], e.prototype, "destroyAllBlocks", null),
            $h(
              [
                (0,
                (o = i.Qualifier("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            e
          );
          var o;
        })(i.BeanStub),
        ef = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        of = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        nf = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, 0) || this;
            return (
              (r.nodeIdSequence = new i.NumberSequence()),
              (r.info = {}),
              (r.ssrmParams = e),
              (r.storeParams = o),
              (r.parentRowNode = n),
              (r.level = n.level + 1),
              (r.groupLevel = e.rowGroupCols
                ? r.level < e.rowGroupCols.length
                : void 0),
              (r.leafGroup =
                !!e.rowGroupCols && r.level === e.rowGroupCols.length - 1),
              r
            );
          }
          return (
            ef(e, t),
            (e.prototype.postConstruct = function () {
              var t = this;
              (this.usingTreeData = this.gridOptionsWrapper.isTreeData()),
                (this.usingMasterDetail =
                  this.gridOptionsWrapper.isMasterDetail()),
                (this.nodeIdPrefix = this.blockUtils.createNodeIdPrefix(
                  this.parentRowNode
                )),
                !this.usingTreeData &&
                  this.groupLevel &&
                  ((this.groupField =
                    this.ssrmParams.rowGroupCols[this.level].field),
                  (this.rowGroupColumn =
                    this.columnController.getRowGroupColumns()[this.level])),
                this.initialiseRowNodes(),
                this.rowNodeBlockLoader.addBlock(this),
                this.addDestroyFunc(function () {
                  return t.rowNodeBlockLoader.removeBlock(t);
                });
            }),
            (e.prototype.destroyRowNodes = function () {
              this.blockUtils.destroyRowNodes(this.allRowNodes),
                (this.allRowNodes = []),
                (this.nodesAfterSort = []),
                (this.nodesAfterFilter = []),
                (this.allNodesMap = {});
            }),
            (e.prototype.initialiseRowNodes = function (t, e) {
              void 0 === t && (t = 1),
                void 0 === e && (e = !1),
                this.destroyRowNodes();
              for (var o = 0; o < t; o++) {
                var n = this.blockUtils.createRowNode({
                  field: this.groupField,
                  group: this.groupLevel,
                  leafGroup: this.leafGroup,
                  level: this.level,
                  parent: this.parentRowNode,
                  rowGroupColumn: this.rowGroupColumn,
                });
                e && (n.failedLoad = !0),
                  this.allRowNodes.push(n),
                  this.nodesAfterFilter.push(n),
                  this.nodesAfterSort.push(n);
              }
            }),
            (e.prototype.getBlockStateJson = function () {
              return {
                id: this.nodeIdPrefix ? this.nodeIdPrefix : "",
                state: this.getState(),
              };
            }),
            (e.prototype.loadFromDatasource = function () {
              this.storeUtils.loadFromDatasource({
                startRow: void 0,
                endRow: void 0,
                parentNode: this.parentRowNode,
                storeParams: this.ssrmParams,
                successCallback: this.pageLoaded.bind(this, this.getVersion()),
                success: this.success.bind(this, this.getVersion()),
                failCallback: this.pageLoadFailed.bind(this, this.getVersion()),
                fail: this.pageLoadFailed.bind(this, this.getVersion()),
              });
            }),
            (e.prototype.getStartRow = function () {
              return 0;
            }),
            (e.prototype.getEndRow = function () {
              return this.nodesAfterSort.length;
            }),
            (e.prototype.createDataNode = function (t, e) {
              var o = this.blockUtils.createRowNode({
                field: this.groupField,
                group: this.groupLevel,
                leafGroup: this.leafGroup,
                level: this.level,
                parent: this.parentRowNode,
                rowGroupColumn: this.rowGroupColumn,
              });
              null != e
                ? i._.insertIntoArray(this.allRowNodes, o, e)
                : this.allRowNodes.push(o);
              var n = this.prefixId(this.nodeIdSequence.next());
              return (
                this.blockUtils.setDataIntoRowNode(o, t, n),
                this.nodeManager.addRowNode(o),
                this.blockUtils.checkOpenByDefault(o),
                (this.allNodesMap[o.id] = o),
                o
              );
            }),
            (e.prototype.prefixId = function (t) {
              return this.nodeIdPrefix
                ? this.nodeIdPrefix + "-" + t
                : t.toString();
            }),
            (e.prototype.processServerFail = function () {
              this.initialiseRowNodes(1, !0),
                this.fireStoreUpdatedEvent(),
                this.flushAsyncTransactions();
            }),
            (e.prototype.processServerResult = function (t) {
              if (this.isAlive()) {
                t.storeInfo && i._.assign(this.info, t.storeInfo);
                var e = this.allRowNodes.length > 0 ? this.allNodesMap : void 0;
                (this.allRowNodes = []),
                  (this.nodesAfterSort = []),
                  (this.nodesAfterFilter = []),
                  (this.allNodesMap = {}),
                  t.rowData ||
                    i._.doOnce(function () {
                      return console.warn(
                        'AG Grid: "params.data" is missing from Server-Side Row Model success() callback. Please use the "data" attribute. If no data is returned, set an empty list.',
                        t
                      );
                    }, "FullStore.noData"),
                  this.createOrRecycleNodes(e, t.rowData),
                  e &&
                    this.blockUtils.destroyRowNodes(
                      i._.getAllValuesInObject(e)
                    ),
                  this.filterAndSortNodes(),
                  this.fireStoreUpdatedEvent(),
                  this.flushAsyncTransactions();
              }
            }),
            (e.prototype.createOrRecycleNodes = function (t, e) {
              var o = this;
              e &&
                e.forEach(function (e) {
                  var n = (function (e) {
                    if (t) {
                      var n = o.gridOptionsWrapper.getRowNodeIdFunc();
                      if (n) {
                        var r = n(e),
                          i = t[r];
                        if (i) return delete t[r], i;
                      }
                    }
                  })(e);
                  n
                    ? (function (t, e) {
                        (o.allNodesMap[t.id] = t),
                          t.updateData(e),
                          o.allRowNodes.push(t);
                      })(n, e)
                    : o.createDataNode(e);
                });
            }),
            (e.prototype.flushAsyncTransactions = function () {
              var t = this;
              window.setTimeout(function () {
                return t.transactionManager.flushAsyncTransactions();
              }, 0);
            }),
            (e.prototype.filterAndSortNodes = function () {
              this.filterRowNodes(), this.sortRowNodes();
            }),
            (e.prototype.sortRowNodes = function () {
              var t = this.sortController.getSortOptions();
              this.nodesAfterSort =
                t && 0 != t.length
                  ? this.rowNodeSorter.doFullSort(this.nodesAfterFilter, t)
                  : this.nodesAfterFilter;
            }),
            (e.prototype.filterRowNodes = function () {
              var t = this;
              this.nodesAfterFilter = this.groupLevel
                ? this.allRowNodes
                : this.allRowNodes.filter(function (e) {
                    return t.filterManager.doesRowPassFilter({ rowNode: e });
                  });
            }),
            (e.prototype.clearDisplayIndexes = function () {
              var t = this;
              (this.displayIndexStart = void 0),
                (this.displayIndexEnd = void 0),
                this.allRowNodes.forEach(function (e) {
                  return t.blockUtils.clearDisplayIndex(e);
                });
            }),
            (e.prototype.getDisplayIndexEnd = function () {
              return this.displayIndexEnd;
            }),
            (e.prototype.isDisplayIndexInStore = function (t) {
              return (
                0 !== this.getRowCount() &&
                t >= this.displayIndexStart &&
                t < this.displayIndexEnd
              );
            }),
            (e.prototype.setDisplayIndexes = function (t, e) {
              var o = this;
              (this.displayIndexStart = t.peek()), (this.topPx = e.value);
              var n = {};
              this.nodesAfterSort.forEach(function (r) {
                o.blockUtils.setDisplayIndex(r, t, e), (n[r.id] = !0);
              }),
                this.allRowNodes.forEach(function (t) {
                  n[t.id] || o.blockUtils.clearDisplayIndex(t);
                }),
                (this.displayIndexEnd = t.peek()),
                (this.heightPx = e.value - this.topPx);
            }),
            (e.prototype.forEachNodeDeep = function (t, e) {
              void 0 === e && (e = new i.NumberSequence()),
                this.allRowNodes.forEach(function (o) {
                  t(o, e.next());
                  var n = o.childStore;
                  n && n.forEachNodeDeep(t, e);
                });
            }),
            (e.prototype.getRowUsingDisplayIndex = function (t) {
              return this.blockUtils.binarySearchForDisplayIndex(
                t,
                this.nodesAfterSort
              );
            }),
            (e.prototype.getRowBounds = function (t) {
              for (var e = 0; e < this.nodesAfterSort.length; e++) {
                var o = this.blockUtils.extractRowBounds(
                  this.nodesAfterSort[e],
                  t
                );
                if (o) return o;
              }
              return null;
            }),
            (e.prototype.isPixelInRange = function (t) {
              return t >= this.topPx && t < this.topPx + this.heightPx;
            }),
            (e.prototype.getRowIndexAtPixel = function (t) {
              var e = this;
              if (t <= this.topPx) return this.nodesAfterSort[0].rowIndex;
              if (t >= this.topPx + this.heightPx) {
                var o = this.nodesAfterSort[this.nodesAfterSort.length - 1];
                return t >= o.rowTop + o.rowHeight && o.expanded && o.childStore
                  ? o.childStore.getRowIndexAtPixel(t)
                  : o.rowIndex;
              }
              var n = null;
              return (
                this.nodesAfterSort.forEach(function (o) {
                  var r = e.blockUtils.getIndexAtPixel(o, t);
                  null != r && (n = r);
                }),
                null == n ? this.displayIndexEnd - 1 : n
              );
            }),
            (e.prototype.getChildStore = function (t) {
              var e = this;
              return this.storeUtils.getChildStore(t, this, function (t) {
                return i._.find(e.allRowNodes, function (e) {
                  return e.key === t;
                });
              });
            }),
            (e.prototype.forEachChildStoreShallow = function (t) {
              this.allRowNodes.forEach(function (e) {
                var o = e.childStore;
                o && t(o);
              });
            }),
            (e.prototype.refreshAfterFilter = function (t) {
              t.alwaysReset || this.gridOptionsWrapper.isTreeData()
                ? this.refreshStore(!0)
                : (this.filterAndSortNodes(),
                  this.forEachChildStoreShallow(function (e) {
                    return e.refreshAfterFilter(t);
                  }));
            }),
            (e.prototype.refreshAfterSort = function (t) {
              t.alwaysReset
                ? this.refreshStore(!0)
                : (this.sortRowNodes(),
                  this.forEachChildStoreShallow(function (e) {
                    return e.refreshAfterSort(t);
                  }));
            }),
            (e.prototype.applyTransaction = function (t) {
              switch (this.getState()) {
                case i.RowNodeBlock.STATE_FAILED:
                  return {
                    status:
                      i.ServerSideTransactionResultStatus.StoreLoadingFailed,
                  };
                case i.RowNodeBlock.STATE_LOADING:
                  return {
                    status: i.ServerSideTransactionResultStatus.StoreLoading,
                  };
                case i.RowNodeBlock.STATE_WAITING_TO_LOAD:
                  return {
                    status:
                      i.ServerSideTransactionResultStatus.StoreWaitingToLoad,
                  };
              }
              var e =
                this.gridOptionsWrapper.getIsApplyServerSideTransactionFunc();
              if (
                e &&
                !e({
                  transaction: t,
                  parentNode: this.parentRowNode,
                  storeInfo: this.info,
                })
              )
                return {
                  status: i.ServerSideTransactionResultStatus.Cancelled,
                };
              var o = {
                  status: i.ServerSideTransactionResultStatus.Applied,
                  remove: [],
                  update: [],
                  add: [],
                },
                n = [];
              return (
                this.executeAdd(t, o),
                this.executeRemove(t, o, n),
                this.executeUpdate(t, o, n),
                this.filterAndSortNodes(),
                this.updateSelection(n),
                o
              );
            }),
            (e.prototype.updateSelection = function (t) {
              if (t.length > 0) {
                t.forEach(function (t) {
                  t.setSelected(!1, !1, !0);
                });
                var e = {
                  type: i.Events.EVENT_SELECTION_CHANGED,
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                };
                this.eventService.dispatchEvent(e);
              }
            }),
            (e.prototype.executeAdd = function (t, e) {
              var o = this,
                n = t.add,
                r = t.addIndex;
              i._.missingOrEmpty(n) ||
                ("number" == typeof r && r >= 0
                  ? n.reverse().forEach(function (t) {
                      var n = o.createDataNode(t, r);
                      e.add.push(n);
                    })
                  : n.forEach(function (t) {
                      var n = o.createDataNode(t);
                      e.add.push(n);
                    }));
            }),
            (e.prototype.executeRemove = function (t, e, o) {
              var n = this,
                r = t.remove;
              if (null != r) {
                var i = {};
                r.forEach(function (t) {
                  var r = n.lookupRowNode(t);
                  r &&
                    (r.isSelected() && o.push(r),
                    r.clearRowTopAndRowIndex(),
                    (i[r.id] = !0),
                    delete n.allNodesMap[r.id],
                    e.remove.push(r));
                }),
                  (this.allRowNodes = this.allRowNodes.filter(function (t) {
                    return !i[t.id];
                  }));
              }
            }),
            (e.prototype.executeUpdate = function (t, e, o) {
              var n = this,
                r = t.update;
              null != r &&
                r.forEach(function (t) {
                  var r = n.lookupRowNode(t);
                  r &&
                    (r.updateData(t),
                    !r.selectable && r.isSelected() && o.push(r),
                    e.update.push(r));
                });
            }),
            (e.prototype.lookupRowNode = function (t) {
              var e,
                o = this.gridOptionsWrapper.getRowNodeIdFunc();
              if (i._.exists(o)) {
                var n = o(t);
                if (!(e = this.allNodesMap[n]))
                  return (
                    console.error(
                      "AG Grid: could not find row id=" +
                        n +
                        ", data item was not found for this id"
                    ),
                    null
                  );
              } else if (
                !(e = i._.find(this.allRowNodes, function (e) {
                  return e.data === t;
                }))
              )
                return (
                  console.error(
                    "AG Grid: could not find data item as object was not found",
                    t
                  ),
                  null
                );
              return e;
            }),
            (e.prototype.addStoreStates = function (t) {
              t.push({
                type: i.ServerSideStoreType.Full,
                route: this.storeUtils.createGroupKeys(this.parentRowNode),
                rowCount: this.allRowNodes.length,
                info: this.info,
              }),
                this.forEachChildStoreShallow(function (e) {
                  return e.addStoreStates(t);
                });
            }),
            (e.prototype.refreshStore = function (t) {
              t &&
                this.initialiseRowNodes(
                  this.nodesAfterSort ? this.nodesAfterSort.length : 1
                ),
                this.scheduleLoad(),
                this.fireStoreUpdatedEvent();
            }),
            (e.prototype.retryLoads = function () {
              this.getState() === i.RowNodeBlock.STATE_FAILED &&
                (this.initialiseRowNodes(1), this.scheduleLoad()),
                this.forEachChildStoreShallow(function (t) {
                  return t.retryLoads();
                });
            }),
            (e.prototype.scheduleLoad = function () {
              this.setStateWaitingToLoad(),
                this.rowNodeBlockLoader.checkBlockToLoad();
            }),
            (e.prototype.fireStoreUpdatedEvent = function () {
              this.eventService.dispatchEvent({
                type: i.Events.EVENT_STORE_UPDATED,
              });
            }),
            (e.prototype.getRowCount = function () {
              return this.nodesAfterSort.length;
            }),
            (e.prototype.getTopLevelRowDisplayedIndex = function (t) {
              return this.nodesAfterSort[t].rowIndex;
            }),
            (e.prototype.isLastRowIndexKnown = function () {
              return this.getState() == i.RowNodeBlock.STATE_LOADED;
            }),
            (e.prototype.getRowNodesInRange = function (t, e) {
              var o = [],
                n = !1;
              return (
                i._.missing(t) && (n = !0),
                this.nodesAfterSort.forEach(function (r) {
                  var i = r === t || r === e;
                  (n || i) && o.push(r), i && (n = !n);
                }),
                n ? [] : o
              );
            }),
            of(
              [i.Autowired("ssrmCacheUtils")],
              e.prototype,
              "storeUtils",
              void 0
            ),
            of(
              [i.Autowired("ssrmBlockUtils")],
              e.prototype,
              "blockUtils",
              void 0
            ),
            of(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            of(
              [i.Autowired("rowRenderer")],
              e.prototype,
              "rowRenderer",
              void 0
            ),
            of(
              [i.Autowired("rowNodeBlockLoader")],
              e.prototype,
              "rowNodeBlockLoader",
              void 0
            ),
            of(
              [i.Autowired("rowNodeSorter")],
              e.prototype,
              "rowNodeSorter",
              void 0
            ),
            of(
              [i.Autowired("sortController")],
              e.prototype,
              "sortController",
              void 0
            ),
            of(
              [i.Autowired("ssrmNodeManager")],
              e.prototype,
              "nodeManager",
              void 0
            ),
            of(
              [i.Autowired("filterManager")],
              e.prototype,
              "filterManager",
              void 0
            ),
            of(
              [i.Autowired("ssrmTransactionManager")],
              e.prototype,
              "transactionManager",
              void 0
            ),
            of([i.PostConstruct], e.prototype, "postConstruct", null),
            of([i.PreDestroy], e.prototype, "destroyRowNodes", null),
            e
          );
        })(i.RowNodeBlock),
        rf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        sf = (function () {
          function t() {}
          return (
            (t.prototype.createStore = function (t, e) {
              var o = this.getStoreParams(t, e);
              return new (
                o.storeType === i.ServerSideStoreType.Partial ? tf : nf
              )(t, o, e);
            }),
            (t.prototype.getStoreParams = function (t, e) {
              var o = this.getLevelSpecificParams(e),
                n = this.getStoreType(o);
              return {
                storeType: n,
                cacheBlockSize: this.getBlockSize(n, o),
                maxBlocksInCache: this.getMaxBlocksInCache(n, t, o),
              };
            }),
            (t.prototype.getMaxBlocksInCache = function (t, e, o) {
              if (t != i.ServerSideStoreType.Full) {
                var n =
                  o && null != o.maxBlocksInCache
                    ? o.maxBlocksInCache
                    : this.gridOptionsWrapper.getMaxBlocksInCache();
                if (null != n && n >= 0)
                  if (e.dynamicRowHeight)
                    i._.doOnce(function () {
                      return console.warn(
                        "AG Grid: Server Side Row Model does not support Dynamic Row Height and Cache Purging. Either a) remove getRowHeight() callback or b) remove maxBlocksInCache property. Purging has been disabled."
                      );
                    }, "storeFactory.maxBlocksInCache.dynamicRowHeight");
                  else {
                    if (!this.columnController.isAutoRowHeightActive())
                      return n;
                    i._.doOnce(function () {
                      return console.warn(
                        "AG Grid: Server Side Row Model does not support Auto Row Height and Cache Purging. Either a) remove colDef.autoHeight or b) remove maxBlocksInCache property. Purging has been disabled."
                      );
                    }, "storeFactory.maxBlocksInCache.autoRowHeightActive");
                  }
              }
            }),
            (t.prototype.getBlockSize = function (t, e) {
              if (t != i.ServerSideStoreType.Full) {
                var o =
                  e && null != e.cacheBlockSize
                    ? e.cacheBlockSize
                    : this.gridOptionsWrapper.getCacheBlockSize();
                return null != o && o > 0 ? o : 100;
              }
            }),
            (t.prototype.getLevelSpecificParams = function (t) {
              var e = this.gridOptionsWrapper.getServerSideStoreParamsFunc();
              if (e)
                return e({
                  level: t.level + 1,
                  parentRowNode: t.level >= 0 ? t : void 0,
                  rowGroupColumns: this.columnController.getRowGroupColumns(),
                  pivotColumns: this.columnController.getPivotColumns(),
                  pivotMode: this.columnController.isPivotMode(),
                });
            }),
            (t.prototype.getStoreType = function (t) {
              var e =
                t && null != t.storeType
                  ? t.storeType
                  : this.gridOptionsWrapper.getServerSideStoreType();
              switch (e) {
                case i.ServerSideStoreType.Partial:
                case i.ServerSideStoreType.Full:
                  return e;
                case null:
                case void 0:
                  return i.ServerSideStoreType.Full;
                default:
                  var o = Object.keys(i.ServerSideStoreType).join(", ");
                  return (
                    console.warn(
                      "AG Grid: invalid Server Side Store Type " +
                        e +
                        ", valid types are [" +
                        o +
                        "]"
                    ),
                    i.ServerSideStoreType.Partial
                  );
              }
            }),
            rf(
              [i.Autowired("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            rf(
              [i.Autowired("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            rf([i.Bean("ssrmStoreFactory")], t)
          );
        })(),
        af = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        lf = (function () {
          function t() {}
          return (
            (t.prototype.isSortingWithValueColumn = function (t) {
              for (
                var e = this.columnController
                    .getValueColumns()
                    .map(function (t) {
                      return t.getColId();
                    }),
                  o = 0;
                o < t.length;
                o++
              )
                if (e.indexOf(t[o]) > -1) return !0;
              return !1;
            }),
            (t.prototype.isSortingWithSecondaryColumn = function (t) {
              if (!this.columnController.getSecondaryColumns()) return !1;
              for (
                var e = this.columnController
                    .getSecondaryColumns()
                    .map(function (t) {
                      return t.getColId();
                    }),
                  o = 0;
                o < t.length;
                o++
              )
                if (e.indexOf(t[o]) > -1) return !0;
              return !1;
            }),
            af(
              [i.Autowired("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            af([i.Bean("ssrmListenerUtils")], t)
          );
        })(),
        uf = {
          moduleName: i.ModuleNames.ServerSideRowModelModule,
          rowModels: { serverSide: Ph },
          beans: [Hh, Uh, Dh, Nh, Ih, kh, Yh, sf, lf],
          dependantModules: [g],
        },
        pf = (function () {
          function t(t, e, o) {
            (this.rowModel = t), (this.colDef = e), (this.valueGetter = o);
          }
          return (
            (t.prototype.extractUniqueValues = function (t) {
              var e = this,
                o = new Set(),
                n = this.colDef.keyCreator;
              return (
                this.rowModel.forEachLeafNode(function (r) {
                  if (r.data && t(r)) {
                    var s = e.valueGetter(r);
                    n && (s = n({ value: s })),
                      null != (s = i._.makeNull(s)) && Array.isArray(s)
                        ? i._.forEach(s, function (t) {
                            var e = i._.toStringOrNull(i._.makeNull(t));
                            o.add(e);
                          })
                        : o.add(i._.toStringOrNull(s));
                  }
                }),
                i._.values(o)
              );
            }),
            t
          );
        })();
      !(function (t) {
        (t[(t.PROVIDED_LIST = 0)] = "PROVIDED_LIST"),
          (t[(t.PROVIDED_CALLBACK = 1)] = "PROVIDED_CALLBACK"),
          (t[(t.TAKEN_FROM_GRID_VALUES = 2)] = "TAKEN_FROM_GRID_VALUES");
      })(Jh || (Jh = {}));
      var cf = (function () {
          function t(t, e, o, n) {
            var r = this;
            (this.filterParams = t),
              (this.setIsLoading = e),
              (this.valueFormatterService = o),
              (this.translate = n),
              (this.localEventService = new i.EventService()),
              (this.miniFilterText = null),
              (this.providedValues = null),
              (this.allValues = []),
              (this.availableValues = new Set()),
              (this.displayedValues = []),
              (this.selectedValues = new Set()),
              (this.initialised = !1);
            var s = t.colDef,
              a = t.textFormatter,
              l = t.doesRowPassOtherFilter,
              u = t.suppressSorting,
              p = t.comparator,
              c = t.rowModel,
              d = t.valueGetter,
              h = t.values;
            (this.column = t.column),
              (this.colDef = s),
              (this.formatter = a || i.TextFilter.DEFAULT_FORMATTER),
              (this.doesRowPassOtherFilters = l),
              (this.suppressSorting = u || !1),
              (this.comparator = p || s.comparator || i._.defaultComparator),
              c.getType() === i.Constants.ROW_MODEL_TYPE_CLIENT_SIDE &&
                (this.clientSideValuesExtractor = new pf(c, s, d)),
              null == h
                ? (this.valuesType = Jh.TAKEN_FROM_GRID_VALUES)
                : ((this.valuesType = Array.isArray(h)
                    ? Jh.PROVIDED_LIST
                    : Jh.PROVIDED_CALLBACK),
                  (this.providedValues = h)),
              this.updateAllValues().then(function (t) {
                return r.resetSelectionState(t || []);
              });
          }
          return (
            (t.prototype.addEventListener = function (t, e, o) {
              this.localEventService.addEventListener(t, e, o);
            }),
            (t.prototype.removeEventListener = function (t, e, o) {
              this.localEventService.removeEventListener(t, e, o);
            }),
            (t.prototype.refreshValues = function (t) {
              void 0 === t && (t = !0);
              var e = this.getModel();
              return this.updateAllValues(), this.setModel(t ? e : null);
            }),
            (t.prototype.overrideValues = function (t, e) {
              var o = this;
              return (
                void 0 === e && (e = !0),
                new i.AgPromise(function (n) {
                  o.allValuesPromise.then(function () {
                    (o.valuesType = Jh.PROVIDED_LIST),
                      (o.providedValues = t),
                      o.refreshValues(e).then(function () {
                        return n();
                      });
                  });
                })
              );
            }),
            (t.prototype.refreshAfterAnyFilterChanged = function () {
              var t = this;
              return this.showAvailableOnly()
                ? this.allValuesPromise.then(function (e) {
                    return t.updateAvailableValues(e || []);
                  })
                : i.AgPromise.resolve();
            }),
            (t.prototype.isInitialised = function () {
              return this.initialised;
            }),
            (t.prototype.updateAllValues = function () {
              var t = this;
              return (
                (this.allValuesPromise = new i.AgPromise(function (e) {
                  switch (t.valuesType) {
                    case Jh.TAKEN_FROM_GRID_VALUES:
                    case Jh.PROVIDED_LIST:
                      var o =
                          t.valuesType === Jh.TAKEN_FROM_GRID_VALUES
                            ? t.getValuesFromRows(!1)
                            : i._.toStrings(t.providedValues),
                        n = t.sortValues(o || []);
                      (t.allValues = n), e(n);
                      break;
                    case Jh.PROVIDED_CALLBACK:
                      t.setIsLoading(!0);
                      var r = t.providedValues,
                        s = {
                          success: function (o) {
                            var n = i._.toStrings(o);
                            t.setIsLoading(!1);
                            var r = t.sortValues(n || []);
                            (t.allValues = r), e(r);
                          },
                          colDef: t.colDef,
                        };
                      window.setTimeout(function () {
                        return r(s);
                      }, 0);
                      break;
                    default:
                      throw new Error("Unrecognised valuesType");
                  }
                })),
                this.allValuesPromise
                  .then(function (e) {
                    return t.updateAvailableValues(e || []);
                  })
                  .then(function () {
                    return (t.initialised = !0);
                  }),
                this.allValuesPromise
              );
            }),
            (t.prototype.setValuesType = function (t) {
              this.valuesType = t;
            }),
            (t.prototype.getValuesType = function () {
              return this.valuesType;
            }),
            (t.prototype.isValueAvailable = function (t) {
              return this.availableValues.has(t);
            }),
            (t.prototype.showAvailableOnly = function () {
              return (
                this.valuesType === Jh.TAKEN_FROM_GRID_VALUES &&
                !this.filterParams.suppressRemoveEntries
              );
            }),
            (t.prototype.updateAvailableValues = function (e) {
              var o = this.showAvailableOnly()
                ? this.sortValues(this.getValuesFromRows(!0))
                : e;
              (this.availableValues = i._.convertToSet(o)),
                this.localEventService.dispatchEvent({
                  type: t.EVENT_AVAILABLE_VALUES_CHANGED,
                }),
                this.updateDisplayedValues();
            }),
            (t.prototype.sortValues = function (t) {
              return this.suppressSorting
                ? t
                : !this.filterParams.excelMode || t.indexOf(null) < 0
                ? t.sort(this.comparator)
                : i._.filter(t, function (t) {
                    return null != t;
                  })
                    .sort(this.comparator)
                    .concat(null);
            }),
            (t.prototype.getValuesFromRows = function (t) {
              var e = this;
              return (
                void 0 === t && (t = !1),
                this.clientSideValuesExtractor
                  ? this.clientSideValuesExtractor.extractUniqueValues(
                      function (o) {
                        return !t || e.doesRowPassOtherFilters(o);
                      }
                    )
                  : (console.error(
                      "AG Grid: Set Filter cannot initialise because you are using a row model that does not contain all rows in the browser. Either use a different filter type, or configure Set Filter such that you provide it with values"
                    ),
                    [])
              );
            }),
            (t.prototype.setMiniFilter = function (t) {
              return (
                (t = i._.makeNull(t)),
                this.miniFilterText !== t &&
                  ((this.miniFilterText = t), this.updateDisplayedValues(), !0)
              );
            }),
            (t.prototype.getMiniFilter = function () {
              return this.miniFilterText;
            }),
            (t.prototype.updateDisplayedValues = function () {
              var t = this;
              if (null != this.miniFilterText) {
                this.displayedValues = [];
                var e = (
                    this.formatter(this.miniFilterText) || ""
                  ).toUpperCase(),
                  o = function (t) {
                    return null != t && t.toUpperCase().indexOf(e) >= 0;
                  };
                this.availableValues.forEach(function (e) {
                  if (null == e)
                    t.filterParams.excelMode &&
                      o(t.translate("blanks")) &&
                      t.displayedValues.push(e);
                  else {
                    var n = t.formatter(e),
                      r = t.valueFormatterService.formatValue(
                        t.column,
                        null,
                        null,
                        n,
                        t.filterParams.valueFormatter,
                        !1
                      );
                    (o(n) || o(r)) && t.displayedValues.push(e);
                  }
                });
              } else this.displayedValues = i._.values(this.availableValues);
            }),
            (t.prototype.getDisplayedValueCount = function () {
              return this.displayedValues.length;
            }),
            (t.prototype.getDisplayedValue = function (t) {
              return this.displayedValues[t];
            }),
            (t.prototype.hasSelections = function () {
              return this.filterParams.defaultToNothingSelected
                ? this.selectedValues.size > 0
                : this.allValues.length !== this.selectedValues.size;
            }),
            (t.prototype.getUniqueValueCount = function () {
              return this.allValues.length;
            }),
            (t.prototype.getUniqueValue = function (t) {
              return this.allValues[t];
            }),
            (t.prototype.getValues = function () {
              return this.allValues.slice();
            }),
            (t.prototype.selectAllMatchingMiniFilter = function (t) {
              var e = this;
              void 0 === t && (t = !1),
                null == this.miniFilterText
                  ? (this.selectedValues = i._.convertToSet(this.allValues))
                  : (t && this.selectedValues.clear(),
                    i._.forEach(this.displayedValues, function (t) {
                      return e.selectedValues.add(t);
                    }));
            }),
            (t.prototype.deselectAllMatchingMiniFilter = function () {
              var t = this;
              null == this.miniFilterText
                ? this.selectedValues.clear()
                : i._.forEach(this.displayedValues, function (e) {
                    return t.selectedValues.delete(e);
                  });
            }),
            (t.prototype.selectValue = function (t) {
              this.selectedValues.add(t);
            }),
            (t.prototype.deselectValue = function (t) {
              this.filterParams.excelMode &&
                this.isEverythingVisibleSelected() &&
                this.resetSelectionState(this.displayedValues),
                this.selectedValues.delete(t);
            }),
            (t.prototype.isValueSelected = function (t) {
              return this.selectedValues.has(t);
            }),
            (t.prototype.isEverythingVisibleSelected = function () {
              var t = this;
              return (
                i._.filter(this.displayedValues, function (e) {
                  return t.isValueSelected(e);
                }).length === this.displayedValues.length
              );
            }),
            (t.prototype.isNothingVisibleSelected = function () {
              var t = this;
              return (
                0 ===
                i._.filter(this.displayedValues, function (e) {
                  return t.isValueSelected(e);
                }).length
              );
            }),
            (t.prototype.getModel = function () {
              return this.hasSelections()
                ? i._.values(this.selectedValues)
                : null;
            }),
            (t.prototype.setModel = function (t) {
              var e = this;
              return this.allValuesPromise.then(function (o) {
                if (null == t) e.resetSelectionState(o || []);
                else {
                  e.selectedValues.clear();
                  var n = i._.convertToSet(o || []);
                  i._.forEach(t, function (t) {
                    n.has(t) && e.selectedValues.add(t);
                  });
                }
              });
            }),
            (t.prototype.resetSelectionState = function (t) {
              this.filterParams.defaultToNothingSelected
                ? this.selectedValues.clear()
                : (this.selectedValues = i._.convertToSet(t || []));
            }),
            (t.EVENT_AVAILABLE_VALUES_CHANGED = "availableValuesChanged"),
            t
          );
        })(),
        df = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        hf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ff = (function (t) {
          function e(o, n, r, i) {
            var s = t.call(this, e.TEMPLATE) || this;
            return (
              (s.value = o),
              (s.params = n),
              (s.translate = r),
              (s.isSelected = i),
              s
            );
          }
          return (
            df(e, t),
            (e.prototype.init = function () {
              var t = this;
              this.render(),
                this.eCheckbox.setValue(this.isSelected, !0),
                this.eCheckbox.onValueChange(function (o) {
                  var n = o || !1;
                  (t.isSelected = n),
                    t.dispatchEvent({
                      type: e.EVENT_SELECTION_CHANGED,
                      isSelected: n,
                    });
                });
            }),
            (e.prototype.toggleSelected = function () {
              (this.isSelected = !this.isSelected),
                this.eCheckbox.setValue(this.isSelected);
            }),
            (e.prototype.render = function () {
              var t = this.params.column,
                e = this.value,
                o = null;
              if (
                ("function" == typeof e
                  ? (e = e())
                  : (o = this.getFormattedValue(this.params, t, e)),
                this.params.showTooltips)
              ) {
                var n = i._.escapeString(null != o ? o : e);
                this.setTooltip(null == n ? void 0 : n);
              }
              var r = {
                value: e,
                valueFormatted: o,
                api: this.gridOptionsWrapper.getApi(),
                context: this.gridOptionsWrapper.getContext(),
              };
              this.renderCell(r);
            }),
            (e.prototype.getTooltipParams = function () {
              var e = t.prototype.getTooltipParams.call(this);
              return (
                (e.location = "setFilterValue"),
                (e.colDef = this.getComponentHolder()),
                e
              );
            }),
            (e.prototype.getFormattedValue = function (t, e, o) {
              return this.valueFormatterService.formatValue(
                e,
                null,
                null,
                o,
                t && t.valueFormatter,
                !1
              );
            }),
            (e.prototype.renderCell = function (t) {
              var e = this,
                o = this.userComponentFactory.newSetFilterCellRenderer(
                  this.params,
                  t
                );
              if (null != o)
                o.then(function (t) {
                  t &&
                    (e.eCheckbox.setLabel(t.getGui()),
                    e.addDestroyFunc(function () {
                      return e.destroyBean(t);
                    }));
                });
              else {
                var n = null == t.valueFormatted ? t.value : t.valueFormatted;
                this.eCheckbox.setLabel(
                  null == n ? this.translate("blanks") : n
                );
              }
            }),
            (e.prototype.getComponentHolder = function () {
              return this.params.column.getColDef();
            }),
            (e.EVENT_SELECTION_CHANGED = "selectionChanged"),
            (e.TEMPLATE =
              '\n        <div class="ag-set-filter-item">\n            <ag-checkbox ref="eCheckbox" class="ag-set-filter-item-checkbox"></ag-checkbox>\n        </div>'),
            hf(
              [i.Autowired("valueFormatterService")],
              e.prototype,
              "valueFormatterService",
              void 0
            ),
            hf(
              [i.Autowired("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            hf([i.RefSelector("eCheckbox")], e.prototype, "eCheckbox", void 0),
            hf([i.PostConstruct], e.prototype, "init", null),
            e
          );
        })(i.Component),
        gf = {
          loadingOoo: "Loading...",
          blanks: "(Blanks)",
          searchOoo: "Search...",
          selectAll: "(Select All)",
          selectAllSearchResults: "(Select All Search Results)",
          noMatches: "No matches.",
        },
        yf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        mf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        vf = (function (t) {
          function e() {
            var e = t.call(this, "setFilter") || this;
            return (
              (e.valueModel = null),
              (e.setFilterParams = null),
              (e.virtualList = null),
              (e.appliedModelValues = null),
              e
            );
          }
          return (
            yf(e, t),
            (e.prototype.updateUiVisibility = function () {}),
            (e.prototype.createBodyTemplate = function () {
              return (
                '\n            <div class="ag-set-filter">\n                <div ref="eFilterLoading" class="ag-filter-loading ag-hidden">' +
                this.translateForSetFilter("loadingOoo") +
                '</div>\n                <ag-input-text-field class="ag-mini-filter" ref="eMiniFilter"></ag-input-text-field>\n                <div ref="eFilterNoMatches" class="ag-filter-no-matches ag-hidden">' +
                this.translateForSetFilter("noMatches") +
                '</div>\n                <div ref="eSetFilterList" class="ag-set-filter-list" role="presentation"></div>\n            </div>'
              );
            }),
            (e.prototype.handleKeyDown = function (t) {
              if (!t.defaultPrevented)
                switch (t.which || t.keyCode) {
                  case i.KeyCode.SPACE:
                    this.handleKeySpace(t);
                    break;
                  case i.KeyCode.ENTER:
                    this.handleKeyEnter(t);
                }
            }),
            (e.prototype.handleKeySpace = function (t) {
              if (
                this.eSetFilterList.contains(document.activeElement) &&
                this.virtualList
              ) {
                var e = this.virtualList.getLastFocusedRow();
                if (null != e) {
                  var o = this.virtualList.getComponentAt(e);
                  o && (t.preventDefault(), o.toggleSelected());
                }
              }
            }),
            (e.prototype.handleKeyEnter = function (t) {
              this.setFilterParams &&
                this.setFilterParams.excelMode &&
                (t.preventDefault(),
                this.onBtApply(!1, !1, t),
                "mac" === this.setFilterParams.excelMode &&
                  this.eMiniFilter.getInputElement().select());
            }),
            (e.prototype.getCssIdentifier = function () {
              return "set-filter";
            }),
            (e.prototype.setModelAndRefresh = function (t) {
              var e = this;
              return this.valueModel
                ? this.valueModel.setModel(t).then(function () {
                    return e.refresh();
                  })
                : i.AgPromise.resolve();
            }),
            (e.prototype.resetUiToDefaults = function () {
              return this.setMiniFilter(null), this.setModelAndRefresh(null);
            }),
            (e.prototype.setModelIntoUi = function (t) {
              return (
                this.setMiniFilter(null),
                t instanceof Array &&
                  i._.doOnce(function () {
                    return console.warn(
                      "AG Grid: The Set Filter Model is no longer an array and models as arrays are deprecated. Please check the docs on what the set filter model looks like. Future versions of AG Grid will have the array version of the model removed."
                    );
                  }, "setFilter.modelAsArray"),
                this.setModelAndRefresh(
                  null == t ? null : t instanceof Array ? t : t.values
                )
              );
            }),
            (e.prototype.getModelFromUi = function () {
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              var t = this.valueModel.getModel();
              return t
                ? this.gridOptionsWrapper.isEnableOldSetFilterModel()
                  ? t
                  : { values: t, filterType: this.getFilterType() }
                : null;
            }),
            (e.prototype.getModel = function () {
              return t.prototype.getModel.call(this);
            }),
            (e.prototype.getFilterType = function () {
              return "set";
            }),
            (e.prototype.getValueModel = function () {
              return this.valueModel;
            }),
            (e.prototype.areModelsEqual = function (t, e) {
              return (
                (null == t && null == e) ||
                (null != t && null != e && i._.areEqual(t.values, e.values))
              );
            }),
            (e.prototype.setParams = function (e) {
              var o = this;
              this.applyExcelModeOptions(e),
                t.prototype.setParams.call(this, e),
                this.checkSetFilterDeprecatedParams(e),
                (this.setFilterParams = e),
                (this.valueModel = new cf(
                  e,
                  function (t) {
                    return o.showOrHideLoadingScreen(t);
                  },
                  this.valueFormatterService,
                  function (t) {
                    return o.translateForSetFilter(t);
                  }
                )),
                this.initialiseFilterBodyUi(),
                e.rowModel.getType() !==
                  i.Constants.ROW_MODEL_TYPE_CLIENT_SIDE ||
                  e.values ||
                  e.suppressSyncValuesAfterDataChange ||
                  this.addEventListenersForDataChanges();
            }),
            (e.prototype.applyExcelModeOptions = function (t) {
              "windows" === t.excelMode
                ? (t.buttons || (t.buttons = ["apply", "cancel"]),
                  null == t.closeOnApply && (t.closeOnApply = !0))
                : "mac" === t.excelMode &&
                  (t.buttons || (t.buttons = ["reset"]),
                  null == t.applyMiniFilterWhileTyping &&
                    (t.applyMiniFilterWhileTyping = !0),
                  null == t.debounceMs && (t.debounceMs = 500));
            }),
            (e.prototype.checkSetFilterDeprecatedParams = function (t) {
              t.syncValuesLikeExcel &&
                i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 22.x, the Set Filter param syncValuesLikeExcel is no longer used as this is the default behaviour. To turn this default behaviour off, use the param suppressSyncValuesAfterDataChange"
                  );
                }, "syncValuesLikeExcel deprecated"),
                t.selectAllOnMiniFilter &&
                  i._.doOnce(function () {
                    return console.warn(
                      "AG Grid: since version 22.x, the Set Filter param selectAllOnMiniFilter is no longer used as this is the default behaviour."
                    );
                  }, "selectAllOnMiniFilter deprecated"),
                t.suppressSyncValuesAfterDataChange &&
                  i._.doOnce(function () {
                    return console.warn(
                      "AG Grid: since version 23.1, the Set Filter param suppressSyncValuesAfterDataChange has been deprecated and will be removed in a future major release."
                    );
                  }, "suppressSyncValuesAfterDataChange deprecated"),
                t.suppressRemoveEntries &&
                  i._.doOnce(function () {
                    return console.warn(
                      "AG Grid: since version 23.1, the Set Filter param suppressRemoveEntries has been deprecated and will be removed in a future major release."
                    );
                  }, "suppressRemoveEntries deprecated");
            }),
            (e.prototype.addEventListenersForDataChanges = function () {
              var t = this;
              this.addManagedListener(
                this.eventService,
                i.Events.EVENT_ROW_DATA_UPDATED,
                function () {
                  return t.syncAfterDataChange();
                }
              ),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_CELL_VALUE_CHANGED,
                  function (e) {
                    t.setFilterParams &&
                      e.column === t.setFilterParams.column &&
                      t.syncAfterDataChange();
                  }
                );
            }),
            (e.prototype.syncAfterDataChange = function (t, e) {
              var o = this;
              if (
                (void 0 === t && (t = !0),
                void 0 === e && (e = !0),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              var n = i.AgPromise.resolve();
              return (
                t
                  ? (n = this.valueModel.refreshValues(e))
                  : e || (n = this.valueModel.setModel(null)),
                n.then(function () {
                  o.refresh(), o.onBtApply(!1, !0);
                })
              );
            }),
            (e.prototype.setLoading = function (t) {
              i._.doOnce(function () {
                return console.warn(
                  "AG Grid: since version 23.2, setLoading has been deprecated. The loading screen is displayed automatically when the set filter is retrieving values."
                );
              }, "setFilter.setLoading"),
                this.showOrHideLoadingScreen(t);
            }),
            (e.prototype.showOrHideLoadingScreen = function (t) {
              i._.setDisplayed(this.eFilterLoading, t);
            }),
            (e.prototype.initialiseFilterBodyUi = function () {
              this.initVirtualList(), this.initMiniFilter();
            }),
            (e.prototype.initVirtualList = function () {
              var t = this;
              if (!this.setFilterParams)
                throw new Error("Set filter params have not been provided.");
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              var e = (this.virtualList = this.createBean(
                  new i.VirtualList("filter")
                )),
                o = this.getRefElement("eSetFilterList");
              o && o.appendChild(e.getGui());
              var n,
                r = this.setFilterParams.cellHeight;
              null != r && e.setRowHeight(r),
                e.setComponentCreator(function (e) {
                  return t.createSetListItem(e);
                }),
                (n = this.setFilterParams.suppressSelectAll
                  ? new Cf(this.valueModel)
                  : new wf(this.valueModel, function () {
                      return t.isSelectAllSelected();
                    })),
                e.setModel(n);
            }),
            (e.prototype.getSelectAllLabel = function () {
              if (!this.setFilterParams)
                throw new Error("Set filter params have not been provided.");
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              var t =
                null != this.valueModel.getMiniFilter() &&
                this.setFilterParams.excelMode
                  ? "selectAllSearchResults"
                  : "selectAll";
              return this.translateForSetFilter(t);
            }),
            (e.prototype.createSetListItem = function (t) {
              var o,
                n = this;
              if (!this.setFilterParams)
                throw new Error("Set filter params have not been provided.");
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              return t === e.SELECT_ALL_VALUE
                ? ((o = this.createBean(
                    new ff(
                      function () {
                        return n.getSelectAllLabel();
                      },
                      this.setFilterParams,
                      function (t) {
                        return n.translateForSetFilter(t);
                      },
                      this.isSelectAllSelected()
                    )
                  )).addEventListener(ff.EVENT_SELECTION_CHANGED, function (t) {
                    return n.onSelectAll(t.isSelected);
                  }),
                  o)
                : ((o = this.createBean(
                    new ff(
                      t,
                      this.setFilterParams,
                      function (t) {
                        return n.translateForSetFilter(t);
                      },
                      this.valueModel.isValueSelected(t)
                    )
                  )).addEventListener(ff.EVENT_SELECTION_CHANGED, function (e) {
                    return n.onItemSelected(t, e.isSelected);
                  }),
                  o);
            }),
            (e.prototype.initMiniFilter = function () {
              var t = this;
              if (!this.setFilterParams)
                throw new Error("Set filter params have not been provided.");
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              var e = this.eMiniFilter,
                o = this.gridOptionsWrapper.getLocaleTextFunc();
              i._.setDisplayed(
                e.getGui(),
                !this.setFilterParams.suppressMiniFilter
              ),
                e.setValue(this.valueModel.getMiniFilter()),
                e.onValueChange(function () {
                  return t.onMiniFilterInput();
                }),
                e.setInputAriaLabel(
                  o("ariaSearchFilterValues", "Search filter values")
                ),
                this.addManagedListener(
                  e.getInputElement(),
                  "keypress",
                  function (e) {
                    return t.onMiniFilterKeyPress(e);
                  }
                );
            }),
            (e.prototype.afterGuiAttached = function (e) {
              if (!this.setFilterParams)
                throw new Error("Set filter params have not been provided.");
              t.prototype.afterGuiAttached.call(this, e),
                this.refreshVirtualList(),
                this.setFilterParams.excelMode && this.resetUiToActiveModel();
              var o = this.eMiniFilter;
              o.setInputPlaceholder(this.translateForSetFilter("searchOoo")),
                (e && e.suppressFocus) || o.getFocusableElement().focus();
            }),
            (e.prototype.applyModel = function () {
              if (!this.setFilterParams)
                throw new Error("Set filter params have not been provided.");
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              this.setFilterParams.excelMode &&
                this.valueModel.isEverythingVisibleSelected() &&
                this.valueModel.selectAllMatchingMiniFilter();
              var e = t.prototype.applyModel.call(this),
                o = this.getModel();
              return (
                (this.appliedModelValues = o
                  ? i._.reduce(
                      o.values,
                      function (t, e) {
                        return (t[String(e)] = !0), t;
                      },
                      {}
                    )
                  : null),
                e
              );
            }),
            (e.prototype.isModelValid = function (t) {
              return (
                !this.setFilterParams ||
                !this.setFilterParams.excelMode ||
                null == t ||
                t.values.length > 0
              );
            }),
            (e.prototype.doesFilterPass = function (t) {
              var e = this;
              if (
                !this.setFilterParams ||
                !this.valueModel ||
                !this.appliedModelValues
              )
                return !0;
              var o = this.setFilterParams,
                n = o.colDef.keyCreator,
                r = (0, o.valueGetter)(t.node);
              return (
                n && (r = n({ value: r })),
                (r = i._.makeNull(r)),
                Array.isArray(r)
                  ? i._.some(r, function (t) {
                      return !0 === e.appliedModelValues[i._.makeNull(t)];
                    })
                  : !0 === this.appliedModelValues[r]
              );
            }),
            (e.prototype.onNewRowsLoaded = function () {
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              var t = this.valueModel.getValuesType(),
                e = this.isNewRowsActionKeep();
              this.syncAfterDataChange(t === Jh.TAKEN_FROM_GRID_VALUES, e);
            }),
            (e.prototype.setFilterValues = function (t) {
              var e = this;
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              this.valueModel
                .overrideValues(t, this.isNewRowsActionKeep())
                .then(function () {
                  e.refresh(), e.onUiChanged();
                });
            }),
            (e.prototype.resetFilterValues = function () {
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              this.valueModel.setValuesType(Jh.TAKEN_FROM_GRID_VALUES),
                this.syncAfterDataChange(!0, this.isNewRowsActionKeep());
            }),
            (e.prototype.refreshFilterValues = function () {
              var t = this;
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              this.valueModel.isInitialised() &&
                this.valueModel.refreshValues().then(function () {
                  t.refresh(), t.onUiChanged();
                });
            }),
            (e.prototype.onAnyFilterChanged = function () {
              var t = this;
              setTimeout(function () {
                if (!t.valueModel)
                  throw new Error("Value model has not been created.");
                t.valueModel.refreshAfterAnyFilterChanged().then(function () {
                  return t.refresh();
                });
              }, 0);
            }),
            (e.prototype.onMiniFilterInput = function () {
              if (!this.setFilterParams)
                throw new Error("Set filter params have not been provided.");
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              this.valueModel.setMiniFilter(this.eMiniFilter.getValue()) &&
                (this.setFilterParams.applyMiniFilterWhileTyping
                  ? this.filterOnAllVisibleValues(!1)
                  : this.updateUiAfterMiniFilterChange());
            }),
            (e.prototype.updateUiAfterMiniFilterChange = function () {
              if (!this.setFilterParams)
                throw new Error("Set filter params have not been provided.");
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              this.setFilterParams.excelMode
                ? null == this.valueModel.getMiniFilter()
                  ? this.resetUiToActiveModel()
                  : (this.valueModel.selectAllMatchingMiniFilter(!0),
                    this.refresh(),
                    this.onUiChanged())
                : this.refresh(),
                this.showOrHideResults();
            }),
            (e.prototype.showOrHideResults = function () {
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              var t =
                null != this.valueModel.getMiniFilter() &&
                this.valueModel.getDisplayedValueCount() < 1;
              i._.setDisplayed(this.eNoMatches, t),
                i._.setDisplayed(this.eSetFilterList, !t);
            }),
            (e.prototype.resetUiToActiveModel = function () {
              var t = this;
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              this.eMiniFilter.setValue(null, !0),
                this.valueModel.setMiniFilter(null),
                this.setModelIntoUi(this.getModel()).then(function () {
                  return t.onUiChanged(!1, "prevent");
                });
            }),
            (e.prototype.onMiniFilterKeyPress = function (t) {
              !i._.isKeyPressed(t, i.KeyCode.ENTER) ||
                (this.setFilterParams && this.setFilterParams.excelMode) ||
                this.filterOnAllVisibleValues();
            }),
            (e.prototype.filterOnAllVisibleValues = function (t) {
              if ((void 0 === t && (t = !0), !this.valueModel))
                throw new Error("Value model has not been created.");
              this.valueModel.selectAllMatchingMiniFilter(!0),
                this.refresh(),
                this.onUiChanged(!1, t ? "immediately" : "debounce"),
                this.showOrHideResults();
            }),
            (e.prototype.focusRowIfAlive = function (t) {
              var e = this;
              null != t &&
                window.setTimeout(function () {
                  if (!e.virtualList)
                    throw new Error("Virtual list has not been created.");
                  e.isAlive() && e.virtualList.focusRow(t);
                }, 0);
            }),
            (e.prototype.onSelectAll = function (t) {
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              if (!this.virtualList)
                throw new Error("Virtual list has not been created.");
              t
                ? this.valueModel.selectAllMatchingMiniFilter()
                : this.valueModel.deselectAllMatchingMiniFilter();
              var e = this.virtualList.getLastFocusedRow();
              this.refresh(), this.onUiChanged(), this.focusRowIfAlive(e);
            }),
            (e.prototype.onItemSelected = function (t, e) {
              if (!this.valueModel)
                throw new Error("Value model has not been created.");
              if (!this.virtualList)
                throw new Error("Virtual list has not been created.");
              e
                ? this.valueModel.selectValue(t)
                : this.valueModel.deselectValue(t);
              var o = this.virtualList.getLastFocusedRow();
              this.refresh(), this.onUiChanged(), this.focusRowIfAlive(o);
            }),
            (e.prototype.setMiniFilter = function (t) {
              this.eMiniFilter.setValue(t), this.onMiniFilterInput();
            }),
            (e.prototype.getMiniFilter = function () {
              return this.valueModel ? this.valueModel.getMiniFilter() : null;
            }),
            (e.prototype.selectEverything = function () {
              if (
                (i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 23.2, selectEverything has been deprecated. Please use setModel instead."
                  );
                }, "setFilter.selectEverything"),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              this.valueModel.selectAllMatchingMiniFilter(), this.refresh();
            }),
            (e.prototype.selectNothing = function () {
              if (
                (i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 23.2, selectNothing has been deprecated. Please use setModel instead."
                  );
                }, "setFilter.selectNothing"),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              this.valueModel.deselectAllMatchingMiniFilter(), this.refresh();
            }),
            (e.prototype.unselectValue = function (t) {
              if (
                (i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 23.2, unselectValue has been deprecated. Please use setModel instead."
                  );
                }, "setFilter.unselectValue"),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              this.valueModel.deselectValue(t), this.refresh();
            }),
            (e.prototype.selectValue = function (t) {
              if (
                (i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 23.2, selectValue has been deprecated. Please use setModel instead."
                  );
                }, "setFilter.selectValue"),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              this.valueModel.selectValue(t), this.refresh();
            }),
            (e.prototype.refresh = function () {
              if (!this.virtualList)
                throw new Error("Virtual list has not been created.");
              this.virtualList.refresh();
            }),
            (e.prototype.isValueSelected = function (t) {
              if (
                (i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 23.2, isValueSelected has been deprecated. Please use getModel instead."
                  );
                }, "setFilter.isValueSelected"),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              return this.valueModel.isValueSelected(t);
            }),
            (e.prototype.isEverythingSelected = function () {
              if (
                (i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 23.2, isEverythingSelected has been deprecated. Please use getModel instead."
                  );
                }, "setFilter.isEverythingSelected"),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              return this.valueModel.isEverythingVisibleSelected();
            }),
            (e.prototype.isNothingSelected = function () {
              if (
                (i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 23.2, isNothingSelected has been deprecated. Please use getModel instead."
                  );
                }, "setFilter.isNothingSelected"),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              return this.valueModel.isNothingVisibleSelected();
            }),
            (e.prototype.getUniqueValueCount = function () {
              if (
                (i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 23.2, getUniqueValueCount has been deprecated. Please use getValues instead."
                  );
                }, "setFilter.getUniqueValueCount"),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              return this.valueModel.getUniqueValueCount();
            }),
            (e.prototype.getUniqueValue = function (t) {
              if (
                (i._.doOnce(function () {
                  return console.warn(
                    "AG Grid: since version 23.2, getUniqueValue has been deprecated. Please use getValues instead."
                  );
                }, "setFilter.getUniqueValue"),
                !this.valueModel)
              )
                throw new Error("Value model has not been created.");
              return this.valueModel.getUniqueValue(t);
            }),
            (e.prototype.getValues = function () {
              return this.valueModel ? this.valueModel.getValues() : [];
            }),
            (e.prototype.refreshVirtualList = function () {
              this.setFilterParams && this.setFilterParams.refreshValuesOnOpen
                ? this.refreshFilterValues()
                : this.refresh();
            }),
            (e.prototype.translateForSetFilter = function (t) {
              return this.gridOptionsWrapper.getLocaleTextFunc()(t, gf[t]);
            }),
            (e.prototype.isSelectAllSelected = function () {
              if (!this.setFilterParams || !this.valueModel) return !1;
              if (this.setFilterParams.defaultToNothingSelected) {
                if (
                  this.valueModel.hasSelections() &&
                  this.valueModel.isEverythingVisibleSelected()
                )
                  return !0;
                if (this.valueModel.isNothingVisibleSelected()) return !1;
              } else {
                if (
                  this.valueModel.hasSelections() &&
                  this.valueModel.isNothingVisibleSelected()
                )
                  return !1;
                if (this.valueModel.isEverythingVisibleSelected()) return !0;
              }
            }),
            (e.prototype.destroy = function () {
              null != this.virtualList &&
                (this.virtualList.destroy(), (this.virtualList = null)),
                t.prototype.destroy.call(this);
            }),
            (e.SELECT_ALL_VALUE = "__AG_SELECT_ALL__"),
            mf(
              [i.RefSelector("eMiniFilter")],
              e.prototype,
              "eMiniFilter",
              void 0
            ),
            mf(
              [i.RefSelector("eFilterLoading")],
              e.prototype,
              "eFilterLoading",
              void 0
            ),
            mf(
              [i.RefSelector("eSetFilterList")],
              e.prototype,
              "eSetFilterList",
              void 0
            ),
            mf(
              [i.RefSelector("eFilterNoMatches")],
              e.prototype,
              "eNoMatches",
              void 0
            ),
            mf(
              [i.Autowired("valueFormatterService")],
              e.prototype,
              "valueFormatterService",
              void 0
            ),
            e
          );
        })(i.ProvidedFilter),
        Cf = (function () {
          function t(t) {
            this.model = t;
          }
          return (
            (t.prototype.getRowCount = function () {
              return this.model.getDisplayedValueCount();
            }),
            (t.prototype.getRow = function (t) {
              return this.model.getDisplayedValue(t);
            }),
            (t.prototype.isRowSelected = function (t) {
              return this.model.isValueSelected(this.getRow(t));
            }),
            t
          );
        })(),
        wf = (function () {
          function t(t, e) {
            (this.model = t), (this.isSelectAllSelected = e);
          }
          return (
            (t.prototype.getRowCount = function () {
              return this.model.getDisplayedValueCount() + 1;
            }),
            (t.prototype.getRow = function (t) {
              return 0 === t
                ? vf.SELECT_ALL_VALUE
                : this.model.getDisplayedValue(t - 1);
            }),
            (t.prototype.isRowSelected = function (t) {
              return 0 === t
                ? this.isSelectAllSelected()
                : this.model.isValueSelected(this.getRow(t - 1));
            }),
            t
          );
        })(),
        bf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ef = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Sf = (function (t) {
          function e() {
            var e =
              t.call(
                this,
                '\n            <div class="ag-floating-filter-input" role="presentation">\n                <ag-input-text-field ref="eFloatingFilterText"></ag-input-text-field>\n            </div>'
              ) || this;
            return (e.availableValuesListenerAdded = !1), e;
          }
          return (
            bf(e, t),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.init = function (t) {
              var e = this.columnController.getDisplayNameForColumn(
                  t.column,
                  "header",
                  !0
                ),
                o = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eFloatingFilterText
                .setDisabled(!0)
                .setInputAriaLabel(
                  e + " " + o("ariaFilterInput", "Filter Input")
                )
                .addGuiEventListener("click", function () {
                  return t.showParentFilter();
                }),
                (this.params = t);
            }),
            (e.prototype.onParentModelChanged = function (t) {
              (this.lastKnownModel = t), this.updateFloatingFilterText();
            }),
            (e.prototype.addAvailableValuesListener = function () {
              var t = this;
              this.params.parentFilterInstance(function (e) {
                var o = e.getValueModel();
                o &&
                  t.addManagedListener(
                    o,
                    cf.EVENT_AVAILABLE_VALUES_CHANGED,
                    function () {
                      return t.updateFloatingFilterText();
                    }
                  );
              }),
                (this.availableValuesListenerAdded = !0);
            }),
            (e.prototype.updateFloatingFilterText = function () {
              var t = this;
              if (this.lastKnownModel) {
                this.availableValuesListenerAdded ||
                  this.addAvailableValuesListener();
                var e =
                  this.lastKnownModel instanceof Array
                    ? this.lastKnownModel
                    : this.lastKnownModel.values;
                e
                  ? this.params.parentFilterInstance(function (o) {
                      var n = o.getValueModel();
                      if (n) {
                        var r = i._.filter(e, function (t) {
                            return n.isValueAvailable(t);
                          }),
                          s = t.gridOptionsWrapper.getLocaleTextFunc(),
                          a = i._.map(r, function (e) {
                            var o = t.params,
                              n = t.valueFormatterService.formatValue(
                                o.column,
                                null,
                                null,
                                e,
                                o.filterParams.valueFormatter,
                                !1
                              ),
                              r = null != n ? n : e;
                            return null == r ? s("blanks", gf.blanks) : r;
                          }),
                          l = a.length > 10 ? a.slice(0, 10).concat("...") : a,
                          u = "(" + a.length + ") " + l.join(",");
                        t.eFloatingFilterText.setValue(u);
                      }
                    })
                  : this.eFloatingFilterText.setValue("");
              } else this.eFloatingFilterText.setValue("");
            }),
            Ef(
              [i.RefSelector("eFloatingFilterText")],
              e.prototype,
              "eFloatingFilterText",
              void 0
            ),
            Ef(
              [i.Autowired("valueFormatterService")],
              e.prototype,
              "valueFormatterService",
              void 0
            ),
            Ef(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            e
          );
        })(i.Component),
        Of = {
          moduleName: i.ModuleNames.SetFilterModule,
          beans: [],
          userComponents: [
            { componentName: "agSetColumnFilter", componentClass: vf },
            { componentName: "agSetColumnFloatingFilter", componentClass: Sf },
          ],
          dependantModules: [g],
        },
        _f = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Rf = (function (t) {
          function e() {
            var e = t.call(this) || this;
            return (e.allComponents = {}), e;
          }
          return (
            _f(e, t),
            (e.prototype.registerStatusPanel = function (t, e) {
              this.allComponents[t] = e;
            }),
            (e.prototype.getStatusPanel = function (t) {
              return this.allComponents[t];
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([i.Bean("statusBarService")], e)
          );
        })(i.BeanStub),
        Pf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Tf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Af = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            Pf(e, t),
            (e.prototype.postConstruct = function () {
              if (
                this.gridOptions.statusBar &&
                this.gridOptions.statusBar.statusPanels
              ) {
                var t = this.gridOptions.statusBar.statusPanels.filter(
                  function (t) {
                    return "left" === t.align;
                  }
                );
                this.createAndRenderComponents(t, this.eStatusBarLeft);
                var e = this.gridOptions.statusBar.statusPanels.filter(
                  function (t) {
                    return "center" === t.align;
                  }
                );
                this.createAndRenderComponents(e, this.eStatusBarCenter);
                var o = this.gridOptions.statusBar.statusPanels.filter(
                  function (t) {
                    return !t.align || "right" === t.align;
                  }
                );
                this.createAndRenderComponents(o, this.eStatusBarRight);
              } else this.setDisplayed(!1);
            }),
            (e.prototype.createAndRenderComponents = function (t, e) {
              var o = this,
                n = [];
              t.forEach(function (t) {
                var e = {
                    api: o.gridOptionsWrapper.getApi(),
                    columnApi: o.gridOptionsWrapper.getColumnApi(),
                    context: o.gridOptionsWrapper.getContext(),
                  },
                  r = o.userComponentFactory.newStatusPanelComponent(t, e);
                n.push({ key: t.key || t.statusPanel, promise: r });
              }),
                i.AgPromise.all(
                  n.map(function (t) {
                    return t.promise;
                  })
                ).then(function () {
                  n.forEach(function (t) {
                    t.promise.then(function (n) {
                      var r = function () {
                        o.getContext().destroyBean(n);
                      };
                      o.isAlive()
                        ? (o.statusBarService.registerStatusPanel(t.key, n),
                          e.appendChild(n.getGui()),
                          o.addDestroyFunc(r))
                        : r();
                    });
                  });
                });
            }),
            (e.TEMPLATE =
              '<div class="ag-status-bar">\n            <div ref="eStatusBarLeft" class="ag-status-bar-left"></div>\n            <div ref="eStatusBarCenter" class="ag-status-bar-center"></div>\n            <div ref="eStatusBarRight" class="ag-status-bar-right"></div>\n        </div>'),
            Tf(
              [i.Autowired("gridOptions")],
              e.prototype,
              "gridOptions",
              void 0
            ),
            Tf(
              [i.Autowired("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            Tf(
              [i.Autowired("statusBarService")],
              e.prototype,
              "statusBarService",
              void 0
            ),
            Tf(
              [i.RefSelector("eStatusBarLeft")],
              e.prototype,
              "eStatusBarLeft",
              void 0
            ),
            Tf(
              [i.RefSelector("eStatusBarCenter")],
              e.prototype,
              "eStatusBarCenter",
              void 0
            ),
            Tf(
              [i.RefSelector("eStatusBarRight")],
              e.prototype,
              "eStatusBarRight",
              void 0
            ),
            Tf([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        Df = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        xf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ff = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            Df(e, t),
            (e.prototype.setLabel = function (t, e) {
              this.setDisplayed(!1);
              var o = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eLabel.innerHTML = o(t, e);
            }),
            (e.prototype.setValue = function (t) {
              this.eValue.innerHTML = t;
            }),
            (e.TEMPLATE =
              '<div class="ag-status-name-value">\n            <span ref="eLabel"></span>:&nbsp;\n            <span ref="eValue" class="ag-status-name-value-value"></span>\n        </div>'),
            xf([i.RefSelector("eLabel")], e.prototype, "eLabel", void 0),
            xf([i.RefSelector("eValue")], e.prototype, "eValue", void 0),
            e
          );
        })(i.Component),
        Nf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Mf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        If = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Nf(e, t),
            (e.prototype.postConstruct = function () {
              "clientSide" === this.gridApi.getModel().getType()
                ? (this.setLabel("totalAndFilteredRows", "Rows"),
                  this.addCssClass("ag-status-panel"),
                  this.addCssClass(
                    "ag-status-panel-total-and-filtered-row-count"
                  ),
                  this.setDisplayed(!0),
                  this.addManagedListener(
                    this.eventService,
                    i.Events.EVENT_MODEL_UPDATED,
                    this.onDataChanged.bind(this)
                  ))
                : console.warn(
                    "AG Grid: agTotalAndFilteredRowCountComponent should only be used with the client side row model."
                  );
            }),
            (e.prototype.onDataChanged = function () {
              var t = i._.formatNumberCommas(this.getFilteredRowCountValue()),
                e = i._.formatNumberCommas(this.getTotalRowCount());
              if (t === e) this.setValue(t);
              else {
                var o = this.gridOptionsWrapper.getLocaleTextFunc();
                this.setValue(t + " " + o("of", "of") + " " + e);
              }
            }),
            (e.prototype.getFilteredRowCountValue = function () {
              var t = 0;
              return (
                this.gridApi.forEachNodeAfterFilter(function (e) {
                  e.group || t++;
                }),
                t
              );
            }),
            (e.prototype.getTotalRowCount = function () {
              var t = 0;
              return (
                this.gridApi.forEachNode(function (e) {
                  e.group || t++;
                }),
                t
              );
            }),
            (e.prototype.init = function () {}),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            Mf([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Mf([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(Ff),
        Lf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Gf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        kf = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Lf(e, t),
            (e.prototype.postConstruct = function () {
              if (
                (this.setLabel("filteredRows", "Filtered"),
                "clientSide" === this.gridApi.getModel().getType())
              ) {
                this.addCssClass("ag-status-panel"),
                  this.addCssClass("ag-status-panel-filtered-row-count"),
                  this.setDisplayed(!0);
                var t = this.onDataChanged.bind(this);
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_MODEL_UPDATED,
                  t
                );
              } else
                console.warn(
                  "AG Grid: agFilteredRowCountComponent should only be used with the client side row model."
                );
            }),
            (e.prototype.onDataChanged = function () {
              var t = this.getTotalRowCountValue(),
                e = this.getFilteredRowCountValue();
              this.setValue(i._.formatNumberCommas(e)),
                this.setDisplayed(t !== e);
            }),
            (e.prototype.getTotalRowCountValue = function () {
              var t = 0;
              return (
                this.gridApi.forEachNode(function (e) {
                  return (t += 1);
                }),
                t
              );
            }),
            (e.prototype.getFilteredRowCountValue = function () {
              var t = 0;
              return (
                this.gridApi.forEachNodeAfterFilter(function (e) {
                  e.group || (t += 1);
                }),
                t
              );
            }),
            (e.prototype.init = function () {}),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            Gf([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Gf([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(Ff),
        Vf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Wf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Hf = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Vf(e, t),
            (e.prototype.postConstruct = function () {
              this.setLabel("totalRows", "Total Rows"),
                "clientSide" === this.gridApi.getModel().getType()
                  ? (this.addCssClass("ag-status-panel"),
                    this.addCssClass("ag-status-panel-total-row-count"),
                    this.setDisplayed(!0),
                    this.addManagedListener(
                      this.eventService,
                      i.Events.EVENT_MODEL_UPDATED,
                      this.onDataChanged.bind(this)
                    ))
                  : console.warn(
                      "AG Grid: agTotalRowCountComponent should only be used with the client side row model."
                    );
            }),
            (e.prototype.onDataChanged = function () {
              this.setValue(i._.formatNumberCommas(this.getRowCountValue()));
            }),
            (e.prototype.getRowCountValue = function () {
              var t = 0;
              return (
                this.gridApi.forEachLeafNode(function (e) {
                  return (t += 1);
                }),
                t
              );
            }),
            (e.prototype.init = function () {}),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            Wf([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Wf([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(Ff),
        Bf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        jf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Uf = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Bf(e, t),
            (e.prototype.postConstruct = function () {
              if (this.isValidRowModel()) {
                this.setLabel("selectedRows", "Selected"),
                  this.addCssClass("ag-status-panel"),
                  this.addCssClass("ag-status-panel-selected-row-count");
                var t = this.gridApi.getSelectedRows().length;
                this.setValue(i._.formatNumberCommas(t)),
                  this.setDisplayed(t > 0);
                var e = this.onRowSelectionChanged.bind(this);
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_MODEL_UPDATED,
                  e
                ),
                  this.addManagedListener(
                    this.eventService,
                    i.Events.EVENT_SELECTION_CHANGED,
                    e
                  );
              } else
                console.warn(
                  "AG Grid: agSelectedRowCountComponent should only be used with the client and server side row model."
                );
            }),
            (e.prototype.isValidRowModel = function () {
              var t = this.gridApi.getModel().getType();
              return "clientSide" === t || "serverSide" === t;
            }),
            (e.prototype.onRowSelectionChanged = function () {
              var t = this.gridApi.getSelectedRows().length;
              this.setValue(i._.formatNumberCommas(t)),
                this.setDisplayed(t > 0);
            }),
            (e.prototype.init = function () {}),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            jf([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            jf([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(Ff),
        zf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Kf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Yf = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            zf(e, t),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.postConstruct = function () {
              this.isValidRowModel()
                ? (this.avgAggregationComp.setLabel("average", "Average"),
                  this.countAggregationComp.setLabel("count", "Count"),
                  this.minAggregationComp.setLabel("min", "Min"),
                  this.maxAggregationComp.setLabel("max", "Max"),
                  this.sumAggregationComp.setLabel("sum", "Sum"),
                  this.addManagedListener(
                    this.eventService,
                    i.Events.EVENT_RANGE_SELECTION_CHANGED,
                    this.onRangeSelectionChanged.bind(this)
                  ),
                  this.addManagedListener(
                    this.eventService,
                    i.Events.EVENT_MODEL_UPDATED,
                    this.onRangeSelectionChanged.bind(this)
                  ))
                : console.warn(
                    "AG Grid: agAggregationComponent should only be used with the client and server side row model."
                  );
            }),
            (e.prototype.isValidRowModel = function () {
              var t = this.gridApi.getModel().getType();
              return "clientSide" === t || "serverSide" === t;
            }),
            (e.prototype.init = function () {}),
            (e.prototype.setAggregationComponentValue = function (t, e, o) {
              var n = this.getAggregationValueComponent(t);
              i._.exists(n) &&
                n &&
                (n.setValue(i._.formatNumberTwoDecimalPlacesAndCommas(e)),
                n.setDisplayed(o));
            }),
            (e.prototype.getAggregationValueComponent = function (t) {
              var e = t + "AggregationComp",
                o = null,
                n =
                  i._.exists(this.gridOptions.statusBar) &&
                  this.gridOptions.statusBar
                    ? i._.find(
                        this.gridOptions.statusBar.statusPanels,
                        function (t) {
                          return "agAggregationComponent" === t.statusPanel;
                        }
                      )
                    : null;
              return (
                i._.exists(n) && n
                  ? (!i._.exists(n.statusPanelParams) ||
                      (i._.exists(n.statusPanelParams) &&
                        i._.exists(n.statusPanelParams.aggFuncs) &&
                        i._.exists(
                          i._.find(n.statusPanelParams.aggFuncs, function (e) {
                            return e === t;
                          })
                        ))) &&
                    (o = this[e])
                  : (o = this[e]),
                o
              );
            }),
            (e.prototype.onRangeSelectionChanged = function () {
              var t = this,
                e = this.rangeController
                  ? this.rangeController.getCellRanges()
                  : void 0,
                o = 0,
                n = 0,
                r = 0,
                s = null,
                a = null,
                l = {};
              e &&
                !i._.missingOrEmpty(e) &&
                e.forEach(function (e) {
                  for (
                    var u = t.rangeController.getRangeStartRow(e),
                      p = t.rangeController.getRangeEndRow(e);
                    !i._.missing(u) &&
                    u &&
                    !t.rowPositionUtils.before(p, u) &&
                    u &&
                    e.columns;

                  )
                    e.columns.forEach(function (e) {
                      if (null !== u) {
                        var p = t.cellPositionUtils.createId({
                          rowPinned: u.rowPinned,
                          column: e,
                          rowIndex: u.rowIndex,
                        });
                        if (!l[p]) {
                          l[p] = !0;
                          var c = t.rowRenderer.getRowNode(u);
                          if (!i._.missing(c)) {
                            var d = t.valueService.getValue(e, c);
                            i._.missing(d) ||
                              "" === d ||
                              (d.value && (d = d.value),
                              "string" == typeof d && (d = Number(d)),
                              "number" != typeof d ||
                                isNaN(d) ||
                                ((o += d),
                                (null === a || d > a) && (a = d),
                                (null === s || d < s) && (s = d),
                                r++),
                              n++);
                          }
                        }
                      }
                    }),
                      (u = t.cellNavigationService.getRowBelow(u));
                });
              var u = r > 1;
              this.setAggregationComponentValue("count", n, n > 1),
                this.setAggregationComponentValue("sum", o, u),
                this.setAggregationComponentValue("min", s, u),
                this.setAggregationComponentValue("max", a, u),
                this.setAggregationComponentValue("avg", o / r, u);
            }),
            (e.TEMPLATE =
              '<div class="ag-status-panel ag-status-panel-aggregations">\n            <ag-name-value ref="avgAggregationComp"></ag-name-value>\n            <ag-name-value ref="countAggregationComp"></ag-name-value>\n            <ag-name-value ref="minAggregationComp"></ag-name-value>\n            <ag-name-value ref="maxAggregationComp"></ag-name-value>\n            <ag-name-value ref="sumAggregationComp"></ag-name-value>\n        </div>'),
            Kf(
              [i.Optional("rangeController")],
              e.prototype,
              "rangeController",
              void 0
            ),
            Kf(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            Kf(
              [i.Autowired("cellNavigationService")],
              e.prototype,
              "cellNavigationService",
              void 0
            ),
            Kf(
              [i.Autowired("rowRenderer")],
              e.prototype,
              "rowRenderer",
              void 0
            ),
            Kf(
              [i.Autowired("gridOptions")],
              e.prototype,
              "gridOptions",
              void 0
            ),
            Kf([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Kf(
              [i.Autowired("cellPositionUtils")],
              e.prototype,
              "cellPositionUtils",
              void 0
            ),
            Kf(
              [i.Autowired("rowPositionUtils")],
              e.prototype,
              "rowPositionUtils",
              void 0
            ),
            Kf(
              [i.RefSelector("sumAggregationComp")],
              e.prototype,
              "sumAggregationComp",
              void 0
            ),
            Kf(
              [i.RefSelector("countAggregationComp")],
              e.prototype,
              "countAggregationComp",
              void 0
            ),
            Kf(
              [i.RefSelector("minAggregationComp")],
              e.prototype,
              "minAggregationComp",
              void 0
            ),
            Kf(
              [i.RefSelector("maxAggregationComp")],
              e.prototype,
              "maxAggregationComp",
              void 0
            ),
            Kf(
              [i.RefSelector("avgAggregationComp")],
              e.prototype,
              "avgAggregationComp",
              void 0
            ),
            Kf([i.PostConstruct], e.prototype, "postConstruct", null),
            e
          );
        })(i.Component),
        Xf = {
          moduleName: i.ModuleNames.StatusBarModule,
          beans: [Rf],
          agStackComponents: [
            { componentName: "AgStatusBar", componentClass: Af },
            { componentName: "AgNameValue", componentClass: Ff },
          ],
          userComponents: [
            { componentName: "agAggregationComponent", componentClass: Yf },
            {
              componentName: "agSelectedRowCountComponent",
              componentClass: Uf,
            },
            { componentName: "agTotalRowCountComponent", componentClass: Hf },
            {
              componentName: "agFilteredRowCountComponent",
              componentClass: kf,
            },
            {
              componentName: "agTotalAndFilteredRowCountComponent",
              componentClass: If,
            },
          ],
          dependantModules: [g],
        },
        qf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Qf = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Zf = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.firstRow = -1),
              (e.lastRow = -1),
              (e.rowCount = -1),
              (e.rowNodesByIndex = {}),
              e
            );
          }
          return (
            qf(e, t),
            (e.prototype.ensureRowHeightsValid = function (t, e, o, n) {
              return !1;
            }),
            (e.prototype.init = function () {
              (this.rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber()),
                this.addManagedListener(
                  this.eventService,
                  i.Events.EVENT_VIEWPORT_CHANGED,
                  this.onViewportChanged.bind(this)
                );
            }),
            (e.prototype.start = function () {
              this.gridOptionsWrapper.getViewportDatasource() &&
                this.setViewportDatasource(
                  this.gridOptionsWrapper.getViewportDatasource()
                );
            }),
            (e.prototype.isLastRowIndexKnown = function () {
              return !0;
            }),
            (e.prototype.destroyDatasource = function () {
              this.viewportDatasource &&
                (this.viewportDatasource.destroy &&
                  this.viewportDatasource.destroy(),
                this.rowRenderer.datasourceChanged(),
                (this.firstRow = -1),
                (this.lastRow = -1));
            }),
            (e.prototype.calculateFirstRow = function (t) {
              var e = this.gridOptionsWrapper.getViewportRowModelBufferSize(),
                o = this.gridOptionsWrapper.getViewportRowModelPageSize(),
                n = t - e;
              return n < 0 ? 0 : Math.floor(n / o) * o;
            }),
            (e.prototype.calculateLastRow = function (t) {
              if (-1 === t) return t;
              var e = this.gridOptionsWrapper.getViewportRowModelBufferSize(),
                o = this.gridOptionsWrapper.getViewportRowModelPageSize(),
                n = Math.ceil((t + e) / o) * o;
              return Math.min(n, this.rowCount - 1);
            }),
            (e.prototype.onViewportChanged = function (t) {
              var e = this.calculateFirstRow(t.firstRow),
                o = this.calculateLastRow(t.lastRow);
              (this.firstRow === e && this.lastRow === o) ||
                ((this.firstRow = e),
                (this.lastRow = o),
                this.purgeRowsNotInViewport(),
                this.viewportDatasource &&
                  this.viewportDatasource.setViewportRange(
                    this.firstRow,
                    this.lastRow
                  ));
            }),
            (e.prototype.purgeRowsNotInViewport = function () {
              var t = this;
              Object.keys(this.rowNodesByIndex).forEach(function (e) {
                var o = parseInt(e, 10);
                (o < t.firstRow || o > t.lastRow) &&
                  delete t.rowNodesByIndex[o];
              });
            }),
            (e.prototype.setViewportDatasource = function (t) {
              this.destroyDatasource(),
                (this.viewportDatasource = t),
                (this.rowCount = 0),
                t.init
                  ? t.init({
                      setRowCount: this.setRowCount.bind(this),
                      setRowData: this.setRowData.bind(this),
                      getRow: this.getRow.bind(this),
                    })
                  : console.warn("AG Grid: viewport is missing init method.");
            }),
            (e.prototype.getType = function () {
              return i.Constants.ROW_MODEL_TYPE_VIEWPORT;
            }),
            (e.prototype.getRow = function (t) {
              return (
                this.rowNodesByIndex[t] ||
                  (this.rowNodesByIndex[t] = this.createBlankRowNode(t)),
                this.rowNodesByIndex[t]
              );
            }),
            (e.prototype.getRowNode = function (t) {
              var e = null;
              return (
                this.forEachNode(function (o) {
                  o.id === t && (e = o);
                }),
                e
              );
            }),
            (e.prototype.getRowCount = function () {
              return this.rowCount;
            }),
            (e.prototype.getRowIndexAtPixel = function (t) {
              return 0 !== this.rowHeight ? Math.floor(t / this.rowHeight) : 0;
            }),
            (e.prototype.getRowBounds = function (t) {
              return { rowHeight: this.rowHeight, rowTop: this.rowHeight * t };
            }),
            (e.prototype.getTopLevelRowCount = function () {
              return this.getRowCount();
            }),
            (e.prototype.getTopLevelRowDisplayedIndex = function (t) {
              return t;
            }),
            (e.prototype.isEmpty = function () {
              return this.rowCount > 0;
            }),
            (e.prototype.isRowsToRender = function () {
              return this.rowCount > 0;
            }),
            (e.prototype.getNodesInRangeForSelection = function (t, e) {
              var o = i._.missing(t) ? 0 : t.rowIndex,
                n = e.rowIndex;
              if (
                o < this.firstRow ||
                o > this.lastRow ||
                n < this.firstRow ||
                n > this.lastRow
              )
                return [];
              for (
                var r = [], s = o <= n ? n : o, a = o <= n ? o : n;
                a <= s;
                a++
              )
                r.push(this.rowNodesByIndex[a]);
              return r;
            }),
            (e.prototype.forEachNode = function (t) {
              var e = this,
                o = 0;
              Object.keys(this.rowNodesByIndex).forEach(function (n) {
                var r = parseInt(n, 10);
                t(e.rowNodesByIndex[r], o), o++;
              });
            }),
            (e.prototype.setRowData = function (t) {
              var e = this;
              i._.iterateObject(t, function (t, o) {
                var n = parseInt(t, 10);
                if (n >= e.firstRow && n <= e.lastRow) {
                  var r = e.rowNodesByIndex[n];
                  i._.missing(r) &&
                    ((r = e.createBlankRowNode(n)), (e.rowNodesByIndex[n] = r)),
                    r.setDataAndId(o, n.toString());
                }
              });
            }),
            (e.prototype.createBlankRowNode = function (t) {
              var e = new i.RowNode();
              return (
                this.createBean(e),
                e.setRowHeight(this.rowHeight),
                e.setRowTop(this.rowHeight * t),
                e.setRowIndex(t),
                e
              );
            }),
            (e.prototype.setRowCount = function (t, e) {
              void 0 === e && (e = !1),
                t !== this.rowCount &&
                  ((this.rowCount = t),
                  this.eventService.dispatchEvent({
                    type: i.Events.EVENT_MODEL_UPDATED,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                    newData: !1,
                    newPage: !1,
                    keepRenderedRows: e,
                    animate: !1,
                  }));
            }),
            (e.prototype.isRowPresent = function (t) {
              return !1;
            }),
            Qf([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            Qf([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            Qf(
              [i.Autowired("rowRenderer")],
              e.prototype,
              "rowRenderer",
              void 0
            ),
            Qf([i.PostConstruct], e.prototype, "init", null),
            Qf([i.PreDestroy], e.prototype, "destroyDatasource", null),
            Qf([i.Bean("rowModel")], e)
          );
        })(i.BeanStub),
        $f = {
          moduleName: i.ModuleNames.ViewportRowModelModule,
          rowModels: { viewport: Zf },
          dependantModules: [g],
        },
        Jf = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        tg = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        eg = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Jf(e, t),
            (e.prototype.registerGridCore = function (t) {
              this.gridCore = t;
            }),
            (e.prototype.init = function () {
              (this.logger = this.loggerFactory.create("ClipboardService")),
                this.rowModel.getType() ===
                  i.Constants.ROW_MODEL_TYPE_CLIENT_SIDE &&
                  (this.clientSideRowModel = this.rowModel);
            }),
            (e.prototype.pasteFromClipboard = function () {
              var t = this;
              this.logger.log("pasteFromClipboard"),
                !this.gridOptionsWrapper.isSuppressClipboardApi() &&
                navigator.clipboard &&
                navigator.clipboard.readText
                  ? navigator.clipboard
                      .readText()
                      .then(this.processClipboardData.bind(this))
                      .catch(function (e) {
                        i._.doOnce(function () {
                          console.warn(e),
                            console.warn(
                              "AG Grid: Unable to use the Clipboard API (navigator.clipboard.readText()). The reason why it could not be used has been logged in the previous line. For this reason the grid has defaulted to using a workaround which doesn't perform as well. Either fix why Clipboard API is blocked, OR stop this message from appearing by setting grid property suppressClipboardApi=true (which will default the grid to using the workaround rather than the API"
                            );
                        }, "clipboardApiError"),
                          t.pasteFromClipboardLegacy();
                      })
                  : this.pasteFromClipboardLegacy();
            }),
            (e.prototype.pasteFromClipboardLegacy = function () {
              var t = this;
              this.executeOnTempElement(
                function (t) {
                  return t.focus({ preventScroll: !0 });
                },
                function (e) {
                  t.processClipboardData(e.value);
                }
              );
            }),
            (e.prototype.processClipboardData = function (t) {
              var e = this;
              if (null != t) {
                var o = i._.stringToArray(
                    t,
                    this.gridOptionsWrapper.getClipboardDeliminator()
                  ),
                  n = this.gridOptionsWrapper.getProcessDataFromClipboardFunc();
                n && (o = n({ data: o })),
                  null != o &&
                    (this.gridOptionsWrapper.isSuppressLastEmptyLineOnPaste() &&
                      this.removeLastLineIfBlank(o),
                    this.doPasteOperation(function (t, n, r, i) {
                      e.rangeController &&
                      e.rangeController.isMoreThanOneCell() &&
                      !e.hasOnlyOneValueToPaste(o)
                        ? e.pasteIntoActiveRange(o, t, n, i)
                        : e.pasteStartingFromFocusedCell(o, t, n, r, i);
                    }));
              }
            }),
            (e.prototype.doPasteOperation = function (t) {
              var e,
                o = this.gridOptionsWrapper.getApi(),
                n = this.gridOptionsWrapper.getColumnApi(),
                r = "clipboard";
              if (
                (this.eventService.dispatchEvent({
                  type: i.Events.EVENT_PASTE_START,
                  api: o,
                  columnApi: n,
                  source: r,
                }),
                this.clientSideRowModel)
              ) {
                var s = this.gridOptionsWrapper.isAggregateOnlyChangedColumns();
                e = new i.ChangedPath(s, this.clientSideRowModel.getRootNode());
              }
              var a = {},
                l = [],
                u = this.focusController.getFocusedCell();
              t(a, l, u, e),
                e && this.clientSideRowModel.doAggregate(e),
                this.rowRenderer.refreshCells(),
                this.dispatchFlashCells(a),
                this.fireRowChanged(l),
                u &&
                  this.focusController.setFocusedCell(
                    u.rowIndex,
                    u.column,
                    u.rowPinned,
                    !0
                  ),
                this.eventService.dispatchEvent({
                  type: i.Events.EVENT_PASTE_END,
                  api: o,
                  columnApi: n,
                  source: r,
                });
            }),
            (e.prototype.pasteIntoActiveRange = function (t, e, o, n) {
              var r = this,
                s = this.getRangeSize() % t.length != 0,
                a = 0,
                l = 0;
              this.iterateActiveRanges(!1, function (u, p, c, d) {
                if (d - a >= t.length) {
                  if (s) return;
                  (a += l), (l = 0);
                }
                var h = t[d - a];
                o.push(p);
                var f = r.gridOptionsWrapper.getProcessCellFromClipboardFunc();
                c.forEach(function (t, o) {
                  if (t.isCellEditable(p) && !t.isSuppressPaste(p)) {
                    o >= h.length && (o %= h.length);
                    var s = r.processCell(
                      p,
                      t,
                      h[o],
                      i.Constants.EXPORT_TYPE_DRAG_COPY,
                      f
                    );
                    r.valueService.setValue(p, t, s, i.Constants.SOURCE_PASTE),
                      n && n.addParentNode(p.parent, [t]);
                    var a = r.cellPositionUtils.createIdFromValues(
                      u.rowIndex,
                      t,
                      u.rowPinned
                    );
                    e[a] = !0;
                  }
                }),
                  l++;
              });
            }),
            (e.prototype.pasteStartingFromFocusedCell = function (
              t,
              e,
              o,
              n,
              r
            ) {
              if (n) {
                var s = { rowIndex: n.rowIndex, rowPinned: n.rowPinned },
                  a = this.columnController.getDisplayedColumnsStartingAt(
                    n.column
                  );
                this.isPasteSingleValueIntoRange(t)
                  ? this.pasteSingleValueIntoRange(t, o, e, r)
                  : this.pasteMultipleValues(
                      t,
                      s,
                      o,
                      a,
                      e,
                      i.Constants.EXPORT_TYPE_CLIPBOARD,
                      r
                    );
              }
            }),
            (e.prototype.isPasteSingleValueIntoRange = function (t) {
              return (
                this.hasOnlyOneValueToPaste(t) &&
                null != this.rangeController &&
                !this.rangeController.isEmpty()
              );
            }),
            (e.prototype.pasteSingleValueIntoRange = function (t, e, o, n) {
              var r = this,
                s = t[0][0];
              this.iterateActiveRanges(!1, function (t, a, l) {
                e.push(a),
                  l.forEach(function (e) {
                    return r.updateCellValue(
                      a,
                      e,
                      s,
                      t,
                      o,
                      i.Constants.EXPORT_TYPE_CLIPBOARD,
                      n
                    );
                  });
              });
            }),
            (e.prototype.hasOnlyOneValueToPaste = function (t) {
              return 1 === t.length && 1 === t[0].length;
            }),
            (e.prototype.copyRangeDown = function () {
              var t = this;
              if (this.rangeController && !this.rangeController.isEmpty()) {
                var e = [];
                this.doPasteOperation(function (o, n, r, s) {
                  var a = t.gridOptionsWrapper.getProcessCellForClipboardFunc(),
                    l = t.gridOptionsWrapper.getProcessCellFromClipboardFunc();
                  t.iterateActiveRanges(!0, function (r, u, p) {
                    e.length
                      ? (n.push(u),
                        p.forEach(function (n, a) {
                          if (n.isCellEditable(u) && !n.isSuppressPaste(u)) {
                            var p = t.processCell(
                              u,
                              n,
                              e[a],
                              i.Constants.EXPORT_TYPE_DRAG_COPY,
                              l
                            );
                            t.valueService.setValue(
                              u,
                              n,
                              p,
                              i.Constants.SOURCE_PASTE
                            ),
                              s && s.addParentNode(u.parent, [n]);
                            var c = t.cellPositionUtils.createIdFromValues(
                              r.rowIndex,
                              n,
                              r.rowPinned
                            );
                            o[c] = !0;
                          }
                        }))
                      : p.forEach(function (o) {
                          var n = t.processCell(
                            u,
                            o,
                            t.valueService.getValue(o, u),
                            i.Constants.EXPORT_TYPE_DRAG_COPY,
                            a
                          );
                          e.push(n);
                        });
                  });
                });
              }
            }),
            (e.prototype.removeLastLineIfBlank = function (t) {
              var e = i._.last(t);
              e && 1 === e.length && "" === e[0] && i._.removeFromArray(t, e);
            }),
            (e.prototype.fireRowChanged = function (t) {
              var e = this;
              this.gridOptionsWrapper.isFullRowEdit() &&
                t.forEach(function (t) {
                  var o = {
                    type: i.Events.EVENT_ROW_VALUE_CHANGED,
                    node: t,
                    data: t.data,
                    rowIndex: t.rowIndex,
                    rowPinned: t.rowPinned,
                    context: e.gridOptionsWrapper.getContext(),
                    api: e.gridOptionsWrapper.getApi(),
                    columnApi: e.gridOptionsWrapper.getColumnApi(),
                  };
                  e.eventService.dispatchEvent(o);
                });
            }),
            (e.prototype.pasteMultipleValues = function (t, e, o, n, r, i, s) {
              var a = this,
                l = e;
              return (
                t.forEach(function (t) {
                  if (l) {
                    var e = a.rowPositionUtils.getRowNode(l);
                    e &&
                      (o.push(e),
                      t.forEach(function (t, o) {
                        return a.updateCellValue(e, n[o], t, l, r, i, s);
                      }),
                      (l = a.cellNavigationService.getRowBelow({
                        rowPinned: l.rowPinned,
                        rowIndex: l.rowIndex,
                      })));
                  }
                }),
                l
              );
            }),
            (e.prototype.updateCellValue = function (t, e, o, n, r, s, a) {
              if (t && n && e && e.isCellEditable(t) && !e.isSuppressPaste(t)) {
                var l = this.processCell(
                  t,
                  e,
                  o,
                  s,
                  this.gridOptionsWrapper.getProcessCellFromClipboardFunc()
                );
                this.valueService.setValue(t, e, l, i.Constants.SOURCE_PASTE),
                  (r[
                    this.cellPositionUtils.createIdFromValues(
                      n.rowIndex,
                      e,
                      n.rowPinned
                    )
                  ] = !0),
                  a && a.addParentNode(t.parent, [e]);
              }
            }),
            (e.prototype.copyToClipboard = function (t) {
              this.logger.log("copyToClipboard: includeHeaders = " + t),
                null == t &&
                  (t = this.gridOptionsWrapper.isCopyHeadersToClipboard());
              var e =
                !this.selectionController.isEmpty() &&
                !this.gridOptionsWrapper.isSuppressCopyRowsToClipboard();
              this.rangeController && this.rangeController.isMoreThanOneCell()
                ? this.copySelectedRangeToClipboard(t)
                : e
                ? this.copySelectedRowsToClipboard(t)
                : this.focusController.isAnyCellFocused()
                ? this.copyFocusedCellToClipboard(t)
                : this.copySelectedRangeToClipboard(t);
            }),
            (e.prototype.iterateActiveRanges = function (t, e, o) {
              var n = this;
              if (this.rangeController && !this.rangeController.isEmpty()) {
                var r = this.rangeController.getCellRanges();
                t
                  ? this.iterateActiveRange(r[0], e, o, !0)
                  : r.forEach(function (t, i) {
                      return n.iterateActiveRange(t, e, o, i === r.length - 1);
                    });
              }
            }),
            (e.prototype.iterateActiveRange = function (t, e, o, n) {
              if (this.rangeController) {
                var r = this.rangeController.getRangeStartRow(t),
                  i = this.rangeController.getRangeEndRow(t);
                o && t.columns && o(t.columns);
                for (var s = 0, a = !1; !a && null != r; ) {
                  var l = this.rowPositionUtils.getRowNode(r);
                  (a = this.rowPositionUtils.sameRow(r, i)),
                    e(r, l, t.columns, s++, a && n),
                    (r = this.cellNavigationService.getRowBelow(r));
                }
              }
            }),
            (e.prototype.copySelectedRangeToClipboard = function (t) {
              var e = this;
              if (
                (void 0 === t && (t = !1),
                this.rangeController && !this.rangeController.isEmpty())
              ) {
                var o = this.gridOptionsWrapper.getClipboardDeliminator(),
                  n = "",
                  r = {};
                this.iterateActiveRanges(
                  !1,
                  function (t, s, a, l, u) {
                    var p =
                      e.gridOptionsWrapper.getProcessCellForClipboardFunc();
                    a.forEach(function (a, l) {
                      var u = e.valueService.getValue(a, s),
                        c = e.processCell(
                          s,
                          a,
                          u,
                          i.Constants.EXPORT_TYPE_CLIPBOARD,
                          p
                        );
                      0 != l && (n += o), i._.exists(c) && (n += c);
                      var d = e.cellPositionUtils.createIdFromValues(
                        t.rowIndex,
                        a,
                        t.rowPinned
                      );
                      r[d] = !0;
                    }),
                      u || (n += "\r\n");
                  },
                  function (r) {
                    if (t) {
                      var i =
                          e.gridOptionsWrapper.getProcessHeaderForClipboardFunc(),
                        s = r.map(function (t) {
                          var o = e.columnController.getDisplayNameForColumn(
                            t,
                            "clipboard",
                            !0
                          );
                          return e.processHeader(t, o, i) || "";
                        });
                      n += s.join(o) + "\r\n";
                    }
                  }
                ),
                  this.copyDataToClipboard(n),
                  this.dispatchFlashCells(r);
              }
            }),
            (e.prototype.copyFocusedCellToClipboard = function (t) {
              var e;
              void 0 === t && (t = !1);
              var o = this.focusController.getFocusedCell();
              if (null != o) {
                var n,
                  r = this.cellPositionUtils.createId(o),
                  s = this.rowPositionUtils.getRowNode({
                    rowPinned: o.rowPinned,
                    rowIndex: o.rowIndex,
                  }),
                  a = o.column,
                  l = this.valueService.getValue(a, s),
                  u = this.processCell(
                    s,
                    a,
                    l,
                    i.Constants.EXPORT_TYPE_CLIPBOARD,
                    this.gridOptionsWrapper.getProcessCellForClipboardFunc()
                  );
                if (((u = i._.missing(u) ? "" : u.toString()), t)) {
                  var p = this.columnController.getDisplayNameForColumn(
                    a,
                    "clipboard",
                    !0
                  );
                  n =
                    this.processHeader(
                      a,
                      p,
                      this.gridOptionsWrapper.getProcessHeaderForClipboardFunc()
                    ) +
                    "\r\n" +
                    u;
                } else n = u;
                this.copyDataToClipboard(n),
                  this.dispatchFlashCells((((e = {})[r] = !0), e));
              }
            }),
            (e.prototype.dispatchFlashCells = function (t) {
              var e = this;
              window.setTimeout(function () {
                e.eventService.dispatchEvent({
                  type: i.Events.EVENT_FLASH_CELLS,
                  cells: t,
                  api: e.gridApi,
                  columnApi: e.columnApi,
                });
              }, 0);
            }),
            (e.prototype.processCell = function (t, e, o, n, r) {
              return r
                ? r({
                    column: e,
                    node: t,
                    value: o,
                    api: this.gridOptionsWrapper.getApi(),
                    columnApi: this.gridOptionsWrapper.getColumnApi(),
                    context: this.gridOptionsWrapper.getContext(),
                    type: n,
                  })
                : o;
            }),
            (e.prototype.processHeader = function (t, e, o) {
              return o
                ? o({
                    column: t,
                    api: this.gridOptionsWrapper.getApi(),
                    columnApi: this.gridOptionsWrapper.getColumnApi(),
                    context: this.gridOptionsWrapper.getContext(),
                  })
                : e;
            }),
            (e.prototype.copySelectedRowsToClipboard = function (t, e) {
              void 0 === t && (t = !1);
              var o = {
                  columnKeys: e,
                  skipHeader: !t,
                  skipFooters: !0,
                  suppressQuotes: !0,
                  columnSeparator:
                    this.gridOptionsWrapper.getClipboardDeliminator(),
                  onlySelected: !0,
                  processCellCallback:
                    this.gridOptionsWrapper.getProcessCellForClipboardFunc(),
                  processHeaderCallback:
                    this.gridOptionsWrapper.getProcessHeaderForClipboardFunc(),
                },
                n = this.csvCreator.getDataAsCsv(o);
              this.copyDataToClipboard(n);
            }),
            (e.prototype.copyDataToClipboard = function (t) {
              var e = this,
                o = this.gridOptionsWrapper.getSendToClipboardFunc();
              o
                ? o({ data: t })
                : !this.gridOptionsWrapper.isSuppressClipboardApi() &&
                  navigator.clipboard
                ? navigator.clipboard.writeText(t).catch(function (o) {
                    i._.doOnce(function () {
                      console.warn(o),
                        console.warn(
                          "AG Grid: Unable to use the Clipboard API (navigator.clipboard.writeText()). The reason why it could not be used has been logged in the previous line. For this reason the grid has defaulted to using a workaround which doesn't perform as well. Either fix why Clipboard API is blocked, OR stop this message from appearing by setting grid property suppressClipboardApi=true (which will default the grid to using the workaround rather than the API."
                        );
                    }, "clipboardApiError"),
                      e.copyDataToClipboardLegacy(t);
                  })
                : this.copyDataToClipboardLegacy(t);
            }),
            (e.prototype.copyDataToClipboardLegacy = function (t) {
              var e = this;
              this.executeOnTempElement(function (o) {
                var n = e.gridOptionsWrapper.getDocument().activeElement;
                (o.value = t || " "),
                  o.select(),
                  o.focus({ preventScroll: !0 }),
                  document.execCommand("copy") ||
                    console.warn(
                      "ag-grid: Browser did not allow document.execCommand('copy'). Ensure api.copySelectedRowsToClipboard() is invoked via a user event, i.e. button click, otherwise the browser will prevent it for security reasons."
                    ),
                  null != n &&
                    null != n.focus &&
                    n.focus({ preventScroll: !0 });
              });
            }),
            (e.prototype.executeOnTempElement = function (t, e) {
              var o = this.gridOptionsWrapper.getDocument(),
                n = o.createElement("textarea");
              (n.style.width = "1px"),
                (n.style.height = "1px"),
                (n.style.top = o.documentElement.scrollTop + "px"),
                (n.style.left = o.documentElement.scrollLeft + "px"),
                (n.style.position = "absolute"),
                (n.style.opacity = "0");
              var r = this.gridCore.getRootGui();
              r.appendChild(n);
              try {
                t(n);
              } catch (i) {
                console.warn(
                  "ag-grid: Browser does not support document.execCommand('copy') for clipboard operations"
                );
              }
              e
                ? window.setTimeout(function () {
                    e(n), r.removeChild(n);
                  }, 100)
                : r.removeChild(n);
            }),
            (e.prototype.getRangeSize = function () {
              var t = this.rangeController.getCellRanges(),
                e = 0,
                o = 0;
              return (
                t.length > 0 &&
                  ((e = this.rangeController.getRangeStartRow(t[0]).rowIndex),
                  (o = this.rangeController.getRangeEndRow(t[0]).rowIndex)),
                e - o + 1
              );
            }),
            tg([i.Autowired("csvCreator")], e.prototype, "csvCreator", void 0),
            tg(
              [i.Autowired("loggerFactory")],
              e.prototype,
              "loggerFactory",
              void 0
            ),
            tg(
              [i.Autowired("selectionController")],
              e.prototype,
              "selectionController",
              void 0
            ),
            tg(
              [i.Optional("rangeController")],
              e.prototype,
              "rangeController",
              void 0
            ),
            tg([i.Autowired("rowModel")], e.prototype, "rowModel", void 0),
            tg(
              [i.Autowired("valueService")],
              e.prototype,
              "valueService",
              void 0
            ),
            tg(
              [i.Autowired("focusController")],
              e.prototype,
              "focusController",
              void 0
            ),
            tg(
              [i.Autowired("rowRenderer")],
              e.prototype,
              "rowRenderer",
              void 0
            ),
            tg(
              [i.Autowired("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            tg(
              [i.Autowired("cellNavigationService")],
              e.prototype,
              "cellNavigationService",
              void 0
            ),
            tg([i.Autowired("columnApi")], e.prototype, "columnApi", void 0),
            tg([i.Autowired("gridApi")], e.prototype, "gridApi", void 0),
            tg(
              [i.Autowired("cellPositionUtils")],
              e.prototype,
              "cellPositionUtils",
              void 0
            ),
            tg(
              [i.Autowired("rowPositionUtils")],
              e.prototype,
              "rowPositionUtils",
              void 0
            ),
            tg([i.PostConstruct], e.prototype, "init", null),
            tg([i.Bean("clipboardService")], e)
          );
        })(i.BeanStub),
        og = {
          moduleName: i.ModuleNames.ClipboardModule,
          beans: [eg],
          dependantModules: [g, yo],
        };
      i.ModuleRegistry.register(oe, !1),
        i.ModuleRegistry.register(_o, !1),
        i.ModuleRegistry.register(Bo, !1),
        i.ModuleRegistry.register(Vd, !1),
        i.ModuleRegistry.register(jd, !1),
        i.ModuleRegistry.register(ph, !1),
        i.ModuleRegistry.register(vh, !1),
        i.ModuleRegistry.register(kd, !1),
        i.ModuleRegistry.register(Oh, !1),
        i.ModuleRegistry.register(Pt, !1),
        i.ModuleRegistry.register(uf, !1),
        i.ModuleRegistry.register(Of, !1),
        i.ModuleRegistry.register(Jt, !1),
        i.ModuleRegistry.register(Xf, !1),
        i.ModuleRegistry.register($f, !1),
        i.ModuleRegistry.register(og, !1),
        Object.defineProperty(e, "VirtualList", {
          enumerable: !0,
          get: function () {
            return i.VirtualList;
          },
        }),
        (e.LicenseManager = l),
        (e.SetFilter = vf);
    },
    f7ga: function (t, e, o) {
      "use strict";
      function n(t) {
        return null == t || "" === t ? null : t;
      }
      function r(t, e) {
        return void 0 === e && (e = !1), null != t && ("" !== t || e);
      }
      function i(t) {
        return !r(t);
      }
      function s(t) {
        return null == t || 0 === t.length;
      }
      function a(t) {
        return null != t && "function" == typeof t.toString
          ? t.toString()
          : null;
      }
      function l(t) {
        if (void 0 !== t) {
          if (null === t || "" === t) return null;
          if ("number" == typeof t) return isNaN(t) ? void 0 : t;
          var e = parseInt(t, 10);
          return isNaN(e) ? void 0 : e;
        }
      }
      function u(t) {
        if (void 0 !== t)
          return (
            null !== t &&
            "" !== t &&
            ("boolean" == typeof t ? t : /true/i.test(t))
          );
      }
      function p(t, e, o) {
        void 0 === o && (o = !1);
        var n = null == t,
          r = null == e;
        if (
          (t && t.toNumber && (t = t.toNumber()),
          e && e.toNumber && (e = e.toNumber()),
          n && r)
        )
          return 0;
        if (n) return -1;
        if (r) return 1;
        function i(t, e) {
          return t > e ? 1 : t < e ? -1 : 0;
        }
        if ("string" != typeof t) return i(t, e);
        if (!o) return i(t, e);
        try {
          return t.localeCompare(e);
        } catch (s) {
          return i(t, e);
        }
      }
      function c(t, e, o) {
        if (null == t) return null;
        if (!Array.isArray(t)) return c(d(t), e, o);
        for (var n = t, r = null, i = 0; i < n.length; i++) {
          var s = n[i];
          if ("string" == typeof e) {
            if (s[e] === o) {
              r = s;
              break;
            }
          } else if (e(s)) {
            r = s;
            break;
          }
        }
        return r;
      }
      function d(t) {
        if (t instanceof Set || t instanceof Map) {
          var e = [];
          return (
            t.forEach(function (t) {
              return e.push(t);
            }),
            e
          );
        }
        return Object.keys(t).map(function (e) {
          return t[e];
        });
      }
      Object.defineProperty(e, "__esModule", { value: !0 });
      var h = Object.freeze({
          __proto__: null,
          makeNull: n,
          exists: r,
          missing: i,
          missingOrEmpty: s,
          toStringOrNull: a,
          attrToNumber: l,
          attrToBoolean: u,
          attrToString: function (t) {
            if (null != t && "" !== t) return t;
          },
          referenceCompare: function (t, e) {
            return (
              (null == t && null == e) ||
              ((null != t || null == e) && (null == t || null != e) && t === e)
            );
          },
          jsonEquals: function (t, e) {
            return (
              (t ? JSON.stringify(t) : null) === (e ? JSON.stringify(e) : null)
            );
          },
          defaultComparator: p,
          find: c,
          values: d,
        }),
        f = (function () {
          function t() {
            this.existingKeys = {};
          }
          return (
            (t.prototype.addExistingKeys = function (t) {
              for (var e = 0; e < t.length; e++) this.existingKeys[t[e]] = !0;
            }),
            (t.prototype.getUniqueKey = function (t, e) {
              t = a(t);
              for (var o = 0; ; ) {
                var n = void 0;
                if (
                  (t
                    ? ((n = t), 0 !== o && (n += "_" + o))
                    : e
                    ? ((n = e), 0 !== o && (n += "_" + o))
                    : (n = "" + o),
                  !this.existingKeys[n])
                )
                  return (this.existingKeys[n] = !0), n;
                o++;
              }
            }),
            t
          );
        })();
      function g() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        for (var o = 0; o < t.length; o++) {
          var n = t[o];
          if (r(n)) return n;
        }
        return null;
      }
      function y(t) {
        if (t && t.length) return t[t.length - 1];
      }
      function m(t, e, o) {
        return (
          (null == t && null == e) ||
          (null != t &&
            null != e &&
            t.length === e.length &&
            R(t, function (t, n) {
              return o ? o(t, e[n]) : e[n] === t;
            }))
        );
      }
      function v(t) {
        return t.sort(function (t, e) {
          return t - e;
        });
      }
      function C(t, e) {
        var o = t.indexOf(e);
        o >= 0 && t.splice(o, 1);
      }
      function w(t, e) {
        T(e, function (e) {
          return C(t, e);
        });
      }
      function b(t, e, o) {
        t.splice(o, 0, e);
      }
      function E(t, e, o) {
        w(t, e),
          T(e.slice().reverse(), function (e) {
            return b(t, e, o);
          });
      }
      function S(t, e) {
        return t.indexOf(e) > -1;
      }
      function O(t, e) {
        null != e &&
          null != t &&
          T(e, function (e) {
            return t.push(e);
          });
      }
      function _(t, e) {
        for (var o = 0; o < t.length; o++) if (e(t[o], o, t)) return o;
        return -1;
      }
      function R(t, e) {
        if (null == t) return !0;
        for (var o = 0; o < t.length; o++) if (!e(t[o], o)) return !1;
        return !0;
      }
      function P(t, e) {
        if (null == t) return !1;
        for (var o = 0; o < t.length; o++) if (e(t[o], o)) return !0;
        return !1;
      }
      function T(t, e) {
        if (null != t) for (var o = 0; o < t.length; o++) e(t[o], o);
      }
      function A(t, e) {
        if (null == t) return null;
        for (var o = [], n = 0; n < t.length; n++) o.push(e(t[n], n));
        return o;
      }
      function D(t, e) {
        if (null == t) return null;
        for (var o = [], n = 0; n < t.length; n++) e(t[n], n) && o.push(t[n]);
        return o;
      }
      var x = Object.freeze({
        __proto__: null,
        firstExistingValue: g,
        anyExists: function (t) {
          return t && null != g(t);
        },
        existsAndNotEmpty: function (t) {
          return null != t && t.length > 0;
        },
        last: y,
        areEqual: m,
        compareArrays: function (t, e) {
          return m(t, e);
        },
        shallowCompare: function (t, e) {
          return m(t, e);
        },
        sortNumerically: v,
        removeRepeatsFromArray: function (t, e) {
          if (t)
            for (var o = t.length - 2; o >= 0; o--)
              t[o] === e && t[o + 1] === e && t.splice(o + 1, 1);
        },
        removeFromArray: C,
        removeAllFromArray: w,
        insertIntoArray: b,
        insertArrayIntoArray: function (t, e, o) {
          if (null != t && null != e)
            for (var n = e.length - 1; n >= 0; n--) b(t, e[n], o);
        },
        moveInArray: E,
        includes: S,
        flatten: function (t) {
          return [].concat.apply([], t);
        },
        pushAll: O,
        toStrings: function (t) {
          return A(t, a);
        },
        findIndex: _,
        every: R,
        some: P,
        forEach: T,
        forEachReverse: function (t, e) {
          if (null != t) for (var o = t.length - 1; o >= 0; o--) e(t[o], o);
        },
        map: A,
        filter: D,
        reduce: function (t, e, o) {
          if (null == t || null == o) return null;
          for (var n = o, r = 0; r < t.length; r++) n = e(n, t[r], r);
          return n;
        },
        forEachSnapshotFirst: function (t, e) {
          t && t.slice(0).forEach(e);
        },
      });
      function F(t, e) {
        null != t &&
          (Array.isArray(t)
            ? T(t, function (t, o) {
                return e("" + o, t);
              })
            : T(Object.keys(t), function (o) {
                return e(o, t[o]);
              }));
      }
      function N(t) {
        for (var e = {}, o = Object.keys(t), n = 0; n < o.length; n++) {
          var r = o[n];
          e[r] = t[r];
        }
        return e;
      }
      function M(t, e) {
        if (t) {
          var o = t,
            n = {};
          return (
            Object.keys(o).forEach(function (t) {
              if (!(e && e.indexOf(t) >= 0)) {
                var r = o[t],
                  i = U(r) && r.constructor === Object;
                n[t] = i ? M(r) : r;
              }
            }),
            n
          );
        }
      }
      function I(t, e) {
        return t[e];
      }
      function L(t, e, o) {
        t[e] = o;
      }
      function G(t, e, o, n) {
        var r = I(t, o);
        void 0 !== r && L(e, o, n ? n(r) : r);
      }
      function k(t) {
        var e = {};
        return (
          t
            .filter(function (t) {
              return null != t;
            })
            .forEach(function (t) {
              T(Object.keys(t), function (t) {
                return (e[t] = null);
              });
            }),
          Object.keys(e)
        );
      }
      function V(t, e, o, n) {
        void 0 === o && (o = !0),
          void 0 === n && (n = !1),
          r(e) &&
            F(e, function (e, r) {
              var i = t[e];
              i !== r &&
                (n &&
                  null == i &&
                  null != r &&
                  "object" == typeof r &&
                  r.constructor === Object &&
                  (t[e] = i = {}),
                U(r) && U(i) && !Array.isArray(i)
                  ? V(i, r, o, n)
                  : (o || void 0 !== r) && (t[e] = r));
            });
      }
      function W(t) {
        for (var e = [], o = 1; o < arguments.length; o++)
          e[o - 1] = arguments[o];
        return (
          T(e, function (e) {
            return F(e, function (e, o) {
              return (t[e] = o);
            });
          }),
          t
        );
      }
      function H(t, e, o) {
        if (null == t) return o;
        for (var n = e.split("."), r = t; n.length > 1; )
          if (null == (r = r[n.shift()])) return o;
        var i = r[n[0]];
        return null != i ? i : o;
      }
      function B(t, e, o) {
        if (e && t) {
          if (!o) return t[e];
          for (var n = e.split("."), r = t, i = 0; i < n.length; i++) {
            if (null == r) return;
            r = r[n[i]];
          }
          return r;
        }
      }
      function j(t, e) {
        Object.keys(t).forEach(function (e) {
          "object" == typeof t[e] && (t[e] = void 0);
        });
        var o = Object.getPrototypeOf(t),
          n = {};
        Object.keys(o).forEach(function (t) {
          "function" == typeof o[t] &&
            (n[t] = {
              value: function () {
                console.warn(
                  "AG Grid: " +
                    e +
                    " function " +
                    t +
                    "() cannot be called as the grid has been destroyed.\n                     Please don't call grid API functions on destroyed grids - as a matter of fact you shouldn't\n                     be keeping the API reference, your application has a memory leak! Remove the API reference\n                     when the grid is destroyed."
                );
              },
              writable: !0,
            });
        }),
          Object.defineProperties(t, n);
      }
      function U(t) {
        return "object" == typeof t && null !== t;
      }
      var z = Object.freeze({
          __proto__: null,
          iterateObject: F,
          cloneObject: N,
          deepCloneObject: function (t) {
            return JSON.parse(JSON.stringify(t));
          },
          deepCloneDefinition: M,
          getProperty: I,
          setProperty: L,
          copyPropertiesIfPresent: function (t, e) {
            for (var o = [], n = 2; n < arguments.length; n++)
              o[n - 2] = arguments[n];
            T(o, function (o) {
              return G(t, e, o);
            });
          },
          copyPropertyIfPresent: G,
          getAllKeysInObjects: k,
          getAllValuesInObject: function (t) {
            if (!t) return [];
            if ("function" == typeof Object.values) return Object.values(t);
            var e = [];
            for (var o in t)
              t.hasOwnProperty(o) && t.propertyIsEnumerable(o) && e.push(t[o]);
            return e;
          },
          mergeDeep: V,
          assign: W,
          missingOrEmptyObject: function (t) {
            return i(t) || 0 === Object.keys(t).length;
          },
          get: H,
          set: function (t, e, o) {
            if (null != t) {
              for (var n = e.split("."), r = t; n.length > 1; )
                if (null == (r = r[n.shift()])) return;
              r[n[0]] = o;
            }
          },
          deepFreeze: function t(e) {
            return (
              Object.freeze(e),
              T(d(e), function (e) {
                (U(e) || "function" == typeof e) && t(e);
              }),
              e
            );
          },
          getValueUsingField: B,
          removeAllReferences: j,
          isNonNullObject: U,
        }),
        K = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,
        Y = /([^\s,]+)/g,
        X = {};
      function q(t, e) {
        X[e] || (t(), (X[e] = !0));
      }
      function Q(t) {
        if (t.name) return t.name;
        var e = /function\s+([^\(]+)/.exec(t.toString());
        return e && 2 === e.length ? e[1].trim() : null;
      }
      function Z(t) {
        return !!(t && t.constructor && t.call && t.apply);
      }
      function $(t) {
        tt(t, 400);
      }
      function J(t) {
        tt(t, 0);
      }
      function tt(t, e) {
        void 0 === e && (e = 0),
          t.length > 0 &&
            window.setTimeout(function () {
              return t.forEach(function (t) {
                return t();
              });
            }, e);
      }
      function et(t, e, o) {
        var n;
        return (
          void 0 === o && (o = !1),
          function () {
            for (var r = [], i = 0; i < arguments.length; i++)
              r[i] = arguments[i];
            var s = this,
              a = o && !n;
            window.clearTimeout(n),
              (n = window.setTimeout(function () {
                (n = null), o || t.apply(s, r);
              }, e)),
              a && t.apply(s, r);
          }
        );
      }
      function ot(t) {
        t && t();
      }
      var nt = Object.freeze({
          __proto__: null,
          doOnce: q,
          getFunctionName: Q,
          getFunctionParameters: function (t) {
            var e = t.toString().replace(K, "");
            return e.slice(e.indexOf("(") + 1, e.indexOf(")")).match(Y) || [];
          },
          isFunction: Z,
          executeInAWhile: $,
          executeNextVMTurn: J,
          executeAfter: tt,
          debounce: et,
          compose: function () {
            for (var t = [], e = 0; e < arguments.length; e++)
              t[e] = arguments[e];
            return function (e) {
              return t.reduce(function (t, e) {
                return e(t);
              }, e);
            };
          },
          callIfPresent: ot,
        }),
        rt = (function () {
          function t(t, e) {
            if (
              ((this.beanWrappers = {}),
              (this.destroyed = !1),
              t && t.beanClasses)
            ) {
              (this.contextParams = t),
                (this.logger = e),
                this.logger.log(">> creating ag-Application Context"),
                this.createBeans();
              var o = this.getBeanInstances();
              this.wireBeans(o),
                this.logger.log(
                  ">> ag-Application Context ready - component is alive"
                );
            }
          }
          return (
            (t.prototype.getBeanInstances = function () {
              return d(this.beanWrappers).map(function (t) {
                return t.beanInstance;
              });
            }),
            (t.prototype.createBean = function (t, e) {
              if (!t) throw Error("Can't wire to bean since it is null");
              return this.wireBeans([t], e), t;
            }),
            (t.prototype.wireBeans = function (t, e) {
              this.autoWireBeans(t),
                this.methodWireBeans(t),
                this.callLifeCycleMethods(t, "preConstructMethods"),
                r(e) && t.forEach(e),
                this.callLifeCycleMethods(t, "postConstructMethods");
            }),
            (t.prototype.createBeans = function () {
              var t = this;
              this.contextParams.beanClasses.forEach(
                this.createBeanWrapper.bind(this)
              ),
                F(this.beanWrappers, function (e, o) {
                  var n;
                  o.bean.__agBeanMetaData &&
                    o.bean.__agBeanMetaData.autowireMethods &&
                    o.bean.__agBeanMetaData.autowireMethods.agConstructor &&
                    (n = o.bean.__agBeanMetaData.autowireMethods.agConstructor);
                  var r,
                    i,
                    s = t.getBeansForParameters(n, o.bean.name),
                    a =
                      ((r = o.bean),
                      (i = [null].concat(s)),
                      new (r.bind.apply(r, i))());
                  o.beanInstance = a;
                });
              var e = Object.keys(this.beanWrappers).join(", ");
              this.logger.log("created beans: " + e);
            }),
            (t.prototype.createBeanWrapper = function (t) {
              var e,
                o = t.__agBeanMetaData;
              if (!o)
                return (
                  (e = t.prototype.constructor
                    ? Q(t.prototype.constructor)
                    : "" + t),
                  void console.error("Context item " + e + " is not a bean")
                );
              this.beanWrappers[o.beanName] = {
                bean: t,
                beanInstance: null,
                beanName: o.beanName,
              };
            }),
            (t.prototype.autoWireBeans = function (t) {
              var e = this;
              t.forEach(function (t) {
                e.forEachMetaDataInHierarchy(t, function (o, n) {
                  var r = o.agClassAttributes;
                  r &&
                    r.forEach(function (o) {
                      var r = e.lookupBeanInstance(n, o.beanName, o.optional);
                      t[o.attributeName] = r;
                    });
                });
              });
            }),
            (t.prototype.methodWireBeans = function (t) {
              var e = this;
              t.forEach(function (t) {
                e.forEachMetaDataInHierarchy(t, function (o, n) {
                  F(o.autowireMethods, function (o, r) {
                    if ("agConstructor" !== o) {
                      var i = e.getBeansForParameters(r, n);
                      t[o].apply(t, i);
                    }
                  });
                });
              });
            }),
            (t.prototype.forEachMetaDataInHierarchy = function (t, e) {
              for (var o = Object.getPrototypeOf(t); null != o; ) {
                var n = o.constructor;
                n.hasOwnProperty("__agBeanMetaData") &&
                  e(n.__agBeanMetaData, this.getBeanName(n)),
                  (o = Object.getPrototypeOf(o));
              }
            }),
            (t.prototype.getBeanName = function (t) {
              if (t.__agBeanMetaData && t.__agBeanMetaData.beanName)
                return t.__agBeanMetaData.beanName;
              var e = t.toString();
              return e.substring(9, e.indexOf("("));
            }),
            (t.prototype.getBeansForParameters = function (t, e) {
              var o = this,
                n = [];
              return (
                t &&
                  F(t, function (t, r) {
                    var i = o.lookupBeanInstance(e, r);
                    n[Number(t)] = i;
                  }),
                n
              );
            }),
            (t.prototype.lookupBeanInstance = function (t, e, o) {
              if ((void 0 === o && (o = !1), "context" === e)) return this;
              if (
                this.contextParams.providedBeanInstances &&
                this.contextParams.providedBeanInstances.hasOwnProperty(e)
              )
                return this.contextParams.providedBeanInstances[e];
              var n = this.beanWrappers[e];
              return n
                ? n.beanInstance
                : (o ||
                    console.error(
                      "AG Grid: unable to find bean reference " +
                        e +
                        " while initialising " +
                        t
                    ),
                  null);
            }),
            (t.prototype.callLifeCycleMethods = function (t, e) {
              var o = this;
              t.forEach(function (t) {
                return o.callLifeCycleMethodsOnBean(t, e);
              });
            }),
            (t.prototype.callLifeCycleMethodsOnBean = function (t, e, o) {
              var n = {};
              this.forEachMetaDataInHierarchy(t, function (t) {
                var r = t[e];
                r &&
                  r.forEach(function (t) {
                    t != o && (n[t] = !0);
                  });
              }),
                Object.keys(n).forEach(function (e) {
                  return t[e]();
                });
            }),
            (t.prototype.getBean = function (t) {
              return this.lookupBeanInstance("getBean", t, !0);
            }),
            (t.prototype.destroy = function () {
              if (!this.destroyed) {
                this.logger.log(">> Shutting down ag-Application Context");
                var t = this.getBeanInstances();
                this.destroyBeans(t),
                  (this.contextParams.providedBeanInstances = null),
                  (this.destroyed = !0),
                  this.logger.log(
                    ">> ag-Application Context shut down - component is dead"
                  );
              }
            }),
            (t.prototype.destroyBean = function (t) {
              t && this.destroyBeans([t]);
            }),
            (t.prototype.destroyBeans = function (t) {
              var e = this;
              return t
                ? (t.forEach(function (t) {
                    e.callLifeCycleMethodsOnBean(
                      t,
                      "preDestroyMethods",
                      "destroy"
                    ),
                      "function" == typeof t.destroy && t.destroy();
                  }),
                  [])
                : [];
            }),
            t
          );
        })();
      function it(t, e, o) {
        var n = ht(t.constructor);
        n.preConstructMethods || (n.preConstructMethods = []),
          n.preConstructMethods.push(e);
      }
      function st(t, e, o) {
        var n = ht(t.constructor);
        n.postConstructMethods || (n.postConstructMethods = []),
          n.postConstructMethods.push(e);
      }
      function at(t, e, o) {
        var n = ht(t.constructor);
        n.preDestroyMethods || (n.preDestroyMethods = []),
          n.preDestroyMethods.push(e);
      }
      function lt(t) {
        return function (e) {
          ht(e).beanName = t;
        };
      }
      function ut(t) {
        return function (e, o, n) {
          ct(e, t, !1, 0, o, null);
        };
      }
      function pt(t) {
        return function (e, o, n) {
          ct(e, t, !0, 0, o, null);
        };
      }
      function ct(t, e, o, n, r, i) {
        if (null !== e)
          if ("number" != typeof i) {
            var s = ht(t.constructor);
            s.agClassAttributes || (s.agClassAttributes = []),
              s.agClassAttributes.push({
                attributeName: r,
                beanName: e,
                optional: o,
              });
          } else console.error("AG Grid: Autowired should be on an attribute");
        else console.error("AG Grid: Autowired name should not be null");
      }
      function dt(t) {
        return function (e, o, n) {
          var r,
            i = "function" == typeof e ? e : e.constructor;
          if ("number" == typeof n) {
            var s = void 0;
            o ? ((r = ht(i)), (s = o)) : ((r = ht(i)), (s = "agConstructor")),
              r.autowireMethods || (r.autowireMethods = {}),
              r.autowireMethods[s] || (r.autowireMethods[s] = {}),
              (r.autowireMethods[s][n] = t);
          }
        };
      }
      function ht(t) {
        return (
          t.hasOwnProperty("__agBeanMetaData") || (t.__agBeanMetaData = {}),
          t.__agBeanMetaData
        );
      }
      var ft,
        gt = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        yt = function (t, e) {
          return function (o, n) {
            e(o, n, t);
          };
        },
        mt = (function () {
          function t() {
            (this.allSyncListeners = new Map()),
              (this.allAsyncListeners = new Map()),
              (this.globalSyncListeners = new Set()),
              (this.globalAsyncListeners = new Set()),
              (this.asyncFunctionsQueue = []),
              (this.scheduled = !1),
              (this.firedEvents = {});
          }
          return (
            (t.prototype.setBeans = function (t, e, o, n) {
              if (
                (void 0 === n && (n = null),
                (this.logger = t.create("EventService")),
                (this.frameworkOverrides = o),
                n)
              ) {
                var r = e.useAsyncEvents();
                this.addGlobalListener(n, r);
              }
            }),
            (t.prototype.getListeners = function (t, e) {
              var o = e ? this.allAsyncListeners : this.allSyncListeners,
                n = o.get(t);
              return n || ((n = new Set()), o.set(t, n)), n;
            }),
            (t.prototype.addEventListener = function (t, e, o) {
              void 0 === o && (o = !1), this.getListeners(t, o).add(e);
            }),
            (t.prototype.removeEventListener = function (t, e, o) {
              void 0 === o && (o = !1), this.getListeners(t, o).delete(e);
            }),
            (t.prototype.addGlobalListener = function (t, e) {
              void 0 === e && (e = !1),
                (e ? this.globalAsyncListeners : this.globalSyncListeners).add(
                  t
                );
            }),
            (t.prototype.removeGlobalListener = function (t, e) {
              void 0 === e && (e = !1),
                (e
                  ? this.globalAsyncListeners
                  : this.globalSyncListeners
                ).delete(t);
            }),
            (t.prototype.dispatchEvent = function (t) {
              this.dispatchToListeners(t, !0),
                this.dispatchToListeners(t, !1),
                (this.firedEvents[t.type] = !0);
            }),
            (t.prototype.dispatchEventOnce = function (t) {
              this.firedEvents[t.type] || this.dispatchEvent(t);
            }),
            (t.prototype.dispatchToListeners = function (t, e) {
              var o = this,
                n = t.type;
              this.getListeners(n, e).forEach(function (n) {
                e
                  ? o.dispatchAsync(function () {
                      return n(t);
                    })
                  : n(t);
              }),
                (e
                  ? this.globalAsyncListeners
                  : this.globalSyncListeners
                ).forEach(function (r) {
                  e
                    ? o.dispatchAsync(function () {
                        return o.frameworkOverrides.dispatchEvent(
                          n,
                          function () {
                            return r(n, t);
                          }
                        );
                      })
                    : o.frameworkOverrides.dispatchEvent(n, function () {
                        return r(n, t);
                      });
                });
            }),
            (t.prototype.dispatchAsync = function (t) {
              this.asyncFunctionsQueue.push(t),
                this.scheduled ||
                  (window.setTimeout(this.flushAsyncQueue.bind(this), 0),
                  (this.scheduled = !0));
            }),
            (t.prototype.flushAsyncQueue = function () {
              this.scheduled = !1;
              var t = this.asyncFunctionsQueue.slice();
              (this.asyncFunctionsQueue = []),
                t.forEach(function (t) {
                  return t();
                });
            }),
            gt(
              [
                yt(0, dt("loggerFactory")),
                yt(1, dt("gridOptionsWrapper")),
                yt(2, dt("frameworkOverrides")),
                yt(3, dt("globalEventListener")),
              ],
              t.prototype,
              "setBeans",
              null
            ),
            gt([lt("eventService")], t)
          );
        })(),
        vt = (function () {
          function t() {}
          return (
            (t.ROW_BUFFER_SIZE = 10),
            (t.LAYOUT_INTERVAL = 500),
            (t.BATCH_WAIT_MILLIS = 50),
            (t.EXPORT_TYPE_DRAG_COPY = "dragCopy"),
            (t.EXPORT_TYPE_CLIPBOARD = "clipboard"),
            (t.EXPORT_TYPE_EXCEL = "excel"),
            (t.EXPORT_TYPE_CSV = "csv"),
            (t.ROW_MODEL_TYPE_INFINITE = "infinite"),
            (t.ROW_MODEL_TYPE_VIEWPORT = "viewport"),
            (t.ROW_MODEL_TYPE_CLIENT_SIDE = "clientSide"),
            (t.ROW_MODEL_TYPE_SERVER_SIDE = "serverSide"),
            (t.ALWAYS = "always"),
            (t.ONLY_WHEN_GROUPING = "onlyWhenGrouping"),
            (t.PINNED_TOP = "top"),
            (t.PINNED_BOTTOM = "bottom"),
            (t.DOM_LAYOUT_NORMAL = "normal"),
            (t.DOM_LAYOUT_PRINT = "print"),
            (t.DOM_LAYOUT_AUTO_HEIGHT = "autoHeight"),
            (t.GROUP_AUTO_COLUMN_ID = "ag-Grid-AutoColumn"),
            (t.SOURCE_PASTE = "paste"),
            (t.PINNED_RIGHT = "right"),
            (t.PINNED_LEFT = "left"),
            (t.SORT_ASC = "asc"),
            (t.SORT_DESC = "desc"),
            (t.INPUT_SELECTOR = "input, select, button, textarea"),
            (t.FOCUSABLE_SELECTOR =
              "[tabindex], input, select, button, textarea"),
            (t.FOCUSABLE_EXCLUDE =
              ".ag-hidden, .ag-hidden *, [disabled], .ag-disabled, .ag-disabled *"),
            t
          );
        })();
      ((ft = e.ModuleNames || (e.ModuleNames = {})).CommunityCoreModule =
        "@ag-grid-community/core"),
        (ft.CommunityAllModules = "@ag-grid-community/all"),
        (ft.InfiniteRowModelModule = "@ag-grid-community/infinite-row-model"),
        (ft.ClientSideRowModelModule =
          "@ag-grid-community/client-side-row-model"),
        (ft.CsvExportModule = "@ag-grid-community/csv-export"),
        (ft.EnterpriseCoreModule = "@ag-grid-enterprise/core"),
        (ft.EnterpriseAllModules = "@ag-grid-enterprise/all"),
        (ft.RowGroupingModule = "@ag-grid-enterprise/row-grouping"),
        (ft.ColumnToolPanelModule = "@ag-grid-enterprise/column-tool-panel"),
        (ft.FiltersToolPanelModule = "@ag-grid-enterprise/filter-tool-panel"),
        (ft.MenuModule = "@ag-grid-enterprise/menu"),
        (ft.SetFilterModule = "@ag-grid-enterprise/set-filter"),
        (ft.MultiFilterModule = "@ag-grid-enterprise/multi-filter"),
        (ft.StatusBarModule = "@ag-grid-enterprise/status-bar"),
        (ft.SideBarModule = "@ag-grid-enterprise/side-bar"),
        (ft.RangeSelectionModule = "@ag-grid-enterprise/range-selection"),
        (ft.MasterDetailModule = "@ag-grid-enterprise/master-detail"),
        (ft.RichSelectModule = "@ag-grid-enterprise/rich-select"),
        (ft.GridChartsModule = "@ag-grid-enterprise/charts"),
        (ft.ViewportRowModelModule = "@ag-grid-enterprise/viewport-row-model"),
        (ft.ServerSideRowModelModule =
          "@ag-grid-enterprise/server-side-row-model"),
        (ft.ExcelExportModule = "@ag-grid-enterprise/excel-export"),
        (ft.ClipboardModule = "@ag-grid-enterprise/clipboard"),
        (ft.DateTimeCellEditorModule =
          "@ag-grid-enterprise/date-time-cell-editor"),
        (ft.AngularModule = "@ag-grid-community/angular"),
        (ft.ReactModule = "@ag-grid-community/react"),
        (ft.VueModule = "@ag-grid-community/vue"),
        (ft.PolymerModule = "@ag-grid-community/polymer");
      var Ct = (function () {
          function t() {}
          return (
            (t.register = function (e, o) {
              void 0 === o && (o = !0),
                (t.modulesMap[e.moduleName] = e),
                void 0 === t.moduleBased
                  ? (t.moduleBased = o)
                  : t.moduleBased !== o &&
                    q(function () {
                      console.warn(
                        "AG Grid: You are mixing modules (i.e. @ag-grid-community/core) and packages (ag-grid-community) - you can only use one or the other of these mechanisms."
                      ),
                        console.warn(
                          "Please see https://www.ag-grid.com/documentation/javascript/packages-modules/ for more information."
                        );
                    }, "ModulePackageCheck");
            }),
            (t.registerModules = function (e, o) {
              void 0 === o && (o = !0),
                e &&
                  e.forEach(function (e) {
                    return t.register(e, o);
                  });
            }),
            (t.assertRegistered = function (t, e) {
              if (this.isRegistered(t)) return !0;
              var o =
                "AG Grid: unable to use " +
                e +
                " as module " +
                t +
                " is not present. Please see: https://www.ag-grid.com/documentation/javascript/modules/";
              return (
                q(function () {
                  console.warn(o);
                }, e + t),
                !1
              );
            }),
            (t.isRegistered = function (e) {
              return !!t.modulesMap[e];
            }),
            (t.getRegisteredModules = function () {
              return d(t.modulesMap);
            }),
            (t.isPackageBased = function () {
              return !t.moduleBased;
            }),
            (t.modulesMap = {}),
            t
          );
        })(),
        wt = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        bt = (function () {
          function t(t, e, o, n) {
            (this.moving = !1),
              (this.menuVisible = !1),
              (this.filterActive = !1),
              (this.eventService = new mt()),
              (this.rowGroupActive = !1),
              (this.pivotActive = !1),
              (this.aggregationActive = !1),
              (this.colDef = t),
              (this.userProvidedColDef = e),
              (this.colId = o),
              (this.primary = n),
              this.setState(t);
          }
          return (
            (t.prototype.setState = function (t) {
              void 0 !== t.sort
                ? (t.sort !== vt.SORT_ASC && t.sort !== vt.SORT_DESC) ||
                  (this.sort = t.sort)
                : (t.initialSort !== vt.SORT_ASC &&
                    t.initialSort !== vt.SORT_DESC) ||
                  (this.sort = t.initialSort);
              var e = l(t.sortIndex),
                o = l(t.initialSortIndex);
              void 0 !== e
                ? null !== e && (this.sortIndex = e)
                : null !== o && (this.sortIndex = o);
              var n = u(t.hide),
                r = u(t.initialHide);
              (this.visible = void 0 !== n ? !n : !r),
                this.setPinned(
                  void 0 !== t.pinned ? t.pinned : t.initialPinned
                );
              var i = l(t.flex),
                s = l(t.initialFlex);
              void 0 !== i ? (this.flex = i) : void 0 !== s && (this.flex = s);
            }),
            (t.prototype.setColDef = function (t, e) {
              (this.colDef = t), (this.userProvidedColDef = e);
            }),
            (t.prototype.getUserProvidedColDef = function () {
              return this.userProvidedColDef;
            }),
            (t.prototype.setParent = function (t) {
              this.parent = t;
            }),
            (t.prototype.getParent = function () {
              return this.parent;
            }),
            (t.prototype.setOriginalParent = function (t) {
              this.originalParent = t;
            }),
            (t.prototype.getOriginalParent = function () {
              return this.originalParent;
            }),
            (t.prototype.initialise = function () {
              var t = this.gridOptionsWrapper.getMinColWidth(),
                e = this.gridOptionsWrapper.getMaxColWidth();
              (this.minWidth =
                null != this.colDef.minWidth
                  ? Math.max(this.colDef.minWidth, 1)
                  : t),
                (this.maxWidth =
                  null != this.colDef.maxWidth ? this.colDef.maxWidth : e),
                this.resetActualWidth("gridInitializing");
              var o = this.gridOptionsWrapper.isSuppressFieldDotNotation();
              (this.fieldContainsDots =
                r(this.colDef.field) &&
                this.colDef.field.indexOf(".") >= 0 &&
                !o),
                (this.tooltipFieldContainsDots =
                  r(this.colDef.tooltipField) &&
                  this.colDef.tooltipField.indexOf(".") >= 0 &&
                  !o),
                this.validate();
            }),
            (t.prototype.resetActualWidth = function (t) {
              void 0 === t && (t = "api");
              var e = this.columnUtils.calculateColInitialWidth(this.colDef);
              this.setActualWidth(e, t, !0);
            }),
            (t.prototype.isEmptyGroup = function () {
              return !1;
            }),
            (t.prototype.isRowGroupDisplayed = function (t) {
              return !(
                i(this.colDef) ||
                i(this.colDef.showRowGroup) ||
                (!0 !== this.colDef.showRowGroup &&
                  this.colDef.showRowGroup !== t)
              );
            }),
            (t.prototype.getUniqueId = function () {
              return this.getId();
            }),
            (t.prototype.isPrimary = function () {
              return this.primary;
            }),
            (t.prototype.isFilterAllowed = function () {
              return (
                this.primary &&
                (!!this.colDef.filter || !!this.colDef.filterFramework)
              );
            }),
            (t.prototype.isFieldContainsDots = function () {
              return this.fieldContainsDots;
            }),
            (t.prototype.isTooltipFieldContainsDots = function () {
              return this.tooltipFieldContainsDots;
            }),
            (t.prototype.validate = function () {
              var t = this.colDef;
              function o(t, e, o) {
                q(function () {
                  o
                    ? console.warn(t, o)
                    : q(function () {
                        return console.warn(t);
                      }, e);
                }, e);
              }
              Ct.isRegistered(e.ModuleNames.RowGroupingModule) ||
                [
                  "enableRowGroup",
                  "rowGroup",
                  "rowGroupIndex",
                  "enablePivot",
                  "enableValue",
                  "pivot",
                  "pivotIndex",
                  "aggFunc",
                ].forEach(function (n) {
                  r(t[n]) &&
                    (Ct.isPackageBased()
                      ? o(
                          "AG Grid: " +
                            n +
                            " is only valid in ag-grid-enterprise, your column definition should not have " +
                            n,
                          "ColumnRowGroupingMissing" + n
                        )
                      : o(
                          "AG Grid: " +
                            n +
                            " is only valid with AG Grid Enterprise Module " +
                            e.ModuleNames.RowGroupingModule +
                            " - your column definition should not have " +
                            n,
                          "ColumnRowGroupingMissing" + n
                        ));
                }),
                Ct.isRegistered(e.ModuleNames.RichSelectModule) ||
                  ("agRichSelect" !== this.colDef.cellEditor &&
                    "agRichSelectCellEditor" !== this.colDef.cellEditor) ||
                  (Ct.isPackageBased()
                    ? o(
                        "AG Grid: " +
                          this.colDef.cellEditor +
                          " can only be used with ag-grid-enterprise",
                        "ColumnRichSelectMissing"
                      )
                    : o(
                        "AG Grid: " +
                          this.colDef.cellEditor +
                          " can only be used with AG Grid Enterprise Module " +
                          e.ModuleNames.RichSelectModule,
                        "ColumnRichSelectMissing"
                      )),
                Ct.isRegistered(e.ModuleNames.DateTimeCellEditorModule) ||
                  ("agRichSelect" !== this.colDef.cellEditor &&
                    "agDateTimeCellEditor" !== this.colDef.cellEditor) ||
                  (Ct.isPackageBased()
                    ? o(
                        "AG Grid: " +
                          this.colDef.cellEditor +
                          " can only be used with ag-grid-enterprise",
                        "ColumnDateTimeMissing"
                      )
                    : o(
                        "AG Grid: " +
                          this.colDef.cellEditor +
                          " can only be used with AG Grid Enterprise Module " +
                          e.ModuleNames.DateTimeCellEditorModule,
                        "ColumnDateTimeMissing"
                      )),
                this.gridOptionsWrapper.isTreeData() &&
                  ["rowGroup", "rowGroupIndex", "pivot", "pivotIndex"].forEach(
                    function (e) {
                      r(t[e]) &&
                        o(
                          "AG Grid: " +
                            e +
                            " is not possible when doing tree data, your column definition should not have " +
                            e,
                          "TreeDataCannotRowGroup"
                        );
                    }
                  ),
                r(this.colDef.width) &&
                  "number" != typeof this.colDef.width &&
                  o(
                    "AG Grid: colDef.width should be a number, not " +
                      typeof this.colDef.width,
                    "ColumnCheck_asdfawef"
                  );
            }),
            (t.prototype.addEventListener = function (t, e) {
              this.eventService.addEventListener(t, e);
            }),
            (t.prototype.removeEventListener = function (t, e) {
              this.eventService.removeEventListener(t, e);
            }),
            (t.prototype.createColumnFunctionCallbackParams = function (t) {
              return {
                node: t,
                data: t.data,
                column: this,
                colDef: this.colDef,
                context: this.gridOptionsWrapper.getContext(),
                api: this.gridOptionsWrapper.getApi(),
                columnApi: this.gridOptionsWrapper.getColumnApi(),
              };
            }),
            (t.prototype.isSuppressNavigable = function (t) {
              if ("boolean" == typeof this.colDef.suppressNavigable)
                return this.colDef.suppressNavigable;
              if ("function" == typeof this.colDef.suppressNavigable) {
                var e = this.createColumnFunctionCallbackParams(t);
                return (0, this.colDef.suppressNavigable)(e);
              }
              return !1;
            }),
            (t.prototype.isCellEditable = function (t) {
              return (
                !(t.group && !this.gridOptionsWrapper.isEnableGroupEdit()) &&
                this.isColumnFunc(t, this.colDef.editable)
              );
            }),
            (t.prototype.isRowDrag = function (t) {
              return this.isColumnFunc(t, this.colDef.rowDrag);
            }),
            (t.prototype.isDndSource = function (t) {
              return this.isColumnFunc(t, this.colDef.dndSource);
            }),
            (t.prototype.isCellCheckboxSelection = function (t) {
              return this.isColumnFunc(t, this.colDef.checkboxSelection);
            }),
            (t.prototype.isSuppressPaste = function (t) {
              return this.isColumnFunc(
                t,
                this.colDef ? this.colDef.suppressPaste : null
              );
            }),
            (t.prototype.isResizable = function () {
              return !0 === this.colDef.resizable;
            }),
            (t.prototype.isColumnFunc = function (t, e) {
              return "boolean" == typeof e
                ? e
                : "function" == typeof e &&
                    e(this.createColumnFunctionCallbackParams(t));
            }),
            (t.prototype.setMoving = function (e, o) {
              void 0 === o && (o = "api"),
                (this.moving = e),
                this.eventService.dispatchEvent(
                  this.createColumnEvent(t.EVENT_MOVING_CHANGED, o)
                );
            }),
            (t.prototype.createColumnEvent = function (t, e) {
              return {
                api: this.gridApi,
                columnApi: this.columnApi,
                type: t,
                column: this,
                columns: [this],
                source: e,
              };
            }),
            (t.prototype.isMoving = function () {
              return this.moving;
            }),
            (t.prototype.getSort = function () {
              return this.sort;
            }),
            (t.prototype.setSort = function (e, o) {
              void 0 === o && (o = "api"),
                this.sort !== e &&
                  ((this.sort = e),
                  this.eventService.dispatchEvent(
                    this.createColumnEvent(t.EVENT_SORT_CHANGED, o)
                  ));
            }),
            (t.prototype.setMenuVisible = function (e, o) {
              void 0 === o && (o = "api"),
                this.menuVisible !== e &&
                  ((this.menuVisible = e),
                  this.eventService.dispatchEvent(
                    this.createColumnEvent(t.EVENT_MENU_VISIBLE_CHANGED, o)
                  ));
            }),
            (t.prototype.isMenuVisible = function () {
              return this.menuVisible;
            }),
            (t.prototype.isSortAscending = function () {
              return this.sort === vt.SORT_ASC;
            }),
            (t.prototype.isSortDescending = function () {
              return this.sort === vt.SORT_DESC;
            }),
            (t.prototype.isSortNone = function () {
              return i(this.sort);
            }),
            (t.prototype.isSorting = function () {
              return r(this.sort);
            }),
            (t.prototype.getSortIndex = function () {
              return this.sortIndex;
            }),
            (t.prototype.setSortIndex = function (t) {
              this.sortIndex = t;
            }),
            (t.prototype.setAggFunc = function (t) {
              this.aggFunc = t;
            }),
            (t.prototype.getAggFunc = function () {
              return this.aggFunc;
            }),
            (t.prototype.getLeft = function () {
              return this.left;
            }),
            (t.prototype.getOldLeft = function () {
              return this.oldLeft;
            }),
            (t.prototype.getRight = function () {
              return this.left + this.actualWidth;
            }),
            (t.prototype.setLeft = function (e, o) {
              void 0 === o && (o = "api"),
                (this.oldLeft = this.left),
                this.left !== e &&
                  ((this.left = e),
                  this.eventService.dispatchEvent(
                    this.createColumnEvent(t.EVENT_LEFT_CHANGED, o)
                  ));
            }),
            (t.prototype.isFilterActive = function () {
              return this.filterActive;
            }),
            (t.prototype.setFilterActive = function (e, o, n) {
              void 0 === o && (o = "api"),
                this.filterActive !== e &&
                  ((this.filterActive = e),
                  this.eventService.dispatchEvent(
                    this.createColumnEvent(t.EVENT_FILTER_ACTIVE_CHANGED, o)
                  ));
              var r = this.createColumnEvent(t.EVENT_FILTER_CHANGED, o);
              n && V(r, n), this.eventService.dispatchEvent(r);
            }),
            (t.prototype.setPinned = function (t) {
              this.pinned =
                !0 === t || t === vt.PINNED_LEFT
                  ? vt.PINNED_LEFT
                  : t === vt.PINNED_RIGHT
                  ? vt.PINNED_RIGHT
                  : null;
            }),
            (t.prototype.setFirstRightPinned = function (e, o) {
              void 0 === o && (o = "api"),
                this.firstRightPinned !== e &&
                  ((this.firstRightPinned = e),
                  this.eventService.dispatchEvent(
                    this.createColumnEvent(
                      t.EVENT_FIRST_RIGHT_PINNED_CHANGED,
                      o
                    )
                  ));
            }),
            (t.prototype.setLastLeftPinned = function (e, o) {
              void 0 === o && (o = "api"),
                this.lastLeftPinned !== e &&
                  ((this.lastLeftPinned = e),
                  this.eventService.dispatchEvent(
                    this.createColumnEvent(t.EVENT_LAST_LEFT_PINNED_CHANGED, o)
                  ));
            }),
            (t.prototype.isFirstRightPinned = function () {
              return this.firstRightPinned;
            }),
            (t.prototype.isLastLeftPinned = function () {
              return this.lastLeftPinned;
            }),
            (t.prototype.isPinned = function () {
              return (
                this.pinned === vt.PINNED_LEFT ||
                this.pinned === vt.PINNED_RIGHT
              );
            }),
            (t.prototype.isPinnedLeft = function () {
              return this.pinned === vt.PINNED_LEFT;
            }),
            (t.prototype.isPinnedRight = function () {
              return this.pinned === vt.PINNED_RIGHT;
            }),
            (t.prototype.getPinned = function () {
              return this.pinned;
            }),
            (t.prototype.setVisible = function (e, o) {
              void 0 === o && (o = "api");
              var n = !0 === e;
              this.visible !== n &&
                ((this.visible = n),
                this.eventService.dispatchEvent(
                  this.createColumnEvent(t.EVENT_VISIBLE_CHANGED, o)
                ));
            }),
            (t.prototype.isVisible = function () {
              return this.visible;
            }),
            (t.prototype.getColDef = function () {
              return this.colDef;
            }),
            (t.prototype.getColumnGroupShow = function () {
              return this.colDef.columnGroupShow;
            }),
            (t.prototype.getColId = function () {
              return this.colId;
            }),
            (t.prototype.getId = function () {
              return this.getColId();
            }),
            (t.prototype.getDefinition = function () {
              return this.colDef;
            }),
            (t.prototype.getActualWidth = function () {
              return this.actualWidth;
            }),
            (t.prototype.createBaseColDefParams = function (t) {
              return {
                node: t,
                data: t.data,
                colDef: this.colDef,
                column: this,
                api: this.gridOptionsWrapper.getApi(),
                columnApi: this.gridOptionsWrapper.getColumnApi(),
                context: this.gridOptionsWrapper.getContext(),
              };
            }),
            (t.prototype.getColSpan = function (t) {
              if (i(this.colDef.colSpan)) return 1;
              var e = this.createBaseColDefParams(t),
                o = this.colDef.colSpan(e);
              return Math.max(o, 1);
            }),
            (t.prototype.getRowSpan = function (t) {
              if (i(this.colDef.rowSpan)) return 1;
              var e = this.createBaseColDefParams(t),
                o = this.colDef.rowSpan(e);
              return Math.max(o, 1);
            }),
            (t.prototype.setActualWidth = function (t, e, o) {
              void 0 === e && (e = "api"),
                void 0 === o && (o = !1),
                null != this.minWidth && (t = Math.max(t, this.minWidth)),
                null != this.maxWidth && (t = Math.min(t, this.maxWidth)),
                this.actualWidth !== t &&
                  ((this.actualWidth = t),
                  this.flex &&
                    "flex" !== e &&
                    "gridInitializing" !== e &&
                    (this.flex = null),
                  o || this.fireColumnWidthChangedEvent(e));
            }),
            (t.prototype.fireColumnWidthChangedEvent = function (e) {
              this.eventService.dispatchEvent(
                this.createColumnEvent(t.EVENT_WIDTH_CHANGED, e)
              );
            }),
            (t.prototype.isGreaterThanMax = function (t) {
              return null != this.maxWidth && t > this.maxWidth;
            }),
            (t.prototype.getMinWidth = function () {
              return this.minWidth;
            }),
            (t.prototype.getMaxWidth = function () {
              return this.maxWidth;
            }),
            (t.prototype.getFlex = function () {
              return this.flex || 0;
            }),
            (t.prototype.setFlex = function (t) {
              this.flex !== t && (this.flex = t);
            }),
            (t.prototype.setMinimum = function (t) {
              void 0 === t && (t = "api"),
                r(this.minWidth) && this.setActualWidth(this.minWidth, t);
            }),
            (t.prototype.setRowGroupActive = function (e, o) {
              void 0 === o && (o = "api"),
                this.rowGroupActive !== e &&
                  ((this.rowGroupActive = e),
                  this.eventService.dispatchEvent(
                    this.createColumnEvent(t.EVENT_ROW_GROUP_CHANGED, o)
                  ));
            }),
            (t.prototype.isRowGroupActive = function () {
              return this.rowGroupActive;
            }),
            (t.prototype.setPivotActive = function (e, o) {
              void 0 === o && (o = "api"),
                this.pivotActive !== e &&
                  ((this.pivotActive = e),
                  this.eventService.dispatchEvent(
                    this.createColumnEvent(t.EVENT_PIVOT_CHANGED, o)
                  ));
            }),
            (t.prototype.isPivotActive = function () {
              return this.pivotActive;
            }),
            (t.prototype.isAnyFunctionActive = function () {
              return (
                this.isPivotActive() ||
                this.isRowGroupActive() ||
                this.isValueActive()
              );
            }),
            (t.prototype.isAnyFunctionAllowed = function () {
              return (
                this.isAllowPivot() ||
                this.isAllowRowGroup() ||
                this.isAllowValue()
              );
            }),
            (t.prototype.setValueActive = function (e, o) {
              void 0 === o && (o = "api"),
                this.aggregationActive !== e &&
                  ((this.aggregationActive = e),
                  this.eventService.dispatchEvent(
                    this.createColumnEvent(t.EVENT_VALUE_CHANGED, o)
                  ));
            }),
            (t.prototype.isValueActive = function () {
              return this.aggregationActive;
            }),
            (t.prototype.isAllowPivot = function () {
              return !0 === this.colDef.enablePivot;
            }),
            (t.prototype.isAllowValue = function () {
              return !0 === this.colDef.enableValue;
            }),
            (t.prototype.isAllowRowGroup = function () {
              return !0 === this.colDef.enableRowGroup;
            }),
            (t.prototype.getMenuTabs = function (t) {
              var e = this.getColDef().menuTabs;
              return null == e && (e = t), e;
            }),
            (t.prototype.isLockPosition = function () {
              return (
                console.warn(
                  "AG Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead."
                ),
                !!this.colDef && !!this.colDef.lockPosition
              );
            }),
            (t.prototype.isLockVisible = function () {
              return (
                console.warn(
                  "AG Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead."
                ),
                !!this.colDef && !!this.colDef.lockVisible
              );
            }),
            (t.prototype.isLockPinned = function () {
              return (
                console.warn(
                  "AG Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead."
                ),
                !!this.colDef && !!this.colDef.lockPinned
              );
            }),
            (t.EVENT_MOVING_CHANGED = "movingChanged"),
            (t.EVENT_LEFT_CHANGED = "leftChanged"),
            (t.EVENT_WIDTH_CHANGED = "widthChanged"),
            (t.EVENT_LAST_LEFT_PINNED_CHANGED = "lastLeftPinnedChanged"),
            (t.EVENT_FIRST_RIGHT_PINNED_CHANGED = "firstRightPinnedChanged"),
            (t.EVENT_VISIBLE_CHANGED = "visibleChanged"),
            (t.EVENT_FILTER_CHANGED = "filterChanged"),
            (t.EVENT_FILTER_ACTIVE_CHANGED = "filterActiveChanged"),
            (t.EVENT_SORT_CHANGED = "sortChanged"),
            (t.EVENT_MENU_VISIBLE_CHANGED = "menuVisibleChanged"),
            (t.EVENT_ROW_GROUP_CHANGED = "columnRowGroupChanged"),
            (t.EVENT_PIVOT_CHANGED = "columnPivotChanged"),
            (t.EVENT_VALUE_CHANGED = "columnValueChanged"),
            wt(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            wt([ut("columnUtils")], t.prototype, "columnUtils", void 0),
            wt([ut("columnApi")], t.prototype, "columnApi", void 0),
            wt([ut("gridApi")], t.prototype, "gridApi", void 0),
            wt([ut("context")], t.prototype, "context", void 0),
            wt([st], t.prototype, "initialise", null),
            t
          );
        })(),
        Et = (function () {
          function t(t, e, o, n) {
            (this.displayedChildren = []),
              (this.localEventService = new mt()),
              (this.groupId = e),
              (this.instanceId = o),
              (this.originalColumnGroup = t),
              (this.pinned = n);
          }
          return (
            (t.createUniqueId = function (t, e) {
              return t + "_" + e;
            }),
            (t.prototype.reset = function () {
              (this.parent = null),
                (this.children = null),
                (this.displayedChildren = null);
            }),
            (t.prototype.getParent = function () {
              return this.parent;
            }),
            (t.prototype.setParent = function (t) {
              this.parent = t;
            }),
            (t.prototype.getUniqueId = function () {
              return t.createUniqueId(this.groupId, this.instanceId);
            }),
            (t.prototype.isEmptyGroup = function () {
              return 0 === this.displayedChildren.length;
            }),
            (t.prototype.isMoving = function () {
              var t = this.getOriginalColumnGroup().getLeafColumns();
              return (
                !(!t || 0 === t.length) &&
                t.every(function (t) {
                  return t.isMoving();
                })
              );
            }),
            (t.prototype.checkLeft = function () {
              if (
                (this.displayedChildren.forEach(function (e) {
                  e instanceof t && e.checkLeft();
                }),
                this.displayedChildren.length > 0)
              )
                if (this.gridOptionsWrapper.isEnableRtl()) {
                  var e = y(this.displayedChildren).getLeft();
                  this.setLeft(e);
                } else {
                  var o = this.displayedChildren[0].getLeft();
                  this.setLeft(o);
                }
              else this.setLeft(null);
            }),
            (t.prototype.getLeft = function () {
              return this.left;
            }),
            (t.prototype.getOldLeft = function () {
              return this.oldLeft;
            }),
            (t.prototype.setLeft = function (e) {
              (this.oldLeft = e),
                this.left !== e &&
                  ((this.left = e),
                  this.localEventService.dispatchEvent(
                    this.createAgEvent(t.EVENT_LEFT_CHANGED)
                  ));
            }),
            (t.prototype.getPinned = function () {
              return this.pinned;
            }),
            (t.prototype.createAgEvent = function (t) {
              return { type: t };
            }),
            (t.prototype.addEventListener = function (t, e) {
              this.localEventService.addEventListener(t, e);
            }),
            (t.prototype.removeEventListener = function (t, e) {
              this.localEventService.removeEventListener(t, e);
            }),
            (t.prototype.getGroupId = function () {
              return this.groupId;
            }),
            (t.prototype.getInstanceId = function () {
              return this.instanceId;
            }),
            (t.prototype.isChildInThisGroupDeepSearch = function (e) {
              var o = !1;
              return (
                this.children.forEach(function (n) {
                  e === n && (o = !0),
                    n instanceof t &&
                      n.isChildInThisGroupDeepSearch(e) &&
                      (o = !0);
                }),
                o
              );
            }),
            (t.prototype.getActualWidth = function () {
              var t = 0;
              return (
                this.displayedChildren &&
                  this.displayedChildren.forEach(function (e) {
                    t += e.getActualWidth();
                  }),
                t
              );
            }),
            (t.prototype.isResizable = function () {
              if (!this.displayedChildren) return !1;
              var t = !1;
              return (
                this.displayedChildren.forEach(function (e) {
                  e.isResizable() && (t = !0);
                }),
                t
              );
            }),
            (t.prototype.getMinWidth = function () {
              var t = 0;
              return (
                this.displayedChildren.forEach(function (e) {
                  t += e.getMinWidth() || 0;
                }),
                t
              );
            }),
            (t.prototype.addChild = function (t) {
              this.children || (this.children = []), this.children.push(t);
            }),
            (t.prototype.getDisplayedChildren = function () {
              return this.displayedChildren;
            }),
            (t.prototype.getLeafColumns = function () {
              var t = [];
              return this.addLeafColumns(t), t;
            }),
            (t.prototype.getDisplayedLeafColumns = function () {
              var t = [];
              return this.addDisplayedLeafColumns(t), t;
            }),
            (t.prototype.getDefinition = function () {
              return this.originalColumnGroup.getColGroupDef();
            }),
            (t.prototype.getColGroupDef = function () {
              return this.originalColumnGroup.getColGroupDef();
            }),
            (t.prototype.isPadding = function () {
              return this.originalColumnGroup.isPadding();
            }),
            (t.prototype.isExpandable = function () {
              return this.originalColumnGroup.isExpandable();
            }),
            (t.prototype.isExpanded = function () {
              return this.originalColumnGroup.isExpanded();
            }),
            (t.prototype.setExpanded = function (t) {
              this.originalColumnGroup.setExpanded(t);
            }),
            (t.prototype.addDisplayedLeafColumns = function (e) {
              this.displayedChildren.forEach(function (o) {
                o instanceof bt
                  ? e.push(o)
                  : o instanceof t && o.addDisplayedLeafColumns(e);
              });
            }),
            (t.prototype.addLeafColumns = function (e) {
              this.children.forEach(function (o) {
                o instanceof bt
                  ? e.push(o)
                  : o instanceof t && o.addLeafColumns(e);
              });
            }),
            (t.prototype.getChildren = function () {
              return this.children;
            }),
            (t.prototype.getColumnGroupShow = function () {
              return this.originalColumnGroup.getColumnGroupShow();
            }),
            (t.prototype.getOriginalColumnGroup = function () {
              return this.originalColumnGroup;
            }),
            (t.prototype.getPaddingLevel = function () {
              var t = this.getParent();
              return this.isPadding() && t && t.isPadding()
                ? 1 + t.getPaddingLevel()
                : 0;
            }),
            (t.prototype.calculateDisplayedColumns = function () {
              var e = this;
              this.displayedChildren = [];
              for (var o = this; null != o && o.isPadding(); )
                o = o.getParent();
              o && o.originalColumnGroup.isExpandable()
                ? (this.children.forEach(function (n) {
                    if (
                      !(n instanceof t) ||
                      (n.displayedChildren && n.displayedChildren.length)
                    )
                      switch (n.getColumnGroupShow()) {
                        case t.HEADER_GROUP_SHOW_OPEN:
                          o.originalColumnGroup.isExpanded() &&
                            e.displayedChildren.push(n);
                          break;
                        case t.HEADER_GROUP_SHOW_CLOSED:
                          o.originalColumnGroup.isExpanded() ||
                            e.displayedChildren.push(n);
                          break;
                        default:
                          e.displayedChildren.push(n);
                      }
                  }),
                  this.localEventService.dispatchEvent(
                    this.createAgEvent(t.EVENT_DISPLAYED_CHILDREN_CHANGED)
                  ))
                : (this.displayedChildren = this.children);
            }),
            (t.HEADER_GROUP_SHOW_OPEN = "open"),
            (t.HEADER_GROUP_SHOW_CLOSED = "closed"),
            (t.EVENT_LEFT_CHANGED = "leftChanged"),
            (t.EVENT_DISPLAYED_CHILDREN_CHANGED = "displayedChildrenChanged"),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            t
          );
        })(),
        St = (function () {
          function t(t, e, o, n) {
            (this.localEventService = new mt()),
              (this.expandable = !1),
              (this.colGroupDef = t),
              (this.groupId = e),
              (this.expanded = !!t && !!t.openByDefault),
              (this.padding = o),
              (this.level = n);
          }
          return (
            (t.prototype.setOriginalParent = function (t) {
              this.originalParent = t;
            }),
            (t.prototype.getOriginalParent = function () {
              return this.originalParent;
            }),
            (t.prototype.getLevel = function () {
              return this.level;
            }),
            (t.prototype.isVisible = function () {
              return (
                !!this.children &&
                this.children.some(function (t) {
                  return t.isVisible();
                })
              );
            }),
            (t.prototype.isPadding = function () {
              return this.padding;
            }),
            (t.prototype.setExpanded = function (e) {
              (this.expanded = void 0 !== e && e),
                this.localEventService.dispatchEvent({
                  type: t.EVENT_EXPANDED_CHANGED,
                });
            }),
            (t.prototype.isExpandable = function () {
              return this.expandable;
            }),
            (t.prototype.isExpanded = function () {
              return this.expanded;
            }),
            (t.prototype.getGroupId = function () {
              return this.groupId;
            }),
            (t.prototype.getId = function () {
              return this.getGroupId();
            }),
            (t.prototype.setChildren = function (t) {
              this.children = t;
            }),
            (t.prototype.getChildren = function () {
              return this.children;
            }),
            (t.prototype.getColGroupDef = function () {
              return this.colGroupDef;
            }),
            (t.prototype.getLeafColumns = function () {
              var t = [];
              return this.addLeafColumns(t), t;
            }),
            (t.prototype.addLeafColumns = function (e) {
              this.children &&
                this.children.forEach(function (o) {
                  o instanceof bt
                    ? e.push(o)
                    : o instanceof t && o.addLeafColumns(e);
                });
            }),
            (t.prototype.getColumnGroupShow = function () {
              var t = this.colGroupDef;
              if (t) return t.columnGroupShow;
            }),
            (t.prototype.setupExpandable = function () {
              var t = this;
              this.setExpandable(),
                this.getLeafColumns().forEach(function (e) {
                  return e.addEventListener(
                    bt.EVENT_VISIBLE_CHANGED,
                    t.onColumnVisibilityChanged.bind(t)
                  );
                });
            }),
            (t.prototype.setExpandable = function () {
              if (!this.isPadding()) {
                for (
                  var e = !1,
                    o = !1,
                    n = !1,
                    r = this.findChildrenRemovingPadding(),
                    i = 0,
                    s = r.length;
                  i < s;
                  i++
                ) {
                  var a = r[i];
                  if (a.isVisible()) {
                    var l = a.getColumnGroupShow();
                    l === Et.HEADER_GROUP_SHOW_OPEN
                      ? ((e = !0), (n = !0))
                      : l === Et.HEADER_GROUP_SHOW_CLOSED
                      ? ((o = !0), (n = !0))
                      : ((e = !0), (o = !0));
                  }
                }
                var u = e && o && n;
                this.expandable !== u &&
                  ((this.expandable = u),
                  this.localEventService.dispatchEvent({
                    type: t.EVENT_EXPANDABLE_CHANGED,
                  }));
              }
            }),
            (t.prototype.findChildrenRemovingPadding = function () {
              var e = [],
                o = function (n) {
                  n.forEach(function (n) {
                    n instanceof t && n.isPadding() ? o(n.children) : e.push(n);
                  });
                };
              return o(this.children), e;
            }),
            (t.prototype.onColumnVisibilityChanged = function () {
              this.setExpandable();
            }),
            (t.prototype.addEventListener = function (t, e) {
              this.localEventService.addEventListener(t, e);
            }),
            (t.prototype.removeEventListener = function (t, e) {
              this.localEventService.removeEventListener(t, e);
            }),
            (t.EVENT_EXPANDED_CHANGED = "expandedChanged"),
            (t.EVENT_EXPANDABLE_CHANGED = "expandableChanged"),
            t
          );
        })(),
        Ot = {
          numericColumn: {
            headerClass: "ag-right-aligned-header",
            cellClass: "ag-right-aligned-cell",
          },
          rightAligned: {
            headerClass: "ag-right-aligned-header",
            cellClass: "ag-right-aligned-cell",
          },
        },
        _t = "__ag_Grid_Stop_Propagation",
        Rt = ["touchstart", "touchend", "touchmove", "touchcancel"],
        Pt = {};
      function Tt(t) {
        t[_t] = !0;
      }
      function At(t) {
        return !0 === t[_t];
      }
      var Dt,
        xt =
          ((Dt = {
            select: "input",
            change: "input",
            submit: "form",
            reset: "form",
            error: "img",
            load: "img",
            abort: "img",
          }),
          function (t) {
            if ("boolean" == typeof Pt[t]) return Pt[t];
            var e = document.createElement(Dt[t] || "div"),
              o = (t = "on" + t) in e;
            return (
              o ||
                (e.setAttribute(t, "return;"), (o = "function" == typeof e[t])),
              (Pt[t] = o)
            );
          });
      function Ft(t, e, o) {
        for (var n = Nt(e); n; ) {
          var r = t.getDomData(n, o);
          if (r) return r;
          n = n.parentElement;
        }
        return null;
      }
      function Nt(t) {
        return t.target || t.srcElement;
      }
      function Mt(t, e) {
        return !(!e || !t) && Lt(e).indexOf(t) >= 0;
      }
      function It(t) {
        for (var e = [], o = Nt(t); o; ) e.push(o), (o = o.parentElement);
        return e;
      }
      function Lt(t) {
        var e = t;
        return e.deepPath
          ? e.deepPath()
          : e.path
          ? e.path
          : e.composedPath
          ? e.composedPath()
          : e.__agGridEventPath
          ? e.__agGridEventPath
          : It(t);
      }
      function Gt(t, e, o, n) {
        var r = S(Rt, o);
        t &&
          t.addEventListener &&
          t.addEventListener(e, o, n, r ? { passive: !0 } : void 0);
      }
      var kt,
        Vt = Object.freeze({
          __proto__: null,
          stopPropagationForAgGrid: Tt,
          isStopPropagationForAgGrid: At,
          isEventSupported: xt,
          getComponentForEvent: Ft,
          addChangeListener: function (t, e) {
            t.addEventListener("changed", e),
              t.addEventListener("paste", e),
              t.addEventListener("input", e),
              t.addEventListener("keydown", e),
              t.addEventListener("keyup", e);
          },
          getTarget: Nt,
          isElementInEventPath: Mt,
          createEventPath: It,
          addAgGridEventPath: function (t) {
            t.__agGridEventPath = Lt(t);
          },
          getEventPath: Lt,
          addSafePassiveEventListener: Gt,
        }),
        Wt = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ht = (function () {
          function t() {
            var t = this;
            (this.destroyFunctions = []),
              (this.destroyed = !1),
              (this.__v_skip = !0),
              (this.getContext = function () {
                return t.context;
              }),
              (this.isAlive = function () {
                return !t.destroyed;
              });
          }
          return (
            (t.prototype.getFrameworkOverrides = function () {
              return this.frameworkOverrides;
            }),
            (t.prototype.destroy = function () {
              this.destroyFunctions.forEach(function (t) {
                return t();
              }),
                (this.destroyFunctions.length = 0),
                (this.destroyed = !0),
                this.dispatchEvent({ type: t.EVENT_DESTROYED });
            }),
            (t.prototype.addEventListener = function (t, e) {
              this.localEventService || (this.localEventService = new mt()),
                this.localEventService.addEventListener(t, e);
            }),
            (t.prototype.removeEventListener = function (t, e) {
              this.localEventService &&
                this.localEventService.removeEventListener(t, e);
            }),
            (t.prototype.dispatchEventAsync = function (t) {
              var e = this;
              window.setTimeout(function () {
                return e.dispatchEvent(t);
              }, 0);
            }),
            (t.prototype.dispatchEvent = function (t) {
              this.localEventService && this.localEventService.dispatchEvent(t);
            }),
            (t.prototype.addManagedListener = function (t, e, o) {
              var n = this;
              if (!this.destroyed) {
                t instanceof HTMLElement
                  ? Gt(this.getFrameworkOverrides(), t, e, o)
                  : t.addEventListener(e, o);
                var r = function () {
                  return (
                    t.removeEventListener(e, o),
                    (n.destroyFunctions = n.destroyFunctions.filter(function (
                      t
                    ) {
                      return t !== r;
                    })),
                    null
                  );
                };
                return this.destroyFunctions.push(r), r;
              }
            }),
            (t.prototype.addDestroyFunc = function (t) {
              this.isAlive() ? this.destroyFunctions.push(t) : t();
            }),
            (t.prototype.createManagedBean = function (t, e) {
              var o = this.createBean(t, e);
              return this.addDestroyFunc(this.destroyBean.bind(this, t, e)), o;
            }),
            (t.prototype.createBean = function (t, e, o) {
              return (e || this.getContext()).createBean(t, o);
            }),
            (t.prototype.destroyBean = function (t, e) {
              return (e || this.getContext()).destroyBean(t);
            }),
            (t.prototype.destroyBeans = function (t, e) {
              var o = this;
              return (
                t &&
                  T(t, function (t) {
                    return o.destroyBean(t, e);
                  }),
                []
              );
            }),
            (t.EVENT_DESTROYED = "destroyed"),
            Wt(
              [ut("frameworkOverrides")],
              t.prototype,
              "frameworkOverrides",
              void 0
            ),
            Wt([ut("context")], t.prototype, "context", void 0),
            Wt([ut("eventService")], t.prototype, "eventService", void 0),
            Wt(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            Wt([at], t.prototype, "destroy", null),
            t
          );
        })(),
        Bt =
          ((kt = function (t, e) {
            return (kt =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(t, e);
          }),
          function (t, e) {
            function o() {
              this.constructor = t;
            }
            kt(t, e),
              (t.prototype =
                null === e
                  ? Object.create(e)
                  : ((o.prototype = e.prototype), new o()));
          }),
        jt = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ut = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Bt(e, t),
            (e.prototype.setBeans = function (t) {
              this.logger = t.create("ColumnFactory");
            }),
            (e.prototype.createColumnTree = function (t, e, o) {
              var n = new f(),
                r = this.extractExistingTreeData(o),
                i = r.existingCols,
                s = r.existingGroups;
              n.addExistingKeys(r.existingColKeys);
              var a = this.recursivelyCreateColumns(t, 0, e, i, n, s),
                l = this.findMaxDept(a, 0);
              this.logger.log("Number of levels for grouped columns is " + l);
              var u = this.balanceColumnTree(a, 0, l, n);
              return (
                this.columnUtils.depthFirstOriginalTreeSearch(
                  null,
                  u,
                  function (t, e) {
                    t instanceof St && t.setupExpandable(),
                      t.setOriginalParent(e);
                  }
                ),
                { columnTree: u, treeDept: l }
              );
            }),
            (e.prototype.extractExistingTreeData = function (t) {
              var e = [],
                o = [],
                n = [];
              return (
                t &&
                  this.columnUtils.depthFirstOriginalTreeSearch(
                    null,
                    t,
                    function (t) {
                      if (t instanceof St) o.push(t);
                      else {
                        var r = t;
                        n.push(r.getId()), e.push(r);
                      }
                    }
                  ),
                { existingCols: e, existingGroups: o, existingColKeys: n }
              );
            }),
            (e.prototype.createForAutoGroups = function (t, e) {
              var o = this,
                n = [];
              return (
                t.forEach(function (t) {
                  var r = o.createAutoGroupTreeItem(e, t);
                  n.push(r);
                }),
                n
              );
            }),
            (e.prototype.createAutoGroupTreeItem = function (t, e) {
              for (var o = e, n = this.findDepth(t) - 1; n >= 0; n--) {
                var r = new St(
                  null,
                  "FAKE_PATH_" + e.getId() + "}_" + n,
                  !0,
                  n
                );
                this.context.createBean(r),
                  r.setChildren([o]),
                  o.setOriginalParent(r),
                  (o = r);
              }
              return o;
            }),
            (e.prototype.findDepth = function (t) {
              for (var e = 0, o = t; o && o[0] && o[0] instanceof St; )
                e++, (o = o[0].getChildren());
              return e;
            }),
            (e.prototype.balanceColumnTree = function (t, e, o, n) {
              for (var r = [], i = 0; i < t.length; i++) {
                var s = t[i];
                if (s instanceof St) {
                  var a = s,
                    l = this.balanceColumnTree(a.getChildren(), e + 1, o, n);
                  a.setChildren(l), r.push(a);
                } else {
                  for (var u = void 0, p = void 0, c = o - 1; c >= e; c--) {
                    var d = n.getUniqueKey(null, null),
                      h = this.createMergedColGroupDef(null),
                      f = new St(h, d, !0, e);
                    this.context.createBean(f),
                      p && p.setChildren([f]),
                      (p = f),
                      u || (u = p);
                  }
                  if (u && p) {
                    if (
                      (r.push(u),
                      t.some(function (t) {
                        return t instanceof St;
                      }))
                    ) {
                      p.setChildren([s]);
                      continue;
                    }
                    p.setChildren(t);
                    break;
                  }
                  r.push(s);
                }
              }
              return r;
            }),
            (e.prototype.findMaxDept = function (t, e) {
              for (var o = e, n = 0; n < t.length; n++) {
                var r = t[n];
                if (r instanceof St) {
                  var i = this.findMaxDept(r.getChildren(), e + 1);
                  o < i && (o = i);
                }
              }
              return o;
            }),
            (e.prototype.recursivelyCreateColumns = function (
              t,
              e,
              o,
              n,
              r,
              i
            ) {
              var s = this,
                a = [];
              return t
                ? (t.forEach(function (t) {
                    var l;
                    (l = s.isColumnGroup(t)
                      ? s.createColumnGroup(o, t, e, n, r, i)
                      : s.createColumn(o, t, n, r)),
                      a.push(l);
                  }),
                  a)
                : a;
            }),
            (e.prototype.createColumnGroup = function (t, e, o, n, r, i) {
              var s = this.createMergedColGroupDef(e),
                a = r.getUniqueKey(s.groupId || null, null),
                l = new St(s, a, !1, o);
              this.context.createBean(l);
              var u = this.findExistingGroup(e, i);
              u && u.isExpanded() && l.setExpanded(!0);
              var p = this.recursivelyCreateColumns(
                s.children,
                o + 1,
                t,
                n,
                r,
                i
              );
              return l.setChildren(p), l;
            }),
            (e.prototype.createMergedColGroupDef = function (t) {
              var e = {};
              return (
                W(e, this.gridOptionsWrapper.getDefaultColGroupDef()),
                W(e, t),
                this.checkForDeprecatedItems(e),
                e
              );
            }),
            (e.prototype.createColumn = function (t, e, o, n) {
              var r = this.mergeColDefs(e);
              this.checkForDeprecatedItems(r);
              var i = this.findExistingColumn(e, o);
              if (i) i.setColDef(r, e), this.applyColumnState(i, r);
              else {
                var s = n.getUniqueKey(r.colId, r.field);
                (i = new bt(r, e, s, t)), this.context.createBean(i);
              }
              return i;
            }),
            (e.prototype.applyColumnState = function (t, e) {
              var o = l(e.flex);
              if ((void 0 !== o && t.setFlex(o), t.getFlex() <= 0)) {
                var n = l(e.width);
                null != n && t.setActualWidth(n);
              }
              void 0 !== e.sort &&
                t.setSort(
                  e.sort == vt.SORT_ASC || e.sort == vt.SORT_DESC
                    ? e.sort
                    : void 0
                );
              var r = l(e.sortIndex);
              void 0 !== r && t.setSortIndex(r);
              var i = u(e.hide);
              void 0 !== i && t.setVisible(!i),
                void 0 !== e.pinned && t.setPinned(e.pinned);
            }),
            (e.prototype.findExistingColumn = function (t, e) {
              var o = c(e, function (e) {
                var o = e.getUserProvidedColDef();
                if (!o) return !1;
                var n = null != t.field;
                return null != t.colId
                  ? e.getId() === t.colId
                  : n
                  ? o.field === t.field
                  : o === t;
              });
              return e && o && C(e, o), o;
            }),
            (e.prototype.findExistingGroup = function (t, e) {
              var o = c(e, function (e) {
                return !(
                  !e.getColGroupDef() ||
                  null == t.groupId ||
                  e.getId() !== t.groupId
                );
              });
              return o && C(e, o), o;
            }),
            (e.prototype.mergeColDefs = function (t) {
              var e = {},
                o = this.gridOptionsWrapper.getDefaultColDef();
              V(e, o, !0, !0);
              var n = t.type;
              return (
                n || (n = o && o.type),
                n && this.assignColumnTypes(n, e),
                V(e, t, !0, !0),
                e
              );
            }),
            (e.prototype.assignColumnTypes = function (t, e) {
              var o = [];
              if (t instanceof Array)
                t.some(function (t) {
                  return "string" != typeof t;
                })
                  ? console.warn(
                      "ag-grid: if colDef.type is supplied an array it should be of type 'string[]'"
                    )
                  : (o = t);
              else {
                if ("string" != typeof t)
                  return void console.warn(
                    "ag-grid: colDef.type should be of type 'string' | 'string[]'"
                  );
                o = t.split(",");
              }
              var n = W({}, Ot);
              F(
                this.gridOptionsWrapper.getColumnTypes() || {},
                function (t, e) {
                  t in n
                    ? console.warn(
                        "AG Grid: the column type '" +
                          t +
                          "' is a default column type and cannot be overridden."
                      )
                    : (n[t] = e);
                }
              ),
                o.forEach(function (t) {
                  var o = n[t.trim()];
                  o
                    ? V(e, o, !0, !0)
                    : console.warn(
                        "ag-grid: colDef.type '" +
                          t +
                          "' does not correspond to defined gridOptions.columnTypes"
                      );
                });
            }),
            (e.prototype.checkForDeprecatedItems = function (t) {
              if (t) {
                var e = t;
                void 0 !== e.group &&
                  console.warn(
                    "ag-grid: colDef.group is invalid, please check documentation on how to do grouping as it changed in version 3"
                  ),
                  void 0 !== e.headerGroup &&
                    console.warn(
                      "ag-grid: colDef.headerGroup is invalid, please check documentation on how to do grouping as it changed in version 3"
                    ),
                  void 0 !== e.headerGroupShow &&
                    console.warn(
                      "ag-grid: colDef.headerGroupShow is invalid, should be columnGroupShow, please check documentation on how to do grouping as it changed in version 3"
                    ),
                  void 0 !== e.suppressRowGroup &&
                    console.warn(
                      "ag-grid: colDef.suppressRowGroup is deprecated, please use colDef.type instead"
                    ),
                  void 0 !== e.suppressAggregation &&
                    console.warn(
                      "ag-grid: colDef.suppressAggregation is deprecated, please use colDef.type instead"
                    ),
                  (e.suppressRowGroup || e.suppressAggregation) &&
                    console.warn(
                      "ag-grid: colDef.suppressAggregation and colDef.suppressRowGroup are deprecated, use allowRowGroup, allowPivot and allowValue instead"
                    ),
                  e.displayName &&
                    (console.warn(
                      "ag-grid: Found displayName " +
                        e.displayName +
                        ", please use headerName instead, displayName is deprecated."
                    ),
                    (e.headerName = e.displayName));
              }
            }),
            (e.prototype.isColumnGroup = function (t) {
              return void 0 !== t.children;
            }),
            jt([ut("columnUtils")], e.prototype, "columnUtils", void 0),
            jt(
              [
                (0,
                (o = dt("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            jt([lt("columnFactory")], e)
          );
          var o;
        })(Ht),
        zt = (function () {
          function t() {}
          return (
            (t.EVENT_COLUMN_EVERYTHING_CHANGED = "columnEverythingChanged"),
            (t.EVENT_NEW_COLUMNS_LOADED = "newColumnsLoaded"),
            (t.EVENT_COLUMN_PIVOT_MODE_CHANGED = "columnPivotModeChanged"),
            (t.EVENT_COLUMN_ROW_GROUP_CHANGED = "columnRowGroupChanged"),
            (t.EVENT_EXPAND_COLLAPSE_ALL = "expandOrCollapseAll"),
            (t.EVENT_COLUMN_PIVOT_CHANGED = "columnPivotChanged"),
            (t.EVENT_GRID_COLUMNS_CHANGED = "gridColumnsChanged"),
            (t.EVENT_COLUMN_VALUE_CHANGED = "columnValueChanged"),
            (t.EVENT_COLUMN_MOVED = "columnMoved"),
            (t.EVENT_COLUMN_VISIBLE = "columnVisible"),
            (t.EVENT_COLUMN_PINNED = "columnPinned"),
            (t.EVENT_COLUMN_GROUP_OPENED = "columnGroupOpened"),
            (t.EVENT_COLUMN_RESIZED = "columnResized"),
            (t.EVENT_DISPLAYED_COLUMNS_CHANGED = "displayedColumnsChanged"),
            (t.EVENT_VIRTUAL_COLUMNS_CHANGED = "virtualColumnsChanged"),
            (t.EVENT_ASYNC_TRANSACTIONS_FLUSHED = "asyncTransactionsFlushed"),
            (t.EVENT_ROW_GROUP_OPENED = "rowGroupOpened"),
            (t.EVENT_ROW_DATA_CHANGED = "rowDataChanged"),
            (t.EVENT_ROW_DATA_UPDATED = "rowDataUpdated"),
            (t.EVENT_PINNED_ROW_DATA_CHANGED = "pinnedRowDataChanged"),
            (t.EVENT_RANGE_SELECTION_CHANGED = "rangeSelectionChanged"),
            (t.EVENT_CHART_CREATED = "chartCreated"),
            (t.EVENT_CHART_RANGE_SELECTION_CHANGED =
              "chartRangeSelectionChanged"),
            (t.EVENT_CHART_OPTIONS_CHANGED = "chartOptionsChanged"),
            (t.EVENT_CHART_DESTROYED = "chartDestroyed"),
            (t.EVENT_TOOL_PANEL_VISIBLE_CHANGED = "toolPanelVisibleChanged"),
            (t.EVENT_MODEL_UPDATED = "modelUpdated"),
            (t.EVENT_PASTE_START = "pasteStart"),
            (t.EVENT_PASTE_END = "pasteEnd"),
            (t.EVENT_FILL_START = "fillStart"),
            (t.EVENT_FILL_END = "fillEnd"),
            (t.EVENT_CELL_CLICKED = "cellClicked"),
            (t.EVENT_CELL_DOUBLE_CLICKED = "cellDoubleClicked"),
            (t.EVENT_CELL_MOUSE_DOWN = "cellMouseDown"),
            (t.EVENT_CELL_CONTEXT_MENU = "cellContextMenu"),
            (t.EVENT_CELL_VALUE_CHANGED = "cellValueChanged"),
            (t.EVENT_ROW_VALUE_CHANGED = "rowValueChanged"),
            (t.EVENT_CELL_FOCUSED = "cellFocused"),
            (t.EVENT_ROW_SELECTED = "rowSelected"),
            (t.EVENT_SELECTION_CHANGED = "selectionChanged"),
            (t.EVENT_CELL_KEY_DOWN = "cellKeyDown"),
            (t.EVENT_CELL_KEY_PRESS = "cellKeyPress"),
            (t.EVENT_CELL_MOUSE_OVER = "cellMouseOver"),
            (t.EVENT_CELL_MOUSE_OUT = "cellMouseOut"),
            (t.EVENT_FILTER_CHANGED = "filterChanged"),
            (t.EVENT_FILTER_MODIFIED = "filterModified"),
            (t.EVENT_FILTER_OPENED = "filterOpened"),
            (t.EVENT_SORT_CHANGED = "sortChanged"),
            (t.EVENT_VIRTUAL_ROW_REMOVED = "virtualRowRemoved"),
            (t.EVENT_ROW_CLICKED = "rowClicked"),
            (t.EVENT_ROW_DOUBLE_CLICKED = "rowDoubleClicked"),
            (t.EVENT_GRID_READY = "gridReady"),
            (t.EVENT_GRID_SIZE_CHANGED = "gridSizeChanged"),
            (t.EVENT_VIEWPORT_CHANGED = "viewportChanged"),
            (t.EVENT_SCROLLBAR_WIDTH_CHANGED = "scrollbarWidthChanged"),
            (t.EVENT_FIRST_DATA_RENDERED = "firstDataRendered"),
            (t.EVENT_DRAG_STARTED = "dragStarted"),
            (t.EVENT_DRAG_STOPPED = "dragStopped"),
            (t.EVENT_CHECKBOX_CHANGED = "checkboxChanged"),
            (t.EVENT_ROW_EDITING_STARTED = "rowEditingStarted"),
            (t.EVENT_ROW_EDITING_STOPPED = "rowEditingStopped"),
            (t.EVENT_CELL_EDITING_STARTED = "cellEditingStarted"),
            (t.EVENT_CELL_EDITING_STOPPED = "cellEditingStopped"),
            (t.EVENT_BODY_SCROLL = "bodyScroll"),
            (t.EVENT_ANIMATION_QUEUE_EMPTY = "animationQueueEmpty"),
            (t.EVENT_HEIGHT_SCALE_CHANGED = "heightScaleChanged"),
            (t.EVENT_PAGINATION_CHANGED = "paginationChanged"),
            (t.EVENT_COMPONENT_STATE_CHANGED = "componentStateChanged"),
            (t.EVENT_BODY_HEIGHT_CHANGED = "bodyHeightChanged"),
            (t.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED =
              "displayedColumnsWidthChanged"),
            (t.EVENT_SCROLL_VISIBILITY_CHANGED = "scrollVisibilityChanged"),
            (t.EVENT_COLUMN_HOVER_CHANGED = "columnHoverChanged"),
            (t.EVENT_FLASH_CELLS = "flashCells"),
            (t.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED =
              "paginationPixelOffsetChanged"),
            (t.EVENT_ROW_DRAG_ENTER = "rowDragEnter"),
            (t.EVENT_ROW_DRAG_MOVE = "rowDragMove"),
            (t.EVENT_ROW_DRAG_LEAVE = "rowDragLeave"),
            (t.EVENT_ROW_DRAG_END = "rowDragEnd"),
            (t.EVENT_POPUP_TO_FRONT = "popupToFront"),
            (t.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST =
              "columnRowGroupChangeRequest"),
            (t.EVENT_COLUMN_PIVOT_CHANGE_REQUEST = "columnPivotChangeRequest"),
            (t.EVENT_COLUMN_VALUE_CHANGE_REQUEST = "columnValueChangeRequest"),
            (t.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST =
              "columnAggFuncChangeRequest"),
            (t.EVENT_KEYBOARD_FOCUS = "keyboardFocus"),
            (t.EVENT_MOUSE_FOCUS = "mouseFocus"),
            (t.EVENT_STORE_UPDATED = "storeUpdated"),
            t
          );
        })(),
        Kt = (function () {
          function t() {
            this.existingIds = {};
          }
          return (
            (t.prototype.getInstanceIdForKey = function (t) {
              var e,
                o = this.existingIds[t];
              return (
                (this.existingIds[t] = e = "number" != typeof o ? 0 : o + 1), e
              );
            }),
            t
          );
        })(),
        Yt = /[&<>"']/g,
        Xt = {
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&#39;",
        };
      function qt(t) {
        return null == t
          ? null
          : t.replace(/([A-Z])/g, function (t) {
              return "-" + t[0].toLowerCase();
            });
      }
      function Qt(t) {
        return null == t
          ? null
          : t.replace(/-([a-z])/g, function (t) {
              return t[1].toUpperCase();
            });
      }
      function Zt(t) {
        return null != t && t.replace
          ? t.replace(Yt, function (t) {
              return Xt[t];
            })
          : t;
      }
      function $t(t) {
        return t && null != t
          ? t
              .replace(/([A-Z])([A-Z])([a-z])|([a-z])([A-Z])/g, "$1$4 $2$3$5")
              .replace(".", " ")
              .split(" ")
              .map(function (t) {
                return (
                  t.substring(0, 1).toUpperCase() +
                  (t.length > 1 ? t.substring(1, t.length) : "")
                );
              })
              .join(" ")
          : null;
      }
      function Jt(t, e) {
        return t === e || (null != t && t.slice(0, e.length) === e);
      }
      var te = Object.freeze({
          __proto__: null,
          utf8_encode: function (t) {
            var e = String.fromCharCode;
            function o(t, o) {
              return e(((t >> o) & 63) | 128);
            }
            function n(t) {
              if (0 == (4294967168 & t)) return e(t);
              var n = "";
              return (
                0 == (4294965248 & t)
                  ? (n = e(((t >> 6) & 31) | 192))
                  : 0 == (4294901760 & t)
                  ? ((function (t) {
                      if (t >= 55296 && t <= 57343)
                        throw Error(
                          "Lone surrogate U+" +
                            t.toString(16).toUpperCase() +
                            " is not a scalar value"
                        );
                    })(t),
                    (n = e(((t >> 12) & 15) | 224)),
                    (n += o(t, 6)))
                  : 0 == (4292870144 & t) &&
                    ((n = e(((t >> 18) & 7) | 240)),
                    (n += o(t, 12)),
                    (n += o(t, 6))),
                n + e((63 & t) | 128)
              );
            }
            for (
              var r = (function (t) {
                  var e = [];
                  if (!t) return [];
                  for (var o, n, r = t.length, i = 0; i < r; )
                    (o = t.charCodeAt(i++)) >= 55296 && o <= 56319 && i < r
                      ? 56320 == (64512 & (n = t.charCodeAt(i++)))
                        ? e.push(((1023 & o) << 10) + (1023 & n) + 65536)
                        : (e.push(o), i--)
                      : e.push(o);
                  return e;
                })(t),
                i = r.length,
                s = -1,
                a = "";
              ++s < i;

            )
              a += n(r[s]);
            return a;
          },
          camelCaseToHyphen: qt,
          hyphenToCamelCase: Qt,
          capitalise: function (t) {
            return t[0].toUpperCase() + t.substr(1).toLowerCase();
          },
          escapeString: Zt,
          camelCaseToHumanText: $t,
          startsWith: Jt,
        }),
        ee = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        oe = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ne = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.primaryHeaderRowCount = 0),
              (e.secondaryHeaderRowCount = 0),
              (e.secondaryColumnsPresent = !1),
              (e.gridHeaderRowCount = 0),
              (e.displayedColumnsLeft = []),
              (e.displayedColumnsRight = []),
              (e.displayedColumnsCenter = []),
              (e.displayedColumns = []),
              (e.displayedColumnsAndGroupsMap = {}),
              (e.viewportColumns = []),
              (e.viewportColumnsCenter = []),
              (e.rowGroupColumns = []),
              (e.valueColumns = []),
              (e.pivotColumns = []),
              (e.ready = !1),
              (e.autoGroupsNeedBuilding = !1),
              (e.forceRecreateAutoGroups = !1),
              (e.pivotMode = !1),
              (e.bodyWidth = 0),
              (e.leftWidth = 0),
              (e.rightWidth = 0),
              (e.bodyWidthDirty = !0),
              (e.colDefVersion = 0),
              (e.flexColsCalculatedAtLestOnce = !1),
              e
            );
          }
          return (
            ee(e, t),
            (e.prototype.init = function () {
              this.suppressColumnVirtualisation =
                this.gridOptionsWrapper.isSuppressColumnVirtualisation();
              var t = this.gridOptionsWrapper.isPivotMode();
              this.isPivotSettingAllowed(t) && (this.pivotMode = t),
                (this.usingTreeData = this.gridOptionsWrapper.isTreeData()),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  "autoGroupColumnDef",
                  this.onAutoGroupColumnDefChanged.bind(this)
                );
            }),
            (e.prototype.onAutoGroupColumnDefChanged = function () {
              (this.autoGroupsNeedBuilding = !0),
                (this.forceRecreateAutoGroups = !0),
                this.updateGridColumns(),
                this.updateDisplayedColumns("gridOptionsChanged");
            }),
            (e.prototype.getColDefVersion = function () {
              return this.colDefVersion;
            }),
            (e.prototype.setColumnDefs = function (t, e) {
              var o = this;
              void 0 === e && (e = "api");
              var n = !!this.columnDefs;
              this.colDefVersion++;
              var r = this.compareColumnStatesAndRaiseEvents(e);
              (this.columnDefs = t),
                this.valueCache.expire(),
                (this.autoGroupsNeedBuilding = !0);
              var i = this.primaryColumns,
                s = this.columnFactory.createColumnTree(
                  t,
                  !0,
                  this.primaryColumnTree
                );
              (this.primaryColumnTree = s.columnTree),
                (this.primaryHeaderRowCount = s.treeDept + 1),
                (this.primaryColumns = this.getColumnsFromTree(
                  this.primaryColumnTree
                )),
                (this.primaryColumnsMap = {}),
                this.primaryColumns.forEach(function (t) {
                  return (o.primaryColumnsMap[t.getId()] = t);
                }),
                this.extractRowGroupColumns(e, i),
                this.extractPivotColumns(e, i),
                this.extractValueColumns(e, i),
                (this.ready = !0),
                this.updateGridColumns(),
                n &&
                  this.gridColsArePrimary &&
                  this.gridOptionsWrapper.isApplyColumnDefOrder() &&
                  this.orderGridColumnsLikePrimary(),
                this.updateDisplayedColumns(e),
                this.checkViewportColumns(),
                this.dispatchEverythingChanged(e),
                r(),
                this.dispatchNewColumnsLoaded();
            }),
            (e.prototype.dispatchNewColumnsLoaded = function () {
              this.eventService.dispatchEvent({
                type: zt.EVENT_NEW_COLUMNS_LOADED,
                api: this.gridApi,
                columnApi: this.columnApi,
              });
            }),
            (e.prototype.dispatchEverythingChanged = function (t) {
              void 0 === t && (t = "api"),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_COLUMN_EVERYTHING_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  source: t,
                });
            }),
            (e.prototype.orderGridColumnsLikePrimary = function () {
              var t = this;
              this.gridColumns.sort(function (e, o) {
                var n = t.primaryColumns.indexOf(e),
                  r = t.primaryColumns.indexOf(o),
                  i = n >= 0,
                  s = r >= 0;
                return i && s
                  ? n - r
                  : i
                  ? 1
                  : s
                  ? -1
                  : t.gridColumns.indexOf(e) - t.gridColumns.indexOf(o);
              });
            }),
            (e.prototype.isAutoRowHeightActive = function () {
              return (
                this.autoRowHeightColumns &&
                this.autoRowHeightColumns.length > 0
              );
            }),
            (e.prototype.getAllAutoRowHeightCols = function () {
              return this.autoRowHeightColumns;
            }),
            (e.prototype.setViewport = function () {
              this.gridOptionsWrapper.isEnableRtl()
                ? ((this.viewportLeft =
                    this.bodyWidth - this.scrollPosition - this.scrollWidth),
                  (this.viewportRight = this.bodyWidth - this.scrollPosition))
                : ((this.viewportLeft = this.scrollPosition),
                  (this.viewportRight =
                    this.scrollWidth + this.scrollPosition));
            }),
            (e.prototype.getDisplayedColumnsStartingAt = function (t) {
              for (var e = t, o = []; null != e; )
                o.push(e), (e = this.getDisplayedColAfter(e));
              return o;
            }),
            (e.prototype.checkViewportColumns = function () {
              if (null != this.displayedColumnsCenter) {
                var t = this.viewportColumns
                  .map(function (t) {
                    return t.getId();
                  })
                  .join("#");
                this.extractViewport(),
                  t !==
                    this.viewportColumns
                      .map(function (t) {
                        return t.getId();
                      })
                      .join("#") &&
                    this.eventService.dispatchEvent({
                      type: zt.EVENT_VIRTUAL_COLUMNS_CHANGED,
                      api: this.gridApi,
                      columnApi: this.columnApi,
                    });
              }
            }),
            (e.prototype.setViewportPosition = function (t, e) {
              (t !== this.scrollWidth ||
                e !== this.scrollPosition ||
                this.bodyWidthDirty) &&
                ((this.scrollWidth = t),
                (this.scrollPosition = e),
                (this.bodyWidthDirty = !0),
                this.setViewport(),
                this.ready && this.checkViewportColumns());
            }),
            (e.prototype.isPivotMode = function () {
              return this.pivotMode;
            }),
            (e.prototype.isPivotSettingAllowed = function (t) {
              return (
                !t ||
                !this.gridOptionsWrapper.isTreeData() ||
                (console.warn(
                  "AG Grid: Pivot mode not available in conjunction Tree Data i.e. 'gridOptions.treeData: true'"
                ),
                !1)
              );
            }),
            (e.prototype.setPivotMode = function (t, e) {
              void 0 === e && (e = "api"),
                t !== this.pivotMode &&
                  this.isPivotSettingAllowed(this.pivotMode) &&
                  ((this.pivotMode = t),
                  (this.autoGroupsNeedBuilding = !0),
                  this.updateGridColumns(),
                  this.updateDisplayedColumns(e),
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  }));
            }),
            (e.prototype.getSecondaryPivotColumn = function (t, e) {
              if (!this.secondaryColumnsPresent || !this.secondaryColumns)
                return null;
              var o = this.getPrimaryColumn(e),
                n = null;
              return (
                this.secondaryColumns.forEach(function (e) {
                  var r = e.getColDef().pivotKeys,
                    i = e.getColDef().pivotValueColumn;
                  m(r, t) && i === o && (n = e);
                }),
                n
              );
            }),
            (e.prototype.setBeans = function (t) {
              this.logger = t.create("ColumnController");
            }),
            (e.prototype.setFirstRightAndLastLeftPinned = function (t) {
              var e, o;
              this.gridOptionsWrapper.isEnableRtl()
                ? ((e = this.displayedColumnsLeft
                    ? this.displayedColumnsLeft[0]
                    : null),
                  (o = this.displayedColumnsRight
                    ? y(this.displayedColumnsRight)
                    : null))
                : ((e = this.displayedColumnsLeft
                    ? y(this.displayedColumnsLeft)
                    : null),
                  (o = this.displayedColumnsRight
                    ? this.displayedColumnsRight[0]
                    : null)),
                this.gridColumns.forEach(function (n) {
                  n.setLastLeftPinned(n === e, t),
                    n.setFirstRightPinned(n === o, t);
                });
            }),
            (e.prototype.autoSizeColumns = function (t, e, o) {
              var n = this;
              void 0 === o && (o = "api"),
                this.animationFrameService.flushAllFrames();
              var r = [],
                i = -1;
              for (
                null == e &&
                (e = this.gridOptionsWrapper.isSkipHeaderOnAutoSize());
                0 !== i;

              )
                (i = 0),
                  this.actionOnGridColumns(
                    t,
                    function (t) {
                      if (r.indexOf(t) >= 0) return !1;
                      var s = n.autoWidthCalculator.getPreferredWidthForColumn(
                        t,
                        e
                      );
                      if (s > 0) {
                        var a = n.normaliseColumnWidth(t, s);
                        t.setActualWidth(a, o), r.push(t), i++;
                      }
                      return !0;
                    },
                    o
                  );
              this.fireColumnResizedEvent(r, !0, "autosizeColumns");
            }),
            (e.prototype.fireColumnResizedEvent = function (t, e, o, n) {
              void 0 === n && (n = null),
                t &&
                  t.length &&
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_COLUMN_RESIZED,
                    columns: t,
                    column: 1 === t.length ? t[0] : null,
                    flexColumns: n,
                    finished: e,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                    source: o,
                  });
            }),
            (e.prototype.autoSizeColumn = function (t, e, o) {
              void 0 === o && (o = "api"), t && this.autoSizeColumns([t], e, o);
            }),
            (e.prototype.autoSizeAllColumns = function (t, e) {
              void 0 === e && (e = "api");
              var o = this.getAllDisplayedColumns();
              this.autoSizeColumns(o, t, e);
            }),
            (e.prototype.getColumnsFromTree = function (t) {
              var e = [],
                o = function (t) {
                  for (var n = 0; n < t.length; n++) {
                    var r = t[n];
                    r instanceof bt
                      ? e.push(r)
                      : r instanceof St && o(r.getChildren());
                  }
                };
              return o(t), e;
            }),
            (e.prototype.getAllDisplayedTrees = function () {
              return this.displayedTreeLeft &&
                this.displayedTreeRight &&
                this.displayedTreeCentre
                ? this.displayedTreeLeft
                    .concat(this.displayedTreeCentre)
                    .concat(this.displayedTreeRight)
                : null;
            }),
            (e.prototype.getPrimaryColumnTree = function () {
              return this.primaryColumnTree;
            }),
            (e.prototype.getHeaderRowCount = function () {
              return this.gridHeaderRowCount;
            }),
            (e.prototype.getDisplayedTreeLeft = function () {
              return this.displayedTreeLeft;
            }),
            (e.prototype.getDisplayedTreeRight = function () {
              return this.displayedTreeRight;
            }),
            (e.prototype.getDisplayedTreeCentre = function () {
              return this.displayedTreeCentre;
            }),
            (e.prototype.isColumnDisplayed = function (t) {
              return this.getAllDisplayedColumns().indexOf(t) >= 0;
            }),
            (e.prototype.getAllDisplayedColumns = function () {
              return this.displayedColumns;
            }),
            (e.prototype.getViewportColumns = function () {
              return this.viewportColumns;
            }),
            (e.prototype.getDisplayedLeftColumnsForRow = function (t) {
              return this.colSpanActive
                ? this.getDisplayedColumnsForRow(t, this.displayedColumnsLeft)
                : this.displayedColumnsLeft;
            }),
            (e.prototype.getDisplayedRightColumnsForRow = function (t) {
              return this.colSpanActive
                ? this.getDisplayedColumnsForRow(t, this.displayedColumnsRight)
                : this.displayedColumnsRight;
            }),
            (e.prototype.getDisplayedColumnsForRow = function (t, e, o, n) {
              for (
                var r,
                  i = [],
                  s = null,
                  a = function (a) {
                    var l,
                      u = e[a],
                      p = e.length - a,
                      c = Math.min(u.getColSpan(t), p),
                      d = [u];
                    if (c > 1) {
                      for (var h = c - 1, f = 1; f <= h; f++) d.push(e[a + f]);
                      a += h;
                    }
                    o
                      ? ((l = !1),
                        d.forEach(function (t) {
                          o(t) && (l = !0);
                        }))
                      : (l = !0),
                      l &&
                        (0 === i.length && s && n && n(u) && i.push(s),
                        i.push(u)),
                      (s = u),
                      (r = a);
                  },
                  l = 0;
                l < e.length;
                l++
              )
                a(l), (l = r);
              return i;
            }),
            (e.prototype.getViewportCenterColumnsForRow = function (t) {
              var e = this;
              if (!this.colSpanActive) return this.viewportColumnsCenter;
              var o = this.suppressColumnVirtualisation
                ? null
                : this.isColumnInViewport.bind(this);
              return this.getDisplayedColumnsForRow(
                t,
                this.displayedColumnsCenter,
                o,
                function (t) {
                  var o = t.getLeft();
                  return r(o) && o > e.viewportLeft;
                }
              );
            }),
            (e.prototype.getAriaColumnIndex = function (t) {
              return this.getAllGridColumns().indexOf(t) + 1;
            }),
            (e.prototype.isColumnInViewport = function (t) {
              var e = t.getLeft() || 0,
                o = e + t.getActualWidth(),
                n = this.viewportLeft - 200,
                r = this.viewportRight + 200;
              return !((e < n && o < n) || (e > r && o > r));
            }),
            (e.prototype.getDisplayedColumnsLeftWidth = function () {
              return this.getWidthOfColsInList(this.displayedColumnsLeft);
            }),
            (e.prototype.getDisplayedColumnsRightWidth = function () {
              return this.getWidthOfColsInList(this.displayedColumnsRight);
            }),
            (e.prototype.updatePrimaryColumnList = function (t, e, o, n, r, i) {
              var a = this;
              if ((void 0 === i && (i = "api"), t && !s(t))) {
                var l = !1;
                t.forEach(function (t) {
                  var r = a.getPrimaryColumn(t);
                  if (r) {
                    if (o) {
                      if (e.indexOf(r) >= 0) return;
                      e.push(r);
                    } else {
                      if (e.indexOf(r) < 0) return;
                      C(e, r);
                    }
                    n(r), (l = !0);
                  }
                }),
                  l &&
                    (this.autoGroupsNeedBuilding && this.updateGridColumns(),
                    this.updateDisplayedColumns(i),
                    this.eventService.dispatchEvent({
                      type: r,
                      columns: e,
                      column: 1 === e.length ? e[0] : null,
                      api: this.gridApi,
                      columnApi: this.columnApi,
                      source: i,
                    }));
              }
            }),
            (e.prototype.setRowGroupColumns = function (t, e) {
              void 0 === e && (e = "api"),
                (this.autoGroupsNeedBuilding = !0),
                this.setPrimaryColumnList(
                  t,
                  this.rowGroupColumns,
                  zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  this.setRowGroupActive.bind(this),
                  e
                );
            }),
            (e.prototype.setRowGroupActive = function (t, e, o) {
              t !== e.isRowGroupActive() &&
                (e.setRowGroupActive(t, o),
                t ||
                  this.gridOptionsWrapper.isSuppressMakeColumnVisibleAfterUnGroup() ||
                  e.setVisible(!0, o));
            }),
            (e.prototype.addRowGroupColumn = function (t, e) {
              void 0 === e && (e = "api"), t && this.addRowGroupColumns([t], e);
            }),
            (e.prototype.addRowGroupColumns = function (t, e) {
              void 0 === e && (e = "api"),
                (this.autoGroupsNeedBuilding = !0),
                this.updatePrimaryColumnList(
                  t,
                  this.rowGroupColumns,
                  !0,
                  this.setRowGroupActive.bind(this, !0),
                  zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  e
                );
            }),
            (e.prototype.removeRowGroupColumns = function (t, e) {
              void 0 === e && (e = "api"),
                (this.autoGroupsNeedBuilding = !0),
                this.updatePrimaryColumnList(
                  t,
                  this.rowGroupColumns,
                  !1,
                  this.setRowGroupActive.bind(this, !1),
                  zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  e
                );
            }),
            (e.prototype.removeRowGroupColumn = function (t, e) {
              void 0 === e && (e = "api"),
                t && this.removeRowGroupColumns([t], e);
            }),
            (e.prototype.addPivotColumns = function (t, e) {
              void 0 === e && (e = "api"),
                this.updatePrimaryColumnList(
                  t,
                  this.pivotColumns,
                  !0,
                  function (t) {
                    return t.setPivotActive(!0, e);
                  },
                  zt.EVENT_COLUMN_PIVOT_CHANGED,
                  e
                );
            }),
            (e.prototype.setPivotColumns = function (t, e) {
              void 0 === e && (e = "api"),
                this.setPrimaryColumnList(
                  t,
                  this.pivotColumns,
                  zt.EVENT_COLUMN_PIVOT_CHANGED,
                  function (t, o) {
                    o.setPivotActive(t, e);
                  },
                  e
                );
            }),
            (e.prototype.addPivotColumn = function (t, e) {
              void 0 === e && (e = "api"), this.addPivotColumns([t], e);
            }),
            (e.prototype.removePivotColumns = function (t, e) {
              void 0 === e && (e = "api"),
                this.updatePrimaryColumnList(
                  t,
                  this.pivotColumns,
                  !1,
                  function (t) {
                    return t.setPivotActive(!1, e);
                  },
                  zt.EVENT_COLUMN_PIVOT_CHANGED,
                  e
                );
            }),
            (e.prototype.removePivotColumn = function (t, e) {
              void 0 === e && (e = "api"), this.removePivotColumns([t], e);
            }),
            (e.prototype.setPrimaryColumnList = function (t, e, o, n, i) {
              var s = this;
              (e.length = 0),
                r(t) &&
                  t.forEach(function (t) {
                    var o = s.getPrimaryColumn(t);
                    o && e.push(o);
                  }),
                this.primaryColumns.forEach(function (t) {
                  var o = e.indexOf(t) >= 0;
                  n(o, t);
                }),
                this.autoGroupsNeedBuilding && this.updateGridColumns(),
                this.updateDisplayedColumns(i),
                this.eventService.dispatchEvent({
                  type: o,
                  columns: e,
                  column: 1 === e.length ? e[0] : null,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  source: i,
                });
            }),
            (e.prototype.setValueColumns = function (t, e) {
              void 0 === e && (e = "api"),
                this.setPrimaryColumnList(
                  t,
                  this.valueColumns,
                  zt.EVENT_COLUMN_VALUE_CHANGED,
                  this.setValueActive.bind(this),
                  e
                );
            }),
            (e.prototype.setValueActive = function (t, e, o) {
              if (
                t !== e.isValueActive() &&
                (e.setValueActive(t, o), t && !e.getAggFunc())
              ) {
                var n = this.aggFuncService.getDefaultAggFunc(e);
                e.setAggFunc(n);
              }
            }),
            (e.prototype.addValueColumns = function (t, e) {
              void 0 === e && (e = "api"),
                this.updatePrimaryColumnList(
                  t,
                  this.valueColumns,
                  !0,
                  this.setValueActive.bind(this, !0),
                  zt.EVENT_COLUMN_VALUE_CHANGED,
                  e
                );
            }),
            (e.prototype.addValueColumn = function (t, e) {
              void 0 === e && (e = "api"), t && this.addValueColumns([t], e);
            }),
            (e.prototype.removeValueColumn = function (t, e) {
              void 0 === e && (e = "api"), this.removeValueColumns([t], e);
            }),
            (e.prototype.removeValueColumns = function (t, e) {
              void 0 === e && (e = "api"),
                this.updatePrimaryColumnList(
                  t,
                  this.valueColumns,
                  !1,
                  this.setValueActive.bind(this, !1),
                  zt.EVENT_COLUMN_VALUE_CHANGED,
                  e
                );
            }),
            (e.prototype.normaliseColumnWidth = function (t, e) {
              var o = t.getMinWidth();
              r(o) && e < o && (e = o);
              var n = t.getMaxWidth();
              return r(n) && t.isGreaterThanMax(e) && (e = n), e;
            }),
            (e.prototype.getPrimaryOrGridColumn = function (t) {
              return this.getPrimaryColumn(t) || this.getGridColumn(t);
            }),
            (e.prototype.setColumnWidths = function (t, e, o, n) {
              var r = this;
              void 0 === n && (n = "api");
              var i = [];
              t.forEach(function (t) {
                var o = r.getPrimaryOrGridColumn(t.key);
                if (
                  o &&
                  (i.push({ width: t.newWidth, ratios: [1], columns: [o] }),
                  "shift" === r.gridOptionsWrapper.getColResizeDefault() &&
                    (e = !e),
                  e)
                ) {
                  var n = r.getDisplayedColAfter(o);
                  if (!n) return;
                  var s = o.getActualWidth() - t.newWidth,
                    a = n.getActualWidth() + s;
                  i.push({ width: a, ratios: [1], columns: [n] });
                }
              }),
                0 !== i.length && this.resizeColumnSets(i, o, n);
            }),
            (e.prototype.checkMinAndMaxWidthsForSet = function (t) {
              var e = t.width,
                o = 0,
                n = 0,
                i = !0;
              return (
                t.columns.forEach(function (t) {
                  var e = t.getMinWidth();
                  o += e || 0;
                  var s = t.getMaxWidth();
                  r(s) && s > 0 ? (n += s) : (i = !1);
                }),
                e >= o && (!i || e <= n)
              );
            }),
            (e.prototype.resizeColumnSets = function (t, e, o) {
              if (!t || t.every(this.checkMinAndMaxWidthsForSet.bind(this))) {
                var n = [],
                  i = [];
                t.forEach(function (t) {
                  var e = t.width,
                    s = t.columns,
                    a = t.ratios,
                    l = {},
                    u = {};
                  s.forEach(function (t) {
                    return i.push(t);
                  });
                  for (
                    var p = !0,
                      c = 0,
                      d = function () {
                        if (++c > 1e3)
                          return (
                            console.error(
                              "AG Grid: infinite loop in resizeColumnSets"
                            ),
                            "break"
                          );
                        p = !1;
                        var t = [],
                          o = 0,
                          n = e;
                        s.forEach(function (e, r) {
                          u[e.getId()]
                            ? (n -= l[e.getId()])
                            : (t.push(e), (o += a[r]));
                        });
                        var i = 1 / o;
                        t.forEach(function (o, s) {
                          var c;
                          s === t.length - 1
                            ? (c = n)
                            : ((c = Math.round(a[s] * e * i)), (n -= c));
                          var d = o.getMinWidth(),
                            h = o.getMaxWidth();
                          r(d) && c < d
                            ? ((c = d), (u[o.getId()] = !0), (p = !0))
                            : r(h) &&
                              h > 0 &&
                              c > h &&
                              ((c = h), (u[o.getId()] = !0), (p = !0)),
                            (l[o.getId()] = c);
                        });
                      };
                    p && "break" !== d();

                  );
                  s.forEach(function (t) {
                    var e = l[t.getId()];
                    t.getActualWidth() !== e &&
                      (t.setActualWidth(e, o), n.push(t));
                  });
                });
                var s = n.length > 0,
                  a = this.refreshFlexedColumns({
                    resizingCols: i,
                    skipSetLeft: !0,
                  });
                s &&
                  (this.setLeftValues(o),
                  this.updateBodyWidths(),
                  this.checkViewportColumns());
                var l = i.concat(a);
                (s || e) && this.fireColumnResizedEvent(l, e, o, a);
              } else
                e &&
                  this.fireColumnResizedEvent(
                    t && t.length > 0 ? t[0].columns : null,
                    e,
                    o
                  );
            }),
            (e.prototype.setColumnAggFunc = function (t, e, o) {
              if ((void 0 === o && (o = "api"), t)) {
                var n = this.getPrimaryColumn(t);
                n &&
                  (n.setAggFunc(e),
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_COLUMN_VALUE_CHANGED,
                    columns: [n],
                    column: n,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                    source: o,
                  }));
              }
            }),
            (e.prototype.moveRowGroupColumn = function (t, e, o) {
              void 0 === o && (o = "api");
              var n = this.rowGroupColumns[t];
              this.rowGroupColumns.splice(t, 1),
                this.rowGroupColumns.splice(e, 0, n),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  columns: this.rowGroupColumns,
                  column:
                    1 === this.rowGroupColumns.length
                      ? this.rowGroupColumns[0]
                      : null,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  source: o,
                });
            }),
            (e.prototype.moveColumns = function (t, e, o) {
              if (
                (void 0 === o && (o = "api"),
                this.columnAnimationService.start(),
                e > this.gridColumns.length - t.length)
              )
                return (
                  console.warn(
                    "AG Grid: tried to insert columns in invalid location, toIndex = " +
                      e
                  ),
                  void console.warn(
                    "AG Grid: remember that you should not count the moving columns when calculating the new index"
                  )
                );
              var n = this.getGridColumns(t);
              !this.doesMovePassRules(n, e) ||
                (E(this.gridColumns, n, e),
                this.updateDisplayedColumns(o),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_COLUMN_MOVED,
                  columns: n,
                  column: 1 === n.length ? n[0] : null,
                  toIndex: e,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  source: o,
                }),
                this.columnAnimationService.finish());
            }),
            (e.prototype.doesMovePassRules = function (t, e) {
              var o = this.gridColumns.slice();
              return (
                E(o, t, e),
                !!this.doesMovePassMarryChildren(o) &&
                  !!this.doesMovePassLockedPositions(o)
              );
            }),
            (e.prototype.sortColumnsLikeGridColumns = function (t) {
              var e = this;
              !t ||
                t.length <= 1 ||
                t.filter(function (t) {
                  return e.gridColumns.indexOf(t) < 0;
                }).length > 0 ||
                t.sort(function (t, o) {
                  return e.gridColumns.indexOf(t) - e.gridColumns.indexOf(o);
                });
            }),
            (e.prototype.doesMovePassLockedPositions = function (t) {
              var e = !1,
                o = !0;
              return (
                t.forEach(function (t) {
                  t.getColDef().lockPosition ? e && (o = !1) : (e = !0);
                }),
                o
              );
            }),
            (e.prototype.doesMovePassMarryChildren = function (t) {
              var e = !0;
              return (
                this.columnUtils.depthFirstOriginalTreeSearch(
                  null,
                  this.gridBalancedTree,
                  function (o) {
                    if (o instanceof St) {
                      var n = o,
                        r = n.getColGroupDef();
                      if (r && r.marryChildren) {
                        var i = [];
                        n.getLeafColumns().forEach(function (e) {
                          var o = t.indexOf(e);
                          i.push(o);
                        }),
                          Math.max.apply(Math, i) - Math.min.apply(Math, i) >
                            n.getLeafColumns().length - 1 && (e = !1);
                      }
                    }
                  }
                ),
                e
              );
            }),
            (e.prototype.moveColumn = function (t, e, o) {
              void 0 === o && (o = "api"), this.moveColumns([t], e, o);
            }),
            (e.prototype.moveColumnByIndex = function (t, e, o) {
              void 0 === o && (o = "api"),
                this.moveColumn(this.gridColumns[t], e, o);
            }),
            (e.prototype.getColumnDefs = function () {
              var t = this,
                e = this.primaryColumns.slice();
              return (
                this.gridColsArePrimary
                  ? e.sort(function (e, o) {
                      return (
                        t.gridColumns.indexOf(e) - t.gridColumns.indexOf(o)
                      );
                    })
                  : this.lastPrimaryOrder &&
                    e.sort(function (e, o) {
                      return (
                        t.lastPrimaryOrder.indexOf(e) -
                        t.lastPrimaryOrder.indexOf(o)
                      );
                    }),
                this.columnDefFactory.buildColumnDefs(
                  e,
                  this.rowGroupColumns,
                  this.pivotColumns
                )
              );
            }),
            (e.prototype.getBodyContainerWidth = function () {
              return this.bodyWidth;
            }),
            (e.prototype.getContainerWidth = function (t) {
              switch (t) {
                case vt.PINNED_LEFT:
                  return this.leftWidth;
                case vt.PINNED_RIGHT:
                  return this.rightWidth;
                default:
                  return this.bodyWidth;
              }
            }),
            (e.prototype.updateBodyWidths = function () {
              var t = this.getWidthOfColsInList(this.displayedColumnsCenter),
                e = this.getWidthOfColsInList(this.displayedColumnsLeft),
                o = this.getWidthOfColsInList(this.displayedColumnsRight);
              (this.bodyWidthDirty = this.bodyWidth !== t),
                (this.bodyWidth !== t ||
                  this.leftWidth !== e ||
                  this.rightWidth !== o) &&
                  ((this.bodyWidth = t),
                  (this.leftWidth = e),
                  (this.rightWidth = o),
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  }));
            }),
            (e.prototype.getValueColumns = function () {
              return this.valueColumns ? this.valueColumns : [];
            }),
            (e.prototype.getPivotColumns = function () {
              return this.pivotColumns ? this.pivotColumns : [];
            }),
            (e.prototype.isPivotActive = function () {
              return (
                this.pivotColumns &&
                this.pivotColumns.length > 0 &&
                this.pivotMode
              );
            }),
            (e.prototype.getRowGroupColumns = function () {
              return this.rowGroupColumns ? this.rowGroupColumns : [];
            }),
            (e.prototype.getDisplayedCenterColumns = function () {
              return this.displayedColumnsCenter;
            }),
            (e.prototype.getDisplayedLeftColumns = function () {
              return this.displayedColumnsLeft;
            }),
            (e.prototype.getDisplayedRightColumns = function () {
              return this.displayedColumnsRight;
            }),
            (e.prototype.getDisplayedColumns = function (t) {
              switch (t) {
                case vt.PINNED_LEFT:
                  return this.getDisplayedLeftColumns();
                case vt.PINNED_RIGHT:
                  return this.getDisplayedRightColumns();
                default:
                  return this.getDisplayedCenterColumns();
              }
            }),
            (e.prototype.getAllPrimaryColumns = function () {
              return this.primaryColumns ? this.primaryColumns.slice() : null;
            }),
            (e.prototype.getSecondaryColumns = function () {
              return this.secondaryColumns
                ? this.secondaryColumns.slice()
                : null;
            }),
            (e.prototype.getAllColumnsForQuickFilter = function () {
              return this.columnsForQuickFilter;
            }),
            (e.prototype.getAllGridColumns = function () {
              return this.gridColumns;
            }),
            (e.prototype.isEmpty = function () {
              return s(this.gridColumns);
            }),
            (e.prototype.isRowGroupEmpty = function () {
              return s(this.rowGroupColumns);
            }),
            (e.prototype.setColumnVisible = function (t, e, o) {
              void 0 === o && (o = "api"), this.setColumnsVisible([t], e, o);
            }),
            (e.prototype.setColumnsVisible = function (t, e, o) {
              var n = this;
              void 0 === e && (e = !1),
                void 0 === o && (o = "api"),
                this.columnAnimationService.start(),
                this.actionOnGridColumns(
                  t,
                  function (t) {
                    return t.isVisible() !== e && (t.setVisible(e, o), !0);
                  },
                  o,
                  function () {
                    return {
                      type: zt.EVENT_COLUMN_VISIBLE,
                      visible: e,
                      column: null,
                      columns: null,
                      api: n.gridApi,
                      columnApi: n.columnApi,
                      source: o,
                    };
                  }
                ),
                this.columnAnimationService.finish();
            }),
            (e.prototype.setColumnPinned = function (t, e, o) {
              void 0 === o && (o = "api"),
                t && this.setColumnsPinned([t], e, o);
            }),
            (e.prototype.setColumnsPinned = function (t, e, o) {
              var n,
                r = this;
              void 0 === o && (o = "api"),
                "print" !== this.gridOptionsWrapper.getDomLayout()
                  ? (this.columnAnimationService.start(),
                    (n =
                      !0 === e || e === vt.PINNED_LEFT
                        ? vt.PINNED_LEFT
                        : e === vt.PINNED_RIGHT
                        ? vt.PINNED_RIGHT
                        : null),
                    this.actionOnGridColumns(
                      t,
                      function (t) {
                        return t.getPinned() !== n && (t.setPinned(n), !0);
                      },
                      o,
                      function () {
                        return {
                          type: zt.EVENT_COLUMN_PINNED,
                          pinned: n,
                          column: null,
                          columns: null,
                          api: r.gridApi,
                          columnApi: r.columnApi,
                          source: o,
                        };
                      }
                    ),
                    this.columnAnimationService.finish())
                  : console.warn(
                      "Changing the column pinning status is not allowed with domLayout='print'"
                    );
            }),
            (e.prototype.actionOnGridColumns = function (t, e, o, n) {
              var i = this;
              if (!s(t)) {
                var a = [];
                if (
                  (t.forEach(function (t) {
                    var o = i.getGridColumn(t);
                    o && !1 !== e(o) && a.push(o);
                  }),
                  a.length && (this.updateDisplayedColumns(o), r(n) && n))
                ) {
                  var l = n();
                  (l.columns = a),
                    (l.column = 1 === a.length ? a[0] : null),
                    this.eventService.dispatchEvent(l);
                }
              }
            }),
            (e.prototype.getDisplayedColBefore = function (t) {
              var e = this.getAllDisplayedColumns(),
                o = e.indexOf(t);
              return o > 0 ? e[o - 1] : null;
            }),
            (e.prototype.getDisplayedColAfter = function (t) {
              var e = this.getAllDisplayedColumns(),
                o = e.indexOf(t);
              return o < e.length - 1 ? e[o + 1] : null;
            }),
            (e.prototype.getDisplayedGroupAfter = function (t) {
              return this.getDisplayedGroupAtDirection(t, "After");
            }),
            (e.prototype.getDisplayedGroupBefore = function (t) {
              return this.getDisplayedGroupAtDirection(t, "Before");
            }),
            (e.prototype.getDisplayedGroupAtDirection = function (t, e) {
              for (
                var o =
                    t.getOriginalColumnGroup().getLevel() + t.getPaddingLevel(),
                  n = t.getDisplayedLeafColumns(),
                  r = "After" === e ? y(n) : n[0],
                  i = "getDisplayedCol" + e;
                ;

              ) {
                var s = this[i](r);
                if (!s) return null;
                var a = this.getColumnGroupAtLevel(s, o);
                if (a !== t) return a;
              }
            }),
            (e.prototype.getColumnGroupAtLevel = function (t, e) {
              for (
                var o = t.getParent();
                !(
                  o.getOriginalColumnGroup().getLevel() + o.getPaddingLevel() <=
                  e
                );

              )
                o = o.getParent();
              return o;
            }),
            (e.prototype.isPinningLeft = function () {
              return this.displayedColumnsLeft.length > 0;
            }),
            (e.prototype.isPinningRight = function () {
              return this.displayedColumnsRight.length > 0;
            }),
            (e.prototype.getPrimaryAndSecondaryAndAutoColumns = function () {
              var t = this.primaryColumns ? this.primaryColumns.slice(0) : [];
              return (
                this.groupAutoColumns &&
                  r(this.groupAutoColumns) &&
                  this.groupAutoColumns.forEach(function (e) {
                    return t.push(e);
                  }),
                this.secondaryColumnsPresent &&
                  this.secondaryColumns &&
                  this.secondaryColumns.forEach(function (e) {
                    return t.push(e);
                  }),
                t
              );
            }),
            (e.prototype.createStateItemFromColumn = function (t) {
              var e = t.isRowGroupActive()
                  ? this.rowGroupColumns.indexOf(t)
                  : null,
                o = t.isPivotActive() ? this.pivotColumns.indexOf(t) : null,
                n = t.isValueActive() ? t.getAggFunc() : null,
                r = null != t.getSort() ? t.getSort() : null,
                i = null != t.getSortIndex() ? t.getSortIndex() : null,
                s = null != t.getFlex() && t.getFlex() > 0 ? t.getFlex() : null;
              return {
                colId: t.getColId(),
                width: t.getActualWidth(),
                hide: !t.isVisible(),
                pinned: t.getPinned(),
                sort: r,
                sortIndex: i,
                aggFunc: n,
                rowGroup: t.isRowGroupActive(),
                rowGroupIndex: e,
                pivot: t.isPivotActive(),
                pivotIndex: o,
                flex: s,
              };
            }),
            (e.prototype.getColumnState = function () {
              if (i(this.primaryColumns) || !this.isAlive()) return [];
              var t = this.primaryColumns.map(
                  this.createStateItemFromColumn.bind(this)
                ),
                e = (
                  this.groupAutoColumns
                    ? this.groupAutoColumns.map(
                        this.createStateItemFromColumn.bind(this)
                      )
                    : []
                ).concat(t);
              return this.pivotMode || this.orderColumnStateList(e), e;
            }),
            (e.prototype.orderColumnStateList = function (t) {
              var e = new Map(
                this.gridColumns.map(function (t, e) {
                  return [t.getColId(), e];
                })
              );
              t.sort(function (t, o) {
                return (
                  (e.has(t.colId) ? e.get(t.colId) : -1) -
                  (e.has(o.colId) ? e.get(o.colId) : -1)
                );
              });
            }),
            (e.prototype.resetColumnState = function (t) {
              void 0 === t && (t = "api");
              var e = this.getColumnsFromTree(this.primaryColumnTree),
                o = [],
                n = 1e3,
                r = 1e3,
                s = [];
              this.groupAutoColumns && (s = s.concat(this.groupAutoColumns)),
                e && (s = s.concat(e)),
                s.forEach(function (t) {
                  var e = t.getColDef(),
                    s = null != e.sort ? e.sort : null,
                    a = e.sortIndex,
                    l = !!e.hide,
                    u = e.pinned ? e.pinned : null,
                    p = e.width,
                    c = null != e.flex ? e.flex : null,
                    d = e.rowGroupIndex,
                    h = e.rowGroup;
                  null != d ||
                    (null != h && 0 != h) ||
                    ((d = null), (h = null));
                  var f = e.pivotIndex,
                    g = e.pivot;
                  null != f ||
                    (null != g && 0 != g) ||
                    ((f = null), (g = null));
                  var y = null != e.aggFunc ? e.aggFunc : null,
                    m = {
                      colId: t.getColId(),
                      sort: s,
                      sortIndex: a,
                      hide: l,
                      pinned: u,
                      width: p,
                      flex: c,
                      rowGroup: h,
                      rowGroupIndex: d,
                      pivot: g,
                      pivotIndex: f,
                      aggFunc: y,
                    };
                  i(d) && h && (m.rowGroupIndex = n++),
                    i(f) && g && (m.pivotIndex = r++),
                    o.push(m);
                }),
                this.applyColumnState({ state: o, applyOrder: !0 }, t);
            }),
            (e.prototype.applyColumnState = function (t, e) {
              var o = this;
              if ((void 0 === e && (e = "api"), s(this.primaryColumns)))
                return !1;
              if (t && t.state && !t.state.forEach)
                return (
                  console.warn(
                    "AG Grid: applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state."
                  ),
                  !1
                );
              this.columnAnimationService.start();
              var n = this.compareColumnStatesAndRaiseEvents(e);
              this.autoGroupsNeedBuilding = !0;
              var r = this.primaryColumns.slice(),
                i = !0,
                a = {},
                l = {},
                u = [],
                p = this.rowGroupColumns.slice(),
                c = this.pivotColumns.slice();
              t.state &&
                t.state.forEach(function (n) {
                  var s = n.colId || "";
                  if (Jt(s, vt.GROUP_AUTO_COLUMN_ID)) u.push(n);
                  else {
                    var p = o.getPrimaryColumn(s);
                    p
                      ? (o.syncColumnWithStateItem(
                          p,
                          n,
                          t.defaultState,
                          a,
                          l,
                          !1,
                          e
                        ),
                        C(r, p))
                      : (i = !1);
                  }
                }),
                r.forEach(function (n) {
                  o.syncColumnWithStateItem(
                    n,
                    null,
                    t.defaultState,
                    a,
                    l,
                    !1,
                    e
                  );
                });
              var d = function (t, e, o, n) {
                var r = t[o.getId()],
                  i = t[n.getId()],
                  s = null != r,
                  a = null != i;
                if (s && a) return r - i;
                if (s) return -1;
                if (a) return 1;
                var l = e.indexOf(o),
                  u = e.indexOf(n),
                  p = l >= 0;
                return p && u >= 0 ? l - u : p ? -1 : 1;
              };
              return (
                this.rowGroupColumns.sort(d.bind(this, a, p)),
                this.pivotColumns.sort(d.bind(this, l, c)),
                this.updateGridColumns(),
                u.forEach(function (n) {
                  var r = o.getAutoColumn(n.colId);
                  o.syncColumnWithStateItem(
                    r,
                    n,
                    t.defaultState,
                    null,
                    null,
                    !0,
                    e
                  );
                }),
                this.applyOrderAfterApplyState(t),
                this.updateDisplayedColumns(e),
                this.dispatchEverythingChanged(e),
                n(),
                this.columnAnimationService.finish(),
                i
              );
            }),
            (e.prototype.applyOrderAfterApplyState = function (t) {
              var e = this;
              if (this.gridColsArePrimary && t.applyOrder && t.state) {
                var o = [],
                  n = {};
                t.state.forEach(function (t) {
                  if (t.colId && !n[t.colId]) {
                    var r = e.primaryColumnsMap[t.colId];
                    r && (o.push(r), (n[t.colId] = !0));
                  }
                }),
                  this.gridColumns.forEach(function (t) {
                    n[t.getColId()] || o.push(t);
                  }),
                  (o = this.putFixedColumnsFirst(o)),
                  this.doesMovePassMarryChildren(o)
                    ? (this.gridColumns = o)
                    : console.warn(
                        "AG Grid: Applying column order broke a group where columns should be married together. Applying new order has been discarded."
                      );
              }
            }),
            (e.prototype.compareColumnStatesAndRaiseEvents = function (t) {
              var e = this;
              if (!this.columnDefs) return function () {};
              var o = {
                  rowGroupColumns: this.rowGroupColumns.slice(),
                  pivotColumns: this.pivotColumns.slice(),
                  valueColumns: this.valueColumns.slice(),
                },
                n = this.getColumnState(),
                r = {};
              return (
                n.forEach(function (t) {
                  r[t.colId] = t;
                }),
                function () {
                  if (!e.gridOptionsWrapper.isSuppressColumnStateEvents()) {
                    var i = function (o, n, r, i) {
                        m(n.map(i).sort(), r.map(i).sort()) ||
                          e.eventService.dispatchEvent({
                            type: o,
                            columns: r,
                            column: 1 === r.length ? r[0] : null,
                            api: e.gridApi,
                            columnApi: e.columnApi,
                            source: t,
                          });
                      },
                      s = function (t) {
                        var o = [];
                        return (
                          e.gridColumns.forEach(function (e) {
                            var n = r[e.getColId()];
                            n && t(n, e) && o.push(e);
                          }),
                          o
                        );
                      },
                      a = function (t) {
                        return t.getColId();
                      };
                    i(
                      zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                      o.rowGroupColumns,
                      e.rowGroupColumns,
                      a
                    ),
                      i(
                        zt.EVENT_COLUMN_PIVOT_CHANGED,
                        o.pivotColumns,
                        e.pivotColumns,
                        a
                      ),
                      i(
                        zt.EVENT_COLUMN_VALUE_CHANGED,
                        o.valueColumns,
                        e.valueColumns,
                        a
                      ),
                      e.fireColumnResizedEvent(
                        s(function (t, e) {
                          return t.width != e.getActualWidth();
                        }),
                        !0,
                        t
                      ),
                      e.raiseColumnPinnedEvent(
                        s(function (t, e) {
                          return t.pinned != e.getPinned();
                        }),
                        t
                      ),
                      e.raiseColumnVisibleEvent(
                        s(function (t, e) {
                          return t.hide == e.isVisible();
                        }),
                        t
                      ),
                      s(function (t, e) {
                        return (
                          t.sort != e.getSort() ||
                          t.sortIndex != e.getSortIndex()
                        );
                      }).length > 0 &&
                        e.sortController.dispatchSortChangedEvents(),
                      e.raiseColumnMovedEvent(n, t);
                  }
                }
              );
            }),
            (e.prototype.raiseColumnPinnedEvent = function (t, e) {
              t.length &&
                this.eventService.dispatchEvent({
                  type: zt.EVENT_COLUMN_PINNED,
                  pinned: null,
                  columns: t,
                  column: null,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  source: e,
                });
            }),
            (e.prototype.raiseColumnVisibleEvent = function (t, e) {
              t.length &&
                this.eventService.dispatchEvent({
                  type: zt.EVENT_COLUMN_VISIBLE,
                  visible: void 0,
                  columns: t,
                  column: null,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  source: e,
                });
            }),
            (e.prototype.raiseColumnMovedEvent = function (t, e) {
              var o = this,
                n = this.getColumnState(),
                r = {};
              n.forEach(function (t) {
                return (r[t.colId] = t);
              });
              var i = {};
              t.forEach(function (t) {
                r[t.colId] && (i[t.colId] = !0);
              });
              var s = D(t, function (t) {
                  return i[t.colId];
                }),
                a = D(n, function (t) {
                  return i[t.colId];
                }),
                l = [];
              a.forEach(function (t, e) {
                var n = s && s[e];
                if (n && n.colId !== t.colId) {
                  var r = o.getGridColumn(n.colId);
                  r && l.push(r);
                }
              }),
                l.length &&
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_COLUMN_MOVED,
                    columns: l,
                    column: null,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                    source: e,
                  });
            }),
            (e.prototype.syncColumnWithStateItem = function (
              t,
              e,
              o,
              n,
              i,
              s,
              a
            ) {
              if (t) {
                var l = function (t, n) {
                    var i = e,
                      s = o,
                      a = { value1: void 0, value2: void 0 },
                      l = !1;
                    return (
                      i &&
                        (void 0 !== i[t] && ((a.value1 = i[t]), (l = !0)),
                        r(n) &&
                          void 0 !== i[n] &&
                          ((a.value2 = i[n]), (l = !0))),
                      !l &&
                        s &&
                        (void 0 !== s[t] && (a.value1 = s[t]),
                        r(n) && void 0 !== s[n] && (a.value2 = s[n])),
                      a
                    );
                  },
                  u = l("hide").value1;
                void 0 !== u && t.setVisible(!u, a);
                var p = l("pinned").value1;
                void 0 !== p && t.setPinned(p);
                var c = this.gridOptionsWrapper.getMinColWidth(),
                  d = l("flex").value1;
                if ((void 0 !== d && t.setFlex(d), t.getFlex() <= 0)) {
                  var h = l("width").value1;
                  null != h && c && h >= c && t.setActualWidth(h, a);
                }
                var f = l("sort").value1;
                void 0 !== f &&
                  t.setSort(
                    f === vt.SORT_DESC || f === vt.SORT_ASC ? f : void 0
                  );
                var g = l("sortIndex").value1;
                if ((void 0 !== g && t.setSortIndex(g), !s)) {
                  var y = l("aggFunc").value1;
                  void 0 !== y &&
                    ("string" == typeof y
                      ? (t.setAggFunc(y),
                        t.isValueActive() ||
                          (t.setValueActive(!0, a), this.valueColumns.push(t)))
                      : (r(y) &&
                          console.warn(
                            "AG Grid: stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON."
                          ),
                        t.setAggFunc(null),
                        t.isValueActive() &&
                          (t.setValueActive(!1, a), C(this.valueColumns, t))));
                  var m = l("rowGroup", "rowGroupIndex"),
                    v = m.value1,
                    w = m.value2;
                  (void 0 === v && void 0 === w) ||
                    ("number" == typeof w || v
                      ? (t.isRowGroupActive() ||
                          (t.setRowGroupActive(!0, a),
                          this.rowGroupColumns.push(t)),
                        n && "number" == typeof w && (n[t.getId()] = w))
                      : t.isRowGroupActive() &&
                        (t.setRowGroupActive(!1, a),
                        C(this.rowGroupColumns, t)));
                  var b = l("pivot", "pivotIndex"),
                    E = b.value1,
                    S = b.value2;
                  (void 0 === E && void 0 === S) ||
                    ("number" == typeof S || E
                      ? (t.isPivotActive() ||
                          (t.setPivotActive(!0, a), this.pivotColumns.push(t)),
                        i && "number" == typeof S && (i[t.getId()] = S))
                      : t.isPivotActive() &&
                        (t.setPivotActive(!1, a), C(this.pivotColumns, t)));
                }
              }
            }),
            (e.prototype.getGridColumns = function (t) {
              return this.getColumns(t, this.getGridColumn.bind(this));
            }),
            (e.prototype.getColumns = function (t, e) {
              var o = [];
              return (
                t &&
                  t.forEach(function (t) {
                    var n = e(t);
                    n && o.push(n);
                  }),
                o
              );
            }),
            (e.prototype.getColumnWithValidation = function (t) {
              if (null == t) return null;
              var e = this.getGridColumn(t);
              return (
                e || console.warn("AG Grid: could not find column " + t), e
              );
            }),
            (e.prototype.getPrimaryColumn = function (t) {
              return this.getColumn(
                t,
                this.primaryColumns,
                this.primaryColumnsMap
              );
            }),
            (e.prototype.getGridColumn = function (t) {
              return this.getColumn(t, this.gridColumns, this.gridColumnsMap);
            }),
            (e.prototype.getColumn = function (t, e, o) {
              if (!t) return null;
              if ("string" == typeof t && o[t]) return o[t];
              for (var n = 0; n < e.length; n++)
                if (this.columnsMatch(e[n], t)) return e[n];
              return this.getAutoColumn(t);
            }),
            (e.prototype.getAutoColumn = function (t) {
              var e = this;
              return this.groupAutoColumns &&
                r(this.groupAutoColumns) &&
                !i(this.groupAutoColumns)
                ? c(this.groupAutoColumns, function (o) {
                    return e.columnsMatch(o, t);
                  })
                : null;
            }),
            (e.prototype.columnsMatch = function (t, e) {
              var o = t === e,
                n = t.getColDef() === e,
                r = t.getColId() == e;
              return o || n || r;
            }),
            (e.prototype.getDisplayNameForColumn = function (t, e, o) {
              if ((void 0 === o && (o = !1), !t)) return null;
              var n = this.getHeaderName(t.getColDef(), t, null, null, e);
              return o ? this.wrapHeaderNameWithAggFunc(t, n) : n;
            }),
            (e.prototype.getDisplayNameForOriginalColumnGroup = function (
              t,
              e,
              o
            ) {
              var n = e ? e.getColGroupDef() : null;
              return n ? this.getHeaderName(n, null, t, e, o) : null;
            }),
            (e.prototype.getDisplayNameForColumnGroup = function (t, e) {
              return this.getDisplayNameForOriginalColumnGroup(
                t,
                t.getOriginalColumnGroup(),
                e
              );
            }),
            (e.prototype.getHeaderName = function (t, e, o, n, r) {
              var i = t.headerValueGetter;
              if (i) {
                var s = {
                  colDef: t,
                  column: e,
                  columnGroup: o,
                  originalColumnGroup: n,
                  location: r,
                  api: this.gridOptionsWrapper.getApi(),
                  context: this.gridOptionsWrapper.getContext(),
                };
                return "function" == typeof i
                  ? i(s)
                  : "string" == typeof i
                  ? this.expressionService.evaluate(i, s)
                  : (console.warn(
                      "ag-grid: headerValueGetter must be a function or a string"
                    ),
                    "");
              }
              return null != t.headerName
                ? t.headerName
                : t.field
                ? $t(t.field)
                : "";
            }),
            (e.prototype.wrapHeaderNameWithAggFunc = function (t, e) {
              if (this.gridOptionsWrapper.isSuppressAggFuncInHeader()) return e;
              var o,
                n = t.getColDef().pivotValueColumn,
                i = null;
              if (r(n)) (i = n ? n.getAggFunc() : null), (o = !0);
              else {
                var s = t.isValueActive(),
                  a = this.pivotMode || !this.isRowGroupEmpty();
                s && a ? ((i = t.getAggFunc()), (o = !0)) : (o = !1);
              }
              if (o) {
                var l = "string" == typeof i ? i : "func";
                return (
                  this.gridOptionsWrapper.getLocaleTextFunc()(l, l) +
                  "(" +
                  e +
                  ")"
                );
              }
              return e;
            }),
            (e.prototype.getColumnGroup = function (t, e) {
              if (!t) return null;
              if (t instanceof Et) return t;
              var o = this.getAllDisplayedTrees(),
                n = "number" == typeof e,
                r = null;
              return (
                this.columnUtils.depthFirstAllColumnTreeSearch(o, function (o) {
                  if (o instanceof Et) {
                    var i = o;
                    (n
                      ? t === i.getGroupId() && e === i.getInstanceId()
                      : t === i.getGroupId()) && (r = i);
                  }
                }),
                r
              );
            }),
            (e.prototype.isReady = function () {
              return this.ready;
            }),
            (e.prototype.extractValueColumns = function (t, e) {
              (this.valueColumns = this.extractColumns(
                e,
                this.valueColumns,
                function (e, o) {
                  return e.setValueActive(o, t);
                },
                function () {},
                function () {},
                function (t) {
                  var e = t.aggFunc;
                  return null === e || "" === e
                    ? null
                    : void 0 !== e
                    ? !!e
                    : void 0;
                },
                function (t) {
                  return null != t.initialAggFunc && "" != t.initialAggFunc;
                }
              )),
                this.valueColumns.forEach(function (t) {
                  var e = t.getColDef();
                  null != e.aggFunc && "" != e.aggFunc
                    ? t.setAggFunc(e.aggFunc)
                    : t.getAggFunc() || t.setAggFunc(e.initialAggFunc);
                });
            }),
            (e.prototype.extractRowGroupColumns = function (t, e) {
              this.rowGroupColumns = this.extractColumns(
                e,
                this.rowGroupColumns,
                function (e, o) {
                  return e.setRowGroupActive(o, t);
                },
                function (t) {
                  return t.rowGroupIndex;
                },
                function (t) {
                  return t.initialRowGroupIndex;
                },
                function (t) {
                  return t.rowGroup;
                },
                function (t) {
                  return t.initialRowGroup;
                }
              );
            }),
            (e.prototype.extractColumns = function (t, e, o, n, r, i, s) {
              void 0 === t && (t = []), void 0 === e && (e = []);
              var a = [],
                p = [];
              this.primaryColumns.forEach(function (o) {
                var c = t.indexOf(o) < 0,
                  d = o.getColDef(),
                  h = u(i(d)),
                  f = u(s(d)),
                  g = l(n(d)),
                  y = l(r(d));
                (c
                  ? void 0 !== h || void 0 !== g
                    ? void 0 !== h
                      ? h
                      : g >= 0
                    : f || y >= 0
                  : void 0 !== h
                  ? h
                  : void 0 !== g
                  ? null !== g && g >= 0
                  : e.indexOf(o) >= 0) &&
                  ((c ? null != g || null != y : null != g)
                    ? a.push(o)
                    : p.push(o));
              });
              var c = function (t) {
                var e = n(t.getColDef()),
                  o = r(t.getColDef());
                return null != e ? e : o;
              };
              a.sort(function (t, e) {
                var o = c(t),
                  n = c(e);
                return o === n ? 0 : o < n ? -1 : 1;
              });
              var d = [].concat(a);
              return (
                e.forEach(function (t) {
                  p.indexOf(t) >= 0 && d.push(t);
                }),
                p.forEach(function (t) {
                  d.indexOf(t) < 0 && d.push(t);
                }),
                e.forEach(function (t) {
                  d.indexOf(t) < 0 && o(t, !1);
                }),
                d.forEach(function (t) {
                  e.indexOf(t) < 0 && o(t, !0);
                }),
                d
              );
            }),
            (e.prototype.extractPivotColumns = function (t, e) {
              this.pivotColumns = this.extractColumns(
                e,
                this.pivotColumns,
                function (e, o) {
                  return e.setPivotActive(o, t);
                },
                function (t) {
                  return t.pivotIndex;
                },
                function (t) {
                  return t.initialPivotIndex;
                },
                function (t) {
                  return t.pivot;
                },
                function (t) {
                  return t.initialPivot;
                }
              );
            }),
            (e.prototype.resetColumnGroupState = function (t) {
              void 0 === t && (t = "api");
              var e = [];
              this.columnUtils.depthFirstOriginalTreeSearch(
                null,
                this.primaryColumnTree,
                function (t) {
                  if (t instanceof St) {
                    var o = t.getColGroupDef(),
                      n = {
                        groupId: t.getGroupId(),
                        open: o ? o.openByDefault : void 0,
                      };
                    e.push(n);
                  }
                }
              ),
                this.setColumnGroupState(e, t);
            }),
            (e.prototype.getColumnGroupState = function () {
              var t = [];
              return (
                this.columnUtils.depthFirstOriginalTreeSearch(
                  null,
                  this.gridBalancedTree,
                  function (e) {
                    if (e instanceof St) {
                      var o = e;
                      t.push({ groupId: o.getGroupId(), open: o.isExpanded() });
                    }
                  }
                ),
                t
              );
            }),
            (e.prototype.setColumnGroupState = function (t, e) {
              var o = this;
              void 0 === e && (e = "api"), this.columnAnimationService.start();
              var n = [];
              t.forEach(function (t) {
                var e = t.open,
                  r = o.getOriginalColumnGroup(t.groupId);
                r &&
                  r.isExpanded() !== e &&
                  (o.logger.log(
                    "columnGroupOpened(" + r.getGroupId() + "," + e + ")"
                  ),
                  r.setExpanded(e),
                  n.push(r));
              }),
                this.updateGroupsAndDisplayedColumns(e),
                this.setFirstRightAndLastLeftPinned(e),
                n.forEach(function (t) {
                  o.eventService.dispatchEvent({
                    type: zt.EVENT_COLUMN_GROUP_OPENED,
                    columnGroup: t,
                    api: o.gridApi,
                    columnApi: o.columnApi,
                  });
                }),
                this.columnAnimationService.finish();
            }),
            (e.prototype.setColumnGroupOpened = function (t, e, o) {
              var n;
              void 0 === o && (o = "api"),
                (n = t instanceof St ? t.getId() : t || ""),
                this.setColumnGroupState([{ groupId: n, open: e }], o);
            }),
            (e.prototype.getOriginalColumnGroup = function (t) {
              if (t instanceof St) return t;
              "string" != typeof t &&
                console.error("AG Grid: group key must be a string");
              var e = null;
              return (
                this.columnUtils.depthFirstOriginalTreeSearch(
                  null,
                  this.gridBalancedTree,
                  function (o) {
                    if (o instanceof St) {
                      var n = o;
                      n.getId() === t && (e = n);
                    }
                  }
                ),
                e
              );
            }),
            (e.prototype.calculateColumnsForDisplay = function () {
              var t = this;
              return this.gridColumns.filter(
                this.pivotMode && !this.secondaryColumnsPresent
                  ? function (e) {
                      var o = t.groupAutoColumns && S(t.groupAutoColumns, e),
                        n = t.valueColumns && S(t.valueColumns, e);
                      return o || n;
                    }
                  : function (e) {
                      return (
                        (t.groupAutoColumns && S(t.groupAutoColumns, e)) ||
                        e.isVisible()
                      );
                    }
              );
            }),
            (e.prototype.checkColSpanActiveInCols = function (t) {
              var e = !1;
              return (
                t.forEach(function (t) {
                  r(t.getColDef().colSpan) && (e = !0);
                }),
                e
              );
            }),
            (e.prototype.calculateColumnsForGroupDisplay = function () {
              var t = this;
              this.groupDisplayColumns = [];
              var e = function (e) {
                var o = e.getColDef();
                o && r(o.showRowGroup) && t.groupDisplayColumns.push(e);
              };
              this.gridColumns.forEach(e),
                this.groupAutoColumns && this.groupAutoColumns.forEach(e);
            }),
            (e.prototype.getGroupDisplayColumns = function () {
              return this.groupDisplayColumns;
            }),
            (e.prototype.updateDisplayedColumns = function (t) {
              var e = this.calculateColumnsForDisplay();
              this.buildDisplayedTrees(e),
                this.calculateColumnsForGroupDisplay(),
                this.updateGroupsAndDisplayedColumns(t),
                this.setFirstRightAndLastLeftPinned(t);
            }),
            (e.prototype.isSecondaryColumnsPresent = function () {
              return this.secondaryColumnsPresent;
            }),
            (e.prototype.setSecondaryColumns = function (t, e) {
              void 0 === e && (e = "api");
              var o = t && t.length > 0;
              if (o || this.secondaryColumnsPresent) {
                if (o) {
                  this.processSecondaryColumnDefinitions(t);
                  var n = this.columnFactory.createColumnTree(t, !1);
                  (this.secondaryBalancedTree = n.columnTree),
                    (this.secondaryHeaderRowCount = n.treeDept + 1),
                    (this.secondaryColumns = this.getColumnsFromTree(
                      this.secondaryBalancedTree
                    )),
                    (this.secondaryColumnsPresent = !0);
                } else
                  (this.secondaryBalancedTree = null),
                    (this.secondaryHeaderRowCount = -1),
                    (this.secondaryColumns = null),
                    (this.secondaryColumnsPresent = !1);
                this.updateGridColumns(), this.updateDisplayedColumns(e);
              }
            }),
            (e.prototype.processSecondaryColumnDefinitions = function (t) {
              var e = this.gridOptionsWrapper.getProcessSecondaryColDefFunc(),
                o =
                  this.gridOptionsWrapper.getProcessSecondaryColGroupDefFunc();
              if (e || o) {
                var n = function (t) {
                  t.forEach(function (t) {
                    if (r(t.children)) {
                      var i = t;
                      o && o(i), n(i.children);
                    } else e && e(t);
                  });
                };
                t && n(t);
              }
            }),
            (e.prototype.updateGridColumns = function () {
              var t = this;
              this.gridColsArePrimary &&
                (this.lastPrimaryOrder = this.gridColumns),
                this.secondaryColumns && this.secondaryBalancedTree
                  ? ((this.gridBalancedTree =
                      this.secondaryBalancedTree.slice()),
                    (this.gridHeaderRowCount = this.secondaryHeaderRowCount),
                    (this.gridColumns = this.secondaryColumns.slice()),
                    (this.gridColsArePrimary = !1))
                  : ((this.gridBalancedTree = this.primaryColumnTree.slice()),
                    (this.gridHeaderRowCount = this.primaryHeaderRowCount),
                    (this.gridColumns = this.primaryColumns.slice()),
                    (this.gridColsArePrimary = !0),
                    this.orderGridColsLikeLastPrimary()),
                this.addAutoGroupToGridColumns(),
                (this.autoRowHeightColumns = this.gridColumns.filter(function (
                  t
                ) {
                  return t.getColDef().autoHeight;
                })),
                (this.gridColumns = this.putFixedColumnsFirst(
                  this.gridColumns
                )),
                this.setupQuickFilterColumns(),
                this.clearDisplayedAndViewportColumns(),
                (this.colSpanActive = this.checkColSpanActiveInCols(
                  this.gridColumns
                )),
                (this.gridColumnsMap = {}),
                this.gridColumns.forEach(function (e) {
                  return (t.gridColumnsMap[e.getId()] = e);
                }),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_GRID_COLUMNS_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.orderGridColsLikeLastPrimary = function () {
              if (!i(this.lastPrimaryOrder)) {
                var t = new Map(
                    this.lastPrimaryOrder.map(function (t, e) {
                      return [t, e];
                    })
                  ),
                  e = !0;
                if (
                  (this.gridColumns.forEach(function (o) {
                    t.has(o) && (e = !1);
                  }),
                  !e)
                ) {
                  var o = new Map(
                      this.gridColumns.map(function (t) {
                        return [t, !0];
                      })
                    ),
                    n = this.lastPrimaryOrder.filter(function (t) {
                      return o.has(t);
                    }),
                    r = new Map(
                      n.map(function (t) {
                        return [t, !0];
                      })
                    ),
                    s = this.gridColumns.filter(function (t) {
                      return !r.has(t);
                    }),
                    a = n.slice();
                  s.forEach(function (t) {
                    var e = t.getOriginalParent();
                    if (e) {
                      for (var o = []; !o.length && e; )
                        e.getLeafColumns().forEach(function (t) {
                          var e = a.indexOf(t) >= 0,
                            n = o.indexOf(t) < 0;
                          e && n && o.push(t);
                        }),
                          (e = e.getOriginalParent());
                      if (o.length) {
                        var n = o.map(function (t) {
                            return a.indexOf(t);
                          }),
                          r = Math.max.apply(Math, n);
                        b(a, t, r + 1);
                      } else a.push(t);
                    } else a.push(t);
                  }),
                    (this.gridColumns = a);
                }
              }
            }),
            (e.prototype.isPrimaryColumnGroupsPresent = function () {
              return this.primaryHeaderRowCount > 1;
            }),
            (e.prototype.setupQuickFilterColumns = function () {
              this.columnsForQuickFilter = this.groupAutoColumns
                ? this.primaryColumns.concat(this.groupAutoColumns)
                : this.primaryColumns;
            }),
            (e.prototype.putFixedColumnsFirst = function (t) {
              var e = t.filter(function (t) {
                  return t.getColDef().lockPosition;
                }),
                o = t.filter(function (t) {
                  return !t.getColDef().lockPosition;
                });
              return e.concat(o);
            }),
            (e.prototype.addAutoGroupToGridColumns = function () {
              if (
                (this.createGroupAutoColumnsIfNeeded(),
                !i(this.groupAutoColumns))
              ) {
                this.gridColumns = this.groupAutoColumns
                  ? this.groupAutoColumns.concat(this.gridColumns)
                  : this.gridColumns;
                var t = this.columnFactory.createForAutoGroups(
                  this.groupAutoColumns,
                  this.gridBalancedTree
                );
                this.gridBalancedTree = t.concat(this.gridBalancedTree);
              }
            }),
            (e.prototype.clearDisplayedAndViewportColumns = function () {
              (this.displayedTreeLeft = []),
                (this.displayedTreeRight = []),
                (this.displayedTreeCentre = []),
                (this.viewportRowLeft = {}),
                (this.viewportRowRight = {}),
                (this.viewportRowCenter = {}),
                (this.displayedColumnsLeft = []),
                (this.displayedColumnsRight = []),
                (this.displayedColumnsCenter = []),
                (this.displayedColumns = []),
                (this.viewportColumns = []);
            }),
            (e.prototype.updateGroupsAndDisplayedColumns = function (t) {
              this.updateOpenClosedVisibilityInColumnGroups(),
                this.deriveDisplayedColumns(t),
                this.refreshFlexedColumns(),
                this.extractViewport(),
                this.updateBodyWidths(),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.deriveDisplayedColumns = function (t) {
              this.derivedDisplayedColumnsFromDisplayedTree(
                this.displayedTreeLeft,
                this.displayedColumnsLeft
              ),
                this.derivedDisplayedColumnsFromDisplayedTree(
                  this.displayedTreeCentre,
                  this.displayedColumnsCenter
                ),
                this.derivedDisplayedColumnsFromDisplayedTree(
                  this.displayedTreeRight,
                  this.displayedColumnsRight
                ),
                this.joinDisplayedColumns(),
                this.setLeftValues(t);
            }),
            (e.prototype.joinDisplayedColumns = function () {
              this.displayedColumns = this.gridOptionsWrapper.isEnableRtl()
                ? this.displayedColumnsRight
                    .concat(this.displayedColumnsCenter)
                    .concat(this.displayedColumnsLeft)
                : this.displayedColumnsLeft
                    .concat(this.displayedColumnsCenter)
                    .concat(this.displayedColumnsRight);
            }),
            (e.prototype.setLeftValues = function (t) {
              this.setLeftValuesOfColumns(t), this.setLeftValuesOfGroups();
            }),
            (e.prototype.setLeftValuesOfColumns = function (t) {
              var e = this,
                o = this.primaryColumns.slice(0),
                n = this.gridOptionsWrapper.isEnableRtl();
              [
                this.displayedColumnsLeft,
                this.displayedColumnsRight,
                this.displayedColumnsCenter,
              ].forEach(function (r) {
                if (n) {
                  var i = e.getWidthOfColsInList(r);
                  r.forEach(function (e) {
                    (i -= e.getActualWidth()), e.setLeft(i, t);
                  });
                } else {
                  var s = 0;
                  r.forEach(function (e) {
                    e.setLeft(s, t), (s += e.getActualWidth());
                  });
                }
                w(o, r);
              }),
                o.forEach(function (e) {
                  e.setLeft(null, t);
                });
            }),
            (e.prototype.setLeftValuesOfGroups = function () {
              [
                this.displayedTreeLeft,
                this.displayedTreeRight,
                this.displayedTreeCentre,
              ].forEach(function (t) {
                t.forEach(function (t) {
                  t instanceof Et && t.checkLeft();
                });
              });
            }),
            (e.prototype.derivedDisplayedColumnsFromDisplayedTree = function (
              t,
              e
            ) {
              (e.length = 0),
                this.columnUtils.depthFirstDisplayedColumnTreeSearch(
                  t,
                  function (t) {
                    t instanceof bt && e.push(t);
                  }
                );
            }),
            (e.prototype.extractViewportColumns = function () {
              (this.viewportColumnsCenter = this.suppressColumnVirtualisation
                ? this.displayedColumnsCenter
                : this.filterOutColumnsWithinViewport()),
                (this.viewportColumns = this.viewportColumnsCenter
                  .concat(this.displayedColumnsLeft)
                  .concat(this.displayedColumnsRight));
            }),
            (e.prototype.getVirtualHeaderGroupRow = function (t, e) {
              var o;
              switch (t) {
                case vt.PINNED_LEFT:
                  o = this.viewportRowLeft[e];
                  break;
                case vt.PINNED_RIGHT:
                  o = this.viewportRowRight[e];
                  break;
                default:
                  o = this.viewportRowCenter[e];
              }
              return i(o) && (o = []), o;
            }),
            (e.prototype.extractViewportRows = function () {
              (this.viewportRowLeft = {}),
                (this.viewportRowRight = {}),
                (this.viewportRowCenter = {});
              var t = {};
              this.viewportColumns.forEach(function (e) {
                return (t[e.getId()] = !0);
              });
              var e = function (o, n, r) {
                for (var i = !1, s = 0; s < o.length; s++) {
                  var a = o[s],
                    l = !1;
                  if (a instanceof bt) l = !0 === t[a.getId()];
                  else {
                    var u = a.getDisplayedChildren();
                    u && (l = e(u, n, r + 1));
                  }
                  l && ((i = !0), n[r] || (n[r] = []), n[r].push(a));
                }
                return i;
              };
              e(this.displayedTreeLeft, this.viewportRowLeft, 0),
                e(this.displayedTreeRight, this.viewportRowRight, 0),
                e(this.displayedTreeCentre, this.viewportRowCenter, 0);
            }),
            (e.prototype.extractViewport = function () {
              this.extractViewportColumns(), this.extractViewportRows();
            }),
            (e.prototype.filterOutColumnsWithinViewport = function () {
              return this.displayedColumnsCenter.filter(
                this.isColumnInViewport.bind(this)
              );
            }),
            (e.prototype.refreshFlexedColumns = function (t) {
              var e = this;
              void 0 === t && (t = {});
              var o = t.source ? t.source : "flex";
              if (
                (null != t.viewportWidth &&
                  (this.flexViewportWidth = t.viewportWidth),
                !this.flexViewportWidth)
              )
                return [];
              var n = -1;
              t.resizingCols &&
                t.resizingCols.forEach(function (t) {
                  var o = e.displayedColumnsCenter.indexOf(t);
                  n < o && (n = o);
                });
              var i = function (t) {
                  var o = e.displayedColumnsCenter.indexOf(t) > n;
                  return t.getFlex() && o;
                },
                s = this.displayedColumnsCenter.filter(function (t) {
                  return !i(t);
                }),
                a = this.displayedColumnsCenter.filter(function (t) {
                  return i(t);
                }),
                l = [];
              if (!a.length) return [];
              var u,
                p = [];
              t: for (;;) {
                var c = a.reduce(function (t, e) {
                  return t + e.getFlex();
                }, 0);
                u = this.flexViewportWidth - this.getWidthOfColsInList(s);
                for (var d = 0; d < a.length; d++) {
                  var h = a[d],
                    f = (u * h.getFlex()) / c,
                    g = 0,
                    y = h.getMinWidth(),
                    m = h.getMaxWidth();
                  if ((r(y) && f < y ? (g = y) : r(m) && f > m && (g = m), g)) {
                    h.setActualWidth(g, o), C(a, h), l.push(h), s.push(h);
                    continue t;
                  }
                  p[d] = Math.round(f);
                }
                break;
              }
              var v = u;
              return (
                a.forEach(function (t, e) {
                  t.setActualWidth(Math.min(p[e], v), o),
                    l.push(t),
                    (v -= p[e]);
                }),
                t.skipSetLeft || this.setLeftValues(o),
                t.updateBodyWidths && this.updateBodyWidths(),
                t.fireResizedEvent && this.fireColumnResizedEvent(l, !0, o, a),
                this.flexColsCalculatedAtLestOnce ||
                  (this.gridOptionsWrapper.isRowModelDefault() &&
                    this.rowModel.resetRowHeights(),
                  (this.flexColsCalculatedAtLestOnce = !0)),
                a
              );
            }),
            (e.prototype.sizeColumnsToFit = function (t, e, o) {
              void 0 === e && (e = "sizeColumnsToFit");
              var n = this.getAllDisplayedColumns();
              if (!(t <= 0) && n.length) {
                var i = [],
                  s = [];
                n.forEach(function (t) {
                  !0 === t.getColDef().suppressSizeToFit
                    ? s.push(t)
                    : i.push(t);
                });
                var a = i.slice(0),
                  l = !1,
                  u = function (t) {
                    C(i, t), s.push(t);
                  };
                for (
                  i.forEach(function (t) {
                    return t.resetActualWidth(e);
                  });
                  !l;

                ) {
                  l = !0;
                  var p = t - this.getWidthOfColsInList(s);
                  if (p <= 0)
                    i.forEach(function (t) {
                      t.setMinimum(e);
                    });
                  else
                    for (
                      var c = p / this.getWidthOfColsInList(i),
                        d = p,
                        h = i.length - 1;
                      h >= 0;
                      h--
                    ) {
                      var f = i[h],
                        g = f.getMinWidth(),
                        y = f.getMaxWidth(),
                        m = Math.round(f.getActualWidth() * c);
                      r(g) && m < g
                        ? ((m = g), u(f), (l = !1))
                        : r(y) && f.isGreaterThanMax(m)
                        ? ((m = y), u(f), (l = !1))
                        : 0 === h && (m = d),
                        f.setActualWidth(m, e, !0),
                        (d -= m);
                    }
                }
                a.forEach(function (t) {
                  t.fireColumnWidthChangedEvent(e);
                }),
                  this.setLeftValues(e),
                  this.updateBodyWidths(),
                  o || this.fireColumnResizedEvent(a, !0, e);
              }
            }),
            (e.prototype.buildDisplayedTrees = function (t) {
              var e = [],
                o = [],
                n = [];
              t.forEach(function (t) {
                switch (t.getPinned()) {
                  case "left":
                    e.push(t);
                    break;
                  case "right":
                    o.push(t);
                    break;
                  default:
                    n.push(t);
                }
              });
              var r = new Kt();
              (this.displayedTreeLeft =
                this.displayedGroupCreator.createDisplayedGroups(
                  e,
                  this.gridBalancedTree,
                  r,
                  vt.PINNED_LEFT,
                  this.displayedTreeLeft
                )),
                (this.displayedTreeRight =
                  this.displayedGroupCreator.createDisplayedGroups(
                    o,
                    this.gridBalancedTree,
                    r,
                    vt.PINNED_RIGHT,
                    this.displayedTreeRight
                  )),
                (this.displayedTreeCentre =
                  this.displayedGroupCreator.createDisplayedGroups(
                    n,
                    this.gridBalancedTree,
                    r,
                    null,
                    this.displayedTreeCentre
                  )),
                this.updateDisplayedMap();
            }),
            (e.prototype.updateDisplayedMap = function () {
              var t = this;
              this.displayedColumnsAndGroupsMap = {};
              var e = function (e) {
                t.displayedColumnsAndGroupsMap[e.getUniqueId()] = e;
              };
              this.columnUtils.depthFirstAllColumnTreeSearch(
                this.displayedTreeCentre,
                e
              ),
                this.columnUtils.depthFirstAllColumnTreeSearch(
                  this.displayedTreeLeft,
                  e
                ),
                this.columnUtils.depthFirstAllColumnTreeSearch(
                  this.displayedTreeRight,
                  e
                );
            }),
            (e.prototype.isDisplayed = function (t) {
              return this.displayedColumnsAndGroupsMap[t.getUniqueId()] === t;
            }),
            (e.prototype.updateOpenClosedVisibilityInColumnGroups =
              function () {
                var t = this.getAllDisplayedTrees();
                this.columnUtils.depthFirstAllColumnTreeSearch(t, function (t) {
                  t instanceof Et && t.calculateDisplayedColumns();
                });
              }),
            (e.prototype.getGroupAutoColumns = function () {
              return this.groupAutoColumns;
            }),
            (e.prototype.createGroupAutoColumnsIfNeeded = function () {
              if (this.autoGroupsNeedBuilding) {
                this.autoGroupsNeedBuilding = !1;
                var t = this.gridOptionsWrapper.isGroupUseEntireRow(
                    this.pivotMode
                  ),
                  e = this.pivotMode
                    ? this.gridOptionsWrapper.isPivotSuppressAutoColumn()
                    : this.gridOptionsWrapper.isGroupSuppressAutoColumn();
                if (
                  !(this.rowGroupColumns.length > 0 || this.usingTreeData) ||
                  e ||
                  t
                )
                  this.groupAutoColumns = null;
                else {
                  var o = this.autoGroupColService.createAutoGroupColumns(
                    this.rowGroupColumns
                  );
                  (!this.autoColsEqual(o, this.groupAutoColumns) ||
                    this.forceRecreateAutoGroups) &&
                    (this.groupAutoColumns = o);
                }
              }
            }),
            (e.prototype.autoColsEqual = function (t, e) {
              return m(t, e, function (t, e) {
                return t.getColId() === e.getColId();
              });
            }),
            (e.prototype.getWidthOfColsInList = function (t) {
              return t.reduce(function (t, e) {
                return t + e.getActualWidth();
              }, 0);
            }),
            (e.prototype.getGridBalancedTree = function () {
              return this.gridBalancedTree;
            }),
            (e.prototype.hasFloatingFilters = function () {
              var t = this.gridOptionsWrapper.getDefaultColDef();
              return (
                (null != t && !0 === t.floatingFilter) ||
                (null != this.columnDefs &&
                  this.columnDefs.some(function (t) {
                    return !0 === t.floatingFilter;
                  }))
              );
            }),
            (e.prototype.getFirstDisplayedColumn = function () {
              var t = this.gridOptionsWrapper.isEnableRtl(),
                e = [
                  "getDisplayedLeftColumns",
                  "getDisplayedCenterColumns",
                  "getDisplayedRightColumns",
                ];
              t && e.reverse();
              for (var o = 0; o < e.length; o++) {
                var n = this[e[o]]();
                if (n.length) return t ? y(n) : n[0];
              }
              return null;
            }),
            oe(
              [ut("expressionService")],
              e.prototype,
              "expressionService",
              void 0
            ),
            oe([ut("columnFactory")], e.prototype, "columnFactory", void 0),
            oe(
              [ut("displayedGroupCreator")],
              e.prototype,
              "displayedGroupCreator",
              void 0
            ),
            oe(
              [ut("autoWidthCalculator")],
              e.prototype,
              "autoWidthCalculator",
              void 0
            ),
            oe([ut("columnUtils")], e.prototype, "columnUtils", void 0),
            oe(
              [ut("columnAnimationService")],
              e.prototype,
              "columnAnimationService",
              void 0
            ),
            oe(
              [ut("autoGroupColService")],
              e.prototype,
              "autoGroupColService",
              void 0
            ),
            oe([pt("aggFuncService")], e.prototype, "aggFuncService", void 0),
            oe([pt("valueCache")], e.prototype, "valueCache", void 0),
            oe(
              [pt("animationFrameService")],
              e.prototype,
              "animationFrameService",
              void 0
            ),
            oe([ut("rowModel")], e.prototype, "rowModel", void 0),
            oe([ut("columnApi")], e.prototype, "columnApi", void 0),
            oe([ut("gridApi")], e.prototype, "gridApi", void 0),
            oe([ut("sortController")], e.prototype, "sortController", void 0),
            oe(
              [ut("columnDefFactory")],
              e.prototype,
              "columnDefFactory",
              void 0
            ),
            oe([st], e.prototype, "init", null),
            oe(
              [
                (0,
                (o = dt("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            oe([lt("columnController")], e)
          );
          var o;
        })(Ht);
      function re(t, e) {
        for (var o = "" + t; o.length < e; ) o = "0" + o;
        return o;
      }
      function ie(t, e) {
        for (var o = [], n = t; n <= e; n++) o.push(n);
        return o;
      }
      function se(t) {
        return "" !== t && !isNaN(parseFloat(t)) && isFinite(t);
      }
      function ae() {
        return Number.MAX_SAFE_INTEGER || 9007199254740991;
      }
      function le(t) {
        return "number" != typeof t
          ? ""
          : t.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
      }
      var ue = Object.freeze({
          __proto__: null,
          padStart: re,
          createArrayOfNumbers: ie,
          isNumeric: se,
          getMaxSafeInteger: ae,
          cleanNumber: function (t) {
            return (
              "string" == typeof t && (t = parseInt(t, 10)),
              "number" == typeof t ? Math.floor(t) : null
            );
          },
          decToHex: function (t, e) {
            for (var o = "", n = 0; n < e; n++)
              (o += String.fromCharCode(255 & t)), (t >>>= 8);
            return o;
          },
          formatNumberTwoDecimalPlacesAndCommas: function (t) {
            return "number" != typeof t ? "" : le(Math.round(100 * t) / 100);
          },
          formatNumberCommas: le,
          sum: function (t) {
            return null == t
              ? null
              : t.reduce(function (t, e) {
                  return t + e;
                }, 0);
          },
        }),
        pe = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ce = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            pe(e, t),
            (e.prototype.calculateColInitialWidth = function (t) {
              var e,
                o = this.gridOptionsWrapper,
                n = null != t.minWidth ? t.minWidth : o.getMinColWidth(),
                r =
                  null != t.maxWidth ? t.maxWidth : o.getMaxColWidth() || ae(),
                i = l(t.width),
                s = l(t.initialWidth);
              return (
                (e = null != i ? i : null != s ? s : o.getColWidth()),
                Math.max(Math.min(e, r), n)
              );
            }),
            (e.prototype.getOriginalPathForColumn = function (t, e) {
              var o = [],
                n = !1,
                r = function (e, i) {
                  for (var s = 0; s < e.length; s++) {
                    if (n) return;
                    var a = e[s];
                    a instanceof St
                      ? (r(a.getChildren(), i + 1), (o[i] = a))
                      : a === t && (n = !0);
                  }
                };
              return r(e, 0), n ? o : null;
            }),
            (e.prototype.depthFirstOriginalTreeSearch = function (t, e, o) {
              var n = this;
              e &&
                e.forEach(function (e) {
                  e instanceof St &&
                    n.depthFirstOriginalTreeSearch(e, e.getChildren(), o),
                    o(e, t);
                });
            }),
            (e.prototype.depthFirstAllColumnTreeSearch = function (t, e) {
              var o = this;
              t &&
                t.forEach(function (t) {
                  t instanceof Et &&
                    o.depthFirstAllColumnTreeSearch(t.getChildren(), e),
                    e(t);
                });
            }),
            (e.prototype.depthFirstDisplayedColumnTreeSearch = function (t, e) {
              var o = this;
              t &&
                t.forEach(function (t) {
                  t instanceof Et &&
                    o.depthFirstDisplayedColumnTreeSearch(
                      t.getDisplayedChildren(),
                      e
                    ),
                    e(t);
                });
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("columnUtils")], e)
          );
        })(Ht),
        de = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        he = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        fe = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            de(e, t),
            (e.prototype.createDisplayedGroups = function (t, e, o, n, r) {
              var i,
                s,
                a = this,
                l = [],
                u = this.mapOldGroupsById(r);
              return (
                t.forEach(function (t) {
                  for (
                    var r = a.getOriginalPathForColumn(e, t),
                      p = [],
                      c = !s,
                      d = 0;
                    d < r.length;
                    d++
                  )
                    if (c || r[d] !== s[d]) {
                      var h = a.createColumnGroup(r[d], o, u, n);
                      (p[d] = h), 0 == d ? l.push(h) : p[d - 1].addChild(h);
                    } else p[d] = i[d];
                  0 === p.length ? l.push(t) : y(p).addChild(t),
                    (i = p),
                    (s = r);
                }),
                this.setupParentsIntoColumns(l, null),
                l
              );
            }),
            (e.prototype.createColumnGroup = function (t, e, o, n) {
              var i = t.getGroupId(),
                s = e.getInstanceIdForKey(i),
                a = o[Et.createUniqueId(i, s)];
              return (
                a && a.getOriginalColumnGroup() !== t && (a = null),
                r(a)
                  ? a.reset()
                  : ((a = new Et(t, i, s, n)), this.context.createBean(a)),
                a
              );
            }),
            (e.prototype.mapOldGroupsById = function (t) {
              var e = {},
                o = function (t) {
                  t.forEach(function (t) {
                    if (t instanceof Et) {
                      var n = t;
                      (e[t.getUniqueId()] = n), o(n.getChildren());
                    }
                  });
                };
              return t && o(t), e;
            }),
            (e.prototype.setupParentsIntoColumns = function (t, e) {
              var o = this;
              t.forEach(function (t) {
                if ((t.setParent(e), t instanceof Et)) {
                  var n = t;
                  o.setupParentsIntoColumns(n.getChildren(), n);
                }
              });
            }),
            (e.prototype.getOriginalPathForColumn = function (t, e) {
              var o = [],
                n = !1,
                r = function (t, i) {
                  for (var s = 0; s < t.length; s++) {
                    if (n) return;
                    var a = t[s];
                    a instanceof St
                      ? (r(a.getChildren(), i + 1), (o[i] = a))
                      : a === e && (n = !0);
                  }
                };
              return (
                r(t, 0), n ? o : (console.warn("could not get path"), null)
              );
            }),
            he([ut("columnUtils")], e.prototype, "columnUtils", void 0),
            he([lt("displayedGroupCreator")], e)
          );
        })(Ht),
        ge = (function () {
          function t() {}
          return (
            (t.STRING_PROPERTIES = [
              "sortingOrder",
              "rowClass",
              "rowSelection",
              "overlayLoadingTemplate",
              "overlayNoRowsTemplate",
              "quickFilterText",
              "rowModelType",
              "editType",
              "domLayout",
              "clipboardDeliminator",
              "rowGroupPanelShow",
              "multiSortKey",
              "pivotColumnGroupTotals",
              "pivotRowTotals",
              "pivotPanelShow",
              "fillHandleDirection",
              "serverSideStoreType",
            ]),
            (t.OBJECT_PROPERTIES = [
              "components",
              "frameworkComponents",
              "rowStyle",
              "context",
              "autoGroupColumnDef",
              "localeText",
              "icons",
              "datasource",
              "serverSideDatasource",
              "viewportDatasource",
              "groupRowRendererParams",
              "aggFuncs",
              "fullWidthCellRendererParams",
              "defaultColGroupDef",
              "defaultColDef",
              "defaultExportParams",
              "columnTypes",
              "rowClassRules",
              "detailGridOptions",
              "detailCellRendererParams",
              "loadingCellRendererParams",
              "loadingOverlayComponentParams",
              "noRowsOverlayComponentParams",
              "popupParent",
              "colResizeDefault",
              "reduxStore",
              "statusBar",
              "sideBar",
              "chartThemeOverrides",
              "customChartThemes",
            ]),
            (t.ARRAY_PROPERTIES = [
              "alignedGrids",
              "rowData",
              "columnDefs",
              "excelStyles",
              "pinnedTopRowData",
              "pinnedBottomRowData",
              "chartThemes",
            ]),
            (t.NUMBER_PROPERTIES = [
              "rowHeight",
              "detailRowHeight",
              "rowBuffer",
              "colWidth",
              "headerHeight",
              "groupHeaderHeight",
              "floatingFiltersHeight",
              "pivotHeaderHeight",
              "pivotGroupHeaderHeight",
              "groupDefaultExpanded",
              "minColWidth",
              "maxColWidth",
              "viewportRowModelPageSize",
              "viewportRowModelBufferSize",
              "autoSizePadding",
              "maxBlocksInCache",
              "maxConcurrentDatasourceRequests",
              "tooltipShowDelay",
              "cacheOverflowSize",
              "paginationPageSize",
              "cacheBlockSize",
              "infiniteInitialRowCount",
              "scrollbarWidth",
              "batchUpdateWaitMillis",
              "asyncTransactionWaitMillis",
              "blockLoadDebounceMillis",
              "keepDetailRowsCount",
              "undoRedoCellEditingLimit",
              "cellFlashDelay",
              "cellFadeDelay",
            ]),
            (t.BOOLEAN_PROPERTIES = [
              "suppressMakeColumnVisibleAfterUnGroup",
              "suppressRowClickSelection",
              "suppressCellSelection",
              "suppressHorizontalScroll",
              "alwaysShowHorizontalScroll",
              "alwaysShowVerticalScroll",
              "debug",
              "enableBrowserTooltips",
              "enableCellExpressions",
              "angularCompileRows",
              "angularCompileFilters",
              "groupSuppressAutoColumn",
              "groupSelectsChildren",
              "groupIncludeFooter",
              "groupIncludeTotalFooter",
              "groupUseEntireRow",
              "groupSuppressBlankHeader",
              "suppressMenuHide",
              "suppressRowDeselection",
              "unSortIcon",
              "suppressMultiSort",
              "singleClickEdit",
              "suppressLoadingOverlay",
              "suppressNoRowsOverlay",
              "suppressAutoSize",
              "skipHeaderOnAutoSize",
              "suppressParentsInRowNodes",
              "suppressColumnMoveAnimation",
              "suppressMovableColumns",
              "suppressFieldDotNotation",
              "enableRangeSelection",
              "enableRangeHandle",
              "enableFillHandle",
              "suppressClearOnFillReduction",
              "deltaSort",
              "suppressTouch",
              "suppressAsyncEvents",
              "allowContextMenuWithControlKey",
              "suppressContextMenu",
              "rememberGroupStateWhenNewData",
              "enableCellChangeFlash",
              "suppressDragLeaveHidesColumns",
              "suppressMiddleClickScrolls",
              "suppressPreventDefaultOnMouseWheel",
              "suppressCopyRowsToClipboard",
              "copyHeadersToClipboard",
              "pivotMode",
              "suppressAggFuncInHeader",
              "suppressColumnVirtualisation",
              "suppressAggAtRootLevel",
              "suppressFocusAfterRefresh",
              "functionsPassive",
              "functionsReadOnly",
              "animateRows",
              "groupSelectsFiltered",
              "groupRemoveSingleChildren",
              "groupRemoveLowestSingleChildren",
              "enableRtl",
              "suppressClickEdit",
              "rowDragManaged",
              "suppressRowDrag",
              "suppressMoveWhenRowDragging",
              "enableMultiRowDragging",
              "enableGroupEdit",
              "embedFullWidthRows",
              "deprecatedEmbedFullWidthRows",
              "suppressPaginationPanel",
              "floatingFilter",
              "groupHideOpenParents",
              "groupMultiAutoColumn",
              "pagination",
              "stopEditingWhenGridLosesFocus",
              "paginationAutoPageSize",
              "suppressScrollOnNewData",
              "purgeClosedRowNodes",
              "cacheQuickFilter",
              "deltaRowDataMode",
              "ensureDomOrder",
              "accentedSort",
              "suppressChangeDetection",
              "valueCache",
              "valueCacheNeverExpires",
              "aggregateOnlyChangedColumns",
              "suppressAnimationFrame",
              "suppressExcelExport",
              "suppressCsvExport",
              "treeData",
              "masterDetail",
              "suppressMultiRangeSelection",
              "enterMovesDownAfterEdit",
              "enterMovesDown",
              "suppressPropertyNamesCheck",
              "rowMultiSelectWithClick",
              "suppressEnterpriseResetOnNewColumns",
              "enableOldSetFilterModel",
              "suppressRowHoverHighlight",
              "suppressRowTransform",
              "suppressClipboardPaste",
              "suppressLastEmptyLineOnPaste",
              "serverSideSortingAlwaysResets",
              "reactNext",
              "suppressSetColumnStateEvents",
              "suppressColumnStateEvents",
              "enableCharts",
              "deltaColumnMode",
              "suppressMaintainUnsortedOrder",
              "enableCellTextSelection",
              "suppressBrowserResizeObserver",
              "suppressMaxRenderedRowRestriction",
              "excludeChildrenWhenTreeDataFiltering",
              "tooltipMouseTrack",
              "keepDetailRows",
              "paginateChildRows",
              "preventDefaultOnContextMenu",
              "undoRedoCellEditing",
              "allowDragFromColumnsToolPanel",
              "immutableData",
              "immutableColumns",
              "pivotSuppressAutoColumn",
              "suppressExpandablePivotGroups",
              "applyColumnDefOrder",
              "debounceVerticalScrollbar",
              "detailRowAutoHeight",
              "serverSideFilteringAlwaysResets",
              "suppressAggFilteredOnly",
              "showOpenedGroup",
              "suppressClipboardApi",
              "suppressModelUpdateAfterUpdateTransaction",
            ]),
            (t.ALL_PROPERTIES = (function () {
              for (var t = 0, e = 0, o = arguments.length; e < o; e++)
                t += arguments[e].length;
              var n = Array(t),
                r = 0;
              for (e = 0; e < o; e++)
                for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
                  n[r] = i[s];
              return n;
            })(
              t.ARRAY_PROPERTIES,
              t.OBJECT_PROPERTIES,
              t.STRING_PROPERTIES,
              t.NUMBER_PROPERTIES,
              (t.FUNCTION_PROPERTIES = [
                "localeTextFunc",
                "groupRowInnerRenderer",
                "groupRowInnerRendererFramework",
                "dateComponent",
                "dateComponentFramework",
                "groupRowRenderer",
                "groupRowRendererFramework",
                "isExternalFilterPresent",
                "getRowHeight",
                "doesExternalFilterPass",
                "getRowClass",
                "getRowStyle",
                "getRowClassRules",
                "traverseNode",
                "getContextMenuItems",
                "getMainMenuItems",
                "processRowPostCreate",
                "processCellForClipboard",
                "groupRowAggNodes",
                "getRowNodeId",
                "isFullWidthCell",
                "fullWidthCellRenderer",
                "fullWidthCellRendererFramework",
                "processSecondaryColDef",
                "processSecondaryColGroupDef",
                "getBusinessKeyForNode",
                "sendToClipboard",
                "navigateToNextHeader",
                "tabToNextHeader",
                "navigateToNextCell",
                "tabToNextCell",
                "getDetailRowData",
                "processCellFromClipboard",
                "getDocument",
                "postProcessPopup",
                "getChildCount",
                "getDataPath",
                "loadingCellRenderer",
                "loadingCellRendererFramework",
                "loadingOverlayComponent",
                "loadingOverlayComponentFramework",
                "noRowsOverlayComponent",
                "noRowsOverlayComponentFramework",
                "detailCellRenderer",
                "detailCellRendererFramework",
                "defaultGroupSortComparator",
                "isRowMaster",
                "isRowSelectable",
                "postSort",
                "processHeaderForClipboard",
                "paginationNumberFormatter",
                "processDataFromClipboard",
                "getServerSideGroupKey",
                "isServerSideGroup",
                "suppressKeyboardEvent",
                "createChartContainer",
                "processChartOptions",
                "getChartToolbarItems",
                "fillOperation",
                "isApplyServerSideTransaction",
                "getServerSideStoreParams",
                "isServerSideGroupOpenByDefault",
              ]),
              t.BOOLEAN_PROPERTIES
            )),
            (t.FRAMEWORK_PROPERTIES = [
              "__ob__",
              "__v_skip",
              "__metadata__",
              "mappedColumnProperties",
              "hasChildColumns",
              "toColDef",
              "createColDefFromGridColumn",
            ]),
            t
          );
        })(),
        ye = function () {
          for (var t = 0, e = 0, o = arguments.length; e < o; e++)
            t += arguments[e].length;
          var n = Array(t),
            r = 0;
          for (e = 0; e < o; e++)
            for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
              n[r] = i[s];
          return n;
        },
        me = (function () {
          function t() {}
          return (
            (t.getEventCallbacks = function () {
              return (
                t.EVENT_CALLBACKS ||
                  (t.EVENT_CALLBACKS = t.EVENTS.map(function (e) {
                    return t.getCallbackForEvent(e);
                  })),
                t.EVENT_CALLBACKS
              );
            }),
            (t.copyAttributesToGridOptions = function (e, o, n) {
              "object" != typeof e && (e = {});
              var r = e,
                i = function (t) {
                  return void 0 !== o[t];
                };
              return (
                ye(
                  t.ARRAY_PROPERTIES,
                  t.STRING_PROPERTIES,
                  t.OBJECT_PROPERTIES,
                  t.FUNCTION_PROPERTIES,
                  t.getEventCallbacks()
                )
                  .filter(i)
                  .forEach(function (t) {
                    return (r[t] = o[t]);
                  }),
                t.BOOLEAN_PROPERTIES.filter(i).forEach(function (e) {
                  return (r[e] = t.toBoolean(o[e]));
                }),
                t.NUMBER_PROPERTIES.filter(i).forEach(function (e) {
                  return (r[e] = t.toNumber(o[e]));
                }),
                e
              );
            }),
            (t.getCallbackForEvent = function (t) {
              return !t || t.length < 2
                ? t
                : "on" + t[0].toUpperCase() + t.substr(1);
            }),
            (t.processOnChange = function (e, o, n, r) {
              if (e) {
                var i = o,
                  s = function (t) {
                    return e[t];
                  };
                ye(
                  t.ARRAY_PROPERTIES,
                  t.OBJECT_PROPERTIES,
                  t.STRING_PROPERTIES,
                  t.getEventCallbacks()
                )
                  .filter(s)
                  .forEach(function (t) {
                    return (i[t] = e[t].currentValue);
                  }),
                  t.BOOLEAN_PROPERTIES.filter(s).forEach(function (o) {
                    return (i[o] = t.toBoolean(e[o].currentValue));
                  }),
                  t.NUMBER_PROPERTIES.filter(s).forEach(function (o) {
                    return (i[o] = t.toNumber(e[o].currentValue));
                  }),
                  e.enableCellTextSelection &&
                    n.setEnableCellTextSelection(
                      t.toBoolean(e.enableCellTextSelection.currentValue)
                    ),
                  e.quickFilterText &&
                    n.setQuickFilter(e.quickFilterText.currentValue),
                  e.rowData && n.setRowData(e.rowData.currentValue),
                  e.pinnedTopRowData &&
                    n.setPinnedTopRowData(e.pinnedTopRowData.currentValue),
                  e.pinnedBottomRowData &&
                    n.setPinnedBottomRowData(
                      e.pinnedBottomRowData.currentValue
                    ),
                  e.autoGroupColumnDef &&
                    n.setAutoGroupColumnDef(
                      e.autoGroupColumnDef.currentValue,
                      "gridOptionsChanged"
                    ),
                  e.columnDefs &&
                    n.setColumnDefs(
                      e.columnDefs.currentValue,
                      "gridOptionsChanged"
                    ),
                  e.datasource && n.setDatasource(e.datasource.currentValue),
                  e.headerHeight &&
                    n.setHeaderHeight(t.toNumber(e.headerHeight.currentValue)),
                  e.paginationPageSize &&
                    n.paginationSetPageSize(
                      t.toNumber(e.paginationPageSize.currentValue)
                    ),
                  e.pivotMode &&
                    r.setPivotMode(t.toBoolean(e.pivotMode.currentValue)),
                  e.groupRemoveSingleChildren &&
                    n.setGroupRemoveSingleChildren(
                      t.toBoolean(e.groupRemoveSingleChildren.currentValue)
                    ),
                  e.suppressRowDrag &&
                    n.setSuppressRowDrag(
                      t.toBoolean(e.suppressRowDrag.currentValue)
                    ),
                  e.suppressMoveWhenRowDragging &&
                    n.setSuppressMoveWhenRowDragging(
                      t.toBoolean(e.suppressMoveWhenRowDragging.currentValue)
                    ),
                  e.suppressRowClickSelection &&
                    n.setSuppressRowClickSelection(
                      t.toBoolean(e.suppressRowClickSelection.currentValue)
                    ),
                  e.suppressClipboardPaste &&
                    n.setSuppressClipboardPaste(
                      t.toBoolean(e.suppressClipboardPaste.currentValue)
                    ),
                  e.sideBar && n.setSideBar(e.sideBar.currentValue);
                var a = {
                  type: zt.EVENT_COMPONENT_STATE_CHANGED,
                  api: o.api,
                  columnApi: o.columnApi,
                };
                F(e, function (t, e) {
                  a[t] = e;
                }),
                  n.dispatchEvent(a);
              }
            }),
            (t.toBoolean = function (t) {
              return "boolean" == typeof t
                ? t
                : "string" == typeof t &&
                    ("TRUE" === t.toUpperCase() || "" == t);
            }),
            (t.toNumber = function (t) {
              return "number" == typeof t
                ? t
                : "string" == typeof t
                ? Number(t)
                : void 0;
            }),
            (t.EVENTS = []),
            (t.STRING_PROPERTIES = ge.STRING_PROPERTIES),
            (t.OBJECT_PROPERTIES = ge.OBJECT_PROPERTIES),
            (t.ARRAY_PROPERTIES = ge.ARRAY_PROPERTIES),
            (t.NUMBER_PROPERTIES = ge.NUMBER_PROPERTIES),
            (t.BOOLEAN_PROPERTIES = ge.BOOLEAN_PROPERTIES),
            (t.FUNCTION_PROPERTIES = ge.FUNCTION_PROPERTIES),
            (t.ALL_PROPERTIES = ge.ALL_PROPERTIES),
            t
          );
        })();
      me.EVENTS = d(zt);
      var ve = (function () {
          function t() {}
          return (
            (t.STRING_PROPERTIES = [
              "headerName",
              "columnGroupShow",
              "headerClass",
              "toolPanelClass",
              "headerValueGetter",
              "pivotKeys",
              "groupId",
              "colId",
              "sort",
              "initialSort",
              "field",
              "type",
              "tooltipComponent",
              "tooltipField",
              "headerTooltip",
              "cellClass",
              "showRowGroup",
              "template",
              "templateUrl",
              "filter",
              "initialAggFunc",
              "aggFunc",
              "cellRenderer",
              "cellEditor",
              "pinned",
              "initialPinned",
              "chartDataType",
            ]),
            (t.OBJECT_PROPERTIES = [
              "headerGroupComponent",
              "headerGroupComponentFramework",
              "headerGroupComponentParams",
              "cellStyle",
              "cellRendererParams",
              "cellEditorFramework",
              "cellEditorParams",
              "pinnedRowCellRendererFramework",
              "pinnedRowCellRendererParams",
              "filterFramework",
              "filterParams",
              "pivotValueColumn",
              "headerComponent",
              "headerComponentFramework",
              "headerComponentParams",
              "floatingFilterComponent",
              "floatingFilterComponentParams",
              "floatingFilterComponentFramework",
              "tooltipComponent",
              "tooltipComponentParams",
              "tooltipComponentFramework",
              "refData",
              "columnsMenuParams",
            ]),
            (t.ARRAY_PROPERTIES = [
              "children",
              "sortingOrder",
              "allowedAggFuncs",
              "menuTabs",
              "pivotTotalColumnIds",
              "cellClassRules",
              "icons",
            ]),
            (t.NUMBER_PROPERTIES = [
              "sortedAt",
              "sortIndex",
              "initialSortIndex",
              "flex",
              "initialFlex",
              "width",
              "initialWidth",
              "minWidth",
              "maxWidth",
              "rowGroupIndex",
              "initialRowGroupIndex",
              "pivotIndex",
              "initialPivotIndex",
            ]),
            (t.BOOLEAN_PROPERTIES = [
              "suppressCellFlash",
              "suppressColumnsToolPanel",
              "suppressFiltersToolPanel",
              "openByDefault",
              "marryChildren",
              "hide",
              "initialHide",
              "rowGroup",
              "initialRowGroup",
              "pivot",
              "initialPivot",
              "checkboxSelection",
              "headerCheckboxSelection",
              "headerCheckboxSelectionFilteredOnly",
              "suppressMenu",
              "suppressMovable",
              "lockPosition",
              "lockVisible",
              "lockPinned",
              "unSortIcon",
              "suppressSizeToFit",
              "suppressAutoSize",
              "enableRowGroup",
              "enablePivot",
              "enableValue",
              "editable",
              "suppressPaste",
              "suppressNavigable",
              "enableCellChangeFlash",
              "rowDrag",
              "dndSource",
              "autoHeight",
              "wrapText",
              "sortable",
              "resizable",
              "singleClickEdit",
              "floatingFilter",
            ]),
            (t.ALL_PROPERTIES = (function () {
              for (var t = 0, e = 0, o = arguments.length; e < o; e++)
                t += arguments[e].length;
              var n = Array(t),
                r = 0;
              for (e = 0; e < o; e++)
                for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
                  n[r] = i[s];
              return n;
            })(
              t.ARRAY_PROPERTIES,
              t.OBJECT_PROPERTIES,
              t.STRING_PROPERTIES,
              t.NUMBER_PROPERTIES,
              (t.FUNCTION_PROPERTIES = [
                "dndSourceOnRowDrag",
                "valueGetter",
                "valueSetter",
                "filterValueGetter",
                "keyCreator",
                "cellRenderer",
                "cellRendererFramework",
                "pinnedRowCellRenderer",
                "valueFormatter",
                "pinnedRowValueFormatter",
                "valueParser",
                "comparator",
                "equals",
                "pivotComparator",
                "suppressKeyboardEvent",
                "suppressHeaderKeyboardEvent",
                "colSpan",
                "rowSpan",
                "getQuickFilterText",
                "newValueHandler",
                "onCellValueChanged",
                "onCellClicked",
                "onCellDoubleClicked",
                "onCellContextMenu",
                "rowDragText",
                "tooltipValueGetter",
                "tooltipComponent",
                "tooltipComponentFramework",
                "cellRendererSelector",
                "cellEditorSelector",
              ]),
              t.BOOLEAN_PROPERTIES
            )),
            (t.FRAMEWORK_PROPERTIES = [
              "__ob__",
              "__v_skip",
              "__metadata__",
              "mappedColumnProperties",
              "hasChildColumns",
              "toColDef",
              "createColDefFromGridColumn",
            ]),
            t
          );
        })(),
        Ce = (function () {
          function t(t, e, o, n) {
            void 0 === n && (n = 1),
              (this.r = Math.min(1, Math.max(0, t || 0))),
              (this.g = Math.min(1, Math.max(0, e || 0))),
              (this.b = Math.min(1, Math.max(0, o || 0))),
              (this.a = Math.min(1, Math.max(0, n || 0)));
          }
          return (
            (t.fromString = function (e) {
              if (e.indexOf("#") >= 0) return t.fromHexString(e);
              var o = t.nameToHex[e];
              if (o) return t.fromHexString(o);
              if (e.indexOf("rgb") >= 0) return t.fromRgbaString(e);
              throw new Error("Invalid color string: '" + e + "'");
            }),
            (t.fromHexString = function (e) {
              var o = e.match(t.hexRe);
              if (o)
                return new t(
                  (n = parseInt(o[1], 16)) / 255,
                  (r = parseInt(o[2], 16)) / 255,
                  (i = parseInt(o[3], 16)) / 255,
                  (s = void 0 !== o[4] ? parseInt(o[4], 16) : 255) / 255
                );
              if ((o = e.match(t.shortHexRe))) {
                var n = parseInt(o[1], 16),
                  r = parseInt(o[2], 16),
                  i = parseInt(o[3], 16),
                  s = void 0 !== o[4] ? parseInt(o[4], 16) : 15;
                return new t(
                  (n += 16 * n) / 255,
                  (r += 16 * r) / 255,
                  (i += 16 * i) / 255,
                  (s += 16 * s) / 255
                );
              }
              throw new Error(
                "Malformed hexadecimal color string: '" + e + "'"
              );
            }),
            (t.fromRgbaString = function (e) {
              var o = e.match(t.rgbRe);
              if (o) return new t(+o[1] / 255, +o[2] / 255, +o[3] / 255);
              if ((o = e.match(t.rgbaRe)))
                return new t(+o[1] / 255, +o[2] / 255, +o[3] / 255, +o[4]);
              throw new Error("Malformed rgb/rgba color string: '" + e + "'");
            }),
            (t.fromArray = function (e) {
              if (4 === e.length) return new t(e[0], e[1], e[2], e[3]);
              if (3 === e.length) return new t(e[0], e[1], e[2]);
              throw new Error(
                "The given array should contain 3 or 4 color components (numbers)."
              );
            }),
            (t.fromHSB = function (e, o, n, r) {
              void 0 === r && (r = 1);
              var i = t.HSBtoRGB(e, o, n);
              return new t(i[0], i[1], i[2], r);
            }),
            (t.padHex = function (t) {
              return 1 === t.length ? "0" + t : t;
            }),
            (t.prototype.toHexString = function () {
              var e =
                "#" +
                t.padHex(Math.round(255 * this.r).toString(16)) +
                t.padHex(Math.round(255 * this.g).toString(16)) +
                t.padHex(Math.round(255 * this.b).toString(16));
              return (
                this.a < 1 &&
                  (e += t.padHex(Math.round(255 * this.a).toString(16))),
                e
              );
            }),
            (t.prototype.toRgbaString = function (t) {
              void 0 === t && (t = 3);
              var e = [
                  Math.round(255 * this.r),
                  Math.round(255 * this.g),
                  Math.round(255 * this.b),
                ],
                o = Math.pow(10, t);
              return 1 !== this.a
                ? (e.push(Math.round(this.a * o) / o),
                  "rgba(" + e.join(", ") + ")")
                : "rgb(" + e.join(", ") + ")";
            }),
            (t.prototype.toString = function () {
              return 1 === this.a ? this.toHexString() : this.toRgbaString();
            }),
            (t.prototype.toHSB = function () {
              return t.RGBtoHSB(this.r, this.g, this.b);
            }),
            (t.RGBtoHSB = function (t, e, o) {
              var n = Math.min(t, e, o),
                r = Math.max(t, e, o),
                i = NaN;
              if (n !== r) {
                var s = r - n,
                  a = (r - t) / s,
                  l = (r - e) / s,
                  u = (r - o) / s;
                (i = t === r ? u - l : e === r ? 2 + a - u : 4 + l - a),
                  (i /= 6) < 0 && (i += 1);
              }
              return [360 * i, 0 !== r ? (r - n) / r : 0, r];
            }),
            (t.HSBtoRGB = function (t, e, o) {
              isNaN(t) && (t = 0), (t = (((t % 360) + 360) % 360) / 360);
              var n = 0,
                r = 0,
                i = 0;
              if (0 === e) n = r = i = o;
              else {
                var s = 6 * (t - Math.floor(t)),
                  a = s - Math.floor(s),
                  l = o * (1 - e),
                  u = o * (1 - e * a),
                  p = o * (1 - e * (1 - a));
                switch (s >> 0) {
                  case 0:
                    (n = o), (r = p), (i = l);
                    break;
                  case 1:
                    (n = u), (r = o), (i = l);
                    break;
                  case 2:
                    (n = l), (r = o), (i = p);
                    break;
                  case 3:
                    (n = l), (r = u), (i = o);
                    break;
                  case 4:
                    (n = p), (r = l), (i = o);
                    break;
                  case 5:
                    (n = o), (r = l), (i = u);
                }
              }
              return [n, r, i];
            }),
            (t.prototype.derive = function (e, o, n, r) {
              var i = t.RGBtoHSB(this.r, this.g, this.b),
                s = i[2];
              0 == s && n > 1 && (s = 0.05);
              var a = (((i[0] + e) % 360) + 360) % 360,
                l = Math.max(Math.min(i[1] * o, 1), 0);
              s = Math.max(Math.min(s * n, 1), 0);
              var u = Math.max(Math.min(this.a * r, 1), 0),
                p = t.HSBtoRGB(a, l, s);
              return p.push(u), t.fromArray(p);
            }),
            (t.prototype.brighter = function () {
              return this.derive(0, 1, 1 / 0.7, 1);
            }),
            (t.prototype.darker = function () {
              return this.derive(0, 1, 0.7, 1);
            }),
            (t.hexRe =
              /\s*#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?\s*$/),
            (t.shortHexRe =
              /\s*#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])?\s*$/),
            (t.rgbRe = /\s*rgb\((\d+),\s*(\d+),\s*(\d+)\)\s*/),
            (t.rgbaRe = /\s*rgba\((\d+),\s*(\d+),\s*(\d+),\s*([.\d]+)\)\s*/),
            (t.nameToHex = Object.freeze({
              aliceblue: "#F0F8FF",
              antiquewhite: "#FAEBD7",
              aqua: "#00FFFF",
              aquamarine: "#7FFFD4",
              azure: "#F0FFFF",
              beige: "#F5F5DC",
              bisque: "#FFE4C4",
              black: "#000000",
              blanchedalmond: "#FFEBCD",
              blue: "#0000FF",
              blueviolet: "#8A2BE2",
              brown: "#A52A2A",
              burlywood: "#DEB887",
              cadetblue: "#5F9EA0",
              chartreuse: "#7FFF00",
              chocolate: "#D2691E",
              coral: "#FF7F50",
              cornflowerblue: "#6495ED",
              cornsilk: "#FFF8DC",
              crimson: "#DC143C",
              cyan: "#00FFFF",
              darkblue: "#00008B",
              darkcyan: "#008B8B",
              darkgoldenrod: "#B8860B",
              darkgray: "#A9A9A9",
              darkgreen: "#006400",
              darkgrey: "#A9A9A9",
              darkkhaki: "#BDB76B",
              darkmagenta: "#8B008B",
              darkolivegreen: "#556B2F",
              darkorange: "#FF8C00",
              darkorchid: "#9932CC",
              darkred: "#8B0000",
              darksalmon: "#E9967A",
              darkseagreen: "#8FBC8F",
              darkslateblue: "#483D8B",
              darkslategray: "#2F4F4F",
              darkslategrey: "#2F4F4F",
              darkturquoise: "#00CED1",
              darkviolet: "#9400D3",
              deeppink: "#FF1493",
              deepskyblue: "#00BFFF",
              dimgray: "#696969",
              dimgrey: "#696969",
              dodgerblue: "#1E90FF",
              firebrick: "#B22222",
              floralwhite: "#FFFAF0",
              forestgreen: "#228B22",
              fuchsia: "#FF00FF",
              gainsboro: "#DCDCDC",
              ghostwhite: "#F8F8FF",
              gold: "#FFD700",
              goldenrod: "#DAA520",
              gray: "#808080",
              green: "#008000",
              greenyellow: "#ADFF2F",
              grey: "#808080",
              honeydew: "#F0FFF0",
              hotpink: "#FF69B4",
              indianred: "#CD5C5C",
              indigo: "#4B0082",
              ivory: "#FFFFF0",
              khaki: "#F0E68C",
              lavender: "#E6E6FA",
              lavenderblush: "#FFF0F5",
              lawngreen: "#7CFC00",
              lemonchiffon: "#FFFACD",
              lightblue: "#ADD8E6",
              lightcoral: "#F08080",
              lightcyan: "#E0FFFF",
              lightgoldenrodyellow: "#FAFAD2",
              lightgray: "#D3D3D3",
              lightgreen: "#90EE90",
              lightgrey: "#D3D3D3",
              lightpink: "#FFB6C1",
              lightsalmon: "#FFA07A",
              lightseagreen: "#20B2AA",
              lightskyblue: "#87CEFA",
              lightslategray: "#778899",
              lightslategrey: "#778899",
              lightsteelblue: "#B0C4DE",
              lightyellow: "#FFFFE0",
              lime: "#00FF00",
              limegreen: "#32CD32",
              linen: "#FAF0E6",
              magenta: "#FF00FF",
              maroon: "#800000",
              mediumaquamarine: "#66CDAA",
              mediumblue: "#0000CD",
              mediumorchid: "#BA55D3",
              mediumpurple: "#9370DB",
              mediumseagreen: "#3CB371",
              mediumslateblue: "#7B68EE",
              mediumspringgreen: "#00FA9A",
              mediumturquoise: "#48D1CC",
              mediumvioletred: "#C71585",
              midnightblue: "#191970",
              mintcream: "#F5FFFA",
              mistyrose: "#FFE4E1",
              moccasin: "#FFE4B5",
              navajowhite: "#FFDEAD",
              navy: "#000080",
              oldlace: "#FDF5E6",
              olive: "#808000",
              olivedrab: "#6B8E23",
              orange: "#FFA500",
              orangered: "#FF4500",
              orchid: "#DA70D6",
              palegoldenrod: "#EEE8AA",
              palegreen: "#98FB98",
              paleturquoise: "#AFEEEE",
              palevioletred: "#DB7093",
              papayawhip: "#FFEFD5",
              peachpuff: "#FFDAB9",
              peru: "#CD853F",
              pink: "#FFC0CB",
              plum: "#DDA0DD",
              powderblue: "#B0E0E6",
              purple: "#800080",
              rebeccapurple: "#663399",
              red: "#FF0000",
              rosybrown: "#BC8F8F",
              royalblue: "#4169E1",
              saddlebrown: "#8B4513",
              salmon: "#FA8072",
              sandybrown: "#F4A460",
              seagreen: "#2E8B57",
              seashell: "#FFF5EE",
              sienna: "#A0522D",
              silver: "#C0C0C0",
              skyblue: "#87CEEB",
              slateblue: "#6A5ACD",
              slategray: "#708090",
              slategrey: "#708090",
              snow: "#FFFAFA",
              springgreen: "#00FF7F",
              steelblue: "#4682B4",
              tan: "#D2B48C",
              teal: "#008080",
              thistle: "#D8BFD8",
              tomato: "#FF6347",
              turquoise: "#40E0D0",
              violet: "#EE82EE",
              wheat: "#F5DEB3",
              white: "#FFFFFF",
              whitesmoke: "#F5F5F5",
              yellow: "#FFFF00",
              yellowgreen: "#9ACD32",
            })),
            t
          );
        })();
      function we(t, e) {
        void 0 === e && (e = ",");
        var o = [],
          n = function (t) {
            return "\r" === t || "\n" === t;
          },
          r = !1;
        if ("" === t) return [[""]];
        for (
          var i,
            s,
            a,
            l = function (l, u, p) {
              var c = t[p - 1],
                d = t[p],
                h = t[p + 1],
                f = function () {
                  o[l] || (o[l] = []), o[l][u] || (o[l][u] = "");
                };
              if ((f(), '"' === d)) {
                if (r)
                  return (
                    '"' === h ? ((o[l][u] += '"'), p++) : (r = !1),
                    (i = l),
                    (s = u),
                    (a = p),
                    "continue"
                  );
                if (void 0 === c || c === e || n(c))
                  return (r = !0), (i = l), (s = u), (a = p), "continue";
              }
              if (!r) {
                if (d === e)
                  return u++, f(), (i = l), (s = u), (a = p), "continue";
                if (n(d))
                  return (
                    (u = 0),
                    l++,
                    f(),
                    "\r" === d && "\n" === h && p++,
                    (i = l),
                    (s = u),
                    (a = p),
                    "continue"
                  );
              }
              (o[l][u] += d), (i = l), (s = u), (a = p);
            },
            u = 0,
            p = 0,
            c = 0;
          c < t.length;
          c++
        )
          l(u, p, c), (u = i), (p = s), (c = a);
        return o;
      }
      var be,
        Ee,
        Se,
        Oe,
        _e,
        Re,
        Pe = Object.freeze({ __proto__: null, stringToArray: we });
      function Te() {
        return void 0 === Ee && (Ee = !!document.documentMode), Ee;
      }
      function Ae() {
        return void 0 === Se && (Se = !Te() && !!window.StyleMedia), Se;
      }
      function De() {
        return (
          void 0 === be &&
            (be = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)),
          be
        );
      }
      function xe() {
        if (void 0 === Oe) {
          var t = window;
          Oe =
            (!!t.chrome && (!!t.chrome.webstore || !!t.chrome.runtime)) ||
            (/Chrome/.test(navigator.userAgent) &&
              /Google Inc/.test(navigator.vendor));
        }
        return Oe;
      }
      function Fe() {
        if (void 0 === _e) {
          var t = window;
          _e = void 0 !== t.InstallTrigger;
        }
        return _e;
      }
      function Ne() {
        return (
          void 0 === Re &&
            (Re =
              (/iPad|iPhone|iPod/.test(navigator.platform) ||
                ("MacIntel" === navigator.platform &&
                  navigator.maxTouchPoints > 1)) &&
              !window.MSStream),
          Re
        );
      }
      function Me(t) {
        if (!t) return null;
        var e = t.tabIndex,
          o = t.getAttribute("tabIndex");
        return Te() && 0 === e && null === o
          ? !0 ===
            {
              a: !0,
              body: !0,
              button: !0,
              frame: !0,
              iframe: !0,
              img: !0,
              input: !0,
              isindex: !0,
              object: !0,
              select: !0,
              textarea: !0,
            }[t.nodeName.toLowerCase()]
            ? "0"
            : null
          : -1 !== e || (null !== o && ("" !== o || Fe()))
          ? e.toString()
          : null;
      }
      function Ie() {
        if (!document.body) return -1;
        var t = 1e6,
          e = navigator.userAgent.toLowerCase().match(/firefox/) ? 6e6 : 1e9,
          o = document.createElement("div");
        for (document.body.appendChild(o); ; ) {
          var n = 2 * t;
          if (((o.style.height = n + "px"), n > e || o.clientHeight !== n))
            break;
          t = n;
        }
        return document.body.removeChild(o), t;
      }
      function Le() {
        var t = document.body,
          e = document.createElement("div");
        (e.style.width = e.style.height = "100px"),
          (e.style.opacity = "0"),
          (e.style.overflow = "scroll"),
          (e.style.msOverflowStyle = "scrollbar"),
          (e.style.position = "absolute"),
          t.appendChild(e);
        var o = e.offsetWidth - e.clientWidth;
        return 0 === o && 0 === e.clientWidth
          ? null
          : (e.parentNode && e.parentNode.removeChild(e), o);
      }
      function Ge() {
        return document.body
          ? document.body.clientWidth
          : window.innerHeight
          ? window.innerWidth
          : document.documentElement && document.documentElement.clientWidth
          ? document.documentElement.clientWidth
          : -1;
      }
      function ke() {
        return document.body
          ? document.body.clientHeight
          : window.innerHeight
          ? window.innerHeight
          : document.documentElement && document.documentElement.clientHeight
          ? document.documentElement.clientHeight
          : -1;
      }
      var Ve,
        We = Object.freeze({
          __proto__: null,
          isBrowserIE: Te,
          isBrowserEdge: Ae,
          isBrowserSafari: De,
          isBrowserChrome: xe,
          isBrowserFirefox: Fe,
          isIOSUserAgent: Ne,
          getTabIndex: Me,
          getMaxDivHeight: Ie,
          getScrollbarWidth: Le,
          hasOverflowScrolling: function () {
            var t = ["webkit", "moz", "o", "ms"],
              e = document.createElement("div"),
              o = !1;
            document.getElementsByTagName("body")[0].appendChild(e),
              e.setAttribute(
                "style",
                t
                  .map(function (t) {
                    return "-" + t + "-overflow-scrolling: touch";
                  })
                  .concat("overflow-scrolling: touch")
                  .join(";")
              );
            var n = window.getComputedStyle(e);
            if (("touch" === n.overflowScrolling && (o = !0), !o))
              for (var r = 0, i = t; r < i.length; r++)
                if ("touch" === n[i[r] + "OverflowScrolling"]) {
                  o = !0;
                  break;
                }
            return e.parentNode && e.parentNode.removeChild(e), o;
          },
          getBodyWidth: Ge,
          getBodyHeight: ke,
        });
      function He(t, e) {
        if (t && e && 0 !== e.length) {
          if (!(e.indexOf(" ") >= 0)) {
            if (t.classList) t.classList.add(e);
            else if (t.className && t.className.length > 0) {
              var o = t.className.split(" ");
              o.indexOf(e) < 0 &&
                (o.push(e), t.setAttribute("class", o.join(" ")));
            } else t.setAttribute("class", e);
            return t;
          }
          e.split(" ").forEach(function (e) {
            return He(t, e);
          });
        }
      }
      function Be(t, e) {
        if (t && e && 0 !== e.length)
          if (e.indexOf(" ") >= 0)
            e.split(" ").forEach(function (e) {
              return Be(t, e);
            });
          else if (t.classList) t.classList.remove(e);
          else if (t.className && t.className.length > 0) {
            var o = t.className
              .split(" ")
              .filter(function (t) {
                return t !== e;
              })
              .join(" ");
            t.setAttribute("class", o);
          }
      }
      function je(t, e, o) {
        o ? He(t, e) : Be(t, e);
      }
      function Ue(t, e) {
        if (t.classList) return t.classList.contains(e);
        if (t.className) {
          var o = t.className === e,
            n = t.className.indexOf(" " + e + " ") >= 0,
            r = 0 === t.className.indexOf(e + " "),
            i =
              t.className.lastIndexOf(" " + e) ===
              t.className.length - e.length - 1;
          return o || n || r || i;
        }
        return !1;
      }
      function ze(t) {
        var e =
            Element.prototype.matches || Element.prototype.msMatchesSelector,
          o = e.call(t, vt.INPUT_SELECTOR),
          n = e.call(t, vt.FOCUSABLE_EXCLUDE),
          r = so(t);
        return o && !n && r;
      }
      function Ke(t, e) {
        je(t, "ag-hidden", !e);
      }
      function Ye(t, e) {
        je(t, "ag-invisible", !e);
      }
      function Xe(t, e) {
        var o = "disabled",
          n = e
            ? function (t) {
                return t.setAttribute(o, "");
              }
            : function (t) {
                return t.removeAttribute(o);
              };
        n(t),
          To(t.querySelectorAll("input"), function (t) {
            return n(t);
          });
      }
      function qe(t, e, o) {
        for (var n = 0; t; ) {
          if (Ue(t, e)) return !0;
          if (((t = t.parentElement), o && ++n > o)) break;
        }
        return !1;
      }
      function Qe(t) {
        var e = window.getComputedStyle(t),
          o = e.width,
          n = e.paddingTop,
          r = e.paddingRight,
          i = e.paddingBottom,
          s = e.paddingLeft,
          a = e.marginTop,
          l = e.marginRight,
          u = e.marginBottom,
          p = e.marginLeft,
          c = e.boxSizing;
        return {
          height: parseFloat(e.height),
          width: parseFloat(o),
          paddingTop: parseFloat(n),
          paddingRight: parseFloat(r),
          paddingBottom: parseFloat(i),
          paddingLeft: parseFloat(s),
          marginTop: parseFloat(a),
          marginRight: parseFloat(l),
          marginBottom: parseFloat(u),
          marginLeft: parseFloat(p),
          boxSizing: c,
        };
      }
      function Ze(t) {
        var e = Qe(t);
        return "border-box" === e.boxSizing
          ? e.height - e.paddingTop - e.paddingBottom
          : e.height;
      }
      function $e(t) {
        var e = Qe(t);
        return "border-box" === e.boxSizing
          ? e.width - e.paddingLeft - e.paddingRight
          : e.width;
      }
      function Je(t) {
        var e = Qe(t);
        return Math.ceil(t.offsetHeight + (e.marginBottom + e.marginTop));
      }
      function to(t) {
        var e = Qe(t);
        return Math.ceil(t.offsetWidth + (e.marginLeft + e.marginRight));
      }
      function eo() {
        if ("boolean" == typeof Ve) return Ve;
        var t = document.createElement("div");
        return (
          (t.style.direction = "rtl"),
          (t.style.width = "1px"),
          (t.style.height = "1px"),
          (t.style.position = "fixed"),
          (t.style.top = "0px"),
          (t.style.overflow = "hidden"),
          (t.dir = "rtl"),
          (t.innerHTML =
            '<div style="width: 2px">\n            <span style="display: inline-block; width: 1px"></span>\n            <span style="display: inline-block; width: 1px"></span>\n        </div>'),
          document.body.appendChild(t),
          (t.scrollLeft = 1),
          (Ve = 0 === Math.floor(t.scrollLeft)),
          document.body.removeChild(t),
          Ve
        );
      }
      function oo(t, e) {
        var o = t.scrollLeft;
        return (
          e &&
            ((o = Math.abs(o)),
            xe() && !eo() && (o = t.scrollWidth - t.clientWidth - o)),
          o
        );
      }
      function no(t, e, o) {
        o &&
          (eo()
            ? (e *= -1)
            : (De() || xe()) && (e = t.scrollWidth - t.clientWidth - e)),
          (t.scrollLeft = e);
      }
      function ro(t) {
        for (; t && t.firstChild; ) t.removeChild(t.firstChild);
      }
      function io(t) {
        t && t.parentNode && t.parentNode.removeChild(t);
      }
      function so(t) {
        return null !== t.offsetParent;
      }
      function ao(t) {
        var e = document.createElement("div");
        return (e.innerHTML = (t || "").trim()), e.firstChild;
      }
      function lo(t, e) {
        t.lastChild ? t.insertAdjacentHTML("afterbegin", e) : (t.innerHTML = e);
      }
      function uo(t) {
        return t && t.clientHeight ? t.clientHeight : 0;
      }
      function po(t) {
        return t && t.clientWidth ? t.clientWidth : 0;
      }
      function co(t, e, o) {
        (o && o.nextSibling === e) ||
          (o
            ? o.nextSibling
              ? t.insertBefore(e, o.nextSibling)
              : t.appendChild(e)
            : t.firstChild &&
              t.firstChild !== e &&
              t.insertAdjacentElement("afterbegin", e));
      }
      function ho(t, e) {
        for (var o = 0; o < e.length; o++) {
          var n = e[o],
            r = t.children[o];
          r !== n && t.insertBefore(n, r);
        }
      }
      function fo(t, e, o) {
        var n;
        return (
          o
            ? (o.insertAdjacentHTML("afterend", e), (n = o.nextSibling))
            : (t.firstChild
                ? t.insertAdjacentHTML("afterbegin", e)
                : (t.innerHTML = e),
              (n = t.firstChild)),
          n
        );
      }
      function go(t, e) {
        e &&
          Object.keys(e).forEach(function (o) {
            var n = Qt(o);
            n && (t.style[n] = e[o]);
          });
      }
      function yo(t) {
        return t.clientWidth < t.scrollWidth;
      }
      function mo(t) {
        return t.clientHeight < t.scrollHeight;
      }
      function vo(t, e) {
        "flex" === e
          ? (t.style.removeProperty("width"),
            t.style.removeProperty("minWidth"),
            t.style.removeProperty("maxWidth"),
            (t.style.flex = "1 1 auto"))
          : Co(t, e);
      }
      function Co(t, e) {
        (e = bo(e)),
          (t.style.width = e.toString()),
          (t.style.maxWidth = e.toString()),
          (t.style.minWidth = e.toString());
      }
      function wo(t, e) {
        (e = bo(e)),
          (t.style.height = e.toString()),
          (t.style.maxHeight = e.toString()),
          (t.style.minHeight = e.toString());
      }
      function bo(t) {
        return "number" == typeof t ? t + "px" : t;
      }
      function Eo(t) {
        return "function" == typeof Node
          ? t instanceof Node
          : t &&
              "object" == typeof t &&
              "number" == typeof t.nodeType &&
              "string" == typeof t.nodeName;
      }
      function So(t) {
        return "function" == typeof HTMLElement
          ? t instanceof HTMLElement
          : t && U(t) && 1 === t.nodeType && "string" == typeof t.nodeName;
      }
      function Oo(t) {
        return Eo(t) || So(t);
      }
      function _o(t) {
        if (null == t) return [];
        var e = [];
        return (
          To(t, function (t) {
            return e.push(t);
          }),
          e
        );
      }
      function Ro(t, e) {
        if (t)
          for (var o = 0; o < t.length; o++) {
            var n = t[o];
            e(n.name, n.value);
          }
      }
      function Po(t, e, o) {
        null == o ? t.removeAttribute(e) : t.setAttribute(e, o.toString());
      }
      function To(t, e) {
        if (null != t) for (var o = 0; o < t.length; o++) e(t[o]);
      }
      var Ao = Object.freeze({
        __proto__: null,
        addCssClass: He,
        removeCssClass: Be,
        addOrRemoveCssClass: je,
        radioCssClass: function (t, e, o) {
          for (var n = t.parentElement, r = n && n.firstChild; r; )
            e && je(r, e, r === t), o && je(r, o, r !== t), (r = r.nextSibling);
        },
        containsClass: Ue,
        isFocusableFormField: ze,
        setDisplayed: Ke,
        setVisible: Ye,
        setDisabled: Xe,
        isElementChildOfClass: qe,
        getElementSize: Qe,
        getInnerHeight: Ze,
        getInnerWidth: $e,
        getAbsoluteHeight: Je,
        getAbsoluteWidth: to,
        isRtlNegativeScroll: eo,
        getScrollLeft: oo,
        setScrollLeft: no,
        clearElement: ro,
        removeElement: function (t, e) {
          io(t.querySelector(e));
        },
        removeFromParent: io,
        isVisible: so,
        loadTemplate: ao,
        appendHtml: lo,
        getElementAttribute: function (t, e) {
          return t.attributes && t.attributes[e] ? t.attributes[e].value : null;
        },
        offsetHeight: uo,
        offsetWidth: po,
        ensureDomOrder: co,
        setDomChildOrder: ho,
        insertTemplateWithDomOrder: fo,
        prependDC: function (t, e) {
          r(t.firstChild) ? t.insertBefore(e, t.firstChild) : t.appendChild(e);
        },
        addStylesToElement: go,
        isHorizontalScrollShowing: yo,
        isVerticalScrollShowing: mo,
        setElementWidth: vo,
        setFixedWidth: Co,
        setElementHeight: function (t, e) {
          "flex" === e
            ? (t.style.removeProperty("height"),
              t.style.removeProperty("minHeight"),
              t.style.removeProperty("maxHeight"),
              (t.style.flex = "1 1 auto"))
            : wo(t, e);
        },
        setFixedHeight: wo,
        formatSize: bo,
        isNode: Eo,
        isElement: So,
        isNodeOrElement: Oo,
        copyNodeList: _o,
        iterateNamedNodeMap: Ro,
        setCheckboxState: function (t, e) {
          "boolean" == typeof e
            ? ((t.checked = e), (t.indeterminate = !1))
            : (t.indeterminate = !0);
        },
        addOrRemoveAttribute: Po,
        nodeListForEach: To,
      });
      function Do(t) {
        if (!t) return "";
        var e = [];
        return (
          F(t, function (t, o) {
            var n = qt(t);
            e.push(n + ": " + o + ";");
          }),
          e.join(" ")
        );
      }
      function xo(t, e) {
        t.then(function (t) {
          var o = t.getGui();
          null != o &&
            ("object" == typeof o ? e.appendChild(o) : (e.innerHTML = o));
        });
      }
      var Fo = Object.freeze({
        __proto__: null,
        getNameOfClass: function (t) {
          var e = t.toString(),
            o = /function (.{1,})\(/.exec(e);
          return o && o.length > 1 ? o[1] : "";
        },
        findLineByLeastSquares: function (t) {
          var e = t.length,
            o = 0;
          if (e <= 1) return t;
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            Math.floor(r) !== r &&
              (o = Math.max(o, r.toString().split(".")[1].length));
          }
          for (var i = 0, s = 0, a = 0, l = 0, u = 0, p = 0; p < e; p++)
            (i += p), (s += u = t[p]), (l += p * p), (a += p * u);
          var c = (e * a - i * s) / (e * l - i * i),
            d = s / e - (c * i) / e,
            h = [];
          for (p = 0; p <= e; p++) h.push(parseFloat((p * c + d).toFixed(o)));
          return h;
        },
        cssStyleObjectToMarkup: Do,
        message: function (t) {
          var e = document.createElement("div"),
            o = document.querySelector("#__ag__message");
          (e.innerHTML = t),
            o ||
              ((o = ao(
                '<div id="__ag__message" style="display: inline-block; position: absolute; top: 0px; left: 0px; color: white; background-color: black; z-index: 20; padding: 2px; border: 1px solid darkred; height: 200px; overflow-y: auto;"></div>'
              )),
              document.body && document.body.appendChild(o)),
            o.insertBefore(e, o.children[0]);
        },
        bindCellRendererToHtmlElement: xo,
      });
      function No(t, e, o) {
        t.setAttribute(Io(e), o.toString());
      }
      function Mo(t, e) {
        t.removeAttribute(Io(e));
      }
      function Io(t) {
        return "aria-" + t;
      }
      function Lo(t) {
        return t.isSortAscending()
          ? "ascending"
          : t.isSortDescending()
          ? "descending"
          : "none";
      }
      function Go(t) {
        return parseInt(t.getAttribute("aria-posinset"), 10);
      }
      function ko(t) {
        return t.getAttribute("aria-describedby") || "";
      }
      function Vo(t, e) {
        No(t, "label", e);
      }
      function Wo(t, e) {
        No(t, "labelledby", e);
      }
      function Ho(t, e) {
        No(t, "describedby", e);
      }
      function Bo(t, e) {
        No(t, "disabled", e);
      }
      function jo(t, e) {
        No(t, "expanded", e);
      }
      function Uo(t) {
        Mo(t, "expanded");
      }
      function zo(t, e) {
        No(t, "setsize", e);
      }
      function Ko(t, e) {
        No(t, "posinset", e);
      }
      function Yo(t, e) {
        No(t, "multiselectable", e);
      }
      function Xo(t, e) {
        No(t, "rowcount", e);
      }
      function qo(t, e) {
        No(t, "rowindex", e);
      }
      function Qo(t, e) {
        No(t, "colcount", e);
      }
      function Zo(t, e) {
        No(t, "colindex", e);
      }
      function $o(t, e) {
        No(t, "colspan", e);
      }
      function Jo(t, e) {
        No(t, "sort", e);
      }
      function tn(t) {
        Mo(t, "sort");
      }
      function en(t, e) {
        var o = "selected";
        e ? No(t, o, e) : Mo(t, o);
      }
      function on(t, e) {
        No(t, "checked", void 0 === e ? "mixed" : e);
      }
      var nn = Object.freeze({
        __proto__: null,
        getAriaSortState: Lo,
        getAriaLevel: function (t) {
          return parseInt(t.getAttribute("aria-level"), 10);
        },
        getAriaPosInSet: Go,
        getAriaDescribedBy: ko,
        setAriaLabel: Vo,
        setAriaLabelledBy: Wo,
        setAriaDescribedBy: Ho,
        setAriaLevel: function (t, e) {
          No(t, "level", e);
        },
        setAriaDisabled: Bo,
        setAriaExpanded: jo,
        removeAriaExpanded: Uo,
        setAriaSetSize: zo,
        setAriaPosInSet: Ko,
        setAriaMultiSelectable: Yo,
        setAriaRowCount: Xo,
        setAriaRowIndex: qo,
        setAriaColCount: Qo,
        setAriaColIndex: Zo,
        setAriaColSpan: $o,
        setAriaSort: Jo,
        removeAriaSort: tn,
        setAriaSelected: en,
        setAriaChecked: on,
      });
      function rn(t, e, o) {
        if ((void 0 === e && (e = !0), void 0 === o && (o = "-"), !t))
          return null;
        var n = [t.getFullYear(), t.getMonth() + 1, t.getDate()]
          .map(function (t) {
            return re(t, 2);
          })
          .join(o);
        return (
          e &&
            (n +=
              " " +
              [t.getHours(), t.getMinutes(), t.getSeconds()]
                .map(function (t) {
                  return re(t, 2);
                })
                .join(":")),
          n
        );
      }
      function sn(t) {
        if (!t) return null;
        var e = t.split(" "),
          o = e[0],
          n = e[1];
        if (!o) return null;
        var r = o.split("-").map(function (t) {
          return parseInt(t, 10);
        });
        if (
          3 !==
          r.filter(function (t) {
            return !isNaN(t);
          }).length
        )
          return null;
        var i = r[0],
          s = r[1],
          a = r[2],
          l = new Date(i, s - 1, a);
        if (
          l.getFullYear() !== i ||
          l.getMonth() !== s - 1 ||
          l.getDate() !== a
        )
          return null;
        if (!n || "00:00:00" === n) return l;
        var u = n.split(":").map(function (t) {
            return parseInt(t, 10);
          }),
          p = u[0],
          c = u[1],
          d = u[2];
        return (
          p >= 0 && p < 24 && l.setHours(p),
          c >= 0 && c < 60 && l.setMinutes(c),
          d >= 0 && d < 60 && l.setSeconds(d),
          l
        );
      }
      var an = Object.freeze({
        __proto__: null,
        serialiseDate: rn,
        parseDateTimeFromString: sn,
      });
      function ln(t, e, o) {
        var n = {},
          r = t.filter(function (t) {
            return !e.some(function (e) {
              return e === t;
            });
          });
        return (
          r.length > 0 &&
            r.forEach(function (t) {
              return (n[t] = un(t, o));
            }),
          n
        );
      }
      function un(t, e, o, n) {
        var r = n ? dn : cn,
          i = e.map(function (e) {
            return {
              value: e,
              relevance: r(t.toLowerCase(), e.toLocaleLowerCase()),
            };
          });
        return (
          i.sort(function (t, e) {
            return e.relevance - t.relevance;
          }),
          o &&
            (i = i.filter(function (t) {
              return 0 !== t.relevance;
            })),
          i.map(function (t) {
            return t.value;
          })
        );
      }
      function pn(t) {
        var e,
          o,
          n,
          r = t.toLowerCase(),
          i = new Array(r.length - 1);
        for (e = o = 0, n = i.length; o <= n; e = o += 1)
          i[e] = r.slice(e, e + 2);
        return i;
      }
      function cn(t, e) {
        if (0 === t.length && 0 === e.length) return 0;
        var o,
          n,
          r = pn(t),
          i = pn(e),
          s = r.length + i.length,
          a = 0;
        for (o = 0, n = r.length; o < n; o++) {
          var l,
            u = r[o],
            p = void 0;
          for (p = 0, l = i.length; p < l; p++) u === i[p] && a++;
        }
        return a > 0 ? (2 * a) / s : 0;
      }
      function dn(t, e) {
        for (
          var o = t.replace(/\s/g, ""), n = e.replace(/\s/g, ""), r = 0, i = 0;
          i < o.length;
          i++
        ) {
          var s = n.indexOf(o[i]);
          -1 !== s && ((r += (100 * (n.length - s)) / n.length), (r *= r));
        }
        return r;
      }
      var hn = Object.freeze({
          __proto__: null,
          fuzzyCheckStrings: ln,
          fuzzySuggestions: un,
          get_bigrams: pn,
          string_distances: cn,
          string_weighted_distances: dn,
        }),
        fn = {
          columnGroupOpened: "expanded",
          columnGroupClosed: "contracted",
          columnSelectClosed: "tree-closed",
          columnSelectOpen: "tree-open",
          columnSelectIndeterminate: "tree-indeterminate",
          columnMovePin: "pin",
          columnMoveHide: "eye-slash",
          columnMoveMove: "arrows",
          columnMoveLeft: "left",
          columnMoveRight: "right",
          columnMoveGroup: "group",
          columnMoveValue: "aggregation",
          columnMovePivot: "pivot",
          dropNotAllowed: "not-allowed",
          groupContracted: "tree-closed",
          groupExpanded: "tree-open",
          chart: "chart",
          close: "cross",
          cancel: "cancel",
          check: "tick",
          first: "first",
          previous: "previous",
          next: "next",
          last: "last",
          linked: "linked",
          unlinked: "unlinked",
          colorPicker: "color-picker",
          groupLoading: "loading",
          menu: "menu",
          filter: "filter",
          columns: "columns",
          maximize: "maximize",
          minimize: "minimize",
          menuPin: "pin",
          menuValue: "aggregation",
          menuAddRowGroup: "group",
          menuRemoveRowGroup: "group",
          clipboardCopy: "copy",
          clipboardPaste: "paste",
          pivotPanel: "pivot",
          rowGroupPanel: "group",
          valuePanel: "aggregation",
          columnDrag: "grip",
          rowDrag: "grip",
          save: "save",
          smallDown: "small-down",
          smallLeft: "small-left",
          smallRight: "small-right",
          smallUp: "small-up",
          sortAscending: "asc",
          sortDescending: "desc",
          sortUnSort: "none",
        };
      function gn(t, e, o) {
        var n = yn(t, e, o);
        if (n && n.className.indexOf("ag-icon") > -1) return n;
        var r = document.createElement("span");
        return r.appendChild(n), r;
      }
      function yn(t, e, o, n) {
        var r = null,
          i = o && o.getColDef().icons;
        if ((i && (r = i[t]), e && !r)) {
          var s = e.getIcons();
          s && (r = s[t]);
        }
        if (!r) {
          var a = document.createElement("span"),
            l = fn[t];
          return (
            l ||
              (n
                ? (l = t)
                : (console.warn("AG Grid: Did not find icon " + t), (l = ""))),
            a.setAttribute("class", "ag-icon ag-icon-" + l),
            a.setAttribute("unselectable", "on"),
            a.setAttribute("role", "presentation"),
            a
          );
        }
        var u = void 0;
        if ("function" == typeof r) u = r();
        else {
          if ("string" != typeof r)
            throw new Error(
              "icon from grid options needs to be a string or a function"
            );
          u = r;
        }
        return "string" == typeof u
          ? ao(u)
          : Oo(u)
          ? u
          : void console.warn(
              "AG Grid: iconRenderer should return back a string or a dom object"
            );
      }
      var mn = Object.freeze({
        __proto__: null,
        iconNameClassMap: fn,
        createIcon: gn,
        createIconNoSpan: yn,
      });
      function vn(t, e) {
        return (t.which || t.keyCode) === e;
      }
      function Cn(t) {
        if (t.altKey || t.ctrlKey || t.metaKey) return !1;
        var e = 1 === t.key.length,
          o = (function (t) {
            return (Ae() || Te()) && "Del" === t.key && 46 === t.charCode;
          })(t);
        return e || o;
      }
      function wn(t, e, o, n, r) {
        var i = t.getSuppressKeyboardEventFunc(),
          s = n ? n.getColDef().suppressKeyboardEvent : void 0;
        if (!i && !s) return !1;
        var a = {
          event: e,
          editing: r,
          column: n,
          api: t.getApi(),
          node: o,
          data: o.data,
          colDef: n.getColDef(),
          context: t.getContext(),
          columnApi: t.getColumnApi(),
        };
        return !(!s || !s(a)) || (!!i && i(a));
      }
      function bn(t, e, o, n) {
        var i = n.getDefinition(),
          s = i && i.suppressHeaderKeyboardEvent;
        return (
          !!r(s) &&
          !!s({
            api: t.getApi(),
            columnApi: t.getColumnApi(),
            context: t.getContext(),
            colDef: i,
            column: n,
            headerRowIndex: o,
            event: e,
          })
        );
      }
      var En = Object.freeze({
          __proto__: null,
          isKeyPressed: vn,
          isEventFromPrintableCharacter: Cn,
          isUserSuppressingKeyboardEvent: wn,
          isUserSuppressingHeaderKeyboardEvent: bn,
        }),
        Sn = Object.freeze({
          __proto__: null,
          keys: function (t) {
            var e = [];
            return (
              t.forEach(function (t, o) {
                return e.push(o);
              }),
              e
            );
          },
        });
      function On(t, e, o) {
        if (0 === o) return !1;
        var n = Math.abs(t.clientX - e.clientX),
          r = Math.abs(t.clientY - e.clientY);
        return Math.max(n, r) <= o;
      }
      var _n = Object.freeze({
          __proto__: null,
          normalizeWheel: function (t) {
            var e = 0,
              o = 0,
              n = 0,
              r = 0;
            return (
              "detail" in t && (o = t.detail),
              "wheelDelta" in t && (o = -t.wheelDelta / 120),
              "wheelDeltaY" in t && (o = -t.wheelDeltaY / 120),
              "wheelDeltaX" in t && (e = -t.wheelDeltaX / 120),
              "axis" in t && t.axis === t.HORIZONTAL_AXIS && ((e = o), (o = 0)),
              (n = 10 * e),
              (r = 10 * o),
              "deltaY" in t && (r = t.deltaY),
              "deltaX" in t && (n = t.deltaX),
              (n || r) &&
                t.deltaMode &&
                (1 == t.deltaMode
                  ? ((n *= 40), (r *= 40))
                  : ((n *= 800), (r *= 800))),
              n && !e && (e = n < 1 ? -1 : 1),
              r && !o && (o = r < 1 ? -1 : 1),
              { spinX: e, spinY: o, pixelX: n, pixelY: r }
            );
          },
          isLeftClick: function (t) {
            return "buttons" in t ? 1 == t.buttons : 1 == (t.which || t.button);
          },
          areEventsNear: On,
        }),
        Rn = Object.freeze({
          __proto__: null,
          sortRowNodesByOrder: function (t, e) {
            if (t) {
              for (
                var o = function (t, o) {
                    var n = e[t.id],
                      r = e[o.id],
                      i = void 0 !== n,
                      s = void 0 !== r;
                    return i && s
                      ? n - r
                      : i || s
                      ? i
                        ? 1
                        : -1
                      : t.__objectId - o.__objectId;
                  },
                  n = !1,
                  r = 0;
                r < t.length - 1;
                r++
              )
                if (o(t[r], t[r + 1]) > 0) {
                  n = !0;
                  break;
                }
              n && t.sort(o);
            }
          },
          traverseNodesWithKey: function (t, e) {
            var o = [];
            !(function t(n) {
              n &&
                n.forEach(function (n) {
                  if (n.group || n.hasChildren()) {
                    o.push(n.key);
                    var r = o.join("|");
                    e(n, r), t(n.childrenAfterGroup), o.pop();
                  }
                });
            })(t);
          },
        });
      function Pn(t) {
        var e = new Set();
        return (
          t.forEach(function (t) {
            return e.add(t);
          }),
          e
        );
      }
      var Tn,
        An = Object.freeze({ __proto__: null, convertToSet: Pn }),
        Dn = function () {
          return (Dn =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        xn = Dn(
          Dn(
            Dn(
              Dn(
                Dn(
                  Dn(
                    Dn(
                      Dn(
                        Dn(
                          Dn(
                            Dn(
                              Dn(
                                Dn(
                                  Dn(
                                    Dn(
                                      Dn(Dn(Dn(Dn(Dn({}, Fo), nn), x), We), Pe),
                                      an
                                    ),
                                    Ao
                                  ),
                                  Vt
                                ),
                                nt
                              ),
                              hn
                            ),
                            h
                          ),
                          mn
                        ),
                        En
                      ),
                      Sn
                    ),
                    _n
                  ),
                  ue
                ),
                z
              ),
              Rn
            ),
            An
          ),
          te
        ),
        Fn = (function () {
          function t(t, e) {
            void 0 === t && (t = 0),
              void 0 === e && (e = 1),
              (this.nextValue = t),
              (this.step = e);
          }
          return (
            (t.prototype.next = function () {
              var t = this.nextValue;
              return (this.nextValue += this.step), t;
            }),
            (t.prototype.peek = function () {
              return this.nextValue;
            }),
            (t.prototype.skip = function (t) {
              this.nextValue += t;
            }),
            t
          );
        })();
      ((Tn = e.AgPromiseStatus || (e.AgPromiseStatus = {}))[
        (Tn.IN_PROGRESS = 0)
      ] = "IN_PROGRESS"),
        (Tn[(Tn.RESOLVED = 1)] = "RESOLVED");
      var Nn,
        Mn = (function () {
          function t(t) {
            var o = this;
            (this.status = e.AgPromiseStatus.IN_PROGRESS),
              (this.resolution = null),
              (this.waiters = []),
              t(
                function (t) {
                  return o.onDone(t);
                },
                function (t) {
                  return o.onReject(t);
                }
              );
          }
          return (
            (t.all = function (e) {
              return new t(function (t) {
                var o = e.length,
                  n = new Array(o);
                T(e, function (e, r) {
                  e.then(function (e) {
                    (n[r] = e), 0 == --o && t(n);
                  });
                });
              });
            }),
            (t.resolve = function (e) {
              return (
                void 0 === e && (e = null),
                new t(function (t) {
                  return t(e);
                })
              );
            }),
            (t.prototype.then = function (o) {
              var n = this;
              return new t(function (t) {
                n.status === e.AgPromiseStatus.RESOLVED
                  ? t(o(n.resolution))
                  : n.waiters.push(function (e) {
                      return t(o(e));
                    });
              });
            }),
            (t.prototype.resolveNow = function (t, o) {
              return this.status === e.AgPromiseStatus.RESOLVED
                ? o(this.resolution)
                : t;
            }),
            (t.prototype.onDone = function (t) {
              (this.status = e.AgPromiseStatus.RESOLVED),
                (this.resolution = t),
                T(this.waiters, function (e) {
                  return e(t);
                });
            }),
            (t.prototype.onReject = function (t) {
              console.warn("TBI");
            }),
            t
          );
        })(),
        In = (function () {
          function t() {
            this.timestamp = new Date().getTime();
          }
          return (
            (t.prototype.print = function (t) {
              var e = new Date().getTime() - this.timestamp;
              console.info(t + " = " + e),
                (this.timestamp = new Date().getTime());
            }),
            t
          );
        })(),
        Ln = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Gn = function () {
          return (Gn =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        kn = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.NOTHING = 0)] = "NOTHING"),
          (t[(t.WAITING_TO_SHOW = 1)] = "WAITING_TO_SHOW"),
          (t[(t.SHOWING = 2)] = "SHOWING");
      })(Nn || (Nn = {}));
      var Vn = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (
              (o.DEFAULT_HIDE_TOOLTIP_TIMEOUT = 1e4),
              (o.SHOW_QUICK_TOOLTIP_DIFF = 1e3),
              (o.FADE_OUT_TOOLTIP_TIMEOUT = 1e3),
              (o.state = Nn.NOTHING),
              (o.tooltipInstanceCount = 0),
              (o.tooltipMouseTrack = !1),
              (o.parentComp = e),
              o
            );
          }
          return (
            Ln(e, t),
            (e.prototype.postConstruct = function () {
              (this.tooltipShowDelay =
                this.gridOptionsWrapper.getTooltipShowDelay() || 2e3),
                (this.tooltipMouseTrack =
                  this.gridOptionsWrapper.isTooltipMouseTrack());
              var t = this.parentComp.getGui();
              this.addManagedListener(
                t,
                "mouseenter",
                this.onMouseEnter.bind(this)
              ),
                this.addManagedListener(
                  t,
                  "mouseleave",
                  this.onMouseLeave.bind(this)
                ),
                this.addManagedListener(
                  t,
                  "mousemove",
                  this.onMouseMove.bind(this)
                ),
                this.addManagedListener(
                  t,
                  "mousedown",
                  this.onMouseDown.bind(this)
                ),
                this.addManagedListener(
                  t,
                  "keydown",
                  this.onKeyDown.bind(this)
                );
            }),
            (e.prototype.destroy = function () {
              this.setToDoNothing(), t.prototype.destroy.call(this);
            }),
            (e.prototype.onMouseEnter = function (t) {
              if (this.state == Nn.NOTHING) {
                var e = this.isLastTooltipHiddenRecently()
                  ? 200
                  : this.tooltipShowDelay;
                (this.showTooltipTimeoutId = window.setTimeout(
                  this.showTooltip.bind(this),
                  e
                )),
                  (this.lastMouseEvent = t),
                  (this.state = Nn.WAITING_TO_SHOW);
              }
            }),
            (e.prototype.onMouseLeave = function () {
              this.setToDoNothing();
            }),
            (e.prototype.onKeyDown = function () {
              this.setToDoNothing();
            }),
            (e.prototype.setToDoNothing = function () {
              this.state === Nn.SHOWING && this.hideTooltip(),
                this.clearTimeouts(),
                (this.state = Nn.NOTHING);
            }),
            (e.prototype.onMouseMove = function (t) {
              (this.lastMouseEvent = t),
                this.tooltipMouseTrack &&
                  this.state === Nn.SHOWING &&
                  this.tooltipComp &&
                  this.positionTooltipUnderLastMouseEvent();
            }),
            (e.prototype.onMouseDown = function () {
              this.setToDoNothing();
            }),
            (e.prototype.hideTooltip = function () {
              this.tooltipComp &&
                (this.destroyTooltipComp(),
                (e.lastTooltipHideTime = new Date().getTime())),
                (this.state = Nn.NOTHING);
            }),
            (e.prototype.destroyTooltipComp = function () {
              var t = this;
              He(this.tooltipComp.getGui(), "ag-tooltip-hiding");
              var e = this.tooltipPopupDestroyFunc,
                o = this.tooltipComp;
              window.setTimeout(function () {
                e(), t.getContext().destroyBean(o);
              }, this.FADE_OUT_TOOLTIP_TIMEOUT),
                (this.tooltipPopupDestroyFunc = void 0),
                (this.tooltipComp = void 0);
            }),
            (e.prototype.isLastTooltipHiddenRecently = function () {
              return (
                new Date().getTime() - e.lastTooltipHideTime <
                this.SHOW_QUICK_TOOLTIP_DIFF
              );
            }),
            (e.prototype.showTooltip = function () {
              var t = Gn(
                {
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  context: this.gridOptionsWrapper.getContext(),
                },
                this.parentComp.getTooltipParams()
              );
              if (r(t.value)) {
                (this.state = Nn.SHOWING), this.tooltipInstanceCount++;
                var e = this.newTooltipComponentCallback.bind(
                  this,
                  this.tooltipInstanceCount
                );
                this.userComponentFactory.newTooltipComponent(t).then(e);
              } else this.setToDoNothing();
            }),
            (e.prototype.newTooltipComponentCallback = function (t, e) {
              if (this.state !== Nn.SHOWING || this.tooltipInstanceCount !== t)
                this.getContext().destroyBean(e);
              else {
                var o = e.getGui();
                (this.tooltipComp = e),
                  Ue(o, "ag-tooltip") || He(o, "ag-tooltip-custom");
                var n = this.popupService.addPopup({ eChild: o });
                n && (this.tooltipPopupDestroyFunc = n.hideFunc),
                  this.positionTooltipUnderLastMouseEvent(),
                  (this.hideTooltipTimeoutId = window.setTimeout(
                    this.hideTooltip.bind(this),
                    this.DEFAULT_HIDE_TOOLTIP_TIMEOUT
                  ));
              }
            }),
            (e.prototype.positionTooltipUnderLastMouseEvent = function () {
              this.popupService.positionPopupUnderMouseEvent({
                type: "tooltip",
                mouseEvent: this.lastMouseEvent,
                ePopup: this.tooltipComp.getGui(),
                nudgeY: 18,
              });
            }),
            (e.prototype.clearTimeouts = function () {
              this.showTooltipTimeoutId &&
                (window.clearTimeout(this.showTooltipTimeoutId),
                (this.showTooltipTimeoutId = void 0)),
                this.hideTooltipTimeoutId &&
                  (window.clearTimeout(this.hideTooltipTimeoutId),
                  (this.hideTooltipTimeoutId = void 0));
            }),
            kn([ut("popupService")], e.prototype, "popupService", void 0),
            kn(
              [ut("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            kn([ut("columnApi")], e.prototype, "columnApi", void 0),
            kn([ut("gridApi")], e.prototype, "gridApi", void 0),
            kn([st], e.prototype, "postConstruct", null),
            e
          );
        })(Ht),
        Wn = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Hn = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Bn = new Fn(),
        jn = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (
              (o.annotatedGuiListeners = []),
              (o.displayed = !0),
              (o.visible = !0),
              (o.compId = Bn.next()),
              (o.cssClassStates = {}),
              e && o.setTemplate(e),
              o
            );
          }
          return (
            Wn(e, t),
            (e.prototype.preConstructOnComponent = function () {
              this.usingBrowserTooltips =
                this.gridOptionsWrapper.isEnableBrowserTooltips();
            }),
            (e.prototype.getCompId = function () {
              return this.compId;
            }),
            (e.prototype.getTooltipParams = function () {
              return { value: this.tooltipText, location: "UNKNOWN" };
            }),
            (e.prototype.setTooltip = function (t) {
              var e = this;
              this.tooltipText != t &&
                (this.tooltipText &&
                  (e.usingBrowserTooltips
                    ? e.getGui().removeAttribute("title")
                    : (e.tooltipFeature = e.destroyBean(e.tooltipFeature))),
                (this.tooltipText = t),
                this.tooltipText &&
                  (e.usingBrowserTooltips
                    ? e.getGui().setAttribute("title", e.tooltipText)
                    : (e.tooltipFeature = e.createBean(new Vn(e)))));
            }),
            (e.prototype.createChildComponentsFromTags = function (t, e) {
              var o = this;
              T(_o(t.childNodes), function (n) {
                if (n instanceof HTMLElement) {
                  var r = o.createComponentFromElement(
                    n,
                    function (t) {
                      o.copyAttributesFromNode(n, t.getGui());
                    },
                    e
                  );
                  if (r) {
                    if (r.addItems && n.children.length) {
                      o.createChildComponentsFromTags(n, e);
                      var i = Array.prototype.slice.call(n.children);
                      r.addItems(i);
                    }
                    o.swapComponentForNode(r, t, n);
                  } else n.childNodes && o.createChildComponentsFromTags(n, e);
                }
              });
            }),
            (e.prototype.createComponentFromElement = function (t, e, o) {
              var n = t.nodeName,
                r = o ? o[t.getAttribute("ref")] : void 0,
                i = this.agStackComponentsRegistry.getComponentClass(n);
              if (i) {
                var s = new i(r);
                return this.createBean(s, null, e), s;
              }
              return null;
            }),
            (e.prototype.copyAttributesFromNode = function (t, e) {
              Ro(t.attributes, function (t, o) {
                return e.setAttribute(t, o);
              });
            }),
            (e.prototype.swapComponentForNode = function (t, e, o) {
              var n = t.getGui();
              e.replaceChild(n, o),
                e.insertBefore(document.createComment(o.nodeName), n),
                this.addDestroyFunc(this.destroyBean.bind(this, t)),
                this.swapInComponentForQuerySelectors(t, o);
            }),
            (e.prototype.swapInComponentForQuerySelectors = function (t, e) {
              var o = this;
              this.iterateOverQuerySelectors(function (n) {
                o[n.attributeName] === e && (o[n.attributeName] = t);
              });
            }),
            (e.prototype.iterateOverQuerySelectors = function (t) {
              for (var e = Object.getPrototypeOf(this); null != e; ) {
                var o = e.__agComponentMetaData,
                  n = Q(e.constructor);
                o &&
                  o[n] &&
                  o[n].querySelectors &&
                  T(o[n].querySelectors, function (e) {
                    return t(e);
                  }),
                  (e = Object.getPrototypeOf(e));
              }
            }),
            (e.prototype.setTemplate = function (t, e) {
              var o = ao(t);
              this.setTemplateFromElement(o, e);
            }),
            (e.prototype.setTemplateFromElement = function (t, e) {
              (this.eGui = t),
                (this.eGui.__agComponent = this),
                this.addAnnotatedGuiEventListeners(),
                this.wireQuerySelectors(),
                this.getContext() &&
                  this.createChildComponentsFromTags(this.getGui(), e);
            }),
            (e.prototype.createChildComponentsPreConstruct = function () {
              this.getGui() &&
                this.createChildComponentsFromTags(this.getGui());
            }),
            (e.prototype.wireQuerySelectors = function () {
              var t = this;
              if (this.eGui) {
                var e = this;
                this.iterateOverQuerySelectors(function (o) {
                  var n = t.eGui.querySelector(o.querySelector);
                  n && (e[o.attributeName] = n.__agComponent || n);
                });
              }
            }),
            (e.prototype.addAnnotatedGuiEventListeners = function () {
              var t = this;
              if ((this.removeAnnotatedGuiEventListeners(), this.eGui)) {
                var e = this.getAgComponentMetaData("guiListenerMethods");
                e &&
                  (this.annotatedGuiListeners ||
                    (this.annotatedGuiListeners = []),
                  e.forEach(function (e) {
                    var o = t.getRefElement(e.ref);
                    if (o) {
                      var n = t[e.methodName].bind(t);
                      o.addEventListener(e.eventName, n),
                        t.annotatedGuiListeners.push({
                          eventName: e.eventName,
                          listener: n,
                          element: o,
                        });
                    }
                  }));
              }
            }),
            (e.prototype.addAnnotatedGridEventListeners = function () {
              var t = this,
                e = this.getAgComponentMetaData("gridListenerMethods");
              e &&
                e.forEach(function (e) {
                  var o = t[e.methodName].bind(t);
                  t.addManagedListener(t.eventService, e.eventName, o);
                });
            }),
            (e.prototype.getAgComponentMetaData = function (t) {
              for (var e = [], o = Object.getPrototypeOf(this); null != o; ) {
                var n = o.__agComponentMetaData,
                  r = Q(o.constructor);
                n && n[r] && n[r][t] && (e = e.concat(n[r][t])),
                  (o = Object.getPrototypeOf(o));
              }
              return e;
            }),
            (e.prototype.removeAnnotatedGuiEventListeners = function () {
              this.annotatedGuiListeners &&
                (T(this.annotatedGuiListeners, function (t) {
                  t.element.removeEventListener(t.eventName, t.listener);
                }),
                (this.annotatedGuiListeners = []));
            }),
            (e.prototype.getGui = function () {
              return this.eGui;
            }),
            (e.prototype.getFocusableElement = function () {
              return this.eGui;
            }),
            (e.prototype.setParentComponent = function (t) {
              this.parentComponent = t;
            }),
            (e.prototype.getParentComponent = function () {
              return this.parentComponent;
            }),
            (e.prototype.setGui = function (t) {
              this.eGui = t;
            }),
            (e.prototype.queryForHtmlElement = function (t) {
              return this.eGui.querySelector(t);
            }),
            (e.prototype.queryForHtmlInputElement = function (t) {
              return this.eGui.querySelector(t);
            }),
            (e.prototype.appendChild = function (t, e) {
              if ((e || (e = this.eGui), null != t))
                if (Oo(t)) e.appendChild(t);
                else {
                  var o = t;
                  e.appendChild(o.getGui()),
                    this.addDestroyFunc(this.destroyBean.bind(this, o));
                }
            }),
            (e.prototype.isDisplayed = function () {
              return this.displayed;
            }),
            (e.prototype.setVisible = function (t) {
              t !== this.visible && ((this.visible = t), Ye(this.eGui, t));
            }),
            (e.prototype.setDisplayed = function (t) {
              t !== this.displayed &&
                ((this.displayed = t),
                Ke(this.eGui, t),
                this.dispatchEvent({
                  type: e.EVENT_DISPLAYED_CHANGED,
                  visible: this.displayed,
                }));
            }),
            (e.prototype.destroy = function () {
              this.removeAnnotatedGuiEventListeners(),
                this.tooltipFeature &&
                  (this.tooltipFeature = this.destroyBean(this.tooltipFeature)),
                t.prototype.destroy.call(this);
            }),
            (e.prototype.addGuiEventListener = function (t, e) {
              var o = this;
              this.eGui.addEventListener(t, e),
                this.addDestroyFunc(function () {
                  return o.eGui.removeEventListener(t, e);
                });
            }),
            (e.prototype.addCssClass = function (t) {
              !0 !== this.cssClassStates[t] &&
                (He(this.eGui, t), (this.cssClassStates[t] = !0));
            }),
            (e.prototype.removeCssClass = function (t) {
              !1 !== this.cssClassStates[t] &&
                (Be(this.eGui, t), (this.cssClassStates[t] = !1));
            }),
            (e.prototype.addOrRemoveCssClass = function (t, e) {
              this.cssClassStates[t] !== e &&
                (je(this.eGui, t, e), (this.cssClassStates[t] = e));
            }),
            (e.prototype.getAttribute = function (t) {
              var e = this.eGui;
              return e ? e.getAttribute(t) : null;
            }),
            (e.prototype.getRefElement = function (t) {
              return this.queryForHtmlElement('[ref="' + t + '"]');
            }),
            (e.EVENT_DISPLAYED_CHANGED = "displayedChanged"),
            Hn(
              [ut("agStackComponentsRegistry")],
              e.prototype,
              "agStackComponentsRegistry",
              void 0
            ),
            Hn([it], e.prototype, "preConstructOnComponent", null),
            Hn([it], e.prototype, "createChildComponentsPreConstruct", null),
            Hn([st], e.prototype, "addAnnotatedGridEventListeners", null),
            e
          );
        })(Ht),
        Un = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        zn = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Un(e, t),
            (e.prototype.isPopup = function () {
              return !0;
            }),
            (e.prototype.setParentComponent = function (e) {
              He(e.getGui(), "ag-has-popup"),
                t.prototype.setParentComponent.call(this, e);
            }),
            (e.prototype.destroy = function () {
              var e = this.parentComponent;
              e && e.isAlive() && Be(e.getGui(), "ag-has-popup"),
                t.prototype.destroy.call(this);
            }),
            e
          );
        })(jn);
      function Kn(t) {
        return Yn.bind(this, "[ref=" + t + "]");
      }
      function Yn(t, e, o, n) {
        null !== t
          ? "number" != typeof n
            ? Qn(e, "querySelectors", { attributeName: o, querySelector: t })
            : console.error("AG Grid: QuerySelector should be on an attribute")
          : console.error("AG Grid: QuerySelector selector should not be null");
      }
      function Xn(t, e, o) {
        null != t
          ? Qn(e, "gridListenerMethods", { methodName: o, eventName: t })
          : console.error("AG Grid: GridListener eventName is missing");
      }
      function qn(t, e, o, n) {
        null != e
          ? Qn(o, "guiListenerMethods", { methodName: n, eventName: e, ref: t })
          : console.error("AG Grid: GuiListener eventName is missing");
      }
      function Qn(t, e, o) {
        var n = (function (t, e) {
          return (
            t.__agComponentMetaData || (t.__agComponentMetaData = {}),
            t.__agComponentMetaData[e] || (t.__agComponentMetaData[e] = {}),
            t.__agComponentMetaData[e]
          );
        })(t, Q(t.constructor));
        n[e] || (n[e] = []), n[e].push(o);
      }
      var Zn,
        $n = (function () {
          function t() {}
          return (
            (t.BACKSPACE = 8),
            (t.TAB = 9),
            (t.ENTER = 13),
            (t.SHIFT = 16),
            (t.ESCAPE = 27),
            (t.SPACE = 32),
            (t.LEFT = 37),
            (t.UP = 38),
            (t.RIGHT = 39),
            (t.DOWN = 40),
            (t.DELETE = 46),
            (t.A = 65),
            (t.C = 67),
            (t.V = 86),
            (t.D = 68),
            (t.Z = 90),
            (t.Y = 89),
            (t.F2 = 113),
            (t.PAGE_UP = 33),
            (t.PAGE_DOWN = 34),
            (t.PAGE_HOME = 36),
            (t.PAGE_END = 35),
            t
          );
        })(),
        Jn = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        tr = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            Jn(e, t),
            (e.prototype.init = function (t) {
              this.params = t;
              var e,
                o = this.eInput;
              t.cellStartedEdit
                ? ((this.focusAfterAttached = !0),
                  t.keyPress === $n.BACKSPACE || t.keyPress === $n.DELETE
                    ? (e = "")
                    : t.charPress
                    ? (e = t.charPress)
                    : ((e = this.getStartValue(t)),
                      t.keyPress !== $n.F2 && (this.highlightAllOnFocus = !0)))
                : ((this.focusAfterAttached = !1), (e = this.getStartValue(t))),
                r(e) && o.setValue(e, !0),
                this.addManagedListener(o.getGui(), "keydown", function (t) {
                  var e = t.keyCode;
                  (e !== $n.PAGE_UP && e !== $n.PAGE_DOWN) ||
                    t.preventDefault();
                });
            }),
            (e.prototype.afterGuiAttached = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = this.eInput;
              if (
                (e.setInputAriaLabel(t("ariaInputEditor", "Input Editor")),
                this.focusAfterAttached)
              ) {
                De() || e.getFocusableElement().focus();
                var o = e.getInputElement();
                if (this.highlightAllOnFocus) o.select();
                else {
                  var n = e.getValue(),
                    i = (r(n) && n.length) || 0;
                  i && o.setSelectionRange(i, i);
                }
              }
            }),
            (e.prototype.focusIn = function () {
              var t = this.eInput,
                e = t.getFocusableElement(),
                o = t.getInputElement();
              e.focus(), o.select();
            }),
            (e.prototype.focusOut = function () {
              var t = this.eInput.getInputElement();
              Te() && t.setSelectionRange(0, 0);
            }),
            (e.prototype.getValue = function () {
              return this.params.parseValue(this.eInput.getValue());
            }),
            (e.prototype.getStartValue = function (t) {
              return t.useFormatter || t.column.getColDef().refData
                ? t.formatValue(t.value)
                : t.value;
            }),
            (e.prototype.isPopup = function () {
              return !1;
            }),
            (e.TEMPLATE =
              '<div class="ag-cell-edit-wrapper"><ag-input-text-field class="ag-cell-editor" ref="eInput"></ag-input-text-field></div>'),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([Kn("eInput")], e.prototype, "eInput", void 0),
            e
          );
        })(zn),
        er = (function () {
          function t(t, e, o, n) {
            var r = this;
            (this.alive = !0),
              (this.context = t),
              e.newDateComponent(o).then(function (e) {
                r.alive
                  ? ((r.dateComp = e),
                    e &&
                      (n.appendChild(e.getGui()),
                      e.afterGuiAttached && e.afterGuiAttached(),
                      r.tempValue && e.setDate(r.tempValue)))
                  : t.destroyBean(e);
              });
          }
          return (
            (t.prototype.destroy = function () {
              (this.alive = !1),
                (this.dateComp = this.context.destroyBean(this.dateComp));
            }),
            (t.prototype.getDate = function () {
              return this.dateComp ? this.dateComp.getDate() : this.tempValue;
            }),
            (t.prototype.setDate = function (t) {
              this.dateComp ? this.dateComp.setDate(t) : (this.tempValue = t);
            }),
            (t.prototype.setInputPlaceholder = function (t) {
              this.dateComp &&
                this.dateComp.setInputPlaceholder &&
                this.dateComp.setInputPlaceholder(t);
            }),
            (t.prototype.setInputAriaLabel = function (t) {
              this.dateComp &&
                this.dateComp.setInputAriaLabel &&
                this.dateComp.setInputAriaLabel(t);
            }),
            (t.prototype.afterGuiAttached = function (t) {
              this.dateComp &&
                "function" == typeof this.dateComp.afterGuiAttached &&
                this.dateComp.afterGuiAttached(t);
            }),
            t
          );
        })(),
        or = (function () {
          function t() {
            this.customFilterOptions = {};
          }
          return (
            (t.prototype.init = function (t, e) {
              (this.filterOptions = t.filterOptions || e),
                this.mapCustomOptions(),
                this.selectDefaultItem(t);
            }),
            (t.prototype.getFilterOptions = function () {
              return this.filterOptions;
            }),
            (t.prototype.mapCustomOptions = function () {
              var t = this;
              this.filterOptions &&
                this.filterOptions.forEach(function (e) {
                  "string" != typeof e &&
                    R(["displayKey", "displayName", "test"], function (t) {
                      return (
                        !!e[t] ||
                        (console.warn(
                          "AG Grid: ignoring FilterOptionDef as it doesn't contain a '" +
                            t +
                            "'"
                        ),
                        !1)
                      );
                    }) &&
                    (t.customFilterOptions[e.displayKey] = e);
                });
            }),
            (t.prototype.selectDefaultItem = function (t) {
              if (t.defaultOption) this.defaultOption = t.defaultOption;
              else if (this.filterOptions.length >= 1) {
                var e = this.filterOptions[0];
                "string" == typeof e
                  ? (this.defaultOption = e)
                  : e.displayKey
                  ? (this.defaultOption = e.displayKey)
                  : console.warn(
                      "AG Grid: invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'"
                    );
              } else console.warn("AG Grid: no filter options for filter");
            }),
            (t.prototype.getDefaultOption = function () {
              return this.defaultOption;
            }),
            (t.prototype.getCustomOption = function (t) {
              return this.customFilterOptions[t];
            }),
            t
          );
        })(),
        nr = {
          applyFilter: "Apply",
          clearFilter: "Clear",
          resetFilter: "Reset",
          cancelFilter: "Cancel",
          textFilter: "Text Filter",
          numberFilter: "Number Filter",
          dateFilter: "Date Filter",
          setFilter: "Set Filter",
          filterOoo: "Filter...",
          empty: "Choose One",
          equals: "Equals",
          notEqual: "Not equal",
          lessThan: "Less than",
          greaterThan: "Greater than",
          inRange: "In range",
          inRangeStart: "From",
          inRangeEnd: "To",
          lessThanOrEqual: "Less than or equals",
          greaterThanOrEqual: "Greater than or equals",
          contains: "Contains",
          notContains: "Not contains",
          startsWith: "Starts with",
          endsWith: "Ends with",
          andCondition: "AND",
          orCondition: "OR",
          dateFormatOoo: "yyyy-mm-dd",
        },
        rr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ir = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        sr = (function (t) {
          function e(e, o) {
            void 0 === o && (o = !1);
            var n = t.call(this, e) || this;
            return (n.isFocusableContainer = o), (n.skipTabGuardFocus = !1), n;
          }
          return (
            rr(e, t),
            (e.prototype.postConstruct = function () {
              var t = this,
                o = this.getFocusableElement();
              o &&
                (He(o, e.FOCUS_MANAGED_CLASS),
                this.isFocusableContainer &&
                  ((this.topTabGuard = this.createTabGuard("top")),
                  (this.bottomTabGuard = this.createTabGuard("bottom")),
                  this.addTabGuards(),
                  this.activateTabGuards(),
                  this.forEachTabGuard(function (e) {
                    return t.addManagedListener(e, "focus", t.onFocus.bind(t));
                  })),
                this.addKeyDownListeners(o),
                this.addManagedListener(
                  o,
                  "focusin",
                  this.onFocusIn.bind(this)
                ),
                this.addManagedListener(
                  o,
                  "focusout",
                  this.onFocusOut.bind(this)
                ));
            }),
            (e.prototype.focusInnerElement = function (t) {
              void 0 === t && (t = !1);
              var e = this.focusController.findFocusableElements(
                this.getFocusableElement()
              );
              this.isFocusableContainer &&
                this.tabGuardsAreActive() &&
                (e.splice(0, 1), e.splice(e.length - 1, 1)),
                e.length && e[t ? e.length - 1 : 0].focus();
            }),
            (e.prototype.onTabKeyDown = function (t) {
              var e = this;
              if (!t.defaultPrevented) {
                var o = this.tabGuardsAreActive();
                this.isFocusableContainer && o && this.deactivateTabGuards();
                var n = this.focusController.findNextFocusableElement(
                  this.getFocusableElement(),
                  !1,
                  t.shiftKey
                );
                this.isFocusableContainer &&
                  o &&
                  setTimeout(function () {
                    return e.activateTabGuards();
                  }, 0),
                  n && (n.focus(), t.preventDefault());
              }
            }),
            (e.prototype.onFocusIn = function (t) {
              this.isFocusableContainer && this.deactivateTabGuards();
            }),
            (e.prototype.onFocusOut = function (t) {
              this.isFocusableContainer &&
                !this.getFocusableElement().contains(t.relatedTarget) &&
                this.activateTabGuards();
            }),
            (e.prototype.forceFocusOutOfContainer = function (t) {
              if ((void 0 === t && (t = !1), this.isFocusableContainer)) {
                this.activateTabGuards(), (this.skipTabGuardFocus = !0);
                var e = t ? this.topTabGuard : this.bottomTabGuard;
                e && e.focus();
              }
            }),
            (e.prototype.appendChild = function (e, o) {
              if (this.isFocusableContainer) {
                Oo(e) || (e = e.getGui());
                var n = this.bottomTabGuard;
                n
                  ? n.insertAdjacentElement("beforebegin", e)
                  : t.prototype.appendChild.call(this, e, o);
              } else t.prototype.appendChild.call(this, e, o);
            }),
            (e.prototype.createTabGuard = function (t) {
              var e = document.createElement("div");
              return (
                e.classList.add("ag-tab-guard"),
                e.classList.add("ag-tab-guard-" + t),
                e.setAttribute("role", "presentation"),
                e
              );
            }),
            (e.prototype.addTabGuards = function () {
              var t = this.getFocusableElement();
              t.insertAdjacentElement("afterbegin", this.topTabGuard),
                t.insertAdjacentElement("beforeend", this.bottomTabGuard);
            }),
            (e.prototype.forEachTabGuard = function (t) {
              this.topTabGuard && t(this.topTabGuard),
                this.bottomTabGuard && t(this.bottomTabGuard);
            }),
            (e.prototype.addKeyDownListeners = function (t) {
              var e = this;
              this.addManagedListener(t, "keydown", function (t) {
                t.defaultPrevented ||
                  At(t) ||
                  (e.shouldStopEventPropagation(t)
                    ? Tt(t)
                    : t.keyCode === $n.TAB
                    ? e.onTabKeyDown(t)
                    : e.handleKeyDown && e.handleKeyDown(t));
              });
            }),
            (e.prototype.shouldStopEventPropagation = function (t) {
              return !1;
            }),
            (e.prototype.onFocus = function (t) {
              this.skipTabGuardFocus
                ? (this.skipTabGuardFocus = !1)
                : this.focusInnerElement(t.target === this.bottomTabGuard);
            }),
            (e.prototype.activateTabGuards = function () {
              this.forEachTabGuard(function (t) {
                return t.setAttribute("tabIndex", "0");
              });
            }),
            (e.prototype.deactivateTabGuards = function () {
              this.forEachTabGuard(function (t) {
                return t.removeAttribute("tabIndex");
              });
            }),
            (e.prototype.tabGuardsAreActive = function () {
              return (
                !!this.topTabGuard && this.topTabGuard.hasAttribute("tabIndex")
              );
            }),
            (e.prototype.clearGui = function () {
              var t = this.tabGuardsAreActive();
              ro(this.getFocusableElement()),
                this.isFocusableContainer &&
                  (this.addTabGuards(), t && this.activateTabGuards());
            }),
            (e.FOCUS_MANAGED_CLASS = "ag-focus-managed"),
            ir([ut("focusController")], e.prototype, "focusController", void 0),
            ir([st], e.prototype, "postConstruct", null),
            e
          );
        })(jn),
        ar = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        lr = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ur = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (
              (o.filterNameKey = e),
              (o.applyActive = !1),
              (o.hidePopup = null),
              (o.appliedModel = null),
              o
            );
          }
          return (
            ar(e, t),
            (e.prototype.getFilterTitle = function () {
              return this.translate(this.filterNameKey);
            }),
            (e.prototype.onFilterChanged = function () {
              console.warn(
                "AG Grid: you should not call onFilterChanged() directly on the filter, please call\n        gridApi.onFilterChanged() instead. onFilterChanged is not part of the exposed filter interface (it was\n        a method that existed on an old version of the filters that was not intended for public use."
              ),
                this.providedFilterParams.filterChangedCallback();
            }),
            (e.prototype.isFilterActive = function () {
              return !!this.appliedModel;
            }),
            (e.prototype.postConstruct = function () {
              this.resetTemplate(), t.prototype.postConstruct.call(this);
            }),
            (e.prototype.resetTemplate = function (t) {
              var e =
                '\n            <div class="ag-filter-wrapper">\n                <div class="ag-filter-body-wrapper ag-' +
                this.getCssIdentifier() +
                '-body-wrapper">\n                    ' +
                this.createBodyTemplate() +
                "\n                </div>\n            </div>";
              this.setTemplate(e, t);
            }),
            (e.prototype.init = function (t) {
              var e = this;
              this.setParams(t),
                this.resetUiToDefaults(!0).then(function () {
                  e.updateUiVisibility(), e.setupOnBtApplyDebounce();
                });
            }),
            (e.prototype.setParams = function (t) {
              e.checkForDeprecatedParams(t),
                (this.providedFilterParams = t),
                (this.newRowsActionKeep =
                  "keep" === t.newRowsAction ||
                  ("clear" !== t.newRowsAction &&
                    [
                      vt.ROW_MODEL_TYPE_SERVER_SIDE,
                      vt.ROW_MODEL_TYPE_INFINITE,
                    ].indexOf(this.rowModel.getType()) >= 0)),
                (this.applyActive = e.isUseApplyButton(t)),
                this.createButtonPanel();
            }),
            (e.prototype.createButtonPanel = function () {
              var t = this,
                e = this.providedFilterParams.buttons;
              if (e && !(e.length < 1)) {
                var o = document.createElement("div");
                He(o, "ag-filter-apply-panel"),
                  Pn(e).forEach(function (e) {
                    return (function (e) {
                      var n, r;
                      switch (e) {
                        case "apply":
                          (n = t.translate("applyFilter")),
                            (r = function (e) {
                              return t.onBtApply(!1, !1, e);
                            });
                          break;
                        case "clear":
                          (n = t.translate("clearFilter")),
                            (r = function () {
                              return t.onBtClear();
                            });
                          break;
                        case "reset":
                          (n = t.translate("resetFilter")),
                            (r = function () {
                              return t.onBtReset();
                            });
                          break;
                        case "cancel":
                          (n = t.translate("cancelFilter")),
                            (r = function (e) {
                              t.onBtCancel(e);
                            });
                          break;
                        default:
                          return void console.warn(
                            "Unknown button type specified"
                          );
                      }
                      var i = ao(
                        '<button\n                    type="button"\n                    ref="' +
                          e +
                          'FilterButton"\n                    class="ag-standard-button ag-filter-apply-panel-button"\n                >' +
                          n +
                          "\n                </button>"
                      );
                      o.appendChild(i), t.addManagedListener(i, "click", r);
                    })(e);
                  }),
                  this.getGui().appendChild(o);
              }
            }),
            (e.checkForDeprecatedParams = function (t) {
              var e = t.buttons || [];
              if (!(e.length > 0)) {
                var o = t.applyButton,
                  n = t.resetButton;
                t.clearButton &&
                  (console.warn(
                    "AG Grid: as of AG Grid v23.2, filterParams.clearButton is deprecated. Please use filterParams.buttons instead"
                  ),
                  e.push("clear")),
                  n &&
                    (console.warn(
                      "AG Grid: as of AG Grid v23.2, filterParams.resetButton is deprecated. Please use filterParams.buttons instead"
                    ),
                    e.push("reset")),
                  o &&
                    (console.warn(
                      "AG Grid: as of AG Grid v23.2, filterParams.applyButton is deprecated. Please use filterParams.buttons instead"
                    ),
                    e.push("apply")),
                  t.apply &&
                    (console.warn(
                      "AG Grid: as of AG Grid v21, filterParams.apply is deprecated. Please use filterParams.buttons instead"
                    ),
                    e.push("apply")),
                  (t.buttons = e);
              }
            }),
            (e.prototype.getDefaultDebounceMs = function () {
              return 0;
            }),
            (e.prototype.setupOnBtApplyDebounce = function () {
              var t = e.getDebounceMs(
                this.providedFilterParams,
                this.getDefaultDebounceMs()
              );
              this.onBtApplyDebounce = et(this.onBtApply.bind(this), t);
            }),
            (e.prototype.getModel = function () {
              return this.appliedModel;
            }),
            (e.prototype.setModel = function (t) {
              var e = this;
              return (
                t ? this.setModelIntoUi(t) : this.resetUiToDefaults()
              ).then(function () {
                e.updateUiVisibility(), e.applyModel();
              });
            }),
            (e.prototype.onBtCancel = function (t) {
              var e = this;
              this.setModelIntoUi(this.getModel()).then(function () {
                e.onUiChanged(!1, "prevent"),
                  e.providedFilterParams.closeOnApply && e.close(t);
              });
            }),
            (e.prototype.onBtClear = function () {
              var t = this;
              this.resetUiToDefaults().then(function () {
                return t.onUiChanged();
              });
            }),
            (e.prototype.onBtReset = function () {
              this.onBtClear(), this.onBtApply();
            }),
            (e.prototype.applyModel = function () {
              var t = this.getModelFromUi();
              if (!this.isModelValid(t)) return !1;
              var e = this.appliedModel;
              return (this.appliedModel = t), !this.areModelsEqual(e, t);
            }),
            (e.prototype.isModelValid = function (t) {
              return !0;
            }),
            (e.prototype.onBtApply = function (t, e, o) {
              void 0 === t && (t = !1),
                void 0 === e && (e = !1),
                this.applyModel() &&
                  this.providedFilterParams.filterChangedCallback({
                    afterFloatingFilter: t,
                    afterDataChange: e,
                  }),
                this.providedFilterParams.closeOnApply &&
                  this.applyActive &&
                  !t &&
                  !e &&
                  this.close(o);
            }),
            (e.prototype.onNewRowsLoaded = function () {
              var t = this;
              this.newRowsActionKeep ||
                this.resetUiToDefaults().then(function () {
                  return (t.appliedModel = null);
                });
            }),
            (e.prototype.close = function (t) {
              if (this.hidePopup) {
                var e,
                  o = t && t.key;
                ("Enter" !== o && "Space" !== o) || (e = { keyboardEvent: t }),
                  this.hidePopup(e),
                  (this.hidePopup = null);
              }
            }),
            (e.prototype.isNewRowsActionKeep = function () {
              return this.newRowsActionKeep;
            }),
            (e.prototype.onUiChanged = function (t, e) {
              if (
                (void 0 === t && (t = !1),
                this.updateUiVisibility(),
                this.providedFilterParams.filterModifiedCallback(),
                this.applyActive)
              ) {
                var o = this.isModelValid(this.getModelFromUi());
                Xe(this.getRefElement("applyFilterButton"), !o);
              }
              (t && !e) || "immediately" === e
                ? this.onBtApply(t)
                : ((this.applyActive || e) && "debounce" !== e) ||
                  this.onBtApplyDebounce();
            }),
            (e.prototype.afterGuiAttached = function (t) {
              null != t && (this.hidePopup = t.hidePopup);
            }),
            (e.getDebounceMs = function (t, o) {
              return e.isUseApplyButton(t)
                ? (null != t.debounceMs &&
                    console.warn(
                      "AG Grid: debounceMs is ignored when apply button is present"
                    ),
                  0)
                : null != t.debounceMs
                ? t.debounceMs
                : o;
            }),
            (e.isUseApplyButton = function (t) {
              return (
                e.checkForDeprecatedParams(t),
                !!t.buttons && t.buttons.indexOf("apply") >= 0
              );
            }),
            (e.prototype.destroy = function () {
              (this.hidePopup = null), t.prototype.destroy.call(this);
            }),
            (e.prototype.translate = function (t) {
              return this.gridOptionsWrapper.getLocaleTextFunc()(t, nr[t]);
            }),
            lr([ut("rowModel")], e.prototype, "rowModel", void 0),
            lr([st], e.prototype, "postConstruct", null),
            e
          );
        })(sr),
        pr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        cr = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.One = 0)] = "One"), (t[(t.Two = 1)] = "Two");
      })(Zn || (Zn = {}));
      var dr,
        hr = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            pr(e, t),
            (e.prototype.showValueFrom = function (t) {
              return !this.doesFilterHaveHiddenInput(t) && t !== e.EMPTY;
            }),
            (e.prototype.showValueTo = function (t) {
              return t === e.IN_RANGE;
            }),
            (e.prototype.onFloatingFilterChanged = function (t, e) {
              this.setTypeFromFloatingFilter(t),
                this.setValueFromFloatingFilter(e),
                this.onUiChanged(!0);
            }),
            (e.prototype.setTypeFromFloatingFilter = function (t) {
              this.eType1.setValue(t),
                this.eType2.setValue(this.optionsFactory.getDefaultOption()),
                (this.isDefaultOperator("AND")
                  ? this.eJoinOperatorAnd
                  : this.eJoinOperatorOr
                ).setValue(!0);
            }),
            (e.prototype.getModelFromUi = function () {
              return this.isConditionUiComplete(Zn.One)
                ? this.isAllowTwoConditions() &&
                  this.isConditionUiComplete(Zn.Two)
                  ? {
                      filterType: this.getFilterType(),
                      operator: this.getJoinOperator(),
                      condition1: this.createCondition(Zn.One),
                      condition2: this.createCondition(Zn.Two),
                    }
                  : this.createCondition(Zn.One)
                : null;
            }),
            (e.prototype.getCondition1Type = function () {
              return this.eType1.getValue();
            }),
            (e.prototype.getCondition2Type = function () {
              return this.eType2.getValue();
            }),
            (e.prototype.getJoinOperator = function () {
              return !0 === this.eJoinOperatorOr.getValue() ? "OR" : "AND";
            }),
            (e.prototype.areModelsEqual = function (t, e) {
              if (!t && !e) return !0;
              if ((!t && e) || (t && !e)) return !1;
              var o,
                n = !t.operator,
                r = !e.operator;
              if ((!n && r) || (n && !r)) return !1;
              if (n) o = this.areSimpleModelsEqual(t, e);
              else {
                var i = t,
                  s = e;
                o =
                  i.operator === s.operator &&
                  this.areSimpleModelsEqual(i.condition1, s.condition1) &&
                  this.areSimpleModelsEqual(i.condition2, s.condition2);
              }
              return o;
            }),
            (e.prototype.setModelIntoUi = function (t) {
              if (t.operator) {
                var e = t,
                  o = "OR" === e.operator;
                this.eJoinOperatorAnd.setValue(!o),
                  this.eJoinOperatorOr.setValue(o),
                  this.eType1.setValue(e.condition1.type),
                  this.eType2.setValue(e.condition2.type),
                  this.setConditionIntoUi(e.condition1, Zn.One),
                  this.setConditionIntoUi(e.condition2, Zn.Two);
              } else {
                var n = t;
                this.eJoinOperatorAnd.setValue(this.isDefaultOperator("AND")),
                  this.eJoinOperatorOr.setValue(this.isDefaultOperator("OR")),
                  this.eType1.setValue(n.type),
                  this.eType2.setValue(this.optionsFactory.getDefaultOption()),
                  this.setConditionIntoUi(n, Zn.One),
                  this.setConditionIntoUi(null, Zn.Two);
              }
              return Mn.resolve();
            }),
            (e.prototype.doesFilterPass = function (t) {
              var e = this,
                o = this.getModel();
              if (null == o) return !0;
              var n = o.operator,
                r = [];
              return (
                n ? r.push(o.condition1, o.condition2) : r.push(o),
                (n && "OR" === n ? P : R)(r, function (o) {
                  return e.individualConditionPasses(t, o);
                })
              );
            }),
            (e.prototype.setParams = function (e) {
              t.prototype.setParams.call(this, e),
                (this.optionsFactory = new or()),
                this.optionsFactory.init(e, this.getDefaultFilterOptions()),
                (this.allowTwoConditions = !e.suppressAndOrCondition),
                (this.alwaysShowBothConditions = !!e.alwaysShowBothConditions),
                (this.defaultJoinOperator = this.getDefaultJoinOperator(
                  e.defaultJoinOperator
                )),
                this.putOptionsIntoDropdown(),
                this.addChangedListeners();
            }),
            (e.prototype.getDefaultJoinOperator = function (t) {
              return S(["AND", "OR"], t) ? t : "AND";
            }),
            (e.prototype.putOptionsIntoDropdown = function () {
              var t = this,
                e = this.optionsFactory.getFilterOptions();
              T(e, function (e) {
                var o, n;
                if ("string" == typeof e) n = t.translate((o = e));
                else {
                  var r = t.optionsFactory.getCustomOption((o = e.displayKey));
                  n = r
                    ? t.gridOptionsWrapper.getLocaleTextFunc()(
                        r.displayKey,
                        r.displayName
                      )
                    : t.translate(o);
                }
                var i = function () {
                  return { value: o, text: n };
                };
                t.eType1.addOption(i()), t.eType2.addOption(i());
              });
              var o = e.length <= 1;
              this.eType1.setDisabled(o), this.eType2.setDisabled(o);
            }),
            (e.prototype.isAllowTwoConditions = function () {
              return this.allowTwoConditions;
            }),
            (e.prototype.createBodyTemplate = function () {
              return (
                '\n            <ag-select class="ag-filter-select" ref="eOptions1"></ag-select>\n            ' +
                this.createValueTemplate(Zn.One) +
                '\n            <div class="ag-filter-condition" ref="eJoinOperatorPanel">\n               <ag-radio-button ref="eJoinOperatorAnd" class="ag-filter-condition-operator ag-filter-condition-operator-and"></ag-radio-button>\n               <ag-radio-button ref="eJoinOperatorOr" class="ag-filter-condition-operator ag-filter-condition-operator-or"></ag-radio-button>\n            </div>\n            <ag-select class="ag-filter-select" ref="eOptions2"></ag-select>\n            ' +
                this.createValueTemplate(Zn.Two)
              );
            }),
            (e.prototype.getCssIdentifier = function () {
              return "simple-filter";
            }),
            (e.prototype.updateUiVisibility = function () {
              var t = this.isCondition2Enabled();
              this.alwaysShowBothConditions
                ? (this.eJoinOperatorAnd.setDisabled(!t),
                  this.eJoinOperatorOr.setDisabled(!t),
                  this.eType2.setDisabled(!t),
                  Xe(this.eCondition2Body, !t))
                : (Ke(this.eJoinOperatorPanel, t),
                  Ke(this.eType2.getGui(), t),
                  Ke(this.eCondition2Body, t));
            }),
            (e.prototype.isCondition2Enabled = function () {
              return (
                this.allowTwoConditions && this.isConditionUiComplete(Zn.One)
              );
            }),
            (e.prototype.resetUiToDefaults = function (t) {
              var e = this.gridOptionsWrapper.getLocaleTextFunc()(
                  "ariaFilteringOperator",
                  "Filtering operator"
                ),
                o = "ag-simple-filter-and-or-" + this.getCompId(),
                n = this.optionsFactory.getDefaultOption();
              return (
                this.eType1.setValue(n, t).setAriaLabel(e),
                this.eType2.setValue(n, t).setAriaLabel(e),
                this.eJoinOperatorAnd
                  .setValue(this.isDefaultOperator("AND"), t)
                  .setName(o)
                  .setLabel(this.translate("andCondition")),
                this.eJoinOperatorOr
                  .setValue(this.isDefaultOperator("OR"), t)
                  .setName(o)
                  .setLabel(this.translate("orCondition")),
                Mn.resolve()
              );
            }),
            (e.prototype.isDefaultOperator = function (t) {
              return t === this.defaultJoinOperator;
            }),
            (e.prototype.addChangedListeners = function () {
              var t = this,
                e = function () {
                  return t.onUiChanged();
                };
              this.eType1.onValueChange(e),
                this.eType2.onValueChange(e),
                this.eJoinOperatorOr.onValueChange(e),
                this.eJoinOperatorAnd.onValueChange(e);
            }),
            (e.prototype.doesFilterHaveHiddenInput = function (t) {
              var e = this.optionsFactory.getCustomOption(t);
              return e && e.hideFilterInput;
            }),
            (e.EMPTY = "empty"),
            (e.EQUALS = "equals"),
            (e.NOT_EQUAL = "notEqual"),
            (e.LESS_THAN = "lessThan"),
            (e.LESS_THAN_OR_EQUAL = "lessThanOrEqual"),
            (e.GREATER_THAN = "greaterThan"),
            (e.GREATER_THAN_OR_EQUAL = "greaterThanOrEqual"),
            (e.IN_RANGE = "inRange"),
            (e.CONTAINS = "contains"),
            (e.NOT_CONTAINS = "notContains"),
            (e.STARTS_WITH = "startsWith"),
            (e.ENDS_WITH = "endsWith"),
            cr([Kn("eOptions1")], e.prototype, "eType1", void 0),
            cr([Kn("eOptions2")], e.prototype, "eType2", void 0),
            cr(
              [Kn("eJoinOperatorPanel")],
              e.prototype,
              "eJoinOperatorPanel",
              void 0
            ),
            cr(
              [Kn("eJoinOperatorAnd")],
              e.prototype,
              "eJoinOperatorAnd",
              void 0
            ),
            cr([Kn("eJoinOperatorOr")], e.prototype, "eJoinOperatorOr", void 0),
            cr([Kn("eCondition1Body")], e.prototype, "eCondition1Body", void 0),
            cr([Kn("eCondition2Body")], e.prototype, "eCondition2Body", void 0),
            e
          );
        })(ur),
        fr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        gr = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            fr(e, t),
            (e.prototype.setParams = function (e) {
              t.prototype.setParams.call(this, e),
                (this.scalarFilterParams = e),
                this.checkDeprecatedParams();
            }),
            (e.prototype.checkDeprecatedParams = function () {
              this.scalarFilterParams.nullComparator &&
                (console.warn(
                  "AG Grid: Since v21.0, the property filterParams.nullComparator is deprecated. Please use filterParams.includeBlanksInEquals, filterParams.includeBlanksInLessThan and filterParams.includeBlanksInGreaterThan instead."
                ),
                (this.scalarFilterParams.includeBlanksInEquals =
                  this.scalarFilterParams.nullComparator.equals),
                (this.scalarFilterParams.includeBlanksInLessThan =
                  this.scalarFilterParams.nullComparator.lessThan),
                (this.scalarFilterParams.includeBlanksInGreaterThan =
                  this.scalarFilterParams.nullComparator.greaterThan));
            }),
            (e.prototype.individualConditionPasses = function (t, o) {
              var n = this.scalarFilterParams.valueGetter(t.node),
                r = this.mapRangeFromModel(o),
                i = r.from,
                s = r.to,
                a = o.type,
                l = this.optionsFactory.getCustomOption(a);
              if (l && (null != i || l.hideFilterInput)) return l.test(i, n);
              if (null == n) {
                switch (a) {
                  case e.EQUALS:
                  case e.NOT_EQUAL:
                    if (this.scalarFilterParams.includeBlanksInEquals)
                      return !0;
                    break;
                  case e.GREATER_THAN:
                  case e.GREATER_THAN_OR_EQUAL:
                    if (this.scalarFilterParams.includeBlanksInGreaterThan)
                      return !0;
                    break;
                  case e.LESS_THAN:
                  case e.LESS_THAN_OR_EQUAL:
                    if (this.scalarFilterParams.includeBlanksInLessThan)
                      return !0;
                    break;
                  case e.IN_RANGE:
                    if (this.scalarFilterParams.includeBlanksInRange) return !0;
                }
                return !1;
              }
              var u = this.comparator(),
                p = u(i, n);
              switch (a) {
                case e.EQUALS:
                  return 0 === p;
                case e.NOT_EQUAL:
                  return 0 !== p;
                case e.GREATER_THAN:
                  return p > 0;
                case e.GREATER_THAN_OR_EQUAL:
                  return p >= 0;
                case e.LESS_THAN:
                  return p < 0;
                case e.LESS_THAN_OR_EQUAL:
                  return p <= 0;
                case e.IN_RANGE:
                  var c = u(s, n);
                  return this.scalarFilterParams.inRangeInclusive
                    ? p >= 0 && c <= 0
                    : p > 0 && c < 0;
                default:
                  throw new Error("Unexpected type of filter: " + a);
              }
            }),
            e
          );
        })(hr),
        yr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        mr = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        vr = (function (t) {
          function e() {
            return t.call(this, "dateFilter") || this;
          }
          return (
            yr(e, t),
            (e.prototype.afterGuiAttached = function (e) {
              t.prototype.afterGuiAttached.call(this, e),
                this.dateCondition1FromComp.afterGuiAttached(e);
            }),
            (e.prototype.mapRangeFromModel = function (t) {
              return { from: sn(t.dateFrom), to: sn(t.dateTo) };
            }),
            (e.prototype.setValueFromFloatingFilter = function (t) {
              this.dateCondition1FromComp.setDate(null == t ? null : sn(t)),
                this.dateCondition1ToComp.setDate(null),
                this.dateCondition2FromComp.setDate(null),
                this.dateCondition2ToComp.setDate(null);
            }),
            (e.prototype.setConditionIntoUi = function (t, e) {
              var o = t ? [sn(t.dateFrom), sn(t.dateTo)] : [null, null],
                n = o[0],
                r = o[1],
                i = this.getFromToComponents(e),
                s = i[1];
              i[0].setDate(n), s.setDate(r);
            }),
            (e.prototype.resetUiToDefaults = function (e) {
              var o = this;
              return t.prototype.resetUiToDefaults
                .call(this, e)
                .then(function () {
                  o.dateCondition1FromComp.setDate(null),
                    o.dateCondition1ToComp.setDate(null),
                    o.dateCondition2FromComp.setDate(null),
                    o.dateCondition2ToComp.setDate(null);
                });
            }),
            (e.prototype.comparator = function () {
              return this.dateFilterParams.comparator
                ? this.dateFilterParams.comparator
                : this.defaultComparator.bind(this);
            }),
            (e.prototype.defaultComparator = function (t, e) {
              return null == e || e < t ? -1 : e > t ? 1 : 0;
            }),
            (e.prototype.setParams = function (e) {
              t.prototype.setParams.call(this, e),
                (this.dateFilterParams = e),
                this.createDateComponents();
            }),
            (e.prototype.createDateComponents = function () {
              var t = this,
                e = function (e) {
                  return new er(
                    t.getContext(),
                    t.userComponentFactory,
                    {
                      onDateChanged: function () {
                        return t.onUiChanged();
                      },
                      filterParams: t.dateFilterParams,
                    },
                    e
                  );
                };
              (this.dateCondition1FromComp = e(this.eCondition1PanelFrom)),
                (this.dateCondition1ToComp = e(this.eCondition1PanelTo)),
                (this.dateCondition2FromComp = e(this.eCondition2PanelFrom)),
                (this.dateCondition2ToComp = e(this.eCondition2PanelTo)),
                this.addDestroyFunc(function () {
                  t.dateCondition1FromComp.destroy(),
                    t.dateCondition1ToComp.destroy(),
                    t.dateCondition2FromComp.destroy(),
                    t.dateCondition2ToComp.destroy();
                });
            }),
            (e.prototype.getDefaultFilterOptions = function () {
              return e.DEFAULT_FILTER_OPTIONS;
            }),
            (e.prototype.createValueTemplate = function (t) {
              var e = t === Zn.One ? "1" : "2";
              return (
                '\n            <div class="ag-filter-body" ref="eCondition' +
                e +
                'Body">\n                <div class="ag-filter-from ag-filter-date-from" ref="eCondition' +
                e +
                'PanelFrom"></div>\n                <div class="ag-filter-to ag-filter-date-to" ref="eCondition' +
                e +
                'PanelTo"></div>\n            </div>'
              );
            }),
            (e.prototype.isConditionUiComplete = function (t) {
              var e =
                t === Zn.One
                  ? this.getCondition1Type()
                  : this.getCondition2Type();
              if (e === hr.EMPTY) return !1;
              if (this.doesFilterHaveHiddenInput(e)) return !0;
              var o = this.getFromToComponents(t),
                n = o[1],
                r =
                  null == this.dateFilterParams.minValidYear
                    ? 1e3
                    : this.dateFilterParams.minValidYear,
                i = function (t) {
                  return null != t && t.getUTCFullYear() > r;
                };
              return (
                i(o[0].getDate()) && (!this.showValueTo(e) || i(n.getDate()))
              );
            }),
            (e.prototype.areSimpleModelsEqual = function (t, e) {
              return (
                t.dateFrom === e.dateFrom &&
                t.dateTo === e.dateTo &&
                t.type === e.type
              );
            }),
            (e.prototype.getFilterType = function () {
              return "date";
            }),
            (e.prototype.createCondition = function (t) {
              var e =
                  t === Zn.One
                    ? this.getCondition1Type()
                    : this.getCondition2Type(),
                o = this.getFromToComponents(t),
                n = o[1];
              return {
                dateFrom: rn(o[0].getDate()),
                dateTo: rn(n.getDate()),
                type: e,
                filterType: this.getFilterType(),
              };
            }),
            (e.prototype.resetPlaceholder = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = this.translate("dateFormatOoo"),
                o = t("ariaFilterValue", "Filter Value");
              this.dateCondition1FromComp.setInputPlaceholder(e),
                this.dateCondition1FromComp.setInputAriaLabel(o),
                this.dateCondition1ToComp.setInputPlaceholder(e),
                this.dateCondition1ToComp.setInputAriaLabel(o),
                this.dateCondition2FromComp.setInputPlaceholder(e),
                this.dateCondition2FromComp.setInputAriaLabel(o),
                this.dateCondition2ToComp.setInputPlaceholder(e),
                this.dateCondition2ToComp.setInputAriaLabel(o);
            }),
            (e.prototype.updateUiVisibility = function () {
              t.prototype.updateUiVisibility.call(this),
                this.resetPlaceholder();
              var e = this.getCondition1Type();
              Ke(this.eCondition1PanelFrom, this.showValueFrom(e)),
                Ke(this.eCondition1PanelTo, this.showValueTo(e));
              var o = this.getCondition2Type();
              Ke(this.eCondition2PanelFrom, this.showValueFrom(o)),
                Ke(this.eCondition2PanelTo, this.showValueTo(o));
            }),
            (e.prototype.getFromToComponents = function (t) {
              return t === Zn.One
                ? [this.dateCondition1FromComp, this.dateCondition1ToComp]
                : [this.dateCondition2FromComp, this.dateCondition2ToComp];
            }),
            (e.DEFAULT_FILTER_OPTIONS = [
              gr.EQUALS,
              gr.GREATER_THAN,
              gr.LESS_THAN,
              gr.NOT_EQUAL,
              gr.IN_RANGE,
            ]),
            mr(
              [Kn("eCondition1PanelFrom")],
              e.prototype,
              "eCondition1PanelFrom",
              void 0
            ),
            mr(
              [Kn("eCondition1PanelTo")],
              e.prototype,
              "eCondition1PanelTo",
              void 0
            ),
            mr(
              [Kn("eCondition2PanelFrom")],
              e.prototype,
              "eCondition2PanelFrom",
              void 0
            ),
            mr(
              [Kn("eCondition2PanelTo")],
              e.prototype,
              "eCondition2PanelTo",
              void 0
            ),
            mr(
              [ut("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            e
          );
        })(gr),
        Cr = (function () {
          function t(t, e) {
            var o = this;
            void 0 === e && (e = !1),
              (this.destroyFuncs = []),
              (this.touching = !1),
              (this.eventService = new mt()),
              (this.eElement = t),
              (this.preventMouseClick = e);
            var n = this.onTouchStart.bind(this),
              r = this.onTouchMove.bind(this),
              i = this.onTouchEnd.bind(this);
            this.eElement.addEventListener("touchstart", n, { passive: !0 }),
              this.eElement.addEventListener("touchmove", r, { passive: !0 }),
              this.eElement.addEventListener("touchend", i, { passive: !1 }),
              this.destroyFuncs.push(function () {
                o.eElement.removeEventListener("touchstart", n, {
                  passive: !0,
                }),
                  o.eElement.removeEventListener("touchmove", r, {
                    passive: !0,
                  }),
                  o.eElement.removeEventListener("touchend", i, {
                    passive: !1,
                  });
              });
          }
          return (
            (t.prototype.getActiveTouch = function (t) {
              for (var e = 0; e < t.length; e++)
                if (t[e].identifier === this.touchStart.identifier) return t[e];
              return null;
            }),
            (t.prototype.addEventListener = function (t, e) {
              this.eventService.addEventListener(t, e);
            }),
            (t.prototype.removeEventListener = function (t, e) {
              this.eventService.removeEventListener(t, e);
            }),
            (t.prototype.onTouchStart = function (e) {
              var o = this;
              if (!this.touching) {
                (this.touchStart = e.touches[0]),
                  (this.touching = !0),
                  (this.moved = !1);
                var n = this.touchStart;
                window.setTimeout(function () {
                  o.touching &&
                    o.touchStart === n &&
                    !o.moved &&
                    ((o.moved = !0),
                    o.eventService.dispatchEvent({
                      type: t.EVENT_LONG_TAP,
                      touchStart: o.touchStart,
                      touchEvent: e,
                    }));
                }, 500);
              }
            }),
            (t.prototype.onTouchMove = function (t) {
              if (this.touching) {
                var e = this.getActiveTouch(t.touches);
                e && !On(e, this.touchStart, 4) && (this.moved = !0);
              }
            }),
            (t.prototype.onTouchEnd = function (e) {
              this.touching &&
                (this.moved ||
                  (this.eventService.dispatchEvent({
                    type: t.EVENT_TAP,
                    touchStart: this.touchStart,
                  }),
                  this.checkForDoubleTap()),
                this.preventMouseClick && e.preventDefault(),
                (this.touching = !1));
            }),
            (t.prototype.checkForDoubleTap = function () {
              var e = new Date().getTime();
              this.lastTapTime &&
              this.lastTapTime > 0 &&
              e - this.lastTapTime > t.DOUBLE_TAP_MILLIS
                ? (this.eventService.dispatchEvent({
                    type: t.EVENT_DOUBLE_TAP,
                    touchStart: this.touchStart,
                  }),
                  (this.lastTapTime = null))
                : (this.lastTapTime = e);
            }),
            (t.prototype.destroy = function () {
              this.destroyFuncs.forEach(function (t) {
                return t();
              });
            }),
            (t.EVENT_TAP = "tap"),
            (t.EVENT_DOUBLE_TAP = "doubleTap"),
            (t.EVENT_LONG_TAP = "longTap"),
            (t.DOUBLE_TAP_MILLIS = 500),
            t
          );
        })(),
        wr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        br = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Er = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.lastMovingChanged = 0), e;
          }
          return (
            wr(e, t),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.refresh = function (t) {
              return (
                (this.params = t),
                this.workOutTemplate() == this.currentTemplate &&
                  this.workOutShowMenu() == this.currentShowMenu &&
                  this.workOutSort() == this.currentSort &&
                  (this.setDisplayName(t), !0)
              );
            }),
            (e.prototype.workOutTemplate = function () {
              var t = g(this.params.template, e.TEMPLATE);
              return t && t.trim ? t.trim() : t;
            }),
            (e.prototype.init = function (t) {
              (this.params = t),
                (this.currentTemplate = this.workOutTemplate()),
                this.setTemplate(this.currentTemplate),
                this.setupTap(),
                this.setupIcons(t.column),
                this.setMenu(),
                this.setupSort(),
                this.setupFilterIcon(),
                this.setDisplayName(t);
            }),
            (e.prototype.setDisplayName = function (t) {
              if (this.currentDisplayName != t.displayName) {
                this.currentDisplayName = t.displayName;
                var e = Zt(this.currentDisplayName);
                this.eText && (this.eText.innerHTML = e);
              }
            }),
            (e.prototype.setupIcons = function (t) {
              this.addInIcon("sortAscending", this.eSortAsc, t),
                this.addInIcon("sortDescending", this.eSortDesc, t),
                this.addInIcon("sortUnSort", this.eSortNone, t),
                this.addInIcon("menu", this.eMenu, t),
                this.addInIcon("filter", this.eFilter, t);
            }),
            (e.prototype.addInIcon = function (t, e, o) {
              if (null != e) {
                var n = yn(t, this.gridOptionsWrapper, o);
                n && e.appendChild(n);
              }
            }),
            (e.prototype.setupTap = function () {
              var t = this,
                e = this.gridOptionsWrapper;
              if (!e.isSuppressTouch()) {
                var o = new Cr(this.getGui(), !0),
                  n = e.isSuppressMenuHide(),
                  i = n && r(this.eMenu),
                  s = i ? new Cr(this.eMenu, !0) : o;
                this.params.enableMenu &&
                  this.addManagedListener(
                    s,
                    Cr[i ? "EVENT_TAP" : "EVENT_LONG_TAP"],
                    function (o) {
                      e.getApi().showColumnMenuAfterMouseClick(
                        t.params.column,
                        o.touchStart
                      );
                    }
                  ),
                  this.params.enableSorting &&
                    this.addManagedListener(o, Cr.EVENT_TAP, function (e) {
                      (n && t.eMenu.contains(e.touchStart.target)) ||
                        t.sortController.progressSort(
                          t.params.column,
                          !1,
                          "uiColumnSorted"
                        );
                    }),
                  this.addDestroyFunc(function () {
                    return o.destroy();
                  }),
                  i &&
                    this.addDestroyFunc(function () {
                      return s.destroy();
                    });
              }
            }),
            (e.prototype.workOutShowMenu = function () {
              var t = !this.gridOptionsWrapper.isSuppressMenuHide(),
                e = Ne() && t;
              return this.params.enableMenu && !e;
            }),
            (e.prototype.setMenu = function () {
              var t = this;
              if (this.eMenu)
                if (
                  ((this.currentShowMenu = this.workOutShowMenu()),
                  this.currentShowMenu)
                ) {
                  var e = this.gridOptionsWrapper.isSuppressMenuHide();
                  this.addManagedListener(this.eMenu, "click", function () {
                    return t.showMenu(t.eMenu);
                  }),
                    je(this.eMenu, "ag-header-menu-always-show", e);
                } else io(this.eMenu);
            }),
            (e.prototype.showMenu = function (t) {
              t || (t = this.eMenu),
                this.menuFactory.showMenuAfterButtonClick(
                  this.params.column,
                  t
                );
            }),
            (e.prototype.removeSortIcons = function () {
              io(this.eSortAsc),
                io(this.eSortDesc),
                io(this.eSortNone),
                io(this.eSortOrder);
            }),
            (e.prototype.workOutSort = function () {
              return this.params.enableSorting;
            }),
            (e.prototype.setupSort = function () {
              var t = this;
              if (
                ((this.currentSort = this.params.enableSorting),
                this.currentSort)
              ) {
                var e = this.gridOptionsWrapper.isMultiSortKeyCtrl();
                this.addManagedListener(
                  this.params.column,
                  bt.EVENT_MOVING_CHANGED,
                  function () {
                    t.lastMovingChanged = new Date().getTime();
                  }
                ),
                  this.eLabel &&
                    this.addManagedListener(this.eLabel, "click", function (o) {
                      var n = t.params.column.isMoving(),
                        r = new Date().getTime();
                      n ||
                        r - t.lastMovingChanged < 50 ||
                        t.params.progressSort(
                          e ? o.ctrlKey || o.metaKey : o.shiftKey
                        );
                    }),
                  this.addManagedListener(
                    this.params.column,
                    bt.EVENT_SORT_CHANGED,
                    this.onSortChanged.bind(this)
                  ),
                  this.onSortChanged(),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_SORT_CHANGED,
                    this.setMultiSortOrder.bind(this)
                  ),
                  this.setMultiSortOrder();
              } else this.removeSortIcons();
            }),
            (e.prototype.onSortChanged = function () {
              if (
                (je(
                  this.getGui(),
                  "ag-header-cell-sorted-asc",
                  this.params.column.isSortAscending()
                ),
                je(
                  this.getGui(),
                  "ag-header-cell-sorted-desc",
                  this.params.column.isSortDescending()
                ),
                je(
                  this.getGui(),
                  "ag-header-cell-sorted-none",
                  this.params.column.isSortNone()
                ),
                this.eSortAsc &&
                  je(
                    this.eSortAsc,
                    "ag-hidden",
                    !this.params.column.isSortAscending()
                  ),
                this.eSortDesc &&
                  je(
                    this.eSortDesc,
                    "ag-hidden",
                    !this.params.column.isSortDescending()
                  ),
                this.eSortNone)
              ) {
                var t =
                  !this.params.column.getColDef().unSortIcon &&
                  !this.gridOptionsWrapper.isUnSortIcon();
                je(
                  this.eSortNone,
                  "ag-hidden",
                  t || !this.params.column.isSortNone()
                );
              }
            }),
            (e.prototype.setMultiSortOrder = function () {
              if (this.eSortOrder) {
                var t = this.params.column,
                  e = this.sortController.getColumnsWithSortingOrdered(),
                  o = e.indexOf(t),
                  n = e.length > 1,
                  r = t.isSorting() && n;
                Ke(this.eSortOrder, r),
                  o >= 0
                    ? (this.eSortOrder.innerHTML = (o + 1).toString())
                    : ro(this.eSortOrder);
              }
            }),
            (e.prototype.setupFilterIcon = function () {
              this.eFilter &&
                (this.addManagedListener(
                  this.params.column,
                  bt.EVENT_FILTER_CHANGED,
                  this.onFilterChanged.bind(this)
                ),
                this.onFilterChanged());
            }),
            (e.prototype.onFilterChanged = function () {
              var t = this.params.column.isFilterActive();
              je(this.eFilter, "ag-hidden", !t);
            }),
            (e.TEMPLATE =
              '<div class="ag-cell-label-container" role="presentation">\n            <span ref="eMenu" class="ag-header-icon ag-header-cell-menu-button" aria-hidden="true"></span>\n            <div ref="eLabel" class="ag-header-cell-label" role="presentation" unselectable="on">\n                <span ref="eText" class="ag-header-cell-text" unselectable="on"></span>\n                <span ref="eFilter" class="ag-header-icon ag-header-label-icon ag-filter-icon" aria-hidden="true"></span>\n                <span ref="eSortOrder" class="ag-header-icon ag-header-label-icon ag-sort-order" aria-hidden="true"></span>\n                <span ref="eSortAsc" class="ag-header-icon ag-header-label-icon ag-sort-ascending-icon" aria-hidden="true"></span>\n                <span ref="eSortDesc" class="ag-header-icon ag-header-label-icon ag-sort-descending-icon" aria-hidden="true"></span>\n                <span ref="eSortNone" class="ag-header-icon ag-header-label-icon ag-sort-none-icon" aria-hidden="true"></span>\n            </div>\n        </div>'),
            br([ut("sortController")], e.prototype, "sortController", void 0),
            br([ut("menuFactory")], e.prototype, "menuFactory", void 0),
            br([Kn("eFilter")], e.prototype, "eFilter", void 0),
            br([Kn("eSortAsc")], e.prototype, "eSortAsc", void 0),
            br([Kn("eSortDesc")], e.prototype, "eSortDesc", void 0),
            br([Kn("eSortNone")], e.prototype, "eSortNone", void 0),
            br([Kn("eSortOrder")], e.prototype, "eSortOrder", void 0),
            br([Kn("eMenu")], e.prototype, "eMenu", void 0),
            br([Kn("eLabel")], e.prototype, "eLabel", void 0),
            br([Kn("eText")], e.prototype, "eText", void 0),
            e
          );
        })(jn),
        Sr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Or = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        _r = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            Sr(e, t),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.init = function (t) {
              (this.params = t),
                this.setupLabel(),
                this.addGroupExpandIcon(),
                this.setupExpandIcons();
            }),
            (e.prototype.setupExpandIcons = function () {
              var t = this;
              this.addInIcon("columnGroupOpened", "agOpened"),
                this.addInIcon("columnGroupClosed", "agClosed");
              var e = function (e) {
                if (!At(e)) {
                  var o = !t.params.columnGroup.isExpanded();
                  t.columnController.setColumnGroupOpened(
                    t.params.columnGroup.getOriginalColumnGroup(),
                    o,
                    "uiColumnExpanded"
                  );
                }
              };
              this.addTouchAndClickListeners(this.eCloseIcon, e),
                this.addTouchAndClickListeners(this.eOpenIcon, e);
              var o = function (t) {
                Tt(t);
              };
              this.addManagedListener(this.eCloseIcon, "dblclick", o),
                this.addManagedListener(this.eOpenIcon, "dblclick", o),
                this.addManagedListener(this.getGui(), "dblclick", e),
                this.updateIconVisibility();
              var n = this.params.columnGroup.getOriginalColumnGroup();
              this.addManagedListener(
                n,
                St.EVENT_EXPANDED_CHANGED,
                this.updateIconVisibility.bind(this)
              ),
                this.addManagedListener(
                  n,
                  St.EVENT_EXPANDABLE_CHANGED,
                  this.updateIconVisibility.bind(this)
                );
            }),
            (e.prototype.addTouchAndClickListeners = function (t, e) {
              var o = new Cr(t, !0);
              this.addManagedListener(o, Cr.EVENT_TAP, e),
                this.addDestroyFunc(function () {
                  return o.destroy();
                }),
                this.addManagedListener(t, "click", e);
            }),
            (e.prototype.updateIconVisibility = function () {
              if (this.params.columnGroup.isExpandable()) {
                var t = this.params.columnGroup.isExpanded();
                Ke(this.eOpenIcon, t), Ke(this.eCloseIcon, !t);
              } else Ke(this.eOpenIcon, !1), Ke(this.eCloseIcon, !1);
            }),
            (e.prototype.addInIcon = function (t, e) {
              var o = yn(t, this.gridOptionsWrapper, null);
              o && this.getRefElement(e).appendChild(o);
            }),
            (e.prototype.addGroupExpandIcon = function () {
              if (!this.params.columnGroup.isExpandable())
                return Ke(this.eOpenIcon, !1), void Ke(this.eCloseIcon, !1);
            }),
            (e.prototype.setupLabel = function () {
              var t = this.params.displayName;
              if (r(t)) {
                var e = Zt(t);
                this.getRefElement("agLabel").innerHTML = e;
              }
            }),
            (e.TEMPLATE =
              '<div class="ag-header-group-cell-label" ref="agContainer" role="presentation">\n            <span ref="agLabel" class="ag-header-group-text" role="presentation"></span>\n            <span ref="agOpened" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded"></span>\n            <span ref="agClosed" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed"></span>\n        </div>'),
            Or(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Or([Kn("agOpened")], e.prototype, "eOpenIcon", void 0),
            Or([Kn("agClosed")], e.prototype, "eCloseIcon", void 0),
            e
          );
        })(jn),
        Rr = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Pr = (function () {
          function t() {
            (this.rowIndex = null),
              (this.childrenMapped = {}),
              (this.displayed = !1),
              (this.rowTop = null),
              (this.oldRowTop = null),
              (this.selectable = !0),
              (this.__objectId = t.OBJECT_ID_SEQUENCE++),
              (this.alreadyRendered = !1),
              (this.highlighted = null),
              (this.selected = !1);
          }
          return (
            (t.prototype.setData = function (t) {
              this.setDataCommon(t, !1);
            }),
            (t.prototype.updateData = function (t) {
              this.setDataCommon(t, !0);
            }),
            (t.prototype.setDataCommon = function (t, e) {
              var o = this.data;
              (this.data = t),
                this.valueCache.onDataChanged(),
                this.updateDataOnDetailNode(),
                this.checkRowSelectable();
              var n = this.createDataChangedEvent(t, o, e);
              this.dispatchLocalEvent(n);
            }),
            (t.prototype.updateDataOnDetailNode = function () {
              this.detailNode && (this.detailNode.data = this.data);
            }),
            (t.prototype.createDataChangedEvent = function (e, o, n) {
              return {
                type: t.EVENT_DATA_CHANGED,
                node: this,
                oldData: o,
                newData: e,
                update: n,
              };
            }),
            (t.prototype.createLocalRowEvent = function (t) {
              return { type: t, node: this };
            }),
            (t.prototype.getRowIndexString = function () {
              return this.rowPinned === vt.PINNED_TOP
                ? "t-" + this.rowIndex
                : this.rowPinned === vt.PINNED_BOTTOM
                ? "b-" + this.rowIndex
                : this.rowIndex.toString();
            }),
            (t.prototype.createDaemonNode = function () {
              var e = new t();
              return (
                this.context.createBean(e),
                (e.id = this.id),
                (e.data = this.data),
                (e.daemon = !0),
                (e.selected = this.selected),
                (e.level = this.level),
                e
              );
            }),
            (t.prototype.setDataAndId = function (t, e) {
              var o = r(this.id) ? this.createDaemonNode() : null,
                n = this.data;
              (this.data = t),
                this.updateDataOnDetailNode(),
                this.setId(e),
                this.selectionController.syncInRowNode(this, o),
                this.checkRowSelectable();
              var i = this.createDataChangedEvent(t, n, !1);
              this.dispatchLocalEvent(i);
            }),
            (t.prototype.checkRowSelectable = function () {
              var t = this.gridOptionsWrapper.getIsRowSelectableFunc(),
                e = t && r(this);
              this.setRowSelectable(!e || t(this));
            }),
            (t.prototype.setRowSelectable = function (e) {
              this.selectable !== e &&
                ((this.selectable = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_SELECTABLE_CHANGED)
                  ));
            }),
            (t.prototype.setId = function (e) {
              var o = this.gridOptionsWrapper.getRowNodeIdFunc();
              o
                ? this.data
                  ? ((this.id = o(this.data)),
                    this.id &&
                      this.id.startsWith &&
                      this.id.startsWith(t.ID_PREFIX_ROW_GROUP) &&
                      console.error(
                        "AG Grid: Row ID's cannot start with " +
                          t.ID_PREFIX_ROW_GROUP +
                          ", this is a reserved prefix for AG Grid's row grouping feature."
                      ))
                  : (this.id = void 0)
                : (this.id = e);
            }),
            (t.prototype.isPixelInRange = function (t) {
              return (
                !(!r(this.rowTop) || !r(this.rowHeight)) &&
                t >= this.rowTop &&
                t < this.rowTop + this.rowHeight
              );
            }),
            (t.prototype.setFirstChild = function (e) {
              this.firstChild !== e &&
                ((this.firstChild = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_FIRST_CHILD_CHANGED)
                  ));
            }),
            (t.prototype.setLastChild = function (e) {
              this.lastChild !== e &&
                ((this.lastChild = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_LAST_CHILD_CHANGED)
                  ));
            }),
            (t.prototype.setChildIndex = function (e) {
              this.childIndex !== e &&
                ((this.childIndex = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_CHILD_INDEX_CHANGED)
                  ));
            }),
            (t.prototype.setRowTop = function (e) {
              this.rowTop !== e &&
                ((this.rowTop = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_TOP_CHANGED)
                  ),
                this.setDisplayed(null !== e));
            }),
            (t.prototype.clearRowTopAndRowIndex = function () {
              (this.oldRowTop = this.rowTop),
                this.setRowTop(null),
                this.setRowIndex(null);
            }),
            (t.prototype.setDisplayed = function (e) {
              this.displayed !== e &&
                ((this.displayed = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_DISPLAYED_CHANGED)
                  ));
            }),
            (t.prototype.setDragging = function (e) {
              this.dragging !== e &&
                ((this.dragging = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_DRAGGING_CHANGED)
                  ));
            }),
            (t.prototype.setHighlighted = function (e) {
              e !== this.highlighted &&
                ((this.highlighted = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_HIGHLIGHT_CHANGED)
                  ));
            }),
            (t.prototype.setAllChildrenCount = function (e) {
              this.allChildrenCount !== e &&
                ((this.allChildrenCount = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_ALL_CHILDREN_COUNT_CHANGED)
                  ));
            }),
            (t.prototype.setMaster = function (e) {
              this.master !== e &&
                (this.master && !e && (this.expanded = !1),
                (this.master = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_MASTER_CHANGED)
                  ));
            }),
            (t.prototype.setRowHeight = function (e, o) {
              void 0 === o && (o = !1),
                (this.rowHeight = e),
                (this.rowHeightEstimated = o),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_HEIGHT_CHANGED)
                  );
            }),
            (t.prototype.setRowIndex = function (e) {
              (this.rowIndex = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_ROW_INDEX_CHANGED)
                  );
            }),
            (t.prototype.setUiLevel = function (e) {
              this.uiLevel !== e &&
                ((this.uiLevel = e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_UI_LEVEL_CHANGED)
                  ));
            }),
            (t.prototype.setExpanded = function (e) {
              if (this.expanded !== e) {
                (this.expanded = e),
                  this.eventService &&
                    this.eventService.dispatchEvent(
                      this.createLocalRowEvent(t.EVENT_EXPANDED_CHANGED)
                    );
                var o = W(
                  {},
                  this.createGlobalRowEvent(zt.EVENT_ROW_GROUP_OPENED),
                  { expanded: e }
                );
                this.mainEventService.dispatchEvent(o),
                  this.gridOptionsWrapper.isGroupIncludeFooter() &&
                    this.rowRenderer.refreshCells({ rowNodes: [this] });
              }
            }),
            (t.prototype.createGlobalRowEvent = function (t) {
              return {
                type: t,
                node: this,
                data: this.data,
                rowIndex: this.rowIndex,
                rowPinned: this.rowPinned,
                context: this.gridOptionsWrapper.getContext(),
                api: this.gridOptionsWrapper.getApi(),
                columnApi: this.gridOptionsWrapper.getColumnApi(),
              };
            }),
            (t.prototype.dispatchLocalEvent = function (t) {
              this.eventService && this.eventService.dispatchEvent(t);
            }),
            (t.prototype.setDataValue = function (t, e) {
              var o = this.columnController.getPrimaryColumn(t),
                n = this.valueService.getValue(o, this);
              this.valueService.setValue(this, o, e),
                this.dispatchCellChangedEvent(o, e, n);
            }),
            (t.prototype.setGroupValue = function (t, e) {
              var o = this.columnController.getGridColumn(t);
              i(this.groupData) && (this.groupData = {});
              var n = o.getColId(),
                r = this.groupData[n];
              r !== e &&
                ((this.groupData[n] = e),
                this.dispatchCellChangedEvent(o, e, r));
            }),
            (t.prototype.setAggData = function (t) {
              var e = this,
                o = k([this.aggData, t]),
                n = this.aggData;
              (this.aggData = t),
                this.eventService &&
                  o.forEach(function (t) {
                    var o = e.columnController.getGridColumn(t);
                    e.dispatchCellChangedEvent(
                      o,
                      e.aggData ? e.aggData[t] : void 0,
                      n ? n[t] : void 0
                    );
                  });
            }),
            (t.prototype.updateHasChildren = function () {
              var e =
                (this.group && !this.footer) ||
                (this.childrenAfterGroup && this.childrenAfterGroup.length > 0);
              e !== this.__hasChildren &&
                ((this.__hasChildren = !!e),
                this.eventService &&
                  this.eventService.dispatchEvent(
                    this.createLocalRowEvent(t.EVENT_HAS_CHILDREN_CHANGED)
                  ));
            }),
            (t.prototype.hasChildren = function () {
              return (
                null == this.__hasChildren && this.updateHasChildren(),
                this.__hasChildren
              );
            }),
            (t.prototype.isEmptyRowGroupNode = function () {
              return this.group && s(this.childrenAfterGroup);
            }),
            (t.prototype.dispatchCellChangedEvent = function (e, o, n) {
              this.dispatchLocalEvent({
                type: t.EVENT_CELL_CHANGED,
                node: this,
                column: e,
                newValue: o,
                oldValue: n,
              });
            }),
            (t.prototype.resetQuickFilterAggregateText = function () {
              this.quickFilterAggregateText = null;
            }),
            (t.prototype.isExpandable = function () {
              return !(!this.hasChildren() && !this.master);
            }),
            (t.prototype.isSelected = function () {
              return this.footer ? this.sibling.isSelected() : this.selected;
            }),
            (t.prototype.depthFirstSearch = function (t) {
              this.childrenAfterGroup &&
                this.childrenAfterGroup.forEach(function (e) {
                  return e.depthFirstSearch(t);
                }),
                t(this);
            }),
            (t.prototype.calculateSelectedFromChildren = function () {
              var t = !1,
                e = !1,
                o = !1;
              if (this.childrenAfterGroup)
                for (var n = 0; n < this.childrenAfterGroup.length; n++) {
                  var r = this.childrenAfterGroup[n];
                  if (r.selectable)
                    switch (r.isSelected()) {
                      case !0:
                        t = !0;
                        break;
                      case !1:
                        e = !0;
                        break;
                      default:
                        o = !0;
                    }
                }
              this.selectThisNode(
                o ? void 0 : !(!t || e) || (!(!t && e) && void 0)
              );
            }),
            (t.prototype.setSelectedInitialValue = function (t) {
              this.selected = t;
            }),
            (t.prototype.setSelected = function (t, e, o) {
              void 0 === e && (e = !1),
                void 0 === o && (o = !1),
                this.setSelectedParams({
                  newValue: t,
                  clearSelection: e,
                  suppressFinishActions: o,
                  rangeSelect: !1,
                });
            }),
            (t.prototype.isRowPinned = function () {
              return (
                this.rowPinned === vt.PINNED_TOP ||
                this.rowPinned === vt.PINNED_BOTTOM
              );
            }),
            (t.prototype.setSelectedParams = function (t) {
              var e = this.gridOptionsWrapper.isGroupSelectsChildren(),
                o = !0 === t.newValue,
                n = !0 === t.clearSelection,
                r = !0 === t.suppressFinishActions,
                i = !0 === t.rangeSelect,
                s = e && !0 === t.groupSelectsFiltered;
              if (void 0 === this.id)
                return (
                  console.warn(
                    "AG Grid: cannot select node until id for node is known"
                  ),
                  0
                );
              if (this.rowPinned)
                return console.warn("AG Grid: cannot select pinned rows"), 0;
              if (this.footer) return this.sibling.setSelectedParams(t);
              if (i && this.selectionController.getLastSelectedNode()) {
                var a = this.selectionController.getLastSelectedNode() !== this,
                  l = this.gridOptionsWrapper.isRowSelectionMulti();
                if (a && l) {
                  var u = this.doRowRangeSelection(t.newValue);
                  return this.selectionController.setLastSelectedNode(this), u;
                }
              }
              var p = 0;
              return (
                (s && this.group) || (this.selectThisNode(o) && p++),
                e && this.group && (p += this.selectChildNodes(o, s)),
                r ||
                  (o &&
                    (n || !this.gridOptionsWrapper.isRowSelectionMulti()) &&
                    (p += this.selectionController.clearOtherNodes(this)),
                  p > 0 &&
                    (this.selectionController.updateGroupsFromChildrenSelections(),
                    this.mainEventService.dispatchEvent({
                      type: zt.EVENT_SELECTION_CHANGED,
                      api: this.gridApi,
                      columnApi: this.columnApi,
                    })),
                  o && this.selectionController.setLastSelectedNode(this)),
                p
              );
            }),
            (t.prototype.doRowRangeSelection = function (t) {
              var e = this;
              void 0 === t && (t = !0);
              var o = this.gridOptionsWrapper.isGroupSelectsChildren(),
                n = this.selectionController.getLastSelectedNode(),
                r = this.rowModel.getNodesInRangeForSelection(this, n),
                i = 0;
              return (
                r.forEach(function (n) {
                  (n.group && o) ||
                    (!1 === t && e === n) ||
                    (n.selectThisNode(t) && i++);
                }),
                this.selectionController.updateGroupsFromChildrenSelections(),
                this.mainEventService.dispatchEvent({
                  type: zt.EVENT_SELECTION_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                }),
                i
              );
            }),
            (t.prototype.isParentOfNode = function (t) {
              for (var e = this.parent; e; ) {
                if (e === t) return !0;
                e = e.parent;
              }
              return !1;
            }),
            (t.prototype.selectThisNode = function (e) {
              if ((!this.selectable && e) || this.selected === e) return !1;
              (this.selected = e),
                this.eventService &&
                  this.dispatchLocalEvent(
                    this.createLocalRowEvent(t.EVENT_ROW_SELECTED)
                  );
              var o = this.createGlobalRowEvent(zt.EVENT_ROW_SELECTED);
              return this.mainEventService.dispatchEvent(o), !0;
            }),
            (t.prototype.selectChildNodes = function (t, e) {
              var o = e ? this.childrenAfterFilter : this.childrenAfterGroup;
              if (i(o)) return 0;
              for (var n = 0, r = 0; r < o.length; r++)
                n += o[r].setSelectedParams({
                  newValue: t,
                  clearSelection: !1,
                  suppressFinishActions: !0,
                  groupSelectsFiltered: e,
                });
              return n;
            }),
            (t.prototype.addEventListener = function (t, e) {
              this.eventService || (this.eventService = new mt()),
                this.eventService.addEventListener(t, e);
            }),
            (t.prototype.removeEventListener = function (t, e) {
              this.eventService.removeEventListener(t, e);
            }),
            (t.prototype.onMouseEnter = function () {
              this.dispatchLocalEvent(
                this.createLocalRowEvent(t.EVENT_MOUSE_ENTER)
              );
            }),
            (t.prototype.onMouseLeave = function () {
              this.dispatchLocalEvent(
                this.createLocalRowEvent(t.EVENT_MOUSE_LEAVE)
              );
            }),
            (t.prototype.getFirstChildOfFirstChild = function (t) {
              for (var e = this, o = !0, n = !1, i = null; o && !n; ) {
                var s = e.parent;
                r(s) && e.firstChild
                  ? s.rowGroupColumn === t && ((n = !0), (i = s))
                  : (o = !1),
                  (e = s);
              }
              return n ? i : null;
            }),
            (t.prototype.isFullWidthCell = function () {
              var t = this.gridOptionsWrapper.getIsFullWidthCellFunc();
              return !!t && t(this);
            }),
            (t.prototype.getRoute = function () {
              if (null != this.key) {
                for (var t = [], e = this; null != e.key; )
                  t.push(e.key), (e = e.parent);
                return t.reverse();
              }
            }),
            (t.ID_PREFIX_ROW_GROUP = "row-group-"),
            (t.ID_PREFIX_TOP_PINNED = "t-"),
            (t.ID_PREFIX_BOTTOM_PINNED = "b-"),
            (t.OBJECT_ID_SEQUENCE = 0),
            (t.EVENT_ROW_SELECTED = "rowSelected"),
            (t.EVENT_DATA_CHANGED = "dataChanged"),
            (t.EVENT_CELL_CHANGED = "cellChanged"),
            (t.EVENT_ALL_CHILDREN_COUNT_CHANGED = "allChildrenCountChanged"),
            (t.EVENT_MASTER_CHANGED = "masterChanged"),
            (t.EVENT_MOUSE_ENTER = "mouseEnter"),
            (t.EVENT_MOUSE_LEAVE = "mouseLeave"),
            (t.EVENT_HEIGHT_CHANGED = "heightChanged"),
            (t.EVENT_TOP_CHANGED = "topChanged"),
            (t.EVENT_DISPLAYED_CHANGED = "displayedChanged"),
            (t.EVENT_FIRST_CHILD_CHANGED = "firstChildChanged"),
            (t.EVENT_LAST_CHILD_CHANGED = "lastChildChanged"),
            (t.EVENT_CHILD_INDEX_CHANGED = "childIndexChanged"),
            (t.EVENT_ROW_INDEX_CHANGED = "rowIndexChanged"),
            (t.EVENT_EXPANDED_CHANGED = "expandedChanged"),
            (t.EVENT_HAS_CHILDREN_CHANGED = "hasChildrenChanged"),
            (t.EVENT_SELECTABLE_CHANGED = "selectableChanged"),
            (t.EVENT_UI_LEVEL_CHANGED = "uiLevelChanged"),
            (t.EVENT_HIGHLIGHT_CHANGED = "rowHighlightChanged"),
            (t.EVENT_DRAGGING_CHANGED = "draggingChanged"),
            Rr([ut("eventService")], t.prototype, "mainEventService", void 0),
            Rr([ut("rowRenderer")], t.prototype, "rowRenderer", void 0),
            Rr(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            Rr(
              [ut("selectionController")],
              t.prototype,
              "selectionController",
              void 0
            ),
            Rr(
              [ut("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            Rr([ut("valueService")], t.prototype, "valueService", void 0),
            Rr([ut("rowModel")], t.prototype, "rowModel", void 0),
            Rr([ut("context")], t.prototype, "context", void 0),
            Rr([ut("valueCache")], t.prototype, "valueCache", void 0),
            Rr([ut("columnApi")], t.prototype, "columnApi", void 0),
            Rr([ut("gridApi")], t.prototype, "gridApi", void 0),
            t
          );
        })(),
        Tr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ar = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Dr = (function (t) {
          function e() {
            return (
              t.call(
                this,
                '\n            <div class="ag-selection-checkbox" role="presentation">\n                <ag-checkbox role="presentation" ref="eCheckbox"></ag-checkbox>\n            </div>'
              ) || this
            );
          }
          return (
            Tr(e, t),
            (e.prototype.postConstruct = function () {
              this.eCheckbox.setPassive(!0);
            }),
            (e.prototype.getCheckboxId = function () {
              return this.eCheckbox.getInputElement().id;
            }),
            (e.prototype.onDataChanged = function () {
              this.onSelectionChanged();
            }),
            (e.prototype.onSelectableChanged = function () {
              this.showOrHideSelect();
            }),
            (e.prototype.onSelectionChanged = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = this.rowNode.isSelected(),
                o =
                  void 0 === e
                    ? t("ariaIndeterminate", "indeterminate")
                    : !0 === e
                    ? t("ariaChecked", "checked")
                    : t("ariaUnchecked", "unchecked"),
                n = t(
                  "ariaRowToggleSelection",
                  "Press Space to toggle row selection"
                );
              this.eCheckbox.setValue(e, !0),
                this.eCheckbox.setInputAriaLabel(n + " (" + o + ")");
            }),
            (e.prototype.onCheckedClicked = function (t) {
              var e = this.gridOptionsWrapper.isGroupSelectsFiltered();
              return this.rowNode.setSelectedParams({
                newValue: !1,
                rangeSelect: t.shiftKey,
                groupSelectsFiltered: e,
              });
            }),
            (e.prototype.onUncheckedClicked = function (t) {
              var e = this.gridOptionsWrapper.isGroupSelectsFiltered();
              return this.rowNode.setSelectedParams({
                newValue: !0,
                rangeSelect: t.shiftKey,
                groupSelectsFiltered: e,
              });
            }),
            (e.prototype.init = function (t) {
              var e = this;
              (this.rowNode = t.rowNode),
                (this.column = t.column),
                this.onSelectionChanged(),
                this.addGuiEventListener("click", function (t) {
                  return Tt(t);
                }),
                this.addGuiEventListener("dblclick", function (t) {
                  return Tt(t);
                }),
                this.addManagedListener(
                  this.eCheckbox.getInputElement(),
                  "click",
                  function (t) {
                    var o = e.eCheckbox.getValue();
                    void 0 === e.eCheckbox.getPreviousValue()
                      ? 0 === e.onUncheckedClicked(t || {}) &&
                        e.onCheckedClicked(t)
                      : o
                      ? e.onCheckedClicked(t)
                      : e.onUncheckedClicked(t || {});
                  }
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_ROW_SELECTED,
                  this.onSelectionChanged.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_DATA_CHANGED,
                  this.onDataChanged.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_SELECTABLE_CHANGED,
                  this.onSelectableChanged.bind(this)
                ),
                (this.isRowSelectableFunc =
                  this.gridOptionsWrapper.getIsRowSelectableFunc()),
                (this.isRowSelectableFunc || this.checkboxCallbackExists()) &&
                  (this.addManagedListener(
                    this.eventService,
                    zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                    this.showOrHideSelect.bind(this)
                  ),
                  this.showOrHideSelect()),
                this.eCheckbox.getInputElement().setAttribute("tabindex", "-1");
            }),
            (e.prototype.showOrHideSelect = function () {
              var t = this.rowNode.selectable;
              t &&
                this.checkboxCallbackExists() &&
                (t = this.column.isCellCheckboxSelection(this.rowNode)),
                this.setDisplayed(t);
            }),
            (e.prototype.checkboxCallbackExists = function () {
              var t = this.column ? this.column.getColDef() : null;
              return !!t && "function" == typeof t.checkboxSelection;
            }),
            Ar([Kn("eCheckbox")], e.prototype, "eCheckbox", void 0),
            Ar([st], e.prototype, "postConstruct", null),
            e
          );
        })(jn),
        xr = {
          propertyName: "dateComponent",
          isCellRenderer: function () {
            return !1;
          },
        },
        Fr = {
          propertyName: "headerComponent",
          isCellRenderer: function () {
            return !1;
          },
        },
        Nr = {
          propertyName: "headerGroupComponent",
          isCellRenderer: function () {
            return !1;
          },
        },
        Mr = {
          propertyName: "cellRenderer",
          isCellRenderer: function () {
            return !0;
          },
        },
        Ir = {
          propertyName: "pinnedRowCellRenderer",
          isCellRenderer: function () {
            return !0;
          },
        },
        Lr = {
          propertyName: "cellEditor",
          isCellRenderer: function () {
            return !1;
          },
        },
        Gr = {
          propertyName: "innerRenderer",
          isCellRenderer: function () {
            return !0;
          },
        },
        kr = {
          propertyName: "loadingOverlayComponent",
          isCellRenderer: function () {
            return !1;
          },
        },
        Vr = {
          propertyName: "noRowsOverlayComponent",
          isCellRenderer: function () {
            return !1;
          },
        },
        Wr = {
          propertyName: "tooltipComponent",
          isCellRenderer: function () {
            return !1;
          },
        },
        Hr = {
          propertyName: "filter",
          isCellRenderer: function () {
            return !1;
          },
        },
        Br = {
          propertyName: "floatingFilterComponent",
          isCellRenderer: function () {
            return !1;
          },
        },
        jr = {
          propertyName: "toolPanel",
          isCellRenderer: function () {
            return !1;
          },
        },
        Ur = {
          propertyName: "statusPanel",
          isCellRenderer: function () {
            return !1;
          },
        },
        zr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Kr = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.DEFAULT = 0)] = "DEFAULT"),
          (t[(t.REGISTERED_BY_NAME = 1)] = "REGISTERED_BY_NAME"),
          (t[(t.HARDCODED = 2)] = "HARDCODED");
      })(dr || (dr = {}));
      var Yr,
        Xr = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            zr(e, t),
            (e.prototype.newDateComponent = function (t) {
              return this.createAndInitUserComponent(
                this.gridOptions,
                t,
                xr,
                "agDateInput"
              );
            }),
            (e.prototype.newHeaderComponent = function (t) {
              return this.createAndInitUserComponent(
                t.column.getColDef(),
                t,
                Fr,
                "agColumnHeader"
              );
            }),
            (e.prototype.newHeaderGroupComponent = function (t) {
              return this.createAndInitUserComponent(
                t.columnGroup.getColGroupDef(),
                t,
                Nr,
                "agColumnGroupHeader"
              );
            }),
            (e.prototype.newFullWidthGroupRowInnerCellRenderer = function (t) {
              return this.createAndInitUserComponent(
                this.gridOptions.groupRowRendererParams,
                t,
                Gr,
                null,
                !0
              );
            }),
            (e.prototype.newFullWidthCellRenderer = function (t, e, o) {
              return this.createAndInitUserComponent(
                null,
                t,
                {
                  propertyName: e,
                  isCellRenderer: function () {
                    return !0;
                  },
                },
                o
              );
            }),
            (e.prototype.newCellRenderer = function (t, e, o) {
              return (
                void 0 === o && (o = !1),
                this.createAndInitUserComponent(t, e, o ? Ir : Mr, null, !0)
              );
            }),
            (e.prototype.newCellEditor = function (t, e) {
              return this.createAndInitUserComponent(t, e, Lr, "agCellEditor");
            }),
            (e.prototype.newInnerCellRenderer = function (t, e) {
              return this.createAndInitUserComponent(t, e, Gr, null);
            }),
            (e.prototype.newLoadingOverlayComponent = function (t) {
              return this.createAndInitUserComponent(
                this.gridOptions,
                t,
                kr,
                "agLoadingOverlay"
              );
            }),
            (e.prototype.newNoRowsOverlayComponent = function (t) {
              return this.createAndInitUserComponent(
                this.gridOptions,
                t,
                Vr,
                "agNoRowsOverlay"
              );
            }),
            (e.prototype.newTooltipComponent = function (t) {
              return this.createAndInitUserComponent(
                t.colDef,
                t,
                Wr,
                "agTooltipComponent"
              );
            }),
            (e.prototype.newFilterComponent = function (t, e, o) {
              return this.createAndInitUserComponent(t, e, Hr, o, !1);
            }),
            (e.prototype.newSetFilterCellRenderer = function (t, e) {
              return this.createAndInitUserComponent(t, e, Mr, null, !0);
            }),
            (e.prototype.newFloatingFilterComponent = function (t, e, o) {
              return this.createAndInitUserComponent(t, e, Br, o, !0);
            }),
            (e.prototype.newToolPanelComponent = function (t, e) {
              return this.createAndInitUserComponent(t, e, jr);
            }),
            (e.prototype.newStatusPanelComponent = function (t, e) {
              return this.createAndInitUserComponent(t, e, Ur);
            }),
            (e.prototype.createAndInitUserComponent = function (t, e, o, n, r) {
              void 0 === r && (r = !1), t || (t = this.gridOptions);
              var i = this.createComponentInstance(t, o, e, n, r);
              if (!i) return null;
              var s = i.componentInstance,
                a = this.createFinalParams(
                  t,
                  o.propertyName,
                  e,
                  i.paramsFromSelector
                );
              this.addReactHacks(a);
              var l = this.initComponent(s, a);
              return null == l
                ? Mn.resolve(s)
                : l.then(function () {
                    return s;
                  });
            }),
            (e.prototype.addReactHacks = function (t) {
              var e = this.context.getBean("agGridReact");
              e && (t.agGridReact = N(e));
              var o = this.context.getBean("frameworkComponentWrapper");
              o && (t.frameworkComponentWrapper = o);
            }),
            (e.prototype.createUserComponentFromConcreteClass = function (
              t,
              e
            ) {
              var o = new t();
              return this.initComponent(o, e), o;
            }),
            (e.prototype.lookupComponentClassDef = function (t, e, o, n) {
              void 0 === o && (o = null);
              var r = null,
                i = null,
                s = null,
                a = null,
                l = null;
              if (null != t) {
                var u = t[e];
                null == u ||
                  !0 === u ||
                  ("string" == typeof u
                    ? (r = u)
                    : "boolean" == typeof u ||
                      (this.agComponentUtils.doesImplementIComponent(u)
                        ? (i = u)
                        : (s = u))),
                  (a = t[e + "Framework"]),
                  (l = t[e + "Selector"]);
              }
              if ((i && a) || (r && a) || (s && a))
                throw Error(
                  "ag-grid: you are trying to specify: " +
                    e +
                    " twice as a component."
                );
              if (a && !this.frameworkComponentWrapper)
                throw Error(
                  "ag-grid: you are specifying a framework component but you are not using a framework version of ag-grid for : " +
                    e
                );
              if (l && (r || i || s || a))
                throw Error(
                  "ag-grid: you can't specify both, the selector and the component of ag-grid for : " +
                    e
                );
              if (a)
                return {
                  componentFromFramework: !0,
                  component: a,
                  source: dr.HARDCODED,
                  paramsFromSelector: null,
                };
              if (i)
                return {
                  componentFromFramework: !1,
                  component: i,
                  source: dr.HARDCODED,
                  paramsFromSelector: null,
                };
              if (s)
                return this.agComponentUtils.adaptFunction(
                  e,
                  s,
                  !1,
                  dr.HARDCODED
                );
              var p,
                c = l ? l(o) : null;
              if (!(p = c && c.component ? c.component : r || n)) return null;
              var d = this.lookupFromRegisteredComponents(e, p);
              return d
                ? {
                    componentFromFramework: d.componentFromFramework,
                    component: d.component,
                    source: d.source,
                    paramsFromSelector: c ? c.params : null,
                  }
                : null;
            }),
            (e.prototype.lookupFromRegisteredComponents = function (t, e) {
              var o = this.userComponentRegistry.retrieve(null != e ? e : t);
              return null == o
                ? null
                : o.componentFromFramework
                ? {
                    component: o.component,
                    componentFromFramework: !0,
                    source: dr.REGISTERED_BY_NAME,
                    paramsFromSelector: null,
                  }
                : this.agComponentUtils.doesImplementIComponent(o.component)
                ? {
                    component: o.component,
                    componentFromFramework: !1,
                    source:
                      o.source == Yr.REGISTERED
                        ? dr.REGISTERED_BY_NAME
                        : dr.DEFAULT,
                    paramsFromSelector: null,
                  }
                : this.agComponentUtils.adaptFunction(
                    t,
                    o.component,
                    o.componentFromFramework,
                    o.source == Yr.REGISTERED
                      ? dr.REGISTERED_BY_NAME
                      : dr.DEFAULT
                  );
            }),
            (e.prototype.createFinalParams = function (t, e, o, n) {
              void 0 === n && (n = null);
              var r = {};
              V(r, o);
              var i = t ? t[e + "Params"] : null;
              return (
                null != i &&
                  ("function" == typeof i
                    ? V(r, i(o))
                    : "object" == typeof i && V(r, i)),
                V(r, n),
                r
              );
            }),
            (e.prototype.createComponentInstance = function (t, e, o, n, r) {
              var i,
                s = e.propertyName,
                a = this.lookupComponentClassDef(t, s, o, n);
              if (!a || !a.component)
                return (
                  r ||
                    console.error(
                      "Could not find component " +
                        ((t ? t[s] : n) || n) +
                        ", did you forget to configure this component?"
                    ),
                  null
                );
              if (a.componentFromFramework) {
                var l = a.component,
                  u = this.componentMetadataProvider.retrieve(s);
                i = this.frameworkComponentWrapper.wrap(
                  l,
                  u.mandatoryMethodList,
                  u.optionalMethodList,
                  e,
                  n
                );
              } else i = new a.component();
              return {
                componentInstance: i,
                paramsFromSelector: a.paramsFromSelector,
              };
            }),
            (e.prototype.initComponent = function (t, e) {
              if ((this.context.createBean(t), null != t.init))
                return t.init(e);
            }),
            Kr([ut("gridOptions")], e.prototype, "gridOptions", void 0),
            Kr(
              [ut("agComponentUtils")],
              e.prototype,
              "agComponentUtils",
              void 0
            ),
            Kr(
              [ut("componentMetadataProvider")],
              e.prototype,
              "componentMetadataProvider",
              void 0
            ),
            Kr(
              [ut("userComponentRegistry")],
              e.prototype,
              "userComponentRegistry",
              void 0
            ),
            Kr(
              [pt("frameworkComponentWrapper")],
              e.prototype,
              "frameworkComponentWrapper",
              void 0
            ),
            Kr([lt("userComponentFactory")], e)
          );
        })(Ht),
        qr = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Qr = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Zr = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            qr(e, t),
            (e.prototype.init = function (t) {
              (this.params = t),
                this.gridOptionsWrapper.isGroupIncludeTotalFooter() &&
                  this.assignBlankValueToGroupFooterCell(t);
              var e = this.isEmbeddedRowMismatch(),
                o = null == t.value,
                n = !1;
              if (
                this.gridOptionsWrapper.isGroupIncludeFooter() &&
                this.gridOptionsWrapper.isGroupHideOpenParents()
              ) {
                var r = t.node;
                r.footer &&
                  (n =
                    (t.colDef && t.colDef.showRowGroup) !==
                    (r.rowGroupColumn && r.rowGroupColumn.getColId()));
              }
              (this.cellIsBlank = e || o || n),
                this.cellIsBlank ||
                  (this.setupDragOpenParents(),
                  this.addExpandAndContract(),
                  this.addCheckboxIfNeeded(),
                  this.addValueElement(),
                  this.setupIndent());
            }),
            (e.prototype.assignBlankValueToGroupFooterCell = function (t) {
              t.value || -1 != t.node.level || (t.value = "");
            }),
            (e.prototype.isEmbeddedRowMismatch = function () {
              if (
                !this.params.fullWidth ||
                !this.gridOptionsWrapper.isEmbedFullWidthRows()
              )
                return !1;
              var t = this.params.pinned === vt.PINNED_LEFT,
                e = this.params.pinned === vt.PINNED_RIGHT,
                o = !t && !e;
              return this.gridOptionsWrapper.isEnableRtl()
                ? this.columnController.isPinningLeft()
                  ? !e
                  : !o
                : this.columnController.isPinningLeft()
                ? !t
                : !o;
            }),
            (e.prototype.setIndent = function () {
              if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {
                var t = this.params,
                  e =
                    t.colDef && !0 !== t.colDef.showRowGroup
                      ? 0
                      : t.node.uiLevel;
                t.padding >= 0
                  ? this.setPaddingDeprecatedWay(e, t.padding)
                  : (this.indentClass && this.removeCssClass(this.indentClass),
                    (this.indentClass = "ag-row-group-indent-" + e),
                    this.addCssClass(this.indentClass));
              }
            }),
            (e.prototype.setPaddingDeprecatedWay = function (t, e) {
              q(function () {
                return console.warn(
                  "AG Grid: since v14.2, configuring padding for groupCellRenderer should be done with Sass variables and themes. Please see the AG Grid documentation page for Themes, in particular the property $row-group-indent-size."
                );
              }, "groupCellRenderer->doDeprecatedWay");
              var o = t * e,
                n = this.getGui(),
                r = this.gridOptionsWrapper.isEnableRtl()
                  ? "paddingRight"
                  : "paddingLeft";
              n.style[r] = o + "px";
            }),
            (e.prototype.setupIndent = function () {
              this.params.suppressPadding ||
                (this.addManagedListener(
                  this.params.node,
                  Pr.EVENT_UI_LEVEL_CHANGED,
                  this.setIndent.bind(this)
                ),
                this.setIndent());
            }),
            (e.prototype.addValueElement = function () {
              this.displayedGroup.footer
                ? this.addFooterValue()
                : (this.addGroupValue(), this.addChildCount());
            }),
            (e.prototype.addFooterValue = function () {
              var t,
                e = this.params.footerValueGetter;
              if (e) {
                var o = N(this.params);
                (o.value = this.params.value),
                  "function" == typeof e
                    ? (t = e(o))
                    : "string" == typeof e
                    ? (t = this.expressionService.evaluate(e, o))
                    : console.warn(
                        "AG Grid: footerValueGetter should be either a function or a string (expression)"
                      );
              } else t = "Total " + this.params.value;
              this.eValue.innerHTML = t;
            }),
            (e.prototype.addGroupValue = function () {
              var t,
                e = this,
                o = this.params,
                n = this.displayedGroup.rowGroupColumn || o.column,
                r = n
                  ? this.valueFormatterService.formatValue(
                      n,
                      o.node,
                      o.scope,
                      this.params.value
                    )
                  : null;
              (o.valueFormatted = r),
                (t = o.fullWidth
                  ? this.useFullWidth(o)
                  : this.useInnerRenderer(
                      this.params.colDef.cellRendererParams,
                      n.getColDef(),
                      o
                    )) &&
                  t.then(function (t) {
                    e.innerCellRenderer = t;
                  });
            }),
            (e.prototype.useInnerRenderer = function (t, e, o) {
              var n = this,
                r = null,
                i = this.userComponentFactory.lookupComponentClassDef(
                  t,
                  "innerRenderer"
                );
              if (i && null != i.component && i.source != dr.DEFAULT)
                r = this.userComponentFactory.newInnerCellRenderer(t, o);
              else {
                var s = this.userComponentFactory.lookupComponentClassDef(
                  e,
                  "cellRenderer"
                );
                r =
                  s && s.source != dr.DEFAULT
                    ? this.userComponentFactory.newCellRenderer(e, o)
                    : s &&
                      s.source == dr.DEFAULT &&
                      H(e, "cellRendererParams.innerRenderer", null)
                    ? this.userComponentFactory.newInnerCellRenderer(
                        e.cellRendererParams,
                        o
                      )
                    : this.userComponentFactory.newCellRenderer({}, o);
              }
              return (
                null != r
                  ? r.then(function (t) {
                      null != t
                        ? xo(r, n.eValue)
                        : (n.eValue.innerText =
                            null != o.valueFormatted
                              ? o.valueFormatted
                              : o.value);
                    })
                  : (this.eValue.innerText =
                      null != o.valueFormatted ? o.valueFormatted : o.value),
                r
              );
            }),
            (e.prototype.useFullWidth = function (t) {
              var e =
                this.userComponentFactory.newFullWidthGroupRowInnerCellRenderer(
                  t
                );
              return (
                null != e
                  ? xo(e, this.eValue)
                  : (this.eValue.innerText =
                      null != t.valueFormatted ? t.valueFormatted : t.value),
                e
              );
            }),
            (e.prototype.addChildCount = function () {
              this.params.suppressCount ||
                (this.addManagedListener(
                  this.displayedGroup,
                  Pr.EVENT_ALL_CHILDREN_COUNT_CHANGED,
                  this.updateChildCount.bind(this)
                ),
                this.updateChildCount());
            }),
            (e.prototype.updateChildCount = function () {
              var t = this.displayedGroup.allChildrenCount,
                e = this.isShowRowGroupForThisRow();
              this.eChildCount.innerHTML =
                e && null != t && t >= 0 ? "(" + t + ")" : "";
            }),
            (e.prototype.isUserWantsSelected = function () {
              var t = this.params.checkbox;
              return "function" == typeof t ? t(this.params) : !0 === t;
            }),
            (e.prototype.addCheckboxIfNeeded = function () {
              var t = this,
                e = this.displayedGroup,
                o =
                  this.isUserWantsSelected() &&
                  !e.footer &&
                  !e.rowPinned &&
                  !e.detail;
              if (o) {
                var n = new Dr();
                this.getContext().createBean(n),
                  n.init({ rowNode: e, column: this.params.column }),
                  this.eCheckbox.appendChild(n.getGui()),
                  this.addDestroyFunc(function () {
                    return t.getContext().destroyBean(n);
                  });
              }
              je(this.eCheckbox, "ag-invisible", !o);
            }),
            (e.prototype.addExpandAndContract = function () {
              var t = this.params,
                e = t.eGridCell,
                o = yn("groupExpanded", this.gridOptionsWrapper, null),
                n = yn("groupContracted", this.gridOptionsWrapper, null);
              jo(e, !!t.node.expanded),
                o && this.eExpanded.appendChild(o),
                n && this.eContracted.appendChild(n),
                this.addManagedListener(
                  this.eExpanded,
                  "click",
                  this.onExpandClicked.bind(this)
                ),
                this.addManagedListener(
                  this.eContracted,
                  "click",
                  this.onExpandClicked.bind(this)
                ),
                this.addManagedListener(
                  e,
                  "keydown",
                  this.onKeyDown.bind(this)
                ),
                this.addManagedListener(
                  t.node,
                  Pr.EVENT_EXPANDED_CHANGED,
                  this.showExpandAndContractIcons.bind(this)
                ),
                this.showExpandAndContractIcons();
              var r = this.onRowNodeIsExpandableChanged.bind(this);
              this.addManagedListener(
                this.displayedGroup,
                Pr.EVENT_ALL_CHILDREN_COUNT_CHANGED,
                r
              ),
                this.addManagedListener(
                  this.displayedGroup,
                  Pr.EVENT_MASTER_CHANGED,
                  r
                ),
                this.addManagedListener(
                  this.displayedGroup,
                  Pr.EVENT_HAS_CHILDREN_CHANGED,
                  r
                ),
                this.gridOptionsWrapper.isEnableGroupEdit() ||
                  !this.isExpandable() ||
                  t.suppressDoubleClickExpand ||
                  this.addManagedListener(
                    e,
                    "dblclick",
                    this.onCellDblClicked.bind(this)
                  );
            }),
            (e.prototype.onRowNodeIsExpandableChanged = function () {
              this.showExpandAndContractIcons(), this.setIndent();
            }),
            (e.prototype.onKeyDown = function (t) {
              vn(t, $n.ENTER) &&
                !this.params.suppressEnterExpand &&
                ((this.params.column &&
                  this.params.column.isCellEditable(this.params.node)) ||
                  this.onExpandOrContract());
            }),
            (e.prototype.setupDragOpenParents = function () {
              var t = this.params.column,
                e = this.params.node;
              if (this.gridOptionsWrapper.isGroupHideOpenParents())
                if (e.hasChildren()) {
                  var o = e.rowGroupColumn;
                  this.draggedFromHideOpenParents =
                    !!o && !t.isRowGroupDisplayed(o.getId());
                } else this.draggedFromHideOpenParents = !0;
              else this.draggedFromHideOpenParents = !1;
              if (this.draggedFromHideOpenParents)
                for (var n = e.parent; !i(n); ) {
                  if (
                    n.rowGroupColumn &&
                    t.isRowGroupDisplayed(n.rowGroupColumn.getId())
                  ) {
                    this.displayedGroup = n;
                    break;
                  }
                  n = n.parent;
                }
              i(this.displayedGroup) && (this.displayedGroup = e);
            }),
            (e.prototype.onExpandClicked = function (t) {
              At(t) || (Tt(t), this.onExpandOrContract());
            }),
            (e.prototype.onCellDblClicked = function (t) {
              At(t) ||
                Mt(this.eExpanded, t) ||
                Mt(this.eContracted, t) ||
                this.onExpandOrContract();
            }),
            (e.prototype.onExpandOrContract = function () {
              var t = this.displayedGroup,
                e = this.params,
                o = !t.expanded;
              t.setExpanded(o), jo(e.eGridCell, o);
            }),
            (e.prototype.isShowRowGroupForThisRow = function () {
              if (this.gridOptionsWrapper.isTreeData()) return !0;
              var t = this.displayedGroup.rowGroupColumn;
              if (!t) return !1;
              var e = this.params.column;
              return null == e || e.isRowGroupDisplayed(t.getId());
            }),
            (e.prototype.isExpandable = function () {
              if (this.draggedFromHideOpenParents) return !0;
              var t = this.displayedGroup,
                e = this.columnController.isPivotMode() && t.leafGroup;
              if (!t.isExpandable() || t.footer || e) return !1;
              var o = this.params.column;
              return (
                null == o ||
                "string" != typeof o.getColDef().showRowGroup ||
                this.isShowRowGroupForThisRow()
              );
            }),
            (e.prototype.showExpandAndContractIcons = function () {
              var t = this,
                e = t.eContracted,
                o = t.eExpanded,
                n = t.params,
                r = t.displayedGroup,
                i = t.columnController,
                s = n.eGridCell,
                a = n.node,
                l = this.isExpandable();
              if (l) {
                var u = !!this.draggedFromHideOpenParents || a.expanded;
                Ke(e, !u), Ke(o, u);
              } else Uo(s), Ke(o, !1), Ke(e, !1);
              var p = i.isPivotMode(),
                c = p && r.leafGroup,
                d = l && !c,
                h = a.footer && -1 === a.level;
              this.addOrRemoveCssClass("ag-cell-expandable", d),
                this.addOrRemoveCssClass("ag-row-group", d),
                p
                  ? this.addOrRemoveCssClass("ag-pivot-leaf-group", c)
                  : h ||
                    this.addOrRemoveCssClass("ag-row-group-leaf-indent", !d);
            }),
            (e.prototype.destroy = function () {
              this.getContext().destroyBean(this.innerCellRenderer),
                t.prototype.destroy.call(this);
            }),
            (e.prototype.refresh = function () {
              return !1;
            }),
            (e.TEMPLATE =
              '<span class="ag-cell-wrapper">\n            <span class="ag-group-expanded" ref="eExpanded"></span>\n            <span class="ag-group-contracted" ref="eContracted"></span>\n            <span class="ag-group-checkbox ag-invisible" ref="eCheckbox"></span>\n            <span class="ag-group-value" ref="eValue"></span>\n            <span class="ag-group-child-count" ref="eChildCount"></span>\n        </span>'),
            Qr(
              [ut("expressionService")],
              e.prototype,
              "expressionService",
              void 0
            ),
            Qr(
              [ut("valueFormatterService")],
              e.prototype,
              "valueFormatterService",
              void 0
            ),
            Qr(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Qr(
              [ut("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            Qr([Kn("eExpanded")], e.prototype, "eExpanded", void 0),
            Qr([Kn("eContracted")], e.prototype, "eContracted", void 0),
            Qr([Kn("eCheckbox")], e.prototype, "eCheckbox", void 0),
            Qr([Kn("eValue")], e.prototype, "eValue", void 0),
            Qr([Kn("eChildCount")], e.prototype, "eChildCount", void 0),
            e
          );
        })(jn),
        $r = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Jr = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (o.refreshCount = 0), o;
          }
          return (
            $r(e, t),
            (e.prototype.init = function (t) {
              (this.eValue = this.queryForHtmlElement(
                ".ag-value-change-value"
              )),
                (this.eDelta = this.queryForHtmlElement(
                  ".ag-value-change-delta"
                )),
                this.refresh(t);
            }),
            (e.prototype.showDelta = function (t, e) {
              var o = Math.abs(e),
                n = t.formatValue(o),
                i = r(n) ? n : o,
                s = e >= 0;
              (this.eDelta.innerHTML = s ? "\u2191" + i : "\u2193" + i),
                je(this.eDelta, "ag-value-change-delta-up", s),
                je(this.eDelta, "ag-value-change-delta-down", !s);
            }),
            (e.prototype.setTimerToRemoveDelta = function () {
              var t = this;
              this.refreshCount++;
              var e = this.refreshCount;
              window.setTimeout(function () {
                e === t.refreshCount && t.hideDeltaValue();
              }, 2e3);
            }),
            (e.prototype.hideDeltaValue = function () {
              Be(this.eValue, "ag-value-change-value-highlight"),
                ro(this.eDelta);
            }),
            (e.prototype.refresh = function (t) {
              var e = t.value;
              return (
                e !== this.lastValue &&
                (r(t.valueFormatted)
                  ? (this.eValue.innerHTML = t.valueFormatted)
                  : r(t.value)
                  ? (this.eValue.innerHTML = e)
                  : ro(this.eValue),
                !this.filterManager.isSuppressFlashingCellsBecauseFiltering() &&
                  ("number" == typeof e &&
                    "number" == typeof this.lastValue &&
                    this.showDelta(t, e - this.lastValue),
                  this.lastValue &&
                    He(this.eValue, "ag-value-change-value-highlight"),
                  this.setTimerToRemoveDelta(),
                  (this.lastValue = e),
                  !0))
              );
            }),
            (e.TEMPLATE =
              '<span><span class="ag-value-change-delta"></span><span class="ag-value-change-value"></span></span>'),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([ut("filterManager")], e.prototype, "filterManager", void 0),
            e
          );
        })(jn),
        ti = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ei = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (
              (o.refreshCount = 0),
              (o.eCurrent = o.queryForHtmlElement(".ag-value-slide-current")),
              o
            );
          }
          return (
            ti(e, t),
            (e.prototype.init = function (t) {
              (this.params = t), this.refresh(t);
            }),
            (e.prototype.addSlideAnimation = function () {
              var t = this;
              this.refreshCount++;
              var e = this.refreshCount;
              this.ePrevious && this.getGui().removeChild(this.ePrevious),
                (this.ePrevious = ao(
                  '<span class="ag-value-slide-previous ag-value-slide-out"></span>'
                )),
                (this.ePrevious.innerHTML = this.eCurrent.innerHTML),
                this.getGui().insertBefore(this.ePrevious, this.eCurrent),
                window.setTimeout(function () {
                  e === t.refreshCount &&
                    He(t.ePrevious, "ag-value-slide-out-end");
                }, 50),
                window.setTimeout(function () {
                  e === t.refreshCount &&
                    (t.getGui().removeChild(t.ePrevious), (t.ePrevious = null));
                }, 3e3);
            }),
            (e.prototype.refresh = function (t) {
              var e = t.value;
              return (
                i(e) && (e = ""),
                e !== this.lastValue &&
                  !this.filterManager.isSuppressFlashingCellsBecauseFiltering() &&
                  (this.addSlideAnimation(),
                  (this.lastValue = e),
                  r(t.valueFormatted)
                    ? (this.eCurrent.innerHTML = t.valueFormatted)
                    : r(t.value)
                    ? (this.eCurrent.innerHTML = e)
                    : ro(this.eCurrent),
                  !0)
              );
            }),
            (e.TEMPLATE =
              '<span><span class="ag-value-slide-current"></span></span>'),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([ut("filterManager")], e.prototype, "filterManager", void 0),
            e
          );
        })(jn),
        oi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ni = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ri = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            oi(e, t),
            (e.prototype.init = function (t) {
              t.node.failedLoad ? this.setupFailed() : this.setupLoading();
            }),
            (e.prototype.setupFailed = function () {
              this.eLoadingText.innerText = "ERR";
            }),
            (e.prototype.setupLoading = function () {
              var t = yn("groupLoading", this.gridOptionsWrapper, null);
              t && this.eLoadingIcon.appendChild(t);
              var e = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eLoadingText.innerText = e("loadingOoo", "Loading");
            }),
            (e.prototype.refresh = function (t) {
              return !1;
            }),
            (e.TEMPLATE =
              '<div class="ag-loading">\n            <span class="ag-loading-icon" ref="eLoadingIcon"></span>\n            <span class="ag-loading-text" ref="eLoadingText"></span>\n        </div>'),
            ni([Kn("eLoadingIcon")], e.prototype, "eLoadingIcon", void 0),
            ni([Kn("eLoadingText")], e.prototype, "eLoadingText", void 0),
            e
          );
        })(jn),
        ii = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        si = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ai = (function (t) {
          function e() {
            var e =
              t.call(
                this,
                '<div class="ag-cell-edit-wrapper"><ag-select class="ag-cell-editor" ref="eSelect"></ag-select></div>'
              ) || this;
            return (e.startedByEnter = !1), e;
          }
          return (
            ii(e, t),
            (e.prototype.init = function (t) {
              var e = this;
              if (((this.focusAfterAttached = t.cellStartedEdit), i(t.values)))
                console.warn("AG Grid: no values found for select cellEditor");
              else {
                this.startedByEnter = t.keyPress === $n.ENTER;
                var o = !1;
                t.values.forEach(function (n) {
                  var r = { value: n },
                    i = e.valueFormatterService.formatValue(
                      t.column,
                      null,
                      null,
                      n
                    );
                  (r.text = null != i ? i : n),
                    e.eSelect.addOption(r),
                    (o = o || t.value === n);
                }),
                  o
                    ? this.eSelect.setValue(t.value, !0)
                    : t.values.length && this.eSelect.setValue(t.values[0], !0),
                  this.gridOptionsWrapper.isFullRowEdit() ||
                    this.eSelect.onValueChange(function () {
                      return t.stopEditing();
                    });
              }
            }),
            (e.prototype.afterGuiAttached = function () {
              this.focusAfterAttached &&
                this.eSelect.getFocusableElement().focus(),
                this.startedByEnter && this.eSelect.showPicker();
            }),
            (e.prototype.focusIn = function () {
              this.eSelect.getFocusableElement().focus();
            }),
            (e.prototype.getValue = function () {
              return this.eSelect.getValue();
            }),
            (e.prototype.isPopup = function () {
              return !1;
            }),
            si(
              [ut("valueFormatterService")],
              e.prototype,
              "valueFormatterService",
              void 0
            ),
            si([Kn("eSelect")], e.prototype, "eSelect", void 0),
            e
          );
        })(zn),
        li = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ui = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            li(e, t),
            (e.prototype.isPopup = function () {
              return !0;
            }),
            e
          );
        })(tr),
        pi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ci = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            pi(e, t),
            (e.prototype.isPopup = function () {
              return !0;
            }),
            e
          );
        })(ai),
        di = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        hi = (function (t) {
          function e() {
            return t.call(this, e.TEMPLATE) || this;
          }
          return (
            di(e, t),
            (e.prototype.init = function (t) {
              (this.params = t),
                (this.focusAfterAttached = t.cellStartedEdit),
                this.eTextArea
                  .setMaxLength(t.maxLength || 200)
                  .setCols(t.cols || 60)
                  .setRows(t.rows || 10),
                r(t.value) && this.eTextArea.setValue(t.value.toString(), !0),
                this.addGuiEventListener("keydown", this.onKeyDown.bind(this));
            }),
            (e.prototype.onKeyDown = function (t) {
              var e = t.which || t.keyCode;
              (e === $n.LEFT ||
                e === $n.UP ||
                e === $n.RIGHT ||
                e === $n.DOWN ||
                (t.shiftKey && e === $n.ENTER)) &&
                t.stopPropagation();
            }),
            (e.prototype.afterGuiAttached = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eTextArea.setInputAriaLabel(
                t("ariaInputEditor", "Input Editor")
              ),
                this.focusAfterAttached &&
                  this.eTextArea.getFocusableElement().focus();
            }),
            (e.prototype.getValue = function () {
              return this.params.parseValue(this.eTextArea.getValue());
            }),
            (e.TEMPLATE =
              '<div class="ag-large-text" tabindex="0">\n            <ag-input-text-area ref="eTextArea" class="ag-large-text-input"></ag-input-text-area>\n        </div>'),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([Kn("eTextArea")], e.prototype, "eTextArea", void 0),
            e
          );
        })(zn),
        fi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        gi = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        yi = (function (t) {
          function e() {
            return t.call(this, "numberFilter") || this;
          }
          return (
            fi(e, t),
            (e.prototype.mapRangeFromModel = function (t) {
              return { from: t.filter, to: t.filterTo };
            }),
            (e.prototype.getDefaultDebounceMs = function () {
              return 500;
            }),
            (e.prototype.resetUiToDefaults = function (e) {
              var o = this;
              return t.prototype.resetUiToDefaults
                .call(this, e)
                .then(function () {
                  [
                    o.eValueFrom1,
                    o.eValueFrom2,
                    o.eValueTo1,
                    o.eValueTo2,
                  ].forEach(function (t) {
                    return t.setValue(null, e);
                  }),
                    o.resetPlaceholder();
                });
            }),
            (e.prototype.setConditionIntoUi = function (t, e) {
              var o = e === Zn.One,
                n = o ? this.eValueTo1 : this.eValueTo2;
              (o ? this.eValueFrom1 : this.eValueFrom2).setValue(
                t ? "" + t.filter : null
              ),
                n.setValue(t ? "" + t.filterTo : null);
            }),
            (e.prototype.setValueFromFloatingFilter = function (t) {
              this.eValueFrom1.setValue(t),
                this.eValueTo1.setValue(null),
                this.eValueFrom2.setValue(null),
                this.eValueTo2.setValue(null);
            }),
            (e.prototype.comparator = function () {
              return function (t, e) {
                return t === e ? 0 : t < e ? 1 : -1;
              };
            }),
            (e.prototype.setParams = function (e) {
              this.numberFilterParams = e;
              var o = this.getAllowedCharPattern();
              if (o) {
                var n = { allowedCharPattern: o };
                this.resetTemplate({
                  eValueFrom1: n,
                  eValueTo1: n,
                  eValueFrom2: n,
                  eValueTo2: n,
                });
              }
              t.prototype.setParams.call(this, e),
                this.addValueChangedListeners();
            }),
            (e.prototype.addValueChangedListeners = function () {
              var t = this,
                e = function () {
                  return t.onUiChanged();
                };
              this.eValueFrom1.onValueChange(e),
                this.eValueTo1.onValueChange(e),
                this.eValueFrom2.onValueChange(e),
                this.eValueTo2.onValueChange(e);
            }),
            (e.prototype.resetPlaceholder = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = this.showValueTo(this.getCondition1Type()),
                o = this.showValueTo(this.getCondition2Type());
              this.eValueFrom1.setInputPlaceholder(
                this.translate(e ? "inRangeStart" : "filterOoo")
              ),
                this.eValueFrom1.setInputAriaLabel(
                  e
                    ? t("ariaFilterFromValue", "Filter from value")
                    : t("ariaFilterValue", "Filter Value")
                ),
                this.eValueTo1.setInputPlaceholder(
                  this.translate("inRangeEnd")
                ),
                this.eValueTo1.setInputAriaLabel(
                  t("ariaFilterToValue", "Filter to Value")
                ),
                this.eValueFrom2.setInputPlaceholder(
                  this.translate(o ? "inRangeStart" : "filterOoo")
                ),
                this.eValueFrom2.setInputAriaLabel(
                  o
                    ? t("ariaFilterFromValue", "Filter from value")
                    : t("ariaFilterValue", "Filter Value")
                ),
                this.eValueTo2.setInputPlaceholder(
                  this.translate("inRangeEnd")
                ),
                this.eValueTo2.setInputAriaLabel(
                  t("ariaFilterToValue", "Filter to Value")
                );
            }),
            (e.prototype.afterGuiAttached = function (e) {
              t.prototype.afterGuiAttached.call(this, e),
                this.resetPlaceholder(),
                (e && e.suppressFocus) ||
                  this.eValueFrom1.getInputElement().focus();
            }),
            (e.prototype.getDefaultFilterOptions = function () {
              return e.DEFAULT_FILTER_OPTIONS;
            }),
            (e.prototype.createValueTemplate = function (t) {
              var e = t === Zn.One ? "1" : "2",
                o = this.getAllowedCharPattern()
                  ? "ag-input-text-field"
                  : "ag-input-number-field";
              return (
                '\n            <div class="ag-filter-body" ref="eCondition' +
                e +
                'Body" role="presentation">\n                <' +
                o +
                ' class="ag-filter-from ag-filter-filter" ref="eValueFrom' +
                e +
                '"></' +
                o +
                ">\n                <" +
                o +
                ' class="ag-filter-to ag-filter-filter" ref="eValueTo' +
                e +
                '"></' +
                o +
                ">\n            </div>"
              );
            }),
            (e.prototype.isConditionUiComplete = function (t) {
              var e = t === Zn.One,
                o = e ? this.getCondition1Type() : this.getCondition2Type();
              if (o === hr.EMPTY) return !1;
              if (this.doesFilterHaveHiddenInput(o)) return !0;
              var n = e ? this.eValueTo1 : this.eValueTo2;
              return (
                null !=
                  this.stringToFloat(
                    (e ? this.eValueFrom1 : this.eValueFrom2).getValue()
                  ) &&
                (!this.showValueTo(o) ||
                  null != this.stringToFloat(n.getValue()))
              );
            }),
            (e.prototype.areSimpleModelsEqual = function (t, e) {
              return (
                t.filter === e.filter &&
                t.filterTo === e.filterTo &&
                t.type === e.type
              );
            }),
            (e.prototype.getFilterType = function () {
              return "number";
            }),
            (e.prototype.stringToFloat = function (t) {
              if ("number" == typeof t) return t;
              var e = n(t);
              return (
                null != e && "" === e.trim() && (e = null),
                this.numberFilterParams.numberParser
                  ? this.numberFilterParams.numberParser(e)
                  : null == e || "-" === e.trim()
                  ? null
                  : parseFloat(e)
              );
            }),
            (e.prototype.createCondition = function (t) {
              var e = t === Zn.One,
                o = e ? this.getCondition1Type() : this.getCondition2Type(),
                n = this.stringToFloat(
                  (e ? this.eValueFrom1 : this.eValueFrom2).getValue()
                ),
                r = { filterType: this.getFilterType(), type: o };
              if (
                !this.doesFilterHaveHiddenInput(o) &&
                ((r.filter = n), this.showValueTo(o))
              ) {
                var i = this.stringToFloat(
                  (e ? this.eValueTo1 : this.eValueTo2).getValue()
                );
                r.filterTo = i;
              }
              return r;
            }),
            (e.prototype.updateUiVisibility = function () {
              t.prototype.updateUiVisibility.call(this),
                this.resetPlaceholder();
              var e = this.getCondition1Type(),
                o = this.getCondition2Type();
              Ke(this.eValueFrom1.getGui(), this.showValueFrom(e)),
                Ke(this.eValueTo1.getGui(), this.showValueTo(e)),
                Ke(this.eValueFrom2.getGui(), this.showValueFrom(o)),
                Ke(this.eValueTo2.getGui(), this.showValueTo(o));
            }),
            (e.prototype.getAllowedCharPattern = function () {
              return (
                (this.numberFilterParams || {}).allowedCharPattern ||
                (xe() || Ae() ? null : "\\d\\-\\.")
              );
            }),
            (e.DEFAULT_FILTER_OPTIONS = [
              gr.EQUALS,
              gr.NOT_EQUAL,
              gr.LESS_THAN,
              gr.LESS_THAN_OR_EQUAL,
              gr.GREATER_THAN,
              gr.GREATER_THAN_OR_EQUAL,
              gr.IN_RANGE,
            ]),
            gi([Kn("eValueFrom1")], e.prototype, "eValueFrom1", void 0),
            gi([Kn("eValueTo1")], e.prototype, "eValueTo1", void 0),
            gi([Kn("eValueFrom2")], e.prototype, "eValueFrom2", void 0),
            gi([Kn("eValueTo2")], e.prototype, "eValueTo2", void 0),
            e
          );
        })(gr),
        mi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        vi = (function (t) {
          function e() {
            return t.call(this) || this;
          }
          return (
            mi(e, t),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.init = function (t) {
              var o = this.gridOptionsWrapper.getOverlayLoadingTemplate()
                  ? this.gridOptionsWrapper.getOverlayLoadingTemplate()
                  : e.DEFAULT_LOADING_OVERLAY_TEMPLATE,
                n = this.gridOptionsWrapper.getLocaleTextFunc(),
                r = o.replace("[LOADING...]", n("loadingOoo", "Loading..."));
              this.setTemplate(r);
            }),
            (e.DEFAULT_LOADING_OVERLAY_TEMPLATE =
              '<span class="ag-overlay-loading-center">[LOADING...]</span>'),
            e
          );
        })(jn),
        Ci = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wi = (function (t) {
          function e() {
            return t.call(this) || this;
          }
          return (
            Ci(e, t),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.init = function (t) {
              var o = this.gridOptionsWrapper.getOverlayNoRowsTemplate()
                  ? this.gridOptionsWrapper.getOverlayNoRowsTemplate()
                  : e.DEFAULT_NO_ROWS_TEMPLATE,
                n = this.gridOptionsWrapper.getLocaleTextFunc(),
                r = o.replace(
                  "[NO_ROWS_TO_SHOW]",
                  n("noRowsToShow", "No Rows To Show")
                );
              this.setTemplate(r);
            }),
            (e.DEFAULT_NO_ROWS_TEMPLATE =
              '<span class="ag-overlay-no-rows-center">[NO_ROWS_TO_SHOW]</span>'),
            e
          );
        })(jn),
        bi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ei = (function (t) {
          function e() {
            return t.call(this, '<div class="ag-tooltip"></div>') || this;
          }
          return (
            bi(e, t),
            (e.prototype.init = function (t) {
              var e = t.value;
              this.getGui().innerHTML = e;
            }),
            e
          );
        })(zn),
        Si = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Oi = (function (t) {
          function e() {
            return (
              t.call(
                this,
                '\n            <div class="ag-filter-filter">\n                <ag-input-text-field class="ag-date-filter" ref="eDateInput"></ag-input-text-field>\n            </div>'
              ) || this
            );
          }
          return (
            Si(e, t),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.init = function (t) {
              var e = this.eDateInput.getInputElement();
              this.shouldUseBrowserDatePicker(t) &&
                (Te()
                  ? console.warn(
                      "ag-grid: browserDatePicker is specified to true, but it is not supported in IE 11; reverting to text date picker"
                    )
                  : (e.type = "date")),
                this.addManagedListener(e, "mousedown", function () {
                  return e.focus();
                }),
                this.addManagedListener(
                  this.eDateInput.getInputElement(),
                  "input",
                  function (e) {
                    e.target === document.activeElement && t.onDateChanged();
                  }
                );
            }),
            (e.prototype.getDate = function () {
              return sn(this.eDateInput.getValue());
            }),
            (e.prototype.setDate = function (t) {
              this.eDateInput.setValue(rn(t, !1));
            }),
            (e.prototype.setInputPlaceholder = function (t) {
              this.eDateInput.setInputPlaceholder(t);
            }),
            (e.prototype.afterGuiAttached = function (t) {
              (t && t.suppressFocus) ||
                this.eDateInput.getInputElement().focus();
            }),
            (e.prototype.shouldUseBrowserDatePicker = function (t) {
              return t.filterParams && null != t.filterParams.browserDatePicker
                ? t.filterParams.browserDatePicker
                : xe() || Fe();
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([Kn("eDateInput")], e.prototype, "eDateInput", void 0),
            e
          );
        })(jn),
        _i = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ri = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            _i(e, t),
            (e.prototype.getDefaultDebounceMs = function () {
              return 0;
            }),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.getTextFromModel = function (t) {
              if (!t) return null;
              if (t.operator) {
                var e = t,
                  o = this.conditionToString(e.condition1),
                  n = this.conditionToString(e.condition2);
                return o + " " + e.operator + " " + n;
              }
              var r = t,
                i = this.optionsFactory.getCustomOption(r.type);
              return i
                ? (this.gridOptionsWrapper.getLocaleTextFunc()(
                    i.displayKey,
                    i.displayName
                  ),
                  i.displayName)
                : this.conditionToString(r);
            }),
            (e.prototype.isEventFromFloatingFilter = function (t) {
              return t && t.afterFloatingFilter;
            }),
            (e.prototype.getLastType = function () {
              return this.lastType;
            }),
            (e.prototype.setLastTypeFromModel = function (t) {
              this.lastType = t
                ? (t.operator ? t.condition1 : t).type
                : this.optionsFactory.getDefaultOption();
            }),
            (e.prototype.canWeEditAfterModelFromParentFilter = function (t) {
              return t
                ? !t.operator && this.isTypeEditable(t.type)
                : this.isTypeEditable(this.lastType);
            }),
            (e.prototype.init = function (t) {
              (this.optionsFactory = new or()),
                this.optionsFactory.init(
                  t.filterParams,
                  this.getDefaultFilterOptions()
                ),
                (this.lastType = this.optionsFactory.getDefaultOption());
              var e = this.isTypeEditable(this.lastType);
              this.setEditable(e);
            }),
            (e.prototype.doesFilterHaveHiddenInput = function (t) {
              var e = this.optionsFactory.getCustomOption(t);
              return e && e.hideFilterInput;
            }),
            (e.prototype.isTypeEditable = function (t) {
              return (
                !!t &&
                !this.doesFilterHaveHiddenInput(t) &&
                t !== hr.IN_RANGE &&
                t !== hr.EMPTY
              );
            }),
            e
          );
        })(jn),
        Pi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ti = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ai = (function (t) {
          function e() {
            return (
              t.call(
                this,
                '\n            <div class="ag-floating-filter-input" role="presentation">\n                <ag-input-text-field ref="eReadOnlyText"></ag-input-text-field>\n                <div ref="eDateWrapper" style="display: flex;"></div>\n            </div>'
              ) || this
            );
          }
          return (
            Pi(e, t),
            (e.prototype.getDefaultFilterOptions = function () {
              return vr.DEFAULT_FILTER_OPTIONS;
            }),
            (e.prototype.conditionToString = function (t) {
              var e = t.type,
                o = sn(t.dateFrom);
              if (e === hr.IN_RANGE) {
                var n = sn(t.dateTo);
                return rn(o, !1) + "-" + rn(n, !1);
              }
              return null == o ? "" + e : "" + rn(o, !1);
            }),
            (e.prototype.init = function (e) {
              t.prototype.init.call(this, e),
                (this.params = e),
                this.createDateComponent();
              var o = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eReadOnlyText
                .setDisabled(!0)
                .setInputAriaLabel(
                  o("ariaDateFilterInput", "Date Filter Input")
                );
            }),
            (e.prototype.setEditable = function (t) {
              Ke(this.eDateWrapper, t), Ke(this.eReadOnlyText.getGui(), !t);
            }),
            (e.prototype.onParentModelChanged = function (e, o) {
              if (!this.isEventFromFloatingFilter(o)) {
                t.prototype.setLastTypeFromModel.call(this, e);
                var n = this.canWeEditAfterModelFromParentFilter(e);
                this.setEditable(n),
                  n
                    ? (this.dateComp.setDate(e ? sn(e.dateFrom) : null),
                      this.eReadOnlyText.setValue(""))
                    : (this.eReadOnlyText.setValue(this.getTextFromModel(e)),
                      this.dateComp.setDate(null));
              }
            }),
            (e.prototype.onDateChanged = function () {
              var t = this,
                e = rn(this.dateComp.getDate());
              this.params.parentFilterInstance(function (o) {
                o && o.onFloatingFilterChanged(t.getLastType(), e);
              });
            }),
            (e.prototype.createDateComponent = function () {
              var t = this,
                e = ur.getDebounceMs(
                  this.params.filterParams,
                  this.getDefaultDebounceMs()
                ),
                o = {
                  onDateChanged: et(this.onDateChanged.bind(this), e),
                  filterParams: this.params.column.getColDef().filterParams,
                };
              (this.dateComp = new er(
                this.getContext(),
                this.userComponentFactory,
                o,
                this.eDateWrapper
              )),
                this.addDestroyFunc(function () {
                  return t.dateComp.destroy();
                });
            }),
            Ti(
              [ut("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            Ti([Kn("eReadOnlyText")], e.prototype, "eReadOnlyText", void 0),
            Ti([Kn("eDateWrapper")], e.prototype, "eDateWrapper", void 0),
            e
          );
        })(Ri),
        Di = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        xi = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Fi = (function (t) {
          function e() {
            return t.call(this, "textFilter") || this;
          }
          return (
            Di(e, t),
            (e.trimInput = function (t) {
              var e = t && t.trim();
              return "" === e ? t : e;
            }),
            (e.prototype.getDefaultDebounceMs = function () {
              return 500;
            }),
            (e.prototype.getCleanValue = function (t) {
              var o = n(t.getValue());
              return this.textFilterParams.trimInput ? e.trimInput(o) : o;
            }),
            (e.prototype.addValueChangedListeners = function () {
              var t = this,
                e = function () {
                  return t.onUiChanged();
                };
              this.eValue1.onValueChange(e), this.eValue2.onValueChange(e);
            }),
            (e.prototype.setParams = function (o) {
              t.prototype.setParams.call(this, o),
                (this.textFilterParams = o),
                (this.comparator =
                  this.textFilterParams.textCustomComparator ||
                  e.DEFAULT_COMPARATOR),
                (this.formatter =
                  this.textFilterParams.textFormatter ||
                  (this.textFilterParams.caseSensitive
                    ? e.DEFAULT_FORMATTER
                    : e.DEFAULT_LOWERCASE_FORMATTER)),
                this.addValueChangedListeners();
            }),
            (e.prototype.setConditionIntoUi = function (t, e) {
              (e === Zn.One ? this.eValue1 : this.eValue2).setValue(
                t ? t.filter : null
              );
            }),
            (e.prototype.createCondition = function (t) {
              var e = t === Zn.One,
                o = e ? this.getCondition1Type() : this.getCondition2Type(),
                n = e ? this.eValue1 : this.eValue2,
                r = this.getCleanValue(n);
              n.setValue(r, !0);
              var i = { filterType: this.getFilterType(), type: o };
              return this.doesFilterHaveHiddenInput(o) || (i.filter = r), i;
            }),
            (e.prototype.getFilterType = function () {
              return "text";
            }),
            (e.prototype.areSimpleModelsEqual = function (t, e) {
              return t.filter === e.filter && t.type === e.type;
            }),
            (e.prototype.resetUiToDefaults = function (e) {
              var o = this;
              return t.prototype.resetUiToDefaults
                .call(this, e)
                .then(function () {
                  o.forEachInput(function (t) {
                    return t.setValue(null, e);
                  }),
                    o.resetPlaceholder();
                });
            }),
            (e.prototype.resetPlaceholder = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = this.translate("filterOoo");
              this.forEachInput(function (o) {
                o.setInputPlaceholder(e),
                  o.setInputAriaLabel(t("ariaFilterValue", "Filter Value"));
              });
            }),
            (e.prototype.forEachInput = function (t) {
              T([this.eValue1, this.eValue2], t);
            }),
            (e.prototype.setValueFromFloatingFilter = function (t) {
              this.eValue1.setValue(t), this.eValue2.setValue(null);
            }),
            (e.prototype.getDefaultFilterOptions = function () {
              return e.DEFAULT_FILTER_OPTIONS;
            }),
            (e.prototype.createValueTemplate = function (t) {
              var e = t === Zn.One ? "1" : "2";
              return (
                '\n            <div class="ag-filter-body" ref="eCondition' +
                e +
                'Body" role="presentation">\n                <ag-input-text-field class="ag-filter-filter" ref="eValue' +
                e +
                '"></ag-input-text-field>\n            </div>'
              );
            }),
            (e.prototype.updateUiVisibility = function () {
              t.prototype.updateUiVisibility.call(this),
                Ke(
                  this.eCondition1Body,
                  this.showValueFrom(this.getCondition1Type())
                ),
                Ke(
                  this.eCondition2Body,
                  this.isCondition2Enabled() &&
                    this.showValueFrom(this.getCondition2Type())
                );
            }),
            (e.prototype.afterGuiAttached = function (e) {
              t.prototype.afterGuiAttached.call(this, e),
                this.resetPlaceholder(),
                (e && e.suppressFocus) ||
                  this.eValue1.getInputElement().focus();
            }),
            (e.prototype.isConditionUiComplete = function (t) {
              var e = t === Zn.One,
                o = e ? this.getCondition1Type() : this.getCondition2Type();
              return (
                o !== hr.EMPTY &&
                (!!this.doesFilterHaveHiddenInput(o) ||
                  null != this.getCleanValue(e ? this.eValue1 : this.eValue2))
              );
            }),
            (e.prototype.individualConditionPasses = function (t, e) {
              var o = e.filter,
                n = e.type,
                r = this.textFilterParams.valueGetter(t.node),
                i = this.formatter(r),
                s = this.optionsFactory.getCustomOption(n);
              if (s && (null != o || s.hideFilterInput)) return s.test(o, i);
              if (null == r) return n === hr.NOT_EQUAL || n === hr.NOT_CONTAINS;
              var a = this.formatter(o);
              return this.comparator(n, i, a);
            }),
            (e.DEFAULT_FILTER_OPTIONS = [
              hr.CONTAINS,
              hr.NOT_CONTAINS,
              hr.EQUALS,
              hr.NOT_EQUAL,
              hr.STARTS_WITH,
              hr.ENDS_WITH,
            ]),
            (e.DEFAULT_FORMATTER = function (t) {
              return t;
            }),
            (e.DEFAULT_LOWERCASE_FORMATTER = function (t) {
              return null == t ? null : t.toString().toLowerCase();
            }),
            (e.DEFAULT_COMPARATOR = function (t, o, n) {
              switch (t) {
                case e.CONTAINS:
                  return o.indexOf(n) >= 0;
                case e.NOT_CONTAINS:
                  return o.indexOf(n) < 0;
                case e.EQUALS:
                  return o === n;
                case e.NOT_EQUAL:
                  return o != n;
                case e.STARTS_WITH:
                  return 0 === o.indexOf(n);
                case e.ENDS_WITH:
                  var r = o.lastIndexOf(n);
                  return r >= 0 && r === o.length - n.length;
                default:
                  return console.warn("invalid filter type " + t), !1;
              }
            }),
            xi([Kn("eValue1")], e.prototype, "eValue1", void 0),
            xi([Kn("eValue2")], e.prototype, "eValue2", void 0),
            e
          );
        })(hr),
        Ni = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Mi = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ii = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ni(e, t),
            (e.prototype.postConstruct = function () {
              this.setTemplate(
                '\n            <div class="ag-floating-filter-input" role="presentation">\n                <ag-input-text-field ref="eFloatingFilterInput"></ag-input-text-field>\n            </div>'
              );
            }),
            (e.prototype.getDefaultDebounceMs = function () {
              return 500;
            }),
            (e.prototype.onParentModelChanged = function (t, e) {
              this.isEventFromFloatingFilter(e) ||
                (this.setLastTypeFromModel(t),
                this.eFloatingFilterInput.setValue(this.getTextFromModel(t)),
                this.setEditable(this.canWeEditAfterModelFromParentFilter(t)));
            }),
            (e.prototype.init = function (e) {
              t.prototype.init.call(this, e),
                (this.params = e),
                (this.applyActive = ur.isUseApplyButton(
                  this.params.filterParams
                ));
              var o = ur.getDebounceMs(
                  this.params.filterParams,
                  this.getDefaultDebounceMs()
                ),
                n = et(this.syncUpWithParentFilter.bind(this), o),
                r = this.eFloatingFilterInput.getGui();
              this.addManagedListener(r, "input", n),
                this.addManagedListener(r, "keypress", n),
                this.addManagedListener(r, "keydown", n);
              var i = e.column.getDefinition();
              i.filterParams &&
                i.filterParams.filterOptions &&
                1 === i.filterParams.filterOptions.length &&
                "inRange" === i.filterParams.filterOptions[0] &&
                this.eFloatingFilterInput.setDisabled(!0);
              var s = this.columnController.getDisplayNameForColumn(
                  e.column,
                  "header",
                  !0
                ),
                a = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eFloatingFilterInput.setInputAriaLabel(
                s + " " + a("ariaFilterInput", "Filter Input")
              );
            }),
            (e.prototype.syncUpWithParentFilter = function (t) {
              var e = this,
                o = vn(t, $n.ENTER);
              if (!this.applyActive || o) {
                var n = this.eFloatingFilterInput.getValue();
                this.params.filterParams.trimInput &&
                  ((n = Fi.trimInput(n)),
                  this.eFloatingFilterInput.setValue(n, !0)),
                  this.params.parentFilterInstance(function (t) {
                    t && t.onFloatingFilterChanged(e.getLastType(), n);
                  });
              }
            }),
            (e.prototype.setEditable = function (t) {
              this.eFloatingFilterInput.setDisabled(!t);
            }),
            Mi(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Mi(
              [Kn("eFloatingFilterInput")],
              e.prototype,
              "eFloatingFilterInput",
              void 0
            ),
            Mi([st], e.prototype, "postConstruct", null),
            e
          );
        })(Ri),
        Li = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Gi = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Li(e, t),
            (e.prototype.getDefaultFilterOptions = function () {
              return yi.DEFAULT_FILTER_OPTIONS;
            }),
            (e.prototype.conditionToString = function (t) {
              return t.type == hr.IN_RANGE
                ? t.filter + "-" + t.filterTo
                : null != t.filter
                ? "" + t.filter
                : "" + t.type;
            }),
            e
          );
        })(Ii),
        ki = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Vi = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            ki(e, t),
            (e.prototype.conditionToString = function (t) {
              return null != t.filter ? "" + t.filter : "" + t.type;
            }),
            (e.prototype.getDefaultFilterOptions = function () {
              return Fi.DEFAULT_FILTER_OPTIONS;
            }),
            e
          );
        })(Ii),
        Wi = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Hi = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.DEFAULT = 0)] = "DEFAULT"),
          (t[(t.REGISTERED = 1)] = "REGISTERED");
      })(Yr || (Yr = {}));
      var Bi = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.agGridDefaults = {
                agDateInput: Oi,
                agColumnHeader: Er,
                agColumnGroupHeader: _r,
                agTextColumnFloatingFilter: Vi,
                agNumberColumnFloatingFilter: Gi,
                agDateColumnFloatingFilter: Ai,
                agAnimateShowChangeCellRenderer: Jr,
                agAnimateSlideCellRenderer: ei,
                agGroupCellRenderer: Zr,
                agGroupRowRenderer: Zr,
                agLoadingCellRenderer: ri,
                agCellEditor: tr,
                agTextCellEditor: tr,
                agSelectCellEditor: ai,
                agPopupTextCellEditor: ui,
                agPopupSelectCellEditor: ci,
                agLargeTextCellEditor: hi,
                agTextColumnFilter: Fi,
                agNumberColumnFilter: yi,
                agDateColumnFilter: vr,
                agLoadingOverlay: vi,
                agNoRowsOverlay: wi,
                agTooltipComponent: Ei,
              }),
              (e.agDeprecatedNames = {
                set: {
                  newComponentName: "agSetColumnFilter",
                  propertyHolder: "filter",
                },
                text: {
                  newComponentName: "agTextColumnFilter",
                  propertyHolder: "filter",
                },
                number: {
                  newComponentName: "agNumberColumnFilter",
                  propertyHolder: "filter",
                },
                date: {
                  newComponentName: "agDateColumnFilter",
                  propertyHolder: "filter",
                },
                group: {
                  newComponentName: "agGroupCellRenderer",
                  propertyHolder: "cellRenderer",
                },
                animateShowChange: {
                  newComponentName: "agAnimateShowChangeCellRenderer",
                  propertyHolder: "cellRenderer",
                },
                animateSlide: {
                  newComponentName: "agAnimateSlideCellRenderer",
                  propertyHolder: "cellRenderer",
                },
                select: {
                  newComponentName: "agSelectCellEditor",
                  propertyHolder: "cellEditor",
                },
                largeText: {
                  newComponentName: "agLargeTextCellEditor",
                  propertyHolder: "cellEditor",
                },
                popupSelect: {
                  newComponentName: "agPopupSelectCellEditor",
                  propertyHolder: "cellEditor",
                },
                popupText: {
                  newComponentName: "agPopupTextCellEditor",
                  propertyHolder: "cellEditor",
                },
                richSelect: {
                  newComponentName: "agRichSelectCellEditor",
                  propertyHolder: "cellEditor",
                },
                headerComponent: {
                  newComponentName: "agColumnHeader",
                  propertyHolder: "headerComponent",
                },
              }),
              (e.jsComponents = {}),
              (e.frameworkComponents = {}),
              e
            );
          }
          return (
            Wi(e, t),
            (e.prototype.init = function () {
              var t = this;
              null != this.gridOptions.components &&
                F(this.gridOptions.components, function (e, o) {
                  return t.registerComponent(e, o);
                }),
                null != this.gridOptions.frameworkComponents &&
                  F(this.gridOptions.frameworkComponents, function (e, o) {
                    return t.registerFwComponent(e, o);
                  });
            }),
            (e.prototype.registerDefaultComponent = function (t, e) {
              var o = this.translateIfDeprecated(t);
              this.agGridDefaults[o]
                ? console.error(
                    "Trying to overwrite a default component. You should call registerComponent"
                  )
                : (this.agGridDefaults[o] = e);
            }),
            (e.prototype.registerComponent = function (t, e) {
              var o = this.translateIfDeprecated(t);
              this.frameworkComponents[o]
                ? console.error(
                    "Trying to register a component that you have already registered for frameworks: " +
                      o
                  )
                : (this.jsComponents[o] = e);
            }),
            (e.prototype.registerFwComponent = function (t, e) {
              var o = this.translateIfDeprecated(t);
              this.jsComponents[o]
                ? console.error(
                    "Trying to register a component that you have already registered for plain javascript: " +
                      o
                  )
                : (this.frameworkComponents[o] = e);
            }),
            (e.prototype.retrieve = function (t) {
              var e = this.translateIfDeprecated(t),
                o = this.frameworkComponents[e];
              if (o)
                return {
                  componentFromFramework: !0,
                  component: o,
                  source: Yr.REGISTERED,
                };
              var n = this.jsComponents[e];
              if (n)
                return {
                  componentFromFramework: !1,
                  component: n,
                  source: Yr.REGISTERED,
                };
              var r = this.agGridDefaults[e];
              return r
                ? {
                    componentFromFramework: !1,
                    component: r,
                    source: Yr.DEFAULT,
                  }
                : (Object.keys(this.agGridDefaults).indexOf(e) < 0 &&
                    console.warn(
                      "AG Grid: Looking for component [" +
                        e +
                        "] but it wasn't found."
                    ),
                  null);
            }),
            (e.prototype.translateIfDeprecated = function (t) {
              var e = this.agDeprecatedNames[t];
              return null != e
                ? (q(function () {
                    console.warn(
                      "ag-grid. Since v15.0 component names have been renamed to be namespaced. You should rename " +
                        e.propertyHolder +
                        ":" +
                        t +
                        " to " +
                        e.propertyHolder +
                        ":" +
                        e.newComponentName
                    );
                  }, "DEPRECATE_COMPONENT_" + t),
                  e.newComponentName)
                : t;
            }),
            Hi([ut("gridOptions")], e.prototype, "gridOptions", void 0),
            Hi([st], e.prototype, "init", null),
            Hi([lt("userComponentRegistry")], e)
          );
        })(Ht),
        ji = (function () {
          function t() {}
          return (
            (t.parse = function (e) {
              if (!e) return null;
              if (!0 === e)
                return {
                  toolPanels: [t.DEFAULT_COLUMN_COMP, t.DEFAULT_FILTER_COMP],
                  defaultToolPanel: "columns",
                };
              if ("string" == typeof e) return t.parse([e]);
              if (Array.isArray(e)) {
                var o = [];
                return (
                  e.forEach(function (e) {
                    var n = t.DEFAULT_BY_KEY[e];
                    n
                      ? o.push(n)
                      : console.warn(
                          "ag-grid: the key " +
                            e +
                            " is not a valid key for specifying a tool panel, valid keys are: " +
                            Object.keys(t.DEFAULT_BY_KEY).join(",")
                        );
                  }),
                  0 === o.length
                    ? null
                    : { toolPanels: o, defaultToolPanel: o[0].id }
                );
              }
              return {
                toolPanels: t.parseComponents(e.toolPanels),
                defaultToolPanel: e.defaultToolPanel,
                hiddenByDefault: e.hiddenByDefault,
                position: e.position,
              };
            }),
            (t.parseComponents = function (e) {
              var o = [];
              return e
                ? (e.forEach(function (e) {
                    var n = null;
                    if ("string" == typeof e) {
                      var r = t.DEFAULT_BY_KEY[e];
                      if (!r)
                        return void console.warn(
                          "ag-grid: the key " +
                            e +
                            " is not a valid key for specifying a tool panel, valid keys are: " +
                            Object.keys(t.DEFAULT_BY_KEY).join(",")
                        );
                      n = r;
                    } else n = e;
                    o.push(n);
                  }),
                  o)
                : o;
            }),
            (t.DEFAULT_BY_KEY = {
              columns: (t.DEFAULT_COLUMN_COMP = {
                id: "columns",
                labelDefault: "Columns",
                labelKey: "columns",
                iconKey: "columns",
                toolPanel: "agColumnsToolPanel",
              }),
              filters: (t.DEFAULT_FILTER_COMP = {
                id: "filters",
                labelDefault: "Filters",
                labelKey: "filters",
                iconKey: "filter",
                toolPanel: "agFiltersToolPanel",
              }),
            }),
            t
          );
        })(),
        Ui = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        zi = function (t, e) {
          return function (o, n) {
            e(o, n, t);
          };
        },
        Ki = function () {
          for (var t = 0, e = 0, o = arguments.length; e < o; e++)
            t += arguments[e].length;
          var n = Array(t),
            r = 0;
          for (e = 0; e < o; e++)
            for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
              n[r] = i[s];
          return n;
        };
      function Yi(t) {
        return !0 === t || "true" === t;
      }
      function Xi(t, e) {
        var o = parseInt(t, 10);
        return se(o) && o > 0 ? o : e;
      }
      var qi,
        Qi,
        Zi = (function () {
          function t() {
            (this.propertyEventService = new mt()),
              (this.domDataKey = "__AG_" + Math.random().toString()),
              (this.layoutElements = []),
              (this.destroyed = !1);
          }
          var o;
          return (
            (o = t),
            (t.prototype.agWire = function (t, e) {
              (this.gridOptions.api = t),
                (this.gridOptions.columnApi = e),
                this.checkForDeprecated(),
                this.checkForViolations();
            }),
            (t.prototype.destroy = function () {
              (this.gridOptions.api = null),
                (this.gridOptions.columnApi = null),
                this.removeEventListener(
                  o.PROP_DOM_LAYOUT,
                  this.updateLayoutClassesListener
                ),
                (this.destroyed = !0);
            }),
            (t.prototype.init = function () {
              var t = this;
              !0 !== this.gridOptions.suppressPropertyNamesCheck &&
                (this.checkGridOptionsProperties(),
                this.checkColumnDefProperties()),
                null != this.gridOptions.sideBar &&
                  (this.gridOptions.sideBar = ji.parse(
                    this.gridOptions.sideBar
                  ));
              var n = this.useAsyncEvents();
              if (
                (this.eventService.addGlobalListener(
                  this.globalEventHandler.bind(this),
                  n
                ),
                this.isGroupSelectsChildren() &&
                  this.isSuppressParentsInRowNodes() &&
                  console.warn(
                    "AG Grid: 'groupSelectsChildren' does not work with 'suppressParentsInRowNodes', this selection method needs the part in rowNode to work"
                  ),
                this.isGroupSelectsChildren() &&
                  (this.isRowSelectionMulti() ||
                    console.warn(
                      "AG Grid: rowSelection must be 'multiple' for groupSelectsChildren to make sense"
                    ),
                  this.isRowModelServerSide() &&
                    console.warn(
                      "AG Grid: group selects children is NOT support for Server Side Row Model. This is because the rows are lazy loaded, so selecting a group is not possible asthe grid has no way of knowing what the children are."
                    )),
                this.isGroupRemoveSingleChildren() &&
                  this.isGroupHideOpenParents() &&
                  console.warn(
                    "AG Grid: groupRemoveSingleChildren and groupHideOpenParents do not work with each other, you need to pick one. And don't ask us how to us these together on our support forum either you will get the same answer!"
                  ),
                this.isRowModelServerSide())
              ) {
                var i = function (t) {
                  return (
                    "AG Grid: '" +
                    t +
                    "' is not supported on the Server-Side Row Model"
                  );
                };
                r(this.gridOptions.groupDefaultExpanded) &&
                  console.warn(i("groupDefaultExpanded")),
                  r(this.gridOptions.groupDefaultExpanded) &&
                    console.warn(i("groupIncludeFooter")),
                  r(this.gridOptions.groupDefaultExpanded) &&
                    console.warn(i("groupIncludeTotalFooter"));
              }
              this.isEnableRangeSelection() &&
                Ct.assertRegistered(
                  e.ModuleNames.RangeSelectionModule,
                  "enableRangeSelection"
                ),
                this.isEnableRangeSelection() ||
                  (!this.isEnableRangeHandle() && !this.isEnableFillHandle()) ||
                  console.warn(
                    "AG Grid: 'enableRangeHandle' and 'enableFillHandle' will not work unless 'enableRangeSelection' is set to true"
                  );
              var s = function (e) {
                t.gridOptions.icons &&
                  t.gridOptions.icons[e] &&
                  console.warn(
                    "gridOptions.icons." +
                      e +
                      " is no longer supported. For information on how to style checkboxes and radio buttons, see https://www.ag-grid.com/javascript-grid-icons/"
                  );
              };
              s("radioButtonOff"),
                s("radioButtonOn"),
                s("checkboxChecked"),
                s("checkboxUnchecked"),
                s("checkboxIndeterminate"),
                (this.updateLayoutClassesListener =
                  this.updateLayoutClasses.bind(this)),
                this.addEventListener(
                  o.PROP_DOM_LAYOUT,
                  this.updateLayoutClassesListener
                ),
                this.getScrollbarWidth();
            }),
            (t.prototype.checkColumnDefProperties = function () {
              var t = this;
              null != this.gridOptions.columnDefs &&
                this.gridOptions.columnDefs.forEach(function (e) {
                  var o = Object.getOwnPropertyNames(e),
                    n = Ki(ve.ALL_PROPERTIES, ve.FRAMEWORK_PROPERTIES);
                  t.checkProperties(
                    o,
                    n,
                    n,
                    "colDef",
                    "https://www.ag-grid.com/javascript-grid-column-properties/"
                  );
                });
            }),
            (t.prototype.checkGridOptionsProperties = function () {
              var t = Object.getOwnPropertyNames(this.gridOptions),
                e = Ki(
                  ge.ALL_PROPERTIES,
                  ge.FRAMEWORK_PROPERTIES,
                  d(zt).map(function (t) {
                    return me.getCallbackForEvent(t);
                  })
                ),
                o = Ki(e, ["api", "columnApi"]);
              this.checkProperties(
                t,
                o,
                e,
                "gridOptions",
                "https://www.ag-grid.com/javascript-grid-properties/"
              );
            }),
            (t.prototype.checkProperties = function (t, e, o, n, r) {
              var i = ln(t, e, o);
              F(i, function (t, e) {
                console.warn(
                  "ag-grid: invalid " +
                    n +
                    " property '" +
                    t +
                    "' did you mean any of these: " +
                    e.slice(0, 8).join(", ")
                );
              }),
                Object.keys(i).length > 0 &&
                  console.warn(
                    "ag-grid: to see all the valid " +
                      n +
                      " properties please check: " +
                      r
                  );
            }),
            (t.prototype.getDomDataKey = function () {
              return this.domDataKey;
            }),
            (t.prototype.getDomData = function (t, e) {
              var o = t[this.getDomDataKey()];
              return o ? o[e] : void 0;
            }),
            (t.prototype.setDomData = function (t, e, o) {
              var n = this.getDomDataKey(),
                r = t[n];
              i(r) && (t[n] = r = {}), (r[e] = o);
            }),
            (t.prototype.isRowSelection = function () {
              return (
                "single" === this.gridOptions.rowSelection ||
                "multiple" === this.gridOptions.rowSelection
              );
            }),
            (t.prototype.isSuppressRowDeselection = function () {
              return Yi(this.gridOptions.suppressRowDeselection);
            }),
            (t.prototype.isRowSelectionMulti = function () {
              return "multiple" === this.gridOptions.rowSelection;
            }),
            (t.prototype.isRowMultiSelectWithClick = function () {
              return Yi(this.gridOptions.rowMultiSelectWithClick);
            }),
            (t.prototype.getContext = function () {
              return this.gridOptions.context;
            }),
            (t.prototype.isPivotMode = function () {
              return Yi(this.gridOptions.pivotMode);
            }),
            (t.prototype.isSuppressExpandablePivotGroups = function () {
              return Yi(this.gridOptions.suppressExpandablePivotGroups);
            }),
            (t.prototype.getPivotColumnGroupTotals = function () {
              return this.gridOptions.pivotColumnGroupTotals;
            }),
            (t.prototype.getPivotRowTotals = function () {
              return this.gridOptions.pivotRowTotals;
            }),
            (t.prototype.isRowModelInfinite = function () {
              return (
                this.gridOptions.rowModelType === vt.ROW_MODEL_TYPE_INFINITE
              );
            }),
            (t.prototype.isRowModelViewport = function () {
              return (
                this.gridOptions.rowModelType === vt.ROW_MODEL_TYPE_VIEWPORT
              );
            }),
            (t.prototype.isRowModelServerSide = function () {
              return (
                this.gridOptions.rowModelType === vt.ROW_MODEL_TYPE_SERVER_SIDE
              );
            }),
            (t.prototype.isRowModelDefault = function () {
              return (
                i(this.gridOptions.rowModelType) ||
                this.gridOptions.rowModelType === vt.ROW_MODEL_TYPE_CLIENT_SIDE
              );
            }),
            (t.prototype.isFullRowEdit = function () {
              return "fullRow" === this.gridOptions.editType;
            }),
            (t.prototype.isSuppressFocusAfterRefresh = function () {
              return Yi(this.gridOptions.suppressFocusAfterRefresh);
            }),
            (t.prototype.isSuppressBrowserResizeObserver = function () {
              return Yi(this.gridOptions.suppressBrowserResizeObserver);
            }),
            (t.prototype.isSuppressMaintainUnsortedOrder = function () {
              return Yi(this.gridOptions.suppressMaintainUnsortedOrder);
            }),
            (t.prototype.isSuppressClearOnFillReduction = function () {
              return Yi(this.gridOptions.suppressClearOnFillReduction);
            }),
            (t.prototype.isShowToolPanel = function () {
              return Yi(
                this.gridOptions.sideBar &&
                  Array.isArray(this.getSideBar().toolPanels)
              );
            }),
            (t.prototype.getSideBar = function () {
              return this.gridOptions.sideBar;
            }),
            (t.prototype.isSuppressTouch = function () {
              return Yi(this.gridOptions.suppressTouch);
            }),
            (t.prototype.isApplyColumnDefOrder = function () {
              return Yi(this.gridOptions.applyColumnDefOrder);
            }),
            (t.prototype.isSuppressRowTransform = function () {
              return Yi(this.gridOptions.suppressRowTransform);
            }),
            (t.prototype.isSuppressColumnStateEvents = function () {
              return Yi(this.gridOptions.suppressColumnStateEvents);
            }),
            (t.prototype.isAllowDragFromColumnsToolPanel = function () {
              return Yi(this.gridOptions.allowDragFromColumnsToolPanel);
            }),
            (t.prototype.useAsyncEvents = function () {
              return !Yi(this.gridOptions.suppressAsyncEvents);
            }),
            (t.prototype.isEnableCellChangeFlash = function () {
              return Yi(this.gridOptions.enableCellChangeFlash);
            }),
            (t.prototype.getCellFlashDelay = function () {
              return this.gridOptions.cellFlashDelay || 500;
            }),
            (t.prototype.getCellFadeDelay = function () {
              return this.gridOptions.cellFadeDelay || 1e3;
            }),
            (t.prototype.isGroupSelectsChildren = function () {
              var t = Yi(this.gridOptions.groupSelectsChildren);
              return t && this.isTreeData()
                ? (console.warn(
                    "AG Grid: groupSelectsChildren does not work with tree data"
                  ),
                  !1)
                : t;
            }),
            (t.prototype.isSuppressRowHoverHighlight = function () {
              return Yi(this.gridOptions.suppressRowHoverHighlight);
            }),
            (t.prototype.isGroupSelectsFiltered = function () {
              return Yi(this.gridOptions.groupSelectsFiltered);
            }),
            (t.prototype.isGroupHideOpenParents = function () {
              return Yi(this.gridOptions.groupHideOpenParents);
            }),
            (t.prototype.isGroupMultiAutoColumn = function () {
              return (
                Yi(this.gridOptions.groupMultiAutoColumn) ||
                Yi(this.gridOptions.groupHideOpenParents)
              );
            }),
            (t.prototype.isGroupRemoveSingleChildren = function () {
              return Yi(this.gridOptions.groupRemoveSingleChildren);
            }),
            (t.prototype.isGroupRemoveLowestSingleChildren = function () {
              return Yi(this.gridOptions.groupRemoveLowestSingleChildren);
            }),
            (t.prototype.isGroupIncludeFooter = function () {
              return Yi(this.gridOptions.groupIncludeFooter);
            }),
            (t.prototype.isGroupIncludeTotalFooter = function () {
              return Yi(this.gridOptions.groupIncludeTotalFooter);
            }),
            (t.prototype.isGroupSuppressBlankHeader = function () {
              return Yi(this.gridOptions.groupSuppressBlankHeader);
            }),
            (t.prototype.isSuppressRowClickSelection = function () {
              return Yi(this.gridOptions.suppressRowClickSelection);
            }),
            (t.prototype.isSuppressCellSelection = function () {
              return Yi(this.gridOptions.suppressCellSelection);
            }),
            (t.prototype.isSuppressMultiSort = function () {
              return Yi(this.gridOptions.suppressMultiSort);
            }),
            (t.prototype.isMultiSortKeyCtrl = function () {
              return "ctrl" === this.gridOptions.multiSortKey;
            }),
            (t.prototype.isGroupSuppressAutoColumn = function () {
              return Yi(this.gridOptions.groupSuppressAutoColumn);
            }),
            (t.prototype.isPivotSuppressAutoColumn = function () {
              return Yi(this.gridOptions.pivotSuppressAutoColumn);
            }),
            (t.prototype.isSuppressDragLeaveHidesColumns = function () {
              return Yi(this.gridOptions.suppressDragLeaveHidesColumns);
            }),
            (t.prototype.isSuppressScrollOnNewData = function () {
              return Yi(this.gridOptions.suppressScrollOnNewData);
            }),
            (t.prototype.isRowDragManaged = function () {
              return Yi(this.gridOptions.rowDragManaged);
            }),
            (t.prototype.isSuppressRowDrag = function () {
              return Yi(this.gridOptions.suppressRowDrag);
            }),
            (t.prototype.isSuppressMoveWhenRowDragging = function () {
              return Yi(this.gridOptions.suppressMoveWhenRowDragging);
            }),
            (t.prototype.isEnableMultiRowDragging = function () {
              return Yi(this.gridOptions.enableMultiRowDragging);
            }),
            (t.prototype.getDomLayout = function () {
              var t = this.gridOptions.domLayout || vt.DOM_LAYOUT_NORMAL;
              return -1 ===
                [
                  vt.DOM_LAYOUT_PRINT,
                  vt.DOM_LAYOUT_AUTO_HEIGHT,
                  vt.DOM_LAYOUT_NORMAL,
                ].indexOf(t)
                ? (q(function () {
                    return console.warn(
                      "AG Grid: " +
                        t +
                        " is not valid for DOM Layout, valid values are " +
                        vt.DOM_LAYOUT_NORMAL +
                        ", " +
                        vt.DOM_LAYOUT_AUTO_HEIGHT +
                        " and " +
                        vt.DOM_LAYOUT_PRINT
                    );
                  }, "warn about dom layout values"),
                  vt.DOM_LAYOUT_NORMAL)
                : t;
            }),
            (t.prototype.isSuppressHorizontalScroll = function () {
              return Yi(this.gridOptions.suppressHorizontalScroll);
            }),
            (t.prototype.isSuppressMaxRenderedRowRestriction = function () {
              return Yi(this.gridOptions.suppressMaxRenderedRowRestriction);
            }),
            (t.prototype.isExcludeChildrenWhenTreeDataFiltering = function () {
              return Yi(this.gridOptions.excludeChildrenWhenTreeDataFiltering);
            }),
            (t.prototype.isAlwaysShowHorizontalScroll = function () {
              return Yi(this.gridOptions.alwaysShowHorizontalScroll);
            }),
            (t.prototype.isAlwaysShowVerticalScroll = function () {
              return Yi(this.gridOptions.alwaysShowVerticalScroll);
            }),
            (t.prototype.isDebounceVerticalScrollbar = function () {
              return Yi(this.gridOptions.debounceVerticalScrollbar);
            }),
            (t.prototype.isSuppressLoadingOverlay = function () {
              return Yi(this.gridOptions.suppressLoadingOverlay);
            }),
            (t.prototype.isSuppressNoRowsOverlay = function () {
              return Yi(this.gridOptions.suppressNoRowsOverlay);
            }),
            (t.prototype.isSuppressFieldDotNotation = function () {
              return Yi(this.gridOptions.suppressFieldDotNotation);
            }),
            (t.prototype.getPinnedTopRowData = function () {
              return this.gridOptions.pinnedTopRowData;
            }),
            (t.prototype.getPinnedBottomRowData = function () {
              return this.gridOptions.pinnedBottomRowData;
            }),
            (t.prototype.isFunctionsPassive = function () {
              return Yi(this.gridOptions.functionsPassive);
            }),
            (t.prototype.isSuppressChangeDetection = function () {
              return Yi(this.gridOptions.suppressChangeDetection);
            }),
            (t.prototype.isSuppressAnimationFrame = function () {
              return Yi(this.gridOptions.suppressAnimationFrame);
            }),
            (t.prototype.getQuickFilterText = function () {
              return this.gridOptions.quickFilterText;
            }),
            (t.prototype.isCacheQuickFilter = function () {
              return Yi(this.gridOptions.cacheQuickFilter);
            }),
            (t.prototype.isUnSortIcon = function () {
              return Yi(this.gridOptions.unSortIcon);
            }),
            (t.prototype.isSuppressMenuHide = function () {
              return Yi(this.gridOptions.suppressMenuHide);
            }),
            (t.prototype.isEnterMovesDownAfterEdit = function () {
              return Yi(this.gridOptions.enterMovesDownAfterEdit);
            }),
            (t.prototype.isEnterMovesDown = function () {
              return Yi(this.gridOptions.enterMovesDown);
            }),
            (t.prototype.isUndoRedoCellEditing = function () {
              return Yi(this.gridOptions.undoRedoCellEditing);
            }),
            (t.prototype.getUndoRedoCellEditingLimit = function () {
              return this.gridOptions.undoRedoCellEditingLimit;
            }),
            (t.prototype.getRowStyle = function () {
              return this.gridOptions.rowStyle;
            }),
            (t.prototype.getRowClass = function () {
              return this.gridOptions.rowClass;
            }),
            (t.prototype.getRowStyleFunc = function () {
              return this.gridOptions.getRowStyle;
            }),
            (t.prototype.getRowClassFunc = function () {
              return this.gridOptions.getRowClass;
            }),
            (t.prototype.rowClassRules = function () {
              return this.gridOptions.rowClassRules;
            }),
            (t.prototype.getServerSideStoreType = function () {
              return this.gridOptions.serverSideStoreType;
            }),
            (t.prototype.getServerSideStoreParamsFunc = function () {
              return this.gridOptions.getServerSideStoreParams;
            }),
            (t.prototype.getCreateChartContainerFunc = function () {
              return this.gridOptions.createChartContainer;
            }),
            (t.prototype.getPopupParent = function () {
              return this.gridOptions.popupParent;
            }),
            (t.prototype.getBlockLoadDebounceMillis = function () {
              return this.gridOptions.blockLoadDebounceMillis;
            }),
            (t.prototype.getPostProcessPopupFunc = function () {
              return this.gridOptions.postProcessPopup;
            }),
            (t.prototype.getPaginationNumberFormatterFunc = function () {
              return this.gridOptions.paginationNumberFormatter;
            }),
            (t.prototype.getChildCountFunc = function () {
              return this.gridOptions.getChildCount;
            }),
            (t.prototype.getIsApplyServerSideTransactionFunc = function () {
              return this.gridOptions.isApplyServerSideTransaction;
            }),
            (t.prototype.getDefaultGroupSortComparator = function () {
              return this.gridOptions.defaultGroupSortComparator;
            }),
            (t.prototype.getIsFullWidthCellFunc = function () {
              return this.gridOptions.isFullWidthCell;
            }),
            (t.prototype.getFullWidthCellRendererParams = function () {
              return this.gridOptions.fullWidthCellRendererParams;
            }),
            (t.prototype.isEmbedFullWidthRows = function () {
              return (
                Yi(this.gridOptions.embedFullWidthRows) ||
                Yi(this.gridOptions.deprecatedEmbedFullWidthRows)
              );
            }),
            (t.prototype.isDetailRowAutoHeight = function () {
              return Yi(this.gridOptions.detailRowAutoHeight);
            }),
            (t.prototype.getSuppressKeyboardEventFunc = function () {
              return this.gridOptions.suppressKeyboardEvent;
            }),
            (t.prototype.getBusinessKeyForNodeFunc = function () {
              return this.gridOptions.getBusinessKeyForNode;
            }),
            (t.prototype.getApi = function () {
              return this.gridOptions.api;
            }),
            (t.prototype.getColumnApi = function () {
              return this.gridOptions.columnApi;
            }),
            (t.prototype.isImmutableData = function () {
              return Yi(this.gridOptions.immutableData);
            }),
            (t.prototype.isEnsureDomOrder = function () {
              return Yi(this.gridOptions.ensureDomOrder);
            }),
            (t.prototype.isEnableCharts = function () {
              return (
                !!Yi(this.gridOptions.enableCharts) &&
                Ct.assertRegistered(
                  e.ModuleNames.GridChartsModule,
                  "enableCharts"
                )
              );
            }),
            (t.prototype.getColResizeDefault = function () {
              return this.gridOptions.colResizeDefault;
            }),
            (t.prototype.isSingleClickEdit = function () {
              return Yi(this.gridOptions.singleClickEdit);
            }),
            (t.prototype.isSuppressClickEdit = function () {
              return Yi(this.gridOptions.suppressClickEdit);
            }),
            (t.prototype.isStopEditingWhenGridLosesFocus = function () {
              return Yi(this.gridOptions.stopEditingWhenGridLosesFocus);
            }),
            (t.prototype.getGroupDefaultExpanded = function () {
              return this.gridOptions.groupDefaultExpanded;
            }),
            (t.prototype.getMaxConcurrentDatasourceRequests = function () {
              return this.gridOptions.maxConcurrentDatasourceRequests;
            }),
            (t.prototype.getMaxBlocksInCache = function () {
              return this.gridOptions.maxBlocksInCache;
            }),
            (t.prototype.getCacheOverflowSize = function () {
              return this.gridOptions.cacheOverflowSize;
            }),
            (t.prototype.getPaginationPageSize = function () {
              return "number" ==
                typeof (t = this.gridOptions.paginationPageSize)
                ? t
                : "string" == typeof t
                ? parseInt(t, 10)
                : void 0;
              var t;
            }),
            (t.prototype.isPaginateChildRows = function () {
              return (
                !(
                  !this.isGroupRemoveSingleChildren() &&
                  !this.isGroupRemoveLowestSingleChildren()
                ) || Yi(this.gridOptions.paginateChildRows)
              );
            }),
            (t.prototype.getCacheBlockSize = function () {
              return Xi(this.gridOptions.cacheBlockSize);
            }),
            (t.prototype.getInfiniteInitialRowCount = function () {
              return this.gridOptions.infiniteInitialRowCount;
            }),
            (t.prototype.isPurgeClosedRowNodes = function () {
              return Yi(this.gridOptions.purgeClosedRowNodes);
            }),
            (t.prototype.isSuppressPaginationPanel = function () {
              return Yi(this.gridOptions.suppressPaginationPanel);
            }),
            (t.prototype.getRowData = function () {
              return this.gridOptions.rowData;
            }),
            (t.prototype.isGroupUseEntireRow = function (t) {
              return !t && Yi(this.gridOptions.groupUseEntireRow);
            }),
            (t.prototype.isEnableRtl = function () {
              return Yi(this.gridOptions.enableRtl);
            }),
            (t.prototype.getAutoGroupColumnDef = function () {
              return this.gridOptions.autoGroupColumnDef;
            }),
            (t.prototype.getRowGroupPanelShow = function () {
              return this.gridOptions.rowGroupPanelShow;
            }),
            (t.prototype.getPivotPanelShow = function () {
              return this.gridOptions.pivotPanelShow;
            }),
            (t.prototype.isAngularCompileRows = function () {
              return Yi(this.gridOptions.angularCompileRows);
            }),
            (t.prototype.isAngularCompileFilters = function () {
              return Yi(this.gridOptions.angularCompileFilters);
            }),
            (t.prototype.isDebug = function () {
              return Yi(this.gridOptions.debug);
            }),
            (t.prototype.getColumnDefs = function () {
              return this.gridOptions.columnDefs;
            }),
            (t.prototype.getColumnTypes = function () {
              return this.gridOptions.columnTypes;
            }),
            (t.prototype.getDatasource = function () {
              return this.gridOptions.datasource;
            }),
            (t.prototype.getViewportDatasource = function () {
              return this.gridOptions.viewportDatasource;
            }),
            (t.prototype.getServerSideDatasource = function () {
              return this.gridOptions.serverSideDatasource;
            }),
            (t.prototype.isAccentedSort = function () {
              return Yi(this.gridOptions.accentedSort);
            }),
            (t.prototype.isEnableBrowserTooltips = function () {
              return Yi(this.gridOptions.enableBrowserTooltips);
            }),
            (t.prototype.isEnableCellExpressions = function () {
              return Yi(this.gridOptions.enableCellExpressions);
            }),
            (t.prototype.isEnableGroupEdit = function () {
              return Yi(this.gridOptions.enableGroupEdit);
            }),
            (t.prototype.isSuppressMiddleClickScrolls = function () {
              return Yi(this.gridOptions.suppressMiddleClickScrolls);
            }),
            (t.prototype.isPreventDefaultOnContextMenu = function () {
              return Yi(this.gridOptions.preventDefaultOnContextMenu);
            }),
            (t.prototype.isSuppressPreventDefaultOnMouseWheel = function () {
              return Yi(this.gridOptions.suppressPreventDefaultOnMouseWheel);
            }),
            (t.prototype.isSuppressColumnVirtualisation = function () {
              return Yi(this.gridOptions.suppressColumnVirtualisation);
            }),
            (t.prototype.isSuppressContextMenu = function () {
              return Yi(this.gridOptions.suppressContextMenu);
            }),
            (t.prototype.isAllowContextMenuWithControlKey = function () {
              return Yi(this.gridOptions.allowContextMenuWithControlKey);
            }),
            (t.prototype.isSuppressCopyRowsToClipboard = function () {
              return Yi(this.gridOptions.suppressCopyRowsToClipboard);
            }),
            (t.prototype.isCopyHeadersToClipboard = function () {
              return Yi(this.gridOptions.copyHeadersToClipboard);
            }),
            (t.prototype.isSuppressClipboardPaste = function () {
              return Yi(this.gridOptions.suppressClipboardPaste);
            }),
            (t.prototype.isSuppressLastEmptyLineOnPaste = function () {
              return Yi(this.gridOptions.suppressLastEmptyLineOnPaste);
            }),
            (t.prototype.isPagination = function () {
              return Yi(this.gridOptions.pagination);
            }),
            (t.prototype.isSuppressEnterpriseResetOnNewColumns = function () {
              return Yi(this.gridOptions.suppressEnterpriseResetOnNewColumns);
            }),
            (t.prototype.getProcessDataFromClipboardFunc = function () {
              return this.gridOptions.processDataFromClipboard;
            }),
            (t.prototype.getAsyncTransactionWaitMillis = function () {
              return r(this.gridOptions.asyncTransactionWaitMillis)
                ? this.gridOptions.asyncTransactionWaitMillis
                : vt.BATCH_WAIT_MILLIS;
            }),
            (t.prototype.isSuppressMovableColumns = function () {
              return Yi(this.gridOptions.suppressMovableColumns);
            }),
            (t.prototype.isAnimateRows = function () {
              return (
                !this.isEnsureDomOrder() && Yi(this.gridOptions.animateRows)
              );
            }),
            (t.prototype.isSuppressColumnMoveAnimation = function () {
              return Yi(this.gridOptions.suppressColumnMoveAnimation);
            }),
            (t.prototype.isSuppressAggFuncInHeader = function () {
              return Yi(this.gridOptions.suppressAggFuncInHeader);
            }),
            (t.prototype.isSuppressAggAtRootLevel = function () {
              return Yi(this.gridOptions.suppressAggAtRootLevel);
            }),
            (t.prototype.isSuppressAggFilteredOnly = function () {
              return Yi(this.gridOptions.suppressAggFilteredOnly);
            }),
            (t.prototype.isShowOpenedGroup = function () {
              return Yi(this.gridOptions.showOpenedGroup);
            }),
            (t.prototype.isEnableRangeSelection = function () {
              return (
                Ct.isRegistered(e.ModuleNames.RangeSelectionModule) &&
                Yi(this.gridOptions.enableRangeSelection)
              );
            }),
            (t.prototype.isEnableRangeHandle = function () {
              return Yi(this.gridOptions.enableRangeHandle);
            }),
            (t.prototype.isEnableFillHandle = function () {
              return Yi(this.gridOptions.enableFillHandle);
            }),
            (t.prototype.getFillHandleDirection = function () {
              var t = this.gridOptions.fillHandleDirection;
              return t
                ? "x" !== t && "y" !== t && "xy" !== t
                  ? (q(function () {
                      return console.warn(
                        "AG Grid: valid values for fillHandleDirection are 'x', 'y' and 'xy'. Default to 'xy'."
                      );
                    }, "warn invalid fill direction"),
                    "xy")
                  : t
                : "xy";
            }),
            (t.prototype.getFillOperation = function () {
              return this.gridOptions.fillOperation;
            }),
            (t.prototype.isSuppressMultiRangeSelection = function () {
              return Yi(this.gridOptions.suppressMultiRangeSelection);
            }),
            (t.prototype.isPaginationAutoPageSize = function () {
              return Yi(this.gridOptions.paginationAutoPageSize);
            }),
            (t.prototype.isRememberGroupStateWhenNewData = function () {
              return Yi(this.gridOptions.rememberGroupStateWhenNewData);
            }),
            (t.prototype.getIcons = function () {
              return this.gridOptions.icons;
            }),
            (t.prototype.getAggFuncs = function () {
              return this.gridOptions.aggFuncs;
            }),
            (t.prototype.getSortingOrder = function () {
              return this.gridOptions.sortingOrder;
            }),
            (t.prototype.getAlignedGrids = function () {
              return this.gridOptions.alignedGrids;
            }),
            (t.prototype.isMasterDetail = function () {
              return (
                !!Yi(this.gridOptions.masterDetail) &&
                Ct.assertRegistered(
                  e.ModuleNames.MasterDetailModule,
                  "masterDetail"
                )
              );
            }),
            (t.prototype.isKeepDetailRows = function () {
              return Yi(this.gridOptions.keepDetailRows);
            }),
            (t.prototype.getKeepDetailRowsCount = function () {
              var t = this.gridOptions.keepDetailRowsCount;
              return r(t) && t > 0 ? this.gridOptions.keepDetailRowsCount : 10;
            }),
            (t.prototype.getIsRowMasterFunc = function () {
              return this.gridOptions.isRowMaster;
            }),
            (t.prototype.getIsRowSelectableFunc = function () {
              return this.gridOptions.isRowSelectable;
            }),
            (t.prototype.getGroupRowRendererParams = function () {
              return this.gridOptions.groupRowRendererParams;
            }),
            (t.prototype.getOverlayLoadingTemplate = function () {
              return this.gridOptions.overlayLoadingTemplate;
            }),
            (t.prototype.getOverlayNoRowsTemplate = function () {
              return this.gridOptions.overlayNoRowsTemplate;
            }),
            (t.prototype.isSuppressAutoSize = function () {
              return Yi(this.gridOptions.suppressAutoSize);
            }),
            (t.prototype.isEnableCellTextSelection = function () {
              return Yi(this.gridOptions.enableCellTextSelection);
            }),
            (t.prototype.isSuppressParentsInRowNodes = function () {
              return Yi(this.gridOptions.suppressParentsInRowNodes);
            }),
            (t.prototype.isSuppressClipboardApi = function () {
              return Yi(this.gridOptions.suppressClipboardApi);
            }),
            (t.prototype.isFunctionsReadOnly = function () {
              return Yi(this.gridOptions.functionsReadOnly);
            }),
            (t.prototype.isFloatingFilter = function () {
              return this.gridOptions.floatingFilter;
            }),
            (t.prototype.isEnableCellTextSelect = function () {
              return Yi(this.gridOptions.enableCellTextSelection);
            }),
            (t.prototype.isEnableOldSetFilterModel = function () {
              return Yi(this.gridOptions.enableOldSetFilterModel);
            }),
            (t.prototype.getDefaultColDef = function () {
              return this.gridOptions.defaultColDef;
            }),
            (t.prototype.getDefaultColGroupDef = function () {
              return this.gridOptions.defaultColGroupDef;
            }),
            (t.prototype.getDefaultExportParams = function () {
              return this.gridOptions.defaultExportParams;
            }),
            (t.prototype.isSuppressCsvExport = function () {
              return Yi(this.gridOptions.suppressCsvExport);
            }),
            (t.prototype.isAllowShowChangeAfterFilter = function () {
              return Yi(this.gridOptions.allowShowChangeAfterFilter);
            }),
            (t.prototype.isSuppressExcelExport = function () {
              return Yi(this.gridOptions.suppressExcelExport);
            }),
            (t.prototype.isSuppressMakeColumnVisibleAfterUnGroup = function () {
              return Yi(this.gridOptions.suppressMakeColumnVisibleAfterUnGroup);
            }),
            (t.prototype.getDataPathFunc = function () {
              return this.gridOptions.getDataPath;
            }),
            (t.prototype.getIsServerSideGroupFunc = function () {
              return this.gridOptions.isServerSideGroup;
            }),
            (t.prototype.getIsServerSideGroupOpenByDefaultFunc = function () {
              return this.gridOptions.isServerSideGroupOpenByDefault;
            }),
            (t.prototype.getServerSideGroupKeyFunc = function () {
              return this.gridOptions.getServerSideGroupKey;
            }),
            (t.prototype.getGroupRowAggNodesFunc = function () {
              return this.gridOptions.groupRowAggNodes;
            }),
            (t.prototype.getContextMenuItemsFunc = function () {
              return this.gridOptions.getContextMenuItems;
            }),
            (t.prototype.getMainMenuItemsFunc = function () {
              return this.gridOptions.getMainMenuItems;
            }),
            (t.prototype.getRowNodeIdFunc = function () {
              return this.gridOptions.getRowNodeId;
            }),
            (t.prototype.getNavigateToNextHeaderFunc = function () {
              return this.gridOptions.navigateToNextHeader;
            }),
            (t.prototype.getTabToNextHeaderFunc = function () {
              return this.gridOptions.tabToNextHeader;
            }),
            (t.prototype.getNavigateToNextCellFunc = function () {
              return this.gridOptions.navigateToNextCell;
            }),
            (t.prototype.getTabToNextCellFunc = function () {
              return this.gridOptions.tabToNextCell;
            }),
            (t.prototype.isTreeData = function () {
              return (
                !!Yi(this.gridOptions.treeData) &&
                Ct.assertRegistered(
                  e.ModuleNames.RowGroupingModule,
                  "Tree Data"
                )
              );
            }),
            (t.prototype.isValueCache = function () {
              return Yi(this.gridOptions.valueCache);
            }),
            (t.prototype.isValueCacheNeverExpires = function () {
              return Yi(this.gridOptions.valueCacheNeverExpires);
            }),
            (t.prototype.isDeltaSort = function () {
              return Yi(this.gridOptions.deltaSort);
            }),
            (t.prototype.isAggregateOnlyChangedColumns = function () {
              return Yi(this.gridOptions.aggregateOnlyChangedColumns);
            }),
            (t.prototype.getProcessSecondaryColDefFunc = function () {
              return this.gridOptions.processSecondaryColDef;
            }),
            (t.prototype.getProcessSecondaryColGroupDefFunc = function () {
              return this.gridOptions.processSecondaryColGroupDef;
            }),
            (t.prototype.getSendToClipboardFunc = function () {
              return this.gridOptions.sendToClipboard;
            }),
            (t.prototype.getProcessRowPostCreateFunc = function () {
              return this.gridOptions.processRowPostCreate;
            }),
            (t.prototype.getProcessCellForClipboardFunc = function () {
              return this.gridOptions.processCellForClipboard;
            }),
            (t.prototype.getProcessHeaderForClipboardFunc = function () {
              return this.gridOptions.processHeaderForClipboard;
            }),
            (t.prototype.getProcessCellFromClipboardFunc = function () {
              return this.gridOptions.processCellFromClipboard;
            }),
            (t.prototype.getViewportRowModelPageSize = function () {
              return Xi(this.gridOptions.viewportRowModelPageSize, 5);
            }),
            (t.prototype.getViewportRowModelBufferSize = function () {
              return (t = this.gridOptions.viewportRowModelBufferSize) >= 0
                ? t
                : 5;
              var t;
            }),
            (t.prototype.isServerSideSortingAlwaysResets = function () {
              return Yi(this.gridOptions.serverSideSortingAlwaysResets);
            }),
            (t.prototype.isServerSideFilteringAlwaysResets = function () {
              return Yi(this.gridOptions.serverSideFilteringAlwaysResets);
            }),
            (t.prototype.getPostSortFunc = function () {
              return this.gridOptions.postSort;
            }),
            (t.prototype.getChartToolbarItemsFunc = function () {
              return this.gridOptions.getChartToolbarItems;
            }),
            (t.prototype.getChartThemeOverrides = function () {
              return this.gridOptions.chartThemeOverrides;
            }),
            (t.prototype.getCustomChartThemes = function () {
              return this.gridOptions.customChartThemes;
            }),
            (t.prototype.getChartThemes = function () {
              return (
                this.gridOptions.chartThemes || [
                  "ag-default",
                  "ag-material",
                  "ag-pastel",
                  "ag-vivid",
                  "ag-solar",
                ]
              );
            }),
            (t.prototype.getProcessChartOptionsFunc = function () {
              return this.gridOptions.processChartOptions;
            }),
            (t.prototype.getClipboardDeliminator = function () {
              return r(this.gridOptions.clipboardDeliminator)
                ? this.gridOptions.clipboardDeliminator
                : "\t";
            }),
            (t.prototype.setProperty = function (t, e, o) {
              void 0 === o && (o = !1);
              var n = this.gridOptions,
                r = n[t];
              (o || r !== e) &&
                ((n[t] = e),
                this.propertyEventService.dispatchEvent({
                  type: t,
                  currentValue: e,
                  previousValue: r,
                }));
            }),
            (t.prototype.addLayoutElement = function (t) {
              this.layoutElements.push(t), this.updateLayoutClasses();
            }),
            (t.prototype.updateLayoutClasses = function () {
              var t = this.getDomLayout(),
                e = t === vt.DOM_LAYOUT_AUTO_HEIGHT,
                o = t === vt.DOM_LAYOUT_PRINT,
                n = t === vt.DOM_LAYOUT_NORMAL;
              this.layoutElements.forEach(function (t) {
                je(t, "ag-layout-auto-height", e),
                  je(t, "ag-layout-normal", n),
                  je(t, "ag-layout-print", o);
              });
            }),
            (t.prototype.addEventListener = function (t, e) {
              this.propertyEventService.addEventListener(t, e);
            }),
            (t.prototype.removeEventListener = function (t, e) {
              this.propertyEventService.removeEventListener(t, e);
            }),
            (t.prototype.isSkipHeaderOnAutoSize = function () {
              return !!this.gridOptions.skipHeaderOnAutoSize;
            }),
            (t.prototype.getAutoSizePadding = function () {
              var t = this.gridOptions.autoSizePadding;
              return null != t && t >= 0 ? t : 20;
            }),
            (t.prototype.getHeaderHeight = function () {
              return "number" == typeof this.gridOptions.headerHeight
                ? this.gridOptions.headerHeight
                : this.getFromTheme(25, "headerHeight");
            }),
            (t.prototype.getFloatingFiltersHeight = function () {
              return "number" == typeof this.gridOptions.floatingFiltersHeight
                ? this.gridOptions.floatingFiltersHeight
                : this.getFromTheme(25, "headerHeight");
            }),
            (t.prototype.getGroupHeaderHeight = function () {
              return "number" == typeof this.gridOptions.groupHeaderHeight
                ? this.gridOptions.groupHeaderHeight
                : this.getHeaderHeight();
            }),
            (t.prototype.getPivotHeaderHeight = function () {
              return "number" == typeof this.gridOptions.pivotHeaderHeight
                ? this.gridOptions.pivotHeaderHeight
                : this.getHeaderHeight();
            }),
            (t.prototype.getPivotGroupHeaderHeight = function () {
              return "number" == typeof this.gridOptions.pivotGroupHeaderHeight
                ? this.gridOptions.pivotGroupHeaderHeight
                : this.getGroupHeaderHeight();
            }),
            (t.prototype.isExternalFilterPresent = function () {
              return (
                "function" == typeof this.gridOptions.isExternalFilterPresent &&
                this.gridOptions.isExternalFilterPresent()
              );
            }),
            (t.prototype.doesExternalFilterPass = function (t) {
              return (
                "function" == typeof this.gridOptions.doesExternalFilterPass &&
                this.gridOptions.doesExternalFilterPass(t)
              );
            }),
            (t.prototype.getTooltipShowDelay = function () {
              var t = this.gridOptions.tooltipShowDelay;
              return r(t)
                ? (t < 0 &&
                    console.warn(
                      "ag-grid: tooltipShowDelay should not be lower than 0"
                    ),
                  Math.max(200, t))
                : null;
            }),
            (t.prototype.isTooltipMouseTrack = function () {
              return Yi(this.gridOptions.tooltipMouseTrack);
            }),
            (t.prototype.isSuppressModelUpdateAfterUpdateTransaction =
              function () {
                return Yi(
                  this.gridOptions.suppressModelUpdateAfterUpdateTransaction
                );
              }),
            (t.prototype.getDocument = function () {
              var t = null;
              return (
                this.gridOptions.getDocument &&
                  r(this.gridOptions.getDocument) &&
                  (t = this.gridOptions.getDocument()),
                t && r(t) ? t : document
              );
            }),
            (t.prototype.getMinColWidth = function () {
              var t = this.gridOptions.minColWidth;
              if (r(t) && t > o.MIN_COL_WIDTH)
                return this.gridOptions.minColWidth;
              var e = this.getFromTheme(null, "headerCellMinWidth");
              return r(e) ? Math.max(e, o.MIN_COL_WIDTH) : o.MIN_COL_WIDTH;
            }),
            (t.prototype.getMaxColWidth = function () {
              return this.gridOptions.maxColWidth &&
                this.gridOptions.maxColWidth > o.MIN_COL_WIDTH
                ? this.gridOptions.maxColWidth
                : null;
            }),
            (t.prototype.getColWidth = function () {
              return "number" != typeof this.gridOptions.colWidth ||
                this.gridOptions.colWidth < o.MIN_COL_WIDTH
                ? 200
                : this.gridOptions.colWidth;
            }),
            (t.prototype.getRowBuffer = function () {
              var t = this.gridOptions.rowBuffer;
              return (
                "number" == typeof t
                  ? t < 0 &&
                    (q(function () {
                      return console.warn(
                        "AG Grid: rowBuffer should not be negative"
                      );
                    }, "warn rowBuffer negative"),
                    (this.gridOptions.rowBuffer = t = 0))
                  : (t = vt.ROW_BUFFER_SIZE),
                t
              );
            }),
            (t.prototype.getRowBufferInPixels = function () {
              return this.getRowBuffer() * this.getRowHeightAsNumber();
            }),
            (t.prototype.getScrollbarWidth = function () {
              if (null == this.scrollbarWidth) {
                var t =
                  "number" == typeof this.gridOptions.scrollbarWidth &&
                  this.gridOptions.scrollbarWidth >= 0
                    ? this.gridOptions.scrollbarWidth
                    : Le();
                null != t &&
                  ((this.scrollbarWidth = t),
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_SCROLLBAR_WIDTH_CHANGED,
                  }));
              }
              return this.scrollbarWidth;
            }),
            (t.prototype.checkForDeprecated = function () {
              var t = this.gridOptions;
              t.deprecatedEmbedFullWidthRows &&
                console.warn(
                  "AG Grid: since v21.2, deprecatedEmbedFullWidthRows has been replaced with embedFullWidthRows."
                ),
                t.enableOldSetFilterModel &&
                  console.warn(
                    "AG Grid: since v22.x, enableOldSetFilterModel is deprecated. Please move to the new Set Filter Model as the old one may not be supported in v23 onwards."
                  ),
                t.floatingFilter &&
                  (console.warn(
                    "AG Grid: since v23.1, floatingFilter on the gridOptions is deprecated. Please use floatingFilter on the colDef instead."
                  ),
                  t.defaultColDef || (t.defaultColDef = {}),
                  null == t.defaultColDef.floatingFilter &&
                    (t.defaultColDef.floatingFilter = !0)),
                t.rowDeselection &&
                  console.warn(
                    "AG Grid: since v24.x, rowDeselection is deprecated and the behaviour is true by default. Please use `suppressRowDeselection` to prevent rows from being deselected."
                  );
              var e = function (e, o, n) {
                null != t[e] &&
                  (console.warn(
                    "ag-grid: since version " +
                      n +
                      ", '" +
                      e +
                      "' is deprecated / renamed, please use the new property name '" +
                      o +
                      "' instead."
                  ),
                  null == t[o] && (t[o] = t[e]));
              };
              if (
                (e(
                  "batchUpdateWaitMillis",
                  "asyncTransactionWaitMillis",
                  "23.1.x"
                ),
                e("deltaRowDataMode", "immutableData", "23.1.x"),
                (t.immutableColumns || t.deltaColumnMode) &&
                  console.warn(
                    "AG Grid: since v24.0, immutableColumns and deltaColumnMode properties are gone. The grid now works like this as default. To keep column order maintained, set grid property applyColumnDefOrder=true"
                  ),
                e(
                  "suppressSetColumnStateEvents",
                  "suppressColumnStateEvents",
                  "24.0.x"
                ),
                t.groupRowInnerRenderer ||
                  t.groupRowInnerRendererParams ||
                  t.groupRowInnerRendererFramework)
              ) {
                console.warn(
                  "AG Grid: since v24.0, grid properties groupRowInnerRenderer, groupRowInnerRendererFramework and groupRowInnerRendererParams are no longer used."
                ),
                  console.warn(
                    "  Instead use the grid properties groupRowRendererParams.innerRenderer, groupRowRendererParams.innerRendererFramework and groupRowRendererParams.innerRendererParams."
                  ),
                  console.warn("  For example instead of this:"),
                  console.warn('    groupRowInnerRenderer: "myRenderer"'),
                  console.warn("    groupRowInnerRendererParams: {x: a}"),
                  console.warn("  Replace with this:"),
                  console.warn("    groupRowRendererParams: {"),
                  console.warn('      innerRenderer: "myRenderer",'),
                  console.warn("      innerRendererParams: {x: a}"),
                  console.warn("    }"),
                  console.warn(
                    "  We have copied the properties over for you. However to stop this error message, please change your application code."
                  ),
                  t.groupRowRendererParams || (t.groupRowRendererParams = {});
                var o = t.groupRowRendererParams;
                t.groupRowInnerRenderer &&
                  (o.innerRenderer = t.groupRowInnerRenderer),
                  t.groupRowInnerRendererParams &&
                    (o.innerRendererParams = t.groupRowInnerRendererParams),
                  t.groupRowInnerRendererFramework &&
                    (o.innerRendererFramework =
                      t.groupRowInnerRendererFramework);
              }
              t.rememberGroupStateWhenNewData &&
                console.warn(
                  "AG Grid: since v24.0, grid property rememberGroupStateWhenNewData is deprecated. This feature was provided before Transaction Updates worked (which keep group state). Now that transaction updates are possible and they keep group state, this feature is no longer needed."
                ),
                t.detailCellRendererParams &&
                  t.detailCellRendererParams.autoHeight &&
                  (console.warn(
                    "AG Grid: since v24.1, grid property detailCellRendererParams.autoHeight is replaced with grid property detailRowAutoHeight. This allows this feature to work when you provide a custom DetailCellRenderer"
                  ),
                  (t.detailRowAutoHeight = !0)),
                t.suppressKeyboardEvent &&
                  console.warn(
                    "AG Grid: since v24.1 suppressKeyboardEvent in the gridOptions has been deprecated and will be removed in\n                 future versions of AG Grid. If you need this to be set for every column use the defaultColDef property."
                  ),
                t.suppressEnterpriseResetOnNewColumns &&
                  (console.warn(
                    "AG Grid: since v25, grid property suppressEnterpriseResetOnNewColumns is deprecated. This was a temporary property to allow changing columns in Server Side Row Model without triggering a reload. Now that it is possible to dynamically change columns in the grid, this is no longer needed."
                  ),
                  (t.detailRowAutoHeight = !0));
            }),
            (t.prototype.checkForViolations = function () {
              this.isTreeData() && this.treeDataViolations();
            }),
            (t.prototype.treeDataViolations = function () {
              this.isRowModelDefault() &&
                i(this.getDataPathFunc()) &&
                console.warn(
                  "AG Grid: property usingTreeData=true with rowModel=clientSide, but you did not provide getDataPath function, please provide getDataPath function if using tree data."
                ),
                this.isRowModelServerSide() &&
                  (i(this.getIsServerSideGroupFunc()) &&
                    console.warn(
                      "AG Grid: property usingTreeData=true with rowModel=serverSide, but you did not provide isServerSideGroup function, please provide isServerSideGroup function if using tree data."
                    ),
                  i(this.getServerSideGroupKeyFunc()) &&
                    console.warn(
                      "AG Grid: property usingTreeData=true with rowModel=serverSide, but you did not provide getServerSideGroupKey function, please provide getServerSideGroupKey function if using tree data."
                    ));
            }),
            (t.prototype.getLocaleTextFunc = function () {
              if (this.gridOptions.localeTextFunc)
                return this.gridOptions.localeTextFunc;
              var t = this.gridOptions.localeText;
              return function (e, o) {
                return t && t[e] ? t[e] : o;
              };
            }),
            (t.prototype.globalEventHandler = function (t, e) {
              if (!this.destroyed) {
                var o = me.getCallbackForEvent(t);
                "function" == typeof this.gridOptions[o] &&
                  this.gridOptions[o](e);
              }
            }),
            (t.prototype.getRowHeightAsNumber = function () {
              return !this.gridOptions.rowHeight ||
                i(this.gridOptions.rowHeight)
                ? this.getDefaultRowHeight()
                : this.gridOptions.rowHeight &&
                  this.isNumeric(this.gridOptions.rowHeight)
                ? this.gridOptions.rowHeight
                : (console.warn(
                    "AG Grid row height must be a number if not using standard row model"
                  ),
                  this.getDefaultRowHeight());
            }),
            (t.prototype.getRowHeightForNode = function (t, e) {
              if (
                (void 0 === e && (e = !1),
                "function" == typeof this.gridOptions.getRowHeight)
              ) {
                if (e)
                  return { height: this.getDefaultRowHeight(), estimated: !0 };
                var o = this.gridOptions.getRowHeight({
                  node: t,
                  data: t.data,
                  api: this.gridOptions.api,
                  context: this.gridOptions.context,
                });
                if (this.isNumeric(o))
                  return (
                    0 === o &&
                      q(function () {
                        return console.warn(
                          "AG Grid: The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead."
                        );
                      }, "invalidRowHeight"),
                    { height: Math.max(1, o), estimated: !1 }
                  );
              }
              if (t.detail && this.isMasterDetail())
                return this.isNumeric(this.gridOptions.detailRowHeight)
                  ? { height: this.gridOptions.detailRowHeight, estimated: !1 }
                  : { height: 300, estimated: !1 };
              var n = this.getDefaultRowHeight(),
                i =
                  this.gridOptions.rowHeight &&
                  this.isNumeric(this.gridOptions.rowHeight)
                    ? this.gridOptions.rowHeight
                    : n,
                s = r(i) ? Math.min(n, i) : n;
              if (this.columnController.isAutoRowHeightActive()) {
                if (e) return { height: i, estimated: !0 };
                var a = this.autoHeightCalculator.getPreferredHeightForRow(t);
                return { height: Math.max(a, s), estimated: !1 };
              }
              return { height: i, estimated: !1 };
            }),
            (t.prototype.isDynamicRowHeight = function () {
              return "function" == typeof this.gridOptions.getRowHeight;
            }),
            (t.prototype.getListItemHeight = function () {
              return this.getFromTheme(20, "listItemHeight");
            }),
            (t.prototype.chartMenuPanelWidth = function () {
              return this.environment.chartMenuPanelWidth();
            }),
            (t.prototype.isNumeric = function (t) {
              return !isNaN(t) && "number" == typeof t && isFinite(t);
            }),
            (t.prototype.getFromTheme = function (t, e) {
              var o = this.environment.getTheme().theme;
              return o && 0 === o.indexOf("ag-theme")
                ? this.environment.getSassVariable(o, e)
                : t;
            }),
            (t.prototype.getDefaultRowHeight = function () {
              return this.getFromTheme(25, "rowHeight");
            }),
            (t.MIN_COL_WIDTH = 10),
            (t.PROP_HEADER_HEIGHT = "headerHeight"),
            (t.PROP_GROUP_REMOVE_SINGLE_CHILDREN = "groupRemoveSingleChildren"),
            (t.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN =
              "groupRemoveLowestSingleChildren"),
            (t.PROP_PIVOT_HEADER_HEIGHT = "pivotHeaderHeight"),
            (t.PROP_SUPPRESS_CLIPBOARD_PASTE = "suppressClipboardPaste"),
            (t.PROP_GROUP_HEADER_HEIGHT = "groupHeaderHeight"),
            (t.PROP_PIVOT_GROUP_HEADER_HEIGHT = "pivotGroupHeaderHeight"),
            (t.PROP_FLOATING_FILTERS_HEIGHT = "floatingFiltersHeight"),
            (t.PROP_SUPPRESS_ROW_CLICK_SELECTION = "suppressRowClickSelection"),
            (t.PROP_SUPPRESS_ROW_DRAG = "suppressRowDrag"),
            (t.PROP_SUPPRESS_MOVE_WHEN_ROW_DRAG =
              "suppressMoveWhenRowDragging"),
            (t.PROP_POPUP_PARENT = "popupParent"),
            (t.PROP_DOM_LAYOUT = "domLayout"),
            (t.PROP_FILL_HANDLE_DIRECTION = "fillHandleDirection"),
            Ui([ut("gridOptions")], t.prototype, "gridOptions", void 0),
            Ui(
              [ut("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            Ui([ut("eventService")], t.prototype, "eventService", void 0),
            Ui([ut("environment")], t.prototype, "environment", void 0),
            Ui(
              [ut("autoHeightCalculator")],
              t.prototype,
              "autoHeightCalculator",
              void 0
            ),
            Ui(
              [zi(0, dt("gridApi")), zi(1, dt("columnApi"))],
              t.prototype,
              "agWire",
              null
            ),
            Ui([at], t.prototype, "destroy", null),
            Ui([st], t.prototype, "init", null),
            (o = Ui([lt("gridOptionsWrapper")], t))
          );
        })(),
        $i = (function () {
          function t(t, e) {
            (this.active = !0),
              (this.nodeIdsToColumns = {}),
              (this.mapToItems = {}),
              (this.keepingColumns = t),
              (this.pathRoot = { rowNode: e, children: null }),
              (this.mapToItems[e.id] = this.pathRoot);
          }
          return (
            (t.prototype.setInactive = function () {
              this.active = !1;
            }),
            (t.prototype.isActive = function () {
              return this.active;
            }),
            (t.prototype.depthFirstSearchChangedPath = function (t, e) {
              if (t.children)
                for (var o = 0; o < t.children.length; o++)
                  this.depthFirstSearchChangedPath(t.children[o], e);
              e(t.rowNode);
            }),
            (t.prototype.depthFirstSearchEverything = function (t, e, o) {
              if (t.childrenAfterGroup)
                for (var n = 0; n < t.childrenAfterGroup.length; n++) {
                  var r = t.childrenAfterGroup[n];
                  r.childrenAfterGroup
                    ? this.depthFirstSearchEverything(
                        t.childrenAfterGroup[n],
                        e,
                        o
                      )
                    : o && e(r);
                }
              e(t);
            }),
            (t.prototype.forEachChangedNodeDepthFirst = function (t, e) {
              void 0 === e && (e = !1),
                this.active
                  ? this.depthFirstSearchChangedPath(this.pathRoot, t)
                  : this.depthFirstSearchEverything(
                      this.pathRoot.rowNode,
                      t,
                      e
                    );
            }),
            (t.prototype.executeFromRootNode = function (t) {
              t(this.pathRoot.rowNode);
            }),
            (t.prototype.createPathItems = function (t) {
              for (var e = t, o = 0; !this.mapToItems[e.id]; )
                (this.mapToItems[e.id] = { rowNode: e, children: null }),
                  o++,
                  (e = e.parent);
              return o;
            }),
            (t.prototype.populateColumnsMap = function (t, e) {
              var o = this;
              if (this.keepingColumns && e)
                for (var n = t; n; )
                  this.nodeIdsToColumns[n.id] ||
                    (this.nodeIdsToColumns[n.id] = {}),
                    e.forEach(function (t) {
                      return (o.nodeIdsToColumns[n.id][t.getId()] = !0);
                    }),
                    (n = n.parent);
            }),
            (t.prototype.linkPathItems = function (t, e) {
              for (var o = t, n = 0; n < e; n++) {
                var r = this.mapToItems[o.id],
                  i = this.mapToItems[o.parent.id];
                i.children || (i.children = []),
                  i.children.push(r),
                  (o = o.parent);
              }
            }),
            (t.prototype.addParentNode = function (t, e) {
              if (t && !t.isRowPinned()) {
                var o = this.createPathItems(t);
                this.linkPathItems(t, o), this.populateColumnsMap(t, e);
              }
            }),
            (t.prototype.canSkip = function (t) {
              return this.active && !this.mapToItems[t.id];
            }),
            (t.prototype.getValueColumnsForNode = function (t, e) {
              if (!this.keepingColumns) return e;
              var o = this.nodeIdsToColumns[t.id];
              return e.filter(function (t) {
                return o[t.getId()];
              });
            }),
            (t.prototype.getNotValueColumnsForNode = function (t, e) {
              if (!this.keepingColumns) return null;
              var o = this.nodeIdsToColumns[t.id];
              return e.filter(function (t) {
                return !o[t.getId()];
              });
            }),
            t
          );
        })(),
        Ji = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ts = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        es = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ji(e, t),
            (e.prototype.setBeans = function (t) {
              (this.logger = t.create("SelectionController")),
                this.reset(),
                this.gridOptionsWrapper.isRowModelDefault() &&
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_ROW_DATA_CHANGED,
                    this.reset.bind(this)
                  );
            }),
            (e.prototype.init = function () {
              (this.groupSelectsChildren =
                this.gridOptionsWrapper.isGroupSelectsChildren()),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_ROW_SELECTED,
                  this.onRowSelected.bind(this)
                );
            }),
            (e.prototype.setLastSelectedNode = function (t) {
              this.lastSelectedNode = t;
            }),
            (e.prototype.getLastSelectedNode = function () {
              return this.lastSelectedNode;
            }),
            (e.prototype.getSelectedNodes = function () {
              var t = [];
              return (
                F(this.selectedNodes, function (e, o) {
                  o && t.push(o);
                }),
                t
              );
            }),
            (e.prototype.getSelectedRows = function () {
              var t = [];
              return (
                F(this.selectedNodes, function (e, o) {
                  o && o.data && t.push(o.data);
                }),
                t
              );
            }),
            (e.prototype.removeGroupsFromSelection = function () {
              var t = this;
              F(this.selectedNodes, function (e, o) {
                o && o.group && (t.selectedNodes[o.id] = void 0);
              });
            }),
            (e.prototype.updateGroupsFromChildrenSelections = function (t) {
              if (
                this.gridOptionsWrapper.isGroupSelectsChildren() &&
                this.rowModel.getType() === vt.ROW_MODEL_TYPE_CLIENT_SIDE
              ) {
                var e = this.rowModel.getRootNode();
                t || (t = new $i(!0, e)).setInactive(),
                  t.forEachChangedNodeDepthFirst(function (t) {
                    t !== e && t.calculateSelectedFromChildren();
                  });
              }
            }),
            (e.prototype.getNodeForIdIfSelected = function (t) {
              return this.selectedNodes[t];
            }),
            (e.prototype.clearOtherNodes = function (t) {
              var e = this,
                o = {},
                n = 0;
              return (
                F(this.selectedNodes, function (r, i) {
                  i &&
                    i.id !== t.id &&
                    ((n += e.selectedNodes[i.id].setSelectedParams({
                      newValue: !1,
                      clearSelection: !1,
                      suppressFinishActions: !0,
                    })),
                    e.groupSelectsChildren &&
                      i.parent &&
                      (o[i.parent.id] = i.parent));
                }),
                F(o, function (t, e) {
                  e.calculateSelectedFromChildren();
                }),
                n
              );
            }),
            (e.prototype.onRowSelected = function (t) {
              var e = t.node;
              (this.groupSelectsChildren && e.group) ||
                (this.selectedNodes[e.id] = e.isSelected() ? e : void 0);
            }),
            (e.prototype.syncInRowNode = function (t, e) {
              this.syncInOldRowNode(t, e), this.syncInNewRowNode(t);
            }),
            (e.prototype.syncInOldRowNode = function (t, e) {
              r(e) &&
                t.id !== e.id &&
                e &&
                r(this.selectedNodes[e.id]) &&
                (this.selectedNodes[e.id] = e);
            }),
            (e.prototype.syncInNewRowNode = function (t) {
              r(this.selectedNodes[t.id])
                ? (t.setSelectedInitialValue(!0),
                  (this.selectedNodes[t.id] = t))
                : t.setSelectedInitialValue(!1);
            }),
            (e.prototype.reset = function () {
              this.logger.log("reset"),
                (this.selectedNodes = {}),
                (this.lastSelectedNode = null);
            }),
            (e.prototype.getBestCostNodeSelection = function () {
              if (this.rowModel.getType() === vt.ROW_MODEL_TYPE_CLIENT_SIDE) {
                var t = this.rowModel.getTopLevelNodes();
                if (null !== t) {
                  var e = [];
                  return (
                    (function t(o) {
                      for (var n = 0, r = o.length; n < r; n++) {
                        var i = o[n];
                        i.isSelected()
                          ? e.push(i)
                          : i.group && i.children && t(i.children);
                      }
                    })(t),
                    e
                  );
                }
                console.warn("selectAll not available doing rowModel=virtual");
              } else
                console.warn(
                  "getBestCostNodeSelection is only available when using normal row model"
                );
            }),
            (e.prototype.setRowModel = function (t) {
              this.rowModel = t;
            }),
            (e.prototype.isEmpty = function () {
              var t = 0;
              return (
                F(this.selectedNodes, function (e, o) {
                  o && t++;
                }),
                0 === t
              );
            }),
            (e.prototype.deselectAllRowNodes = function (t) {
              void 0 === t && (t = !1);
              var e = function (t) {
                  return t.selectThisNode(!1);
                },
                o = this.rowModel.getType() === vt.ROW_MODEL_TYPE_CLIENT_SIDE;
              if (t) {
                if (!o)
                  return void console.error(
                    "AG Grid: selecting just filtered only works with In Memory Row Model"
                  );
                this.rowModel.forEachNodeAfterFilter(e);
              } else
                F(this.selectedNodes, function (t, o) {
                  o && e(o);
                }),
                  this.reset();
              o &&
                this.groupSelectsChildren &&
                this.updateGroupsFromChildrenSelections(),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_SELECTION_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.selectAllRowNodes = function (t) {
              if (
                (void 0 === t && (t = !1),
                this.rowModel.getType() !== vt.ROW_MODEL_TYPE_CLIENT_SIDE)
              )
                throw new Error(
                  "selectAll only available with normal row model, ie not " +
                    this.rowModel.getType()
                );
              var e = this.rowModel,
                o = function (t) {
                  return t.selectThisNode(!0);
                };
              t ? e.forEachNodeAfterFilter(o) : e.forEachNode(o),
                this.rowModel.getType() === vt.ROW_MODEL_TYPE_CLIENT_SIDE &&
                  this.groupSelectsChildren &&
                  this.updateGroupsFromChildrenSelections(),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_SELECTION_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.selectNode = function (t, e) {
              t && t.setSelectedParams({ newValue: !0, clearSelection: !e });
            }),
            (e.prototype.deselectIndex = function (t) {
              var e = this.rowModel.getRow(t);
              this.deselectNode(e);
            }),
            (e.prototype.deselectNode = function (t) {
              t && t.setSelectedParams({ newValue: !1, clearSelection: !1 });
            }),
            (e.prototype.selectIndex = function (t, e) {
              var o = this.rowModel.getRow(t);
              this.selectNode(o, e);
            }),
            ts([ut("rowModel")], e.prototype, "rowModel", void 0),
            ts([ut("columnApi")], e.prototype, "columnApi", void 0),
            ts([ut("gridApi")], e.prototype, "gridApi", void 0),
            ts(
              [
                (0,
                (o = dt("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            ts([st], e.prototype, "init", null),
            ts([lt("selectionController")], e)
          );
          var o;
        })(Ht),
        os = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ns = (function () {
          function t() {}
          return (
            (t.prototype.sizeColumnsToFit = function (t) {
              void 0 === t &&
                console.error(
                  "AG Grid: missing parameter to columnApi.sizeColumnsToFit(gridWidth)"
                ),
                this.columnController.sizeColumnsToFit(t, "api");
            }),
            (t.prototype.setColumnGroupOpened = function (t, e) {
              this.columnController.setColumnGroupOpened(t, e, "api");
            }),
            (t.prototype.getColumnGroup = function (t, e) {
              return this.columnController.getColumnGroup(t, e);
            }),
            (t.prototype.getOriginalColumnGroup = function (t) {
              return this.columnController.getOriginalColumnGroup(t);
            }),
            (t.prototype.getDisplayNameForColumn = function (t, e) {
              return this.columnController.getDisplayNameForColumn(t, e) || "";
            }),
            (t.prototype.getDisplayNameForColumnGroup = function (t, e) {
              return (
                this.columnController.getDisplayNameForColumnGroup(t, e) || ""
              );
            }),
            (t.prototype.getColumn = function (t) {
              return this.columnController.getPrimaryColumn(t);
            }),
            (t.prototype.applyColumnState = function (t) {
              return this.columnController.applyColumnState(t, "api");
            }),
            (t.prototype.getColumnState = function () {
              return this.columnController.getColumnState();
            }),
            (t.prototype.resetColumnState = function () {
              this.columnController.resetColumnState("api");
            }),
            (t.prototype.getColumnGroupState = function () {
              return this.columnController.getColumnGroupState();
            }),
            (t.prototype.setColumnGroupState = function (t) {
              this.columnController.setColumnGroupState(t, "api");
            }),
            (t.prototype.resetColumnGroupState = function () {
              this.columnController.resetColumnGroupState("api");
            }),
            (t.prototype.isPinning = function () {
              return (
                this.columnController.isPinningLeft() ||
                this.columnController.isPinningRight()
              );
            }),
            (t.prototype.isPinningLeft = function () {
              return this.columnController.isPinningLeft();
            }),
            (t.prototype.isPinningRight = function () {
              return this.columnController.isPinningRight();
            }),
            (t.prototype.getDisplayedColAfter = function (t) {
              return this.columnController.getDisplayedColAfter(t);
            }),
            (t.prototype.getDisplayedColBefore = function (t) {
              return this.columnController.getDisplayedColBefore(t);
            }),
            (t.prototype.setColumnVisible = function (t, e) {
              this.columnController.setColumnVisible(t, e, "api");
            }),
            (t.prototype.setColumnsVisible = function (t, e) {
              this.columnController.setColumnsVisible(t, e, "api");
            }),
            (t.prototype.setColumnPinned = function (t, e) {
              this.columnController.setColumnPinned(t, e, "api");
            }),
            (t.prototype.setColumnsPinned = function (t, e) {
              this.columnController.setColumnsPinned(t, e, "api");
            }),
            (t.prototype.getAllColumns = function () {
              return this.columnController.getAllPrimaryColumns();
            }),
            (t.prototype.getAllGridColumns = function () {
              return this.columnController.getAllGridColumns();
            }),
            (t.prototype.getDisplayedLeftColumns = function () {
              return this.columnController.getDisplayedLeftColumns();
            }),
            (t.prototype.getDisplayedCenterColumns = function () {
              return this.columnController.getDisplayedCenterColumns();
            }),
            (t.prototype.getDisplayedRightColumns = function () {
              return this.columnController.getDisplayedRightColumns();
            }),
            (t.prototype.getAllDisplayedColumns = function () {
              return this.columnController.getAllDisplayedColumns();
            }),
            (t.prototype.getAllDisplayedVirtualColumns = function () {
              return this.columnController.getViewportColumns();
            }),
            (t.prototype.moveColumn = function (t, e) {
              "number" == typeof t
                ? (console.warn(
                    "AG Grid: you are using moveColumn(fromIndex, toIndex) - moveColumn takes a column key and a destination index, not two indexes, to move with indexes use moveColumnByIndex(from,to) instead"
                  ),
                  this.columnController.moveColumnByIndex(t, e, "api"))
                : this.columnController.moveColumn(t, e, "api");
            }),
            (t.prototype.moveColumnByIndex = function (t, e) {
              this.columnController.moveColumnByIndex(t, e, "api");
            }),
            (t.prototype.moveColumns = function (t, e) {
              this.columnController.moveColumns(t, e, "api");
            }),
            (t.prototype.moveRowGroupColumn = function (t, e) {
              this.columnController.moveRowGroupColumn(t, e);
            }),
            (t.prototype.setColumnAggFunc = function (t, e) {
              this.columnController.setColumnAggFunc(t, e);
            }),
            (t.prototype.setColumnWidth = function (t, e, o) {
              void 0 === o && (o = !0),
                this.columnController.setColumnWidths(
                  [{ key: t, newWidth: e }],
                  !1,
                  o
                );
            }),
            (t.prototype.setColumnWidths = function (t, e) {
              void 0 === e && (e = !0),
                this.columnController.setColumnWidths(t, !1, e);
            }),
            (t.prototype.setPivotMode = function (t) {
              this.columnController.setPivotMode(t);
            }),
            (t.prototype.isPivotMode = function () {
              return this.columnController.isPivotMode();
            }),
            (t.prototype.getSecondaryPivotColumn = function (t, e) {
              return this.columnController.getSecondaryPivotColumn(t, e);
            }),
            (t.prototype.setValueColumns = function (t) {
              this.columnController.setValueColumns(t, "api");
            }),
            (t.prototype.getValueColumns = function () {
              return this.columnController.getValueColumns();
            }),
            (t.prototype.removeValueColumn = function (t) {
              this.columnController.removeValueColumn(t, "api");
            }),
            (t.prototype.removeValueColumns = function (t) {
              this.columnController.removeValueColumns(t, "api");
            }),
            (t.prototype.addValueColumn = function (t) {
              this.columnController.addValueColumn(t, "api");
            }),
            (t.prototype.addValueColumns = function (t) {
              this.columnController.addValueColumns(t, "api");
            }),
            (t.prototype.setRowGroupColumns = function (t) {
              this.columnController.setRowGroupColumns(t, "api");
            }),
            (t.prototype.removeRowGroupColumn = function (t) {
              this.columnController.removeRowGroupColumn(t, "api");
            }),
            (t.prototype.removeRowGroupColumns = function (t) {
              this.columnController.removeRowGroupColumns(t, "api");
            }),
            (t.prototype.addRowGroupColumn = function (t) {
              this.columnController.addRowGroupColumn(t, "api");
            }),
            (t.prototype.addRowGroupColumns = function (t) {
              this.columnController.addRowGroupColumns(t, "api");
            }),
            (t.prototype.getRowGroupColumns = function () {
              return this.columnController.getRowGroupColumns();
            }),
            (t.prototype.setPivotColumns = function (t) {
              this.columnController.setPivotColumns(t, "api");
            }),
            (t.prototype.removePivotColumn = function (t) {
              this.columnController.removePivotColumn(t, "api");
            }),
            (t.prototype.removePivotColumns = function (t) {
              this.columnController.removePivotColumns(t, "api");
            }),
            (t.prototype.addPivotColumn = function (t) {
              this.columnController.addPivotColumn(t, "api");
            }),
            (t.prototype.addPivotColumns = function (t) {
              this.columnController.addPivotColumns(t, "api");
            }),
            (t.prototype.getPivotColumns = function () {
              return this.columnController.getPivotColumns();
            }),
            (t.prototype.getLeftDisplayedColumnGroups = function () {
              return this.columnController.getDisplayedTreeLeft();
            }),
            (t.prototype.getCenterDisplayedColumnGroups = function () {
              return this.columnController.getDisplayedTreeCentre();
            }),
            (t.prototype.getRightDisplayedColumnGroups = function () {
              return this.columnController.getDisplayedTreeRight();
            }),
            (t.prototype.getAllDisplayedColumnGroups = function () {
              return this.columnController.getAllDisplayedTrees();
            }),
            (t.prototype.autoSizeColumn = function (t, e) {
              return this.columnController.autoSizeColumn(t, e, "api");
            }),
            (t.prototype.autoSizeColumns = function (t, e) {
              return this.columnController.autoSizeColumns(t, e, "api");
            }),
            (t.prototype.autoSizeAllColumns = function (t) {
              this.columnController.autoSizeAllColumns(t, "api");
            }),
            (t.prototype.setSecondaryColumns = function (t) {
              this.columnController.setSecondaryColumns(t, "api");
            }),
            (t.prototype.getSecondaryColumns = function () {
              return this.columnController.getSecondaryColumns();
            }),
            (t.prototype.getPrimaryColumns = function () {
              return this.columnController.getAllPrimaryColumns();
            }),
            (t.prototype.cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid =
              function () {
                setTimeout(
                  xn.removeAllReferences.bind(window, this, "Column API"),
                  100
                );
              }),
            (t.prototype.columnGroupOpened = function (t, e) {
              console.error(
                "AG Grid: columnGroupOpened no longer exists, use setColumnGroupOpened"
              ),
                this.setColumnGroupOpened(t, e);
            }),
            (t.prototype.hideColumns = function (t, e) {
              console.error(
                "AG Grid: hideColumns is deprecated, use setColumnsVisible"
              ),
                this.columnController.setColumnsVisible(t, !e, "api");
            }),
            (t.prototype.hideColumn = function (t, e) {
              console.error(
                "AG Grid: hideColumn is deprecated, use setColumnVisible"
              ),
                this.columnController.setColumnVisible(t, !e, "api");
            }),
            (t.prototype.setState = function (t) {
              return (
                console.error(
                  "AG Grid: setState is deprecated, use setColumnState"
                ),
                this.setColumnState(t)
              );
            }),
            (t.prototype.getState = function () {
              return (
                console.error(
                  "AG Grid: getState is deprecated, use getColumnState"
                ),
                this.getColumnState()
              );
            }),
            (t.prototype.resetState = function () {
              console.error(
                "AG Grid: resetState is deprecated, use resetColumnState"
              ),
                this.resetColumnState();
            }),
            (t.prototype.getAggregationColumns = function () {
              return (
                console.error(
                  "AG Grid: getAggregationColumns is deprecated, use getValueColumns"
                ),
                this.columnController.getValueColumns()
              );
            }),
            (t.prototype.removeAggregationColumn = function (t) {
              console.error(
                "AG Grid: removeAggregationColumn is deprecated, use removeValueColumn"
              ),
                this.columnController.removeValueColumn(t, "api");
            }),
            (t.prototype.removeAggregationColumns = function (t) {
              console.error(
                "AG Grid: removeAggregationColumns is deprecated, use removeValueColumns"
              ),
                this.columnController.removeValueColumns(t, "api");
            }),
            (t.prototype.addAggregationColumn = function (t) {
              console.error(
                "AG Grid: addAggregationColumn is deprecated, use addValueColumn"
              ),
                this.columnController.addValueColumn(t, "api");
            }),
            (t.prototype.addAggregationColumns = function (t) {
              console.error(
                "AG Grid: addAggregationColumns is deprecated, use addValueColumns"
              ),
                this.columnController.addValueColumns(t, "api");
            }),
            (t.prototype.setColumnAggFunction = function (t, e) {
              console.error(
                "AG Grid: setColumnAggFunction is deprecated, use setColumnAggFunc"
              ),
                this.columnController.setColumnAggFunc(t, e, "api");
            }),
            (t.prototype.getDisplayNameForCol = function (t) {
              return (
                console.error(
                  "AG Grid: getDisplayNameForCol is deprecated, use getDisplayNameForColumn"
                ),
                this.getDisplayNameForColumn(t, null)
              );
            }),
            (t.prototype.setColumnState = function (t) {
              return this.columnController.applyColumnState(
                { state: t, applyOrder: !0 },
                "api"
              );
            }),
            os(
              [ut("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            os(
              [at],
              t.prototype,
              "cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid",
              null
            ),
            os([lt("columnApi")], t)
          );
        })();
      ((qi = e.SelectionHandleType || (e.SelectionHandleType = {}))[
        (qi.FILL = 0)
      ] = "FILL"),
        (qi[(qi.RANGE = 1)] = "RANGE"),
        ((Qi = e.CellRangeType || (e.CellRangeType = {}))[(Qi.VALUE = 0)] =
          "VALUE"),
        (Qi[(Qi.DIMENSION = 1)] = "DIMENSION");
      var rs,
        is,
        ss,
        as = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ls = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      ((rs = e.DragSourceType || (e.DragSourceType = {}))[(rs.ToolPanel = 0)] =
        "ToolPanel"),
        (rs[(rs.HeaderCell = 1)] = "HeaderCell"),
        (rs[(rs.RowDrag = 2)] = "RowDrag"),
        (rs[(rs.ChartPanel = 3)] = "ChartPanel"),
        ((is = e.VerticalDirection || (e.VerticalDirection = {}))[(is.Up = 0)] =
          "Up"),
        (is[(is.Down = 1)] = "Down"),
        ((ss = e.HorizontalDirection || (e.HorizontalDirection = {}))[
          (ss.Left = 0)
        ] = "Left"),
        (ss[(ss.Right = 1)] = "Right");
      var us,
        ps = (function (t) {
          function o() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.dragSourceAndParamsList = []), (e.dropTargets = []), e;
          }
          var n;
          return (
            as(o, t),
            (n = o),
            (o.prototype.init = function () {
              (this.ePinnedIcon = gn(
                "columnMovePin",
                this.gridOptionsWrapper,
                null
              )),
                (this.eHideIcon = gn(
                  "columnMoveHide",
                  this.gridOptionsWrapper,
                  null
                )),
                (this.eMoveIcon = gn(
                  "columnMoveMove",
                  this.gridOptionsWrapper,
                  null
                )),
                (this.eLeftIcon = gn(
                  "columnMoveLeft",
                  this.gridOptionsWrapper,
                  null
                )),
                (this.eRightIcon = gn(
                  "columnMoveRight",
                  this.gridOptionsWrapper,
                  null
                )),
                (this.eGroupIcon = gn(
                  "columnMoveGroup",
                  this.gridOptionsWrapper,
                  null
                )),
                (this.eAggregateIcon = gn(
                  "columnMoveValue",
                  this.gridOptionsWrapper,
                  null
                )),
                (this.ePivotIcon = gn(
                  "columnMovePivot",
                  this.gridOptionsWrapper,
                  null
                )),
                (this.eDropNotAllowedIcon = gn(
                  "dropNotAllowed",
                  this.gridOptionsWrapper,
                  null
                ));
            }),
            (o.prototype.addDragSource = function (t, e) {
              void 0 === e && (e = !1);
              var o = {
                eElement: t.eElement,
                dragStartPixels: t.dragStartPixels,
                onDragStart: this.onDragStart.bind(this, t),
                onDragStop: this.onDragStop.bind(this),
                onDragging: this.onDragging.bind(this),
              };
              this.dragSourceAndParamsList.push({ params: o, dragSource: t }),
                this.dragService.addDragSource(o, e);
            }),
            (o.prototype.removeDragSource = function (t) {
              var e = c(this.dragSourceAndParamsList, function (e) {
                return e.dragSource === t;
              });
              e &&
                (this.dragService.removeDragSource(e.params),
                C(this.dragSourceAndParamsList, e));
            }),
            (o.prototype.clearDragSourceParamsList = function () {
              var t = this;
              this.dragSourceAndParamsList.forEach(function (e) {
                return t.dragService.removeDragSource(e.params);
              }),
                (this.dragSourceAndParamsList.length = 0);
            }),
            (o.prototype.nudge = function () {
              this.dragging && this.onDragging(this.eventLastTime, !0);
            }),
            (o.prototype.onDragStart = function (t, e) {
              (this.dragging = !0),
                (this.dragSource = t),
                (this.eventLastTime = e),
                (this.dragItem = this.dragSource.getDragItem()),
                (this.lastDropTarget = this.dragSource.dragSourceDropTarget),
                this.dragSource.onDragStarted &&
                  this.dragSource.onDragStarted(),
                this.createGhost();
            }),
            (o.prototype.onDragStop = function (t) {
              if (
                ((this.eventLastTime = null),
                (this.dragging = !1),
                this.dragSource.onDragStopped &&
                  this.dragSource.onDragStopped(),
                this.lastDropTarget && this.lastDropTarget.onDragStop)
              ) {
                var e = this.createDropTargetEvent(
                  this.lastDropTarget,
                  t,
                  null,
                  null,
                  !1
                );
                this.lastDropTarget.onDragStop(e);
              }
              (this.lastDropTarget = null),
                (this.dragItem = null),
                this.removeGhost();
            }),
            (o.prototype.onDragging = function (t, e) {
              var o = this,
                n = this.getHorizontalDirection(t),
                r = this.getVerticalDirection(t);
              (this.eventLastTime = t), this.positionGhost(t);
              var i = this.dropTargets.filter(function (e) {
                  return o.isMouseOnDropTarget(t, e);
                }),
                s = i.length,
                a = null;
              if (
                (s > 0 &&
                  (a =
                    1 === s
                      ? i[0]
                      : i.reduce(function (t, e) {
                          if (!t) return e;
                          var o = t.getContainer(),
                            n = e.getContainer();
                          return o.contains(n) ? e : t;
                        })),
                a !== this.lastDropTarget)
              )
                this.leaveLastTargetIfExists(t, n, r, e),
                  this.enterDragTargetIfExists(a, t, n, r, e),
                  (this.lastDropTarget = a);
              else if (a && a.onDragging) {
                var l = this.createDropTargetEvent(a, t, n, r, e);
                a.onDragging(l);
              }
            }),
            (o.prototype.enterDragTargetIfExists = function (t, e, o, n, r) {
              if (t) {
                if (t.onDragEnter) {
                  var i = this.createDropTargetEvent(t, e, o, n, r);
                  t.onDragEnter(i);
                }
                this.setGhostIcon(t.getIconName ? t.getIconName() : null);
              }
            }),
            (o.prototype.leaveLastTargetIfExists = function (t, e, o, n) {
              if (this.lastDropTarget) {
                if (this.lastDropTarget.onDragLeave) {
                  var r = this.createDropTargetEvent(
                    this.lastDropTarget,
                    t,
                    e,
                    o,
                    n
                  );
                  this.lastDropTarget.onDragLeave(r);
                }
                this.setGhostIcon(null);
              }
            }),
            (o.prototype.getAllContainersFromDropTarget = function (t) {
              var e = [t.getContainer()],
                o = t.getSecondaryContainers
                  ? t.getSecondaryContainers()
                  : null;
              return o && (e = e.concat(o)), e;
            }),
            (o.prototype.isMouseOnDropTarget = function (t, e) {
              var o = !1;
              return (
                this.getAllContainersFromDropTarget(e)
                  .filter(function (t) {
                    return t;
                  })
                  .forEach(function (e) {
                    var n = e.getBoundingClientRect();
                    0 !== n.width &&
                      0 !== n.height &&
                      t.clientX >= n.left &&
                      t.clientX < n.right &&
                      t.clientY >= n.top &&
                      t.clientY < n.bottom &&
                      (o = !0);
                  }),
                o && e.isInterestedIn(this.dragSource.type)
              );
            }),
            (o.prototype.addDropTarget = function (t) {
              this.dropTargets.push(t);
            }),
            (o.prototype.removeDropTarget = function (t) {
              this.dropTargets = this.dropTargets.filter(function (e) {
                return e.getContainer() !== t.getContainer();
              });
            }),
            (o.prototype.hasExternalDropZones = function () {
              return this.dropTargets.some(function (t) {
                return t.external;
              });
            }),
            (o.prototype.findExternalZone = function (t) {
              return c(
                this.dropTargets.filter(function (t) {
                  return t.external;
                }),
                function (e) {
                  return e.getContainer() === t.getContainer();
                }
              );
            }),
            (o.prototype.getHorizontalDirection = function (t) {
              var o = this.eventLastTime && this.eventLastTime.clientX,
                n = t.clientX;
              return o === n
                ? null
                : o > n
                ? e.HorizontalDirection.Left
                : e.HorizontalDirection.Right;
            }),
            (o.prototype.getVerticalDirection = function (t) {
              var o = this.eventLastTime && this.eventLastTime.clientY,
                n = t.clientY;
              return o === n
                ? null
                : o > n
                ? e.VerticalDirection.Up
                : e.VerticalDirection.Down;
            }),
            (o.prototype.createDropTargetEvent = function (t, e, o, n, r) {
              var i = t.getContainer(),
                s = i.getBoundingClientRect(),
                a = this;
              return {
                event: e,
                x: e.clientX - s.left,
                y: e.clientY - s.top,
                vDirection: n,
                hDirection: o,
                dragSource: a.dragSource,
                fromNudge: r,
                dragItem: a.dragItem,
                api: a.gridApi,
                columnApi: a.columnApi,
                dropZoneTarget: i,
              };
            }),
            (o.prototype.positionGhost = function (t) {
              var e = this.eGhost;
              if (e) {
                var o = e.getBoundingClientRect().height,
                  n = Ge() - 2,
                  r = ke() - 2,
                  i = t.pageY - o / 2,
                  s = t.pageX - 10,
                  a = this.gridOptionsWrapper.getDocument(),
                  l = window.pageYOffset || a.documentElement.scrollTop,
                  u = window.pageXOffset || a.documentElement.scrollLeft;
                n > 0 &&
                  s + e.clientWidth > n + u &&
                  (s = n + u - e.clientWidth),
                  s < 0 && (s = 0),
                  r > 0 &&
                    i + e.clientHeight > r + l &&
                    (i = r + l - e.clientHeight),
                  i < 0 && (i = 0),
                  (e.style.left = s + "px"),
                  (e.style.top = i + "px");
              }
            }),
            (o.prototype.removeGhost = function () {
              this.eGhost &&
                this.eGhostParent &&
                this.eGhostParent.removeChild(this.eGhost),
                (this.eGhost = null);
            }),
            (o.prototype.createGhost = function () {
              this.eGhost = ao(n.GHOST_TEMPLATE);
              var t = this.environment.getTheme().theme;
              t && He(this.eGhost, t),
                (this.eGhostIcon =
                  this.eGhost.querySelector(".ag-dnd-ghost-icon")),
                this.setGhostIcon(null);
              var e = this.eGhost.querySelector(".ag-dnd-ghost-label"),
                o = this.dragSource.dragItemName;
              Z(o) && (o = o()),
                (e.innerHTML = Zt(o) || ""),
                (this.eGhost.style.height = "25px"),
                (this.eGhost.style.top = "20px"),
                (this.eGhost.style.left = "20px");
              var r = this.gridOptionsWrapper.getDocument(),
                i = r.fullscreenElement || r.querySelector("body");
              (this.eGhostParent = i),
                this.eGhostParent
                  ? this.eGhostParent.appendChild(this.eGhost)
                  : console.warn(
                      "AG Grid: could not find document body, it is needed for dragging columns"
                    );
            }),
            (o.prototype.setGhostIcon = function (t, e) {
              void 0 === e && (e = !1), ro(this.eGhostIcon);
              var o = null;
              switch (
                (t ||
                  (t = this.dragSource.defaultIconName || n.ICON_NOT_ALLOWED),
                t)
              ) {
                case n.ICON_PINNED:
                  o = this.ePinnedIcon;
                  break;
                case n.ICON_MOVE:
                  o = this.eMoveIcon;
                  break;
                case n.ICON_LEFT:
                  o = this.eLeftIcon;
                  break;
                case n.ICON_RIGHT:
                  o = this.eRightIcon;
                  break;
                case n.ICON_GROUP:
                  o = this.eGroupIcon;
                  break;
                case n.ICON_AGGREGATE:
                  o = this.eAggregateIcon;
                  break;
                case n.ICON_PIVOT:
                  o = this.ePivotIcon;
                  break;
                case n.ICON_NOT_ALLOWED:
                  o = this.eDropNotAllowedIcon;
                  break;
                case n.ICON_HIDE:
                  o = this.eHideIcon;
              }
              je(this.eGhostIcon, "ag-shake-left-to-right", e),
                (o === this.eHideIcon &&
                  this.gridOptionsWrapper.isSuppressDragLeaveHidesColumns()) ||
                  (o && this.eGhostIcon.appendChild(o));
            }),
            (o.ICON_PINNED = "pinned"),
            (o.ICON_MOVE = "move"),
            (o.ICON_LEFT = "left"),
            (o.ICON_RIGHT = "right"),
            (o.ICON_GROUP = "group"),
            (o.ICON_AGGREGATE = "aggregate"),
            (o.ICON_PIVOT = "pivot"),
            (o.ICON_NOT_ALLOWED = "notAllowed"),
            (o.ICON_HIDE = "hide"),
            (o.GHOST_TEMPLATE =
              '<div class="ag-dnd-ghost ag-unselectable">\n            <span class="ag-dnd-ghost-icon ag-shake-left-to-right"></span>\n            <div class="ag-dnd-ghost-label"></div>\n        </div>'),
            ls([ut("dragService")], o.prototype, "dragService", void 0),
            ls([ut("environment")], o.prototype, "environment", void 0),
            ls([ut("columnApi")], o.prototype, "columnApi", void 0),
            ls([ut("gridApi")], o.prototype, "gridApi", void 0),
            ls([st], o.prototype, "init", null),
            ls([at], o.prototype, "clearDragSourceParamsList", null),
            (n = ls([lt("dragAndDropService")], o))
          );
        })(Ht),
        cs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ds = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        hs = (function (t) {
          function o(e, o, n, r, i) {
            var s = t.call(this) || this;
            return (
              (s.rowNode = e),
              (s.column = o),
              (s.cellValueFn = n),
              (s.beans = r),
              (s.customGui = i),
              (s.isCustomGui = !1),
              (s.dragSource = null),
              s
            );
          }
          return (
            cs(o, t),
            (o.prototype.postConstruct = function () {
              this.customGui
                ? ((this.isCustomGui = !0), this.setDragElement(this.customGui))
                : (this.setTemplate(
                    '<div class="ag-drag-handle ag-row-drag" aria-hidden="true"></div>'
                  ),
                  this.getGui().appendChild(
                    yn("rowDrag", this.beans.gridOptionsWrapper, null)
                  ),
                  this.addDragSource()),
                this.checkCompatibility();
              var t = this.beans.gridOptionsWrapper.isRowDragManaged()
                ? new ys(this, this.beans, this.rowNode, this.column)
                : new gs(this, this.beans, this.rowNode, this.column);
              this.createManagedBean(t, this.beans.context);
            }),
            (o.prototype.setDragElement = function (t) {
              this.setTemplateFromElement(t), this.addDragSource();
            }),
            (o.prototype.getSelectedCount = function () {
              if (!this.beans.gridOptionsWrapper.isEnableMultiRowDragging())
                return 1;
              var t = this.beans.selectionController.getSelectedNodes();
              return -1 !== t.indexOf(this.rowNode) ? t.length : 1;
            }),
            (o.prototype.checkCompatibility = function () {
              var t = this.beans.gridOptionsWrapper.isRowDragManaged();
              this.beans.gridOptionsWrapper.isTreeData() &&
                t &&
                q(function () {
                  return console.warn(
                    "AG Grid: If using row drag with tree data, you cannot have rowDragManaged=true"
                  );
                }, "RowDragComp.managedAndTreeData");
            }),
            (o.prototype.addDragSource = function () {
              var t = this;
              this.dragSource && this.removeDragSource();
              var o = {
                  rowNode: this.rowNode,
                  columns: [this.column],
                  defaultTextValue: this.cellValueFn(),
                },
                n = this.column.getColDef().rowDragText;
              (this.dragSource = {
                type: e.DragSourceType.RowDrag,
                eElement: this.getGui(),
                dragItemName: function () {
                  var e = t.getSelectedCount();
                  return n ? n(o, e) : 1 === e ? t.cellValueFn() : e + " rows";
                },
                getDragItem: function () {
                  return o;
                },
                dragStartPixels: 0,
                dragSourceDomDataKey:
                  this.beans.gridOptionsWrapper.getDomDataKey(),
              }),
                this.beans.dragAndDropService.addDragSource(
                  this.dragSource,
                  !0
                );
            }),
            (o.prototype.removeDragSource = function () {
              this.dragSource &&
                this.beans.dragAndDropService.removeDragSource(this.dragSource),
                (this.dragSource = null);
            }),
            ds([st], o.prototype, "postConstruct", null),
            ds([at], o.prototype, "removeDragSource", null),
            o
          );
        })(jn),
        fs = (function (t) {
          function e(e, o, n) {
            var r = t.call(this) || this;
            return (r.parent = e), (r.column = n), (r.rowNode = o), r;
          }
          return (
            cs(e, t),
            (e.prototype.setDisplayedOrVisible = function (t) {
              if (t) this.parent.setDisplayed(!1);
              else {
                var e =
                  this.column.isRowDrag(this.rowNode) ||
                  this.parent.isCustomGui;
                Z(this.column.getColDef().rowDrag)
                  ? (this.parent.setDisplayed(!0), this.parent.setVisible(e))
                  : this.parent.setDisplayed(e);
              }
            }),
            e
          );
        })(Ht),
        gs = (function (t) {
          function e(e, o, n, r) {
            var i = t.call(this, e, n, r) || this;
            return (i.beans = o), i;
          }
          return (
            cs(e, t),
            (e.prototype.postConstruct = function () {
              this.addManagedListener(
                this.beans.gridOptionsWrapper,
                "suppressRowDrag",
                this.onSuppressRowDrag.bind(this)
              ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_DATA_CHANGED,
                  this.workOutVisibility.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_CELL_CHANGED,
                  this.workOutVisibility.bind(this)
                ),
                this.workOutVisibility();
            }),
            (e.prototype.onSuppressRowDrag = function () {
              this.workOutVisibility();
            }),
            (e.prototype.workOutVisibility = function () {
              var t = this.beans.gridOptionsWrapper.isSuppressRowDrag();
              this.setDisplayedOrVisible(t);
            }),
            ds([st], e.prototype, "postConstruct", null),
            e
          );
        })(fs),
        ys = (function (t) {
          function e(e, o, n, r) {
            var i = t.call(this, e, n, r) || this;
            return (i.beans = o), i;
          }
          return (
            cs(e, t),
            (e.prototype.postConstruct = function () {
              this.addManagedListener(
                this.beans.eventService,
                zt.EVENT_SORT_CHANGED,
                this.workOutVisibility.bind(this)
              ),
                this.addManagedListener(
                  this.beans.eventService,
                  zt.EVENT_FILTER_CHANGED,
                  this.workOutVisibility.bind(this)
                ),
                this.addManagedListener(
                  this.beans.eventService,
                  zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  this.workOutVisibility.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_DATA_CHANGED,
                  this.workOutVisibility.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_CELL_CHANGED,
                  this.workOutVisibility.bind(this)
                ),
                this.addManagedListener(
                  this.beans.gridOptionsWrapper,
                  "suppressRowDrag",
                  this.onSuppressRowDrag.bind(this)
                ),
                this.workOutVisibility();
            }),
            (e.prototype.onSuppressRowDrag = function () {
              this.workOutVisibility();
            }),
            (e.prototype.workOutVisibility = function () {
              var t = this.beans.gridPanel.getRowDragFeature(),
                e = t && t.shouldPreventRowMove(),
                o = this.beans.gridOptionsWrapper.isSuppressRowDrag(),
                n = this.beans.dragAndDropService.hasExternalDropZones();
              this.setDisplayedOrVisible((e && !n) || o);
            }),
            ds([st], e.prototype, "postConstruct", null),
            e
          );
        })(fs),
        ms = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        vs = (function (t) {
          function e(e) {
            var o =
              t.call(this, '<div class="ag-popup-editor" tabindex="-1"/>') ||
              this;
            return (o.getGuiCalledOnChild = !1), (o.cellEditor = e), o;
          }
          return (
            ms(e, t),
            (e.prototype.onKeyDown = function (t) {
              wn(
                this.gridOptionsWrapper,
                t,
                this.params.node,
                this.params.column,
                !0
              ) || this.params.onKeyDown(t);
            }),
            (e.prototype.getGui = function () {
              return (
                this.getGuiCalledOnChild ||
                  (this.appendChild(this.cellEditor.getGui()),
                  (this.getGuiCalledOnChild = !0)),
                t.prototype.getGui.call(this)
              );
            }),
            (e.prototype.init = function (o) {
              var n = this;
              (this.params = o),
                this.gridOptionsWrapper.setDomData(
                  this.getGui(),
                  e.DOM_KEY_POPUP_EDITOR_WRAPPER,
                  !0
                ),
                this.addDestroyFunc(function () {
                  return n.destroyBean(n.cellEditor);
                }),
                this.addManagedListener(
                  t.prototype.getGui.call(this),
                  "keydown",
                  this.onKeyDown.bind(this)
                );
            }),
            (e.prototype.afterGuiAttached = function () {
              this.cellEditor.afterGuiAttached &&
                this.cellEditor.afterGuiAttached();
            }),
            (e.prototype.getValue = function () {
              return this.cellEditor.getValue();
            }),
            (e.prototype.isCancelBeforeStart = function () {
              return (
                !!this.cellEditor.isCancelBeforeStart &&
                this.cellEditor.isCancelBeforeStart()
              );
            }),
            (e.prototype.isCancelAfterEnd = function () {
              return (
                !!this.cellEditor.isCancelAfterEnd &&
                this.cellEditor.isCancelAfterEnd()
              );
            }),
            (e.prototype.getPopupPosition = function () {
              if (this.cellEditor.getPopupPosition)
                return this.cellEditor.getPopupPosition();
            }),
            (e.prototype.focusIn = function () {
              this.cellEditor.focusIn && this.cellEditor.focusIn();
            }),
            (e.prototype.focusOut = function () {
              this.cellEditor.focusOut && this.cellEditor.focusOut();
            }),
            (e.DOM_KEY_POPUP_EDITOR_WRAPPER = "popupEditorWrapper"),
            e
          );
        })(zn),
        Cs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ws = (function (t) {
          function e(e, o, n, r, i) {
            var s =
              t.call(
                this,
                '<div class="ag-drag-handle ag-row-drag" draggable="true"></div>'
              ) || this;
            return (
              (s.rowNode = e),
              (s.column = o),
              (s.cellValue = n),
              (s.beans = r),
              (s.eCell = i),
              s
            );
          }
          return (
            Cs(e, t),
            (e.prototype.postConstruct = function () {
              this.getGui().appendChild(
                yn("rowDrag", this.beans.gridOptionsWrapper, null)
              ),
                this.addGuiEventListener("mousedown", function (t) {
                  t.stopPropagation();
                }),
                this.addDragSource(),
                this.checkVisibility();
            }),
            (e.prototype.addDragSource = function () {
              this.addGuiEventListener(
                "dragstart",
                this.onDragStart.bind(this)
              );
            }),
            (e.prototype.onDragStart = function (t) {
              var e = this,
                o = this.column.getColDef().dndSourceOnRowDrag,
                n = Te();
              n || t.dataTransfer.setDragImage(this.eCell, 0, 0),
                o
                  ? o({ rowNode: this.rowNode, dragEvent: t })
                  : (function () {
                      try {
                        var o = JSON.stringify(e.rowNode.data);
                        n
                          ? t.dataTransfer.setData("text", o)
                          : (t.dataTransfer.setData("application/json", o),
                            t.dataTransfer.setData("text/plain", o));
                      } catch (r) {}
                    })();
            }),
            (e.prototype.checkVisibility = function () {
              var t = this.column.isDndSource(this.rowNode);
              this.setDisplayed(t);
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([st], e.prototype, "postConstruct", null),
            e
          );
        })(jn),
        bs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Es = function () {
          return (Es =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Ss = "ag-cell-range-top",
        Os = "ag-cell-range-right",
        _s = "ag-cell-range-bottom",
        Rs = "ag-cell-range-left",
        Ps = "ag-cell-focus",
        Ts = "ag-cell-first-right-pinned",
        As = "ag-cell-last-left-pinned",
        Ds = "ag-cell-not-inline-editing",
        xs = "ag-cell-range-selected",
        Fs = "ag-column-hover",
        Ns = "ag-cell-wrap-text",
        Ms = "ag-cell-range-chart",
        Is = "ag-cell-range-single-cell",
        Ls = "ag-cell-range-handle",
        Gs = (function (t) {
          function o(e, o, n, r, i, s, a) {
            var l = t.call(this) || this;
            return (
              (l.hasChartRange = !1),
              (l.editingCell = !1),
              (l.suppressRefreshCell = !1),
              (l.tooltipFeatureEnabled = !1),
              (l.scope = null),
              (l.cellEditorVersion = 0),
              (l.cellRendererVersion = 0),
              (l.scope = e),
              (l.beans = o),
              (l.column = n),
              (l.rowNode = r),
              (l.rowComp = i),
              (l.autoHeightCell = s),
              (l.printLayout = a),
              l.createGridCellVo(),
              (l.rangeSelectionEnabled =
                l.beans.rangeController &&
                o.gridOptionsWrapper.isEnableRangeSelection()),
              (l.cellFocused = l.beans.focusController.isCellFocused(
                l.cellPosition
              )),
              (l.firstRightPinned = l.column.isFirstRightPinned()),
              (l.lastLeftPinned = l.column.isLastLeftPinned()),
              l.rangeSelectionEnabled &&
                l.beans.rangeController &&
                ((l.rangeCount = l.beans.rangeController.getCellRangeCount(
                  l.cellPosition
                )),
                (l.hasChartRange = l.getHasChartRange())),
              l.getValueAndFormat(),
              l.setUsingWrapper(),
              l.chooseCellRenderer(),
              l.setupColSpan(),
              (l.rowSpan = l.column.getRowSpan(l.rowNode)),
              l
            );
          }
          return (
            bs(o, t),
            (o.prototype.getCreateTemplate = function () {
              var t = this.beans.gridOptionsWrapper.isEnableCellTextSelection()
                  ? ""
                  : ' unselectable="on"',
                e = [],
                o = this.column,
                n = this.getCellWidth(),
                i = this.modifyLeftForPrintLayout(this.getCellLeft()),
                s = this.getInitialValueToRender(),
                a = H(this.column, "colDef.template", null) ? s : Zt(s);
              this.tooltip = this.getToolTip();
              var l = Zt(this.tooltip),
                u = Zt(o.getId()),
                p = this.preProcessStylesFromColDef(),
                c = this.getInitialCssClasses(),
                d = this.getStylesForRowSpanning(),
                h = Zt(
                  this.beans.columnController
                    .getAriaColumnIndex(this.column)
                    .toString()
                );
              return (
                e.push("<div"),
                e.push(' tabindex="-1"'),
                e.push("" + t),
                e.push(' role="gridcell"'),
                e.push(' aria-colindex="' + h + '"'),
                e.push(' comp-id="' + this.getCompId() + '" '),
                e.push(' col-id="' + u + '"'),
                e.push(' class="' + Zt(c.join(" ")) + '"'),
                this.beans.gridOptionsWrapper.isEnableBrowserTooltips() &&
                  r(l) &&
                  e.push(' title="' + l + '"'),
                this.rangeSelectionEnabled &&
                  e.push(
                    ' aria-selected="' +
                      (this.rangeCount ? "true" : "false") +
                      '"'
                  ),
                e.push(
                  ' style="width: ' +
                    Number(n) +
                    "px; left: " +
                    Number(i) +
                    "px; " +
                    Zt(p) +
                    " " +
                    Zt(d) +
                    '">'
                ),
                this.usingWrapper
                  ? e.push(this.getCellWrapperString(a))
                  : null != a && e.push(a),
                e.push("</div>"),
                e.join("")
              );
            }),
            (o.prototype.getCellWrapperString = function (t) {
              return (
                void 0 === t && (t = ""),
                '<div ref="eCellWrapper" class="ag-cell-wrapper" role="presentation">\n            <span ref="eCellValue" role="presentation" class="ag-cell-value"' +
                  (this.beans.gridOptionsWrapper.isEnableCellTextSelection()
                    ? ""
                    : ' unselectable="on"') +
                  ">\n                " +
                  (null != t ? t : "") +
                  "\n            </span>\n        </div>"
              );
            }),
            (o.prototype.getStylesForRowSpanning = function () {
              return 1 === this.rowSpan
                ? ""
                : "height: " +
                    this.beans.gridOptionsWrapper.getRowHeightAsNumber() *
                      this.rowSpan +
                    "px; z-index: 1;";
            }),
            (o.prototype.afterAttached = function () {
              var t = '[comp-id="' + this.getCompId() + '"]',
                e = this.eParentRow.querySelector(t);
              this.setGui(e),
                this.addDomData(),
                this.populateTemplate(),
                this.createCellRendererInstance(!0),
                this.angular1Compile(),
                this.refreshHandle(),
                r(this.tooltip) && this.createTooltipFeatureIfNeeded();
            }),
            (o.prototype.createTooltipFeatureIfNeeded = function () {
              this.beans.gridOptionsWrapper.isEnableBrowserTooltips() ||
                this.tooltipFeatureEnabled ||
                (this.createManagedBean(new Vn(this), this.beans.context),
                (this.tooltipFeatureEnabled = !0));
            }),
            (o.prototype.onColumnHover = function () {
              var t = this.beans.columnHoverService.isHovered(this.column);
              this.addOrRemoveCssClass(Fs, t);
            }),
            (o.prototype.onCellChanged = function (t) {
              t.column === this.column && this.refreshCell({});
            }),
            (o.prototype.getCellLeft = function () {
              return (
                this.beans.gridOptionsWrapper.isEnableRtl() && this.colsSpanning
                  ? y(this.colsSpanning)
                  : this.column
              ).getLeft();
            }),
            (o.prototype.getCellWidth = function () {
              return this.colsSpanning
                ? this.colsSpanning.reduce(function (t, e) {
                    return t + e.getActualWidth();
                  }, 0)
                : this.column.getActualWidth();
            }),
            (o.prototype.onFlashCells = function (t) {
              var e = this.beans.cellPositionUtils.createId(this.cellPosition);
              t.cells[e] && this.animateCell("highlight");
            }),
            (o.prototype.setupColSpan = function () {
              i(this.getComponentHolder().colSpan) ||
                (this.addManagedListener(
                  this.beans.eventService,
                  zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                  this.onDisplayColumnsChanged.bind(this)
                ),
                this.addManagedListener(
                  this.beans.eventService,
                  zt.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
                  this.onWidthChanged.bind(this)
                ),
                (this.colsSpanning = this.getColSpanningList()));
            }),
            (o.prototype.getColSpanningList = function () {
              var t = this.column.getColSpan(this.rowNode),
                e = [];
              if (1 === t) e.push(this.column);
              else
                for (
                  var o = this.column, n = this.column.getPinned(), r = 0;
                  o &&
                  r < t &&
                  (e.push(o),
                  (o = this.beans.columnController.getDisplayedColAfter(o)) &&
                    !i(o)) &&
                  n === o.getPinned();
                  r++
                );
              return e;
            }),
            (o.prototype.onDisplayColumnsChanged = function () {
              var t = this.getColSpanningList();
              m(this.colsSpanning, t) ||
                ((this.colsSpanning = t),
                this.onWidthChanged(),
                this.onLeftChanged());
            }),
            (o.prototype.refreshAriaIndex = function () {
              var t = this.beans.columnController.getAriaColumnIndex(
                this.column
              );
              Zo(this.getGui(), t);
            }),
            (o.prototype.getInitialCssClasses = function () {
              var t = ["ag-cell", Ds];
              return (
                this.autoHeightCell || t.push("ag-cell-auto-height"),
                !this.beans.gridOptionsWrapper.isSuppressCellSelection() &&
                  this.cellFocused &&
                  t.push(Ps),
                this.firstRightPinned && t.push(Ts),
                this.lastLeftPinned && t.push(As),
                this.beans.columnHoverService.isHovered(this.column) &&
                  t.push(Fs),
                O(t, this.preProcessClassesFromColDef()),
                O(t, this.preProcessCellClassRules()),
                O(t, this.getInitialRangeClasses()),
                this.usingWrapper || t.push("ag-cell-value"),
                (this.wrapText = 1 == this.column.getColDef().wrapText),
                this.wrapText && t.push(Ns),
                t
              );
            }),
            (o.prototype.getInitialValueToRender = function () {
              if (this.usingCellRenderer)
                return "string" == typeof this.cellRendererGui
                  ? this.cellRendererGui
                  : "";
              var t = this.getComponentHolder();
              return t.template
                ? t.template
                : t.templateUrl
                ? this.beans.templateService.getTemplate(
                    t.templateUrl,
                    this.refreshCell.bind(this, !0)
                  ) || ""
                : this.getValueToUse();
            }),
            (o.prototype.getRenderedRow = function () {
              return this.rowComp;
            }),
            (o.prototype.isSuppressNavigable = function () {
              return this.column.isSuppressNavigable(this.rowNode);
            }),
            (o.prototype.getCellRenderer = function () {
              return this.cellRenderer;
            }),
            (o.prototype.getCellEditor = function () {
              return this.cellEditor;
            }),
            (o.prototype.onNewColumnsLoaded = function () {
              this.postProcessWrapText(), this.postProcessCellClassRules();
            }),
            (o.prototype.postProcessWrapText = function () {
              var t = 1 == this.column.getColDef().wrapText;
              t !== this.wrapText &&
                ((this.wrapText = t),
                this.addOrRemoveCssClass(Ns, this.wrapText));
            }),
            (o.prototype.refreshCell = function (t) {
              if (!this.suppressRefreshCell && !this.editingCell) {
                var e = this.getComponentHolder(),
                  o = t && t.newData,
                  n = (t && t.suppressFlash) || e.suppressCellFlash,
                  r = t && t.forceRefresh,
                  i = this.value;
                this.value = this.getValue();
                var s = !this.valuesAreEqual(i, this.value);
                if (r || s) {
                  (this.valueFormatted =
                    this.beans.valueFormatterService.formatValue(
                      this.column,
                      this.rowNode,
                      this.scope,
                      this.value
                    )),
                    (!o && this.attemptCellRendererRefresh()) ||
                      this.replaceContentsAfterRefresh();
                  var a =
                    this.beans.filterManager.isSuppressFlashingCellsBecauseFiltering();
                  !n &&
                    !a &&
                    (this.beans.gridOptionsWrapper.isEnableCellChangeFlash() ||
                      e.enableCellChangeFlash) &&
                    this.flashCell(),
                    this.postProcessStylesFromColDef(),
                    this.postProcessClassesFromColDef();
                }
                this.updateAngular1ScopeAndCompile(),
                  this.refreshToolTip(),
                  this.postProcessCellClassRules();
              }
            }),
            (o.prototype.flashCell = function (t) {
              this.animateCell(
                "data-changed",
                t && t.flashDelay,
                t && t.fadeDelay
              );
            }),
            (o.prototype.animateCell = function (t, e, o) {
              var n = this,
                i = "ag-cell-" + t,
                s = "ag-cell-" + t + "-animation",
                a = this.getGui(),
                l = this.beans.gridOptionsWrapper;
              e || (e = l.getCellFlashDelay()),
                r(o) || (o = l.getCellFadeDelay()),
                this.addCssClass(i),
                this.removeCssClass(s),
                window.setTimeout(function () {
                  n.removeCssClass(i),
                    n.addCssClass(s),
                    (a.style.transition = "background-color " + o + "ms"),
                    window.setTimeout(function () {
                      n.removeCssClass(s), a.style.removeProperty("transition");
                    }, o);
                }, e);
            }),
            (o.prototype.replaceContentsAfterRefresh = function () {
              this.setUsingWrapper(),
                ro(this.eCellValue),
                (this.cellRenderer = this.beans.context.destroyBean(
                  this.cellRenderer
                )),
                (this.cellRendererGui = null),
                this.putDataIntoCellAfterRefresh(),
                this.updateAngular1ScopeAndCompile();
            }),
            (o.prototype.updateAngular1ScopeAndCompile = function () {
              this.beans.gridOptionsWrapper.isAngularCompileRows() &&
                this.scope &&
                ((this.scope.data = Es({}, this.rowNode.data)),
                this.angular1Compile());
            }),
            (o.prototype.angular1Compile = function () {
              if (this.beans.gridOptionsWrapper.isAngularCompileRows()) {
                var t = this.getGui();
                if (
                  !t.classList.contains("ng-scope") ||
                  0 === t.childElementCount
                ) {
                  var e = this.beans.$compile(t)(this.scope);
                  this.addDestroyFunc(function () {
                    return e.remove();
                  });
                }
              }
            }),
            (o.prototype.postProcessStylesFromColDef = function () {
              var t = this.processStylesFromColDef();
              t && go(this.getGui(), t);
            }),
            (o.prototype.preProcessStylesFromColDef = function () {
              return Do(this.processStylesFromColDef());
            }),
            (o.prototype.processStylesFromColDef = function () {
              var t = this.getComponentHolder();
              if (t.cellStyle) {
                var e = void 0;
                if ("function" == typeof t.cellStyle) {
                  var o = {
                    column: this.column,
                    value: this.value,
                    colDef: t,
                    data: this.rowNode.data,
                    node: this.rowNode,
                    rowIndex: this.rowNode.rowIndex,
                    $scope: this.scope,
                    api: this.beans.gridOptionsWrapper.getApi(),
                    columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                    context: this.beans.gridOptionsWrapper.getContext(),
                  };
                  e = (0, t.cellStyle)(o);
                } else e = t.cellStyle;
                return e;
              }
            }),
            (o.prototype.postProcessClassesFromColDef = function () {
              var t = this;
              this.processClassesFromColDef(function (e) {
                return t.addCssClass(e);
              });
            }),
            (o.prototype.preProcessClassesFromColDef = function () {
              var t = [];
              return (
                this.processClassesFromColDef(function (e) {
                  return t.push(e);
                }),
                t
              );
            }),
            (o.prototype.processClassesFromColDef = function (t) {
              var e = this.getComponentHolder(),
                o = {
                  value: this.value,
                  data: this.rowNode.data,
                  node: this.rowNode,
                  colDef: e,
                  rowIndex: this.rowNode.rowIndex,
                  $scope: this.scope,
                  api: this.beans.gridOptionsWrapper.getApi(),
                  columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                  context: this.beans.gridOptionsWrapper.getContext(),
                };
              this.beans.stylingService.processStaticCellClasses(e, o, t);
            }),
            (o.prototype.putDataIntoCellAfterRefresh = function () {
              var t = this.getComponentHolder();
              if (t.template) this.eCellValue.innerHTML = t.template;
              else if (t.templateUrl) {
                var e = this.beans.templateService.getTemplate(
                  t.templateUrl,
                  this.refreshCell.bind(this, !0)
                );
                e && (this.eCellValue.innerHTML = e);
              } else if ((this.chooseCellRenderer(), this.usingCellRenderer))
                this.createCellRendererInstance();
              else {
                var o = this.getValueToUse();
                null != o && (this.eCellValue.innerHTML = Zt(o) || "");
              }
            }),
            (o.prototype.attemptCellRendererRefresh = function () {
              if (
                i(this.cellRenderer) ||
                !this.cellRenderer ||
                i(this.cellRenderer.refresh)
              )
                return !1;
              var t = this.createCellRendererParams(),
                e = this.beans.userComponentFactory.createFinalParams(
                  this.getComponentHolder(),
                  this.cellRendererType,
                  t
                ),
                o = this.cellRenderer.refresh(e);
              return !0 === o || void 0 === o;
            }),
            (o.prototype.refreshToolTip = function () {
              var t = this.getToolTip();
              if (this.tooltip !== t) {
                this.createTooltipFeatureIfNeeded();
                var e = r(t);
                (e && this.tooltip === t.toString()) ||
                  ((this.tooltip = t),
                  this.beans.gridOptionsWrapper.isEnableBrowserTooltips() &&
                    (e
                      ? this.eCellValue.setAttribute("title", this.tooltip)
                      : this.eCellValue.removeAttribute("title")));
              }
            }),
            (o.prototype.valuesAreEqual = function (t, e) {
              var o = this.getComponentHolder(),
                n = o ? o.equals : null;
              return n ? n(t, e) : t === e;
            }),
            (o.prototype.getToolTip = function () {
              var t = this.getComponentHolder(),
                e = this.rowNode.data;
              if (t.tooltipField && r(e))
                return B(
                  e,
                  t.tooltipField,
                  this.column.isTooltipFieldContainsDots()
                );
              var o = t.tooltipValueGetter;
              return o
                ? o(
                    Es(
                      Es(
                        {
                          api: this.beans.gridOptionsWrapper.getApi(),
                          columnApi:
                            this.beans.gridOptionsWrapper.getColumnApi(),
                          context: this.beans.gridOptionsWrapper.getContext(),
                        },
                        this.getTooltipParams()
                      ),
                      { value: this.value }
                    )
                  )
                : null;
            }),
            (o.prototype.getTooltipParams = function () {
              return {
                location: "cell",
                colDef: this.getComponentHolder(),
                column: this.getColumn(),
                rowIndex: this.cellPosition.rowIndex,
                node: this.rowNode,
                data: this.rowNode.data,
                value: this.getTooltipText(),
                valueFormatted: this.valueFormatted,
              };
            }),
            (o.prototype.getTooltipText = function (t) {
              return (
                void 0 === t && (t = !0), t ? Zt(this.tooltip) : this.tooltip
              );
            }),
            (o.prototype.processCellClassRules = function (t, e) {
              var o = this.getComponentHolder(),
                n = {
                  value: this.value,
                  data: this.rowNode.data,
                  node: this.rowNode,
                  colDef: o,
                  rowIndex: this.cellPosition.rowIndex,
                  api: this.beans.gridOptionsWrapper.getApi(),
                  columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                  $scope: this.scope,
                  context: this.beans.gridOptionsWrapper.getContext(),
                };
              this.beans.stylingService.processClassRules(
                o.cellClassRules,
                n,
                t,
                e
              );
            }),
            (o.prototype.postProcessCellClassRules = function () {
              var t = this;
              this.processCellClassRules(
                function (e) {
                  return t.addCssClass(e);
                },
                function (e) {
                  return t.removeCssClass(e);
                }
              );
            }),
            (o.prototype.preProcessCellClassRules = function () {
              var t = [];
              return (
                this.processCellClassRules(
                  function (e) {
                    return t.push(e);
                  },
                  function (t) {}
                ),
                t
              );
            }),
            (o.prototype.setUsingWrapper = function () {
              var t = this.getComponentHolder();
              if (this.rowNode.rowPinned)
                return (
                  (this.usingWrapper = !1),
                  (this.includeSelectionComponent = !1),
                  (this.includeRowDraggingComponent = !1),
                  void (this.includeDndSourceComponent = !1)
                );
              var e = "function" == typeof t.rowDrag,
                o = "function" == typeof t.dndSource;
              (this.includeSelectionComponent =
                "function" == typeof t.checkboxSelection ||
                !0 === t.checkboxSelection),
                (this.includeRowDraggingComponent = e || !0 === t.rowDrag),
                (this.includeDndSourceComponent = o || !0 === t.dndSource);
              var n = this.beans.gridOptionsWrapper.isEnableCellTextSelection();
              this.usingWrapper =
                n ||
                this.includeRowDraggingComponent ||
                this.includeSelectionComponent ||
                this.includeDndSourceComponent;
            }),
            (o.prototype.chooseCellRenderer = function () {
              var t = this.getComponentHolder();
              if (t.template || t.templateUrl) this.usingCellRenderer = !1;
              else {
                var e = this.createCellRendererParams();
                this.rowNode.rowPinned &&
                this.beans.userComponentFactory.lookupComponentClassDef(
                  t,
                  "pinnedRowCellRenderer",
                  e
                )
                  ? ((this.cellRendererType = o.CELL_RENDERER_TYPE_PINNED),
                    (this.usingCellRenderer = !0))
                  : this.beans.userComponentFactory.lookupComponentClassDef(
                      t,
                      "cellRenderer",
                      e
                    )
                  ? ((this.cellRendererType = o.CELL_RENDERER_TYPE_NORMAL),
                    (this.usingCellRenderer = !0))
                  : (this.usingCellRenderer = !1);
              }
            }),
            (o.prototype.createCellRendererInstance = function (t) {
              var e = this;
              if ((void 0 === t && (t = !1), this.usingCellRenderer)) {
                var n = this.beans.gridOptionsWrapper.isAngularCompileRows(),
                  r = this.beans.gridOptionsWrapper.isSuppressAnimationFrame();
                (n || r || this.autoHeightCell) && (t = !1);
                var i = this.createCellRendererParams();
                this.cellRendererVersion++;
                var s = this.afterCellRendererCreated.bind(
                    this,
                    this.cellRendererVersion
                  ),
                  a = this.cellRendererType === o.CELL_RENDERER_TYPE_NORMAL;
                (this.createCellRendererFunc = function () {
                  e.createCellRendererFunc = null;
                  var t = e.beans.userComponentFactory.newCellRenderer(
                    e.getComponentHolder(),
                    i,
                    !a
                  );
                  t && t.then(s);
                }),
                  t
                    ? this.beans.taskQueue.createTask(
                        this.createCellRendererFunc,
                        this.rowNode.rowIndex,
                        "createTasksP2"
                      )
                    : this.createCellRendererFunc();
              }
            }),
            (o.prototype.afterCellRendererCreated = function (t, e) {
              this.isAlive() && t === this.cellRendererVersion
                ? ((this.cellRenderer = e),
                  (this.cellRendererGui = this.cellRenderer.getGui()),
                  i(this.cellRendererGui) ||
                    this.editingCell ||
                    this.eCellValue.appendChild(this.cellRendererGui))
                : this.beans.context.destroyBean(e);
            }),
            (o.prototype.createCellRendererParams = function () {
              var t = this;
              return {
                value: this.value,
                valueFormatted: this.valueFormatted,
                getValue: this.getValue.bind(this),
                setValue: function (e) {
                  return t.beans.valueService.setValue(t.rowNode, t.column, e);
                },
                formatValue: this.formatValue.bind(this),
                data: this.rowNode.data,
                node: this.rowNode,
                colDef: this.getComponentHolder(),
                column: this.column,
                $scope: this.scope,
                rowIndex: this.cellPosition.rowIndex,
                api: this.beans.gridOptionsWrapper.getApi(),
                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                context: this.beans.gridOptionsWrapper.getContext(),
                refreshCell: this.refreshCell.bind(this),
                eGridCell: this.getGui(),
                eParentOfValue: this.eCellValue,
                registerRowDragger: function (e) {
                  return t.addRowDragging(e);
                },
                addRowCompListener: this.rowComp
                  ? this.rowComp.addEventListener.bind(this.rowComp)
                  : null,
                addRenderedRowListener: function (e, o) {
                  console.warn(
                    "AG Grid: since AG Grid .v11, params.addRenderedRowListener() is now params.addRowCompListener()"
                  ),
                    t.rowComp && t.rowComp.addEventListener(e, o);
                },
              };
            }),
            (o.prototype.formatValue = function (t) {
              var e = this.beans.valueFormatterService.formatValue(
                this.column,
                this.rowNode,
                this.scope,
                t
              );
              return null != e ? e : t;
            }),
            (o.prototype.getValueToUse = function () {
              return null != this.valueFormatted
                ? this.valueFormatted
                : this.value;
            }),
            (o.prototype.getValueAndFormat = function () {
              (this.value = this.getValue()),
                (this.valueFormatted =
                  this.beans.valueFormatterService.formatValue(
                    this.column,
                    this.rowNode,
                    this.scope,
                    this.value
                  ));
            }),
            (o.prototype.getValue = function () {
              var t =
                  this.rowNode.leafGroup &&
                  this.beans.columnController.isPivotMode(),
                e =
                  this.rowNode.group &&
                  this.rowNode.expanded &&
                  !this.rowNode.footer &&
                  !t,
                o = this.beans.gridOptionsWrapper.isGroupIncludeFooter(),
                n = this.beans.gridOptionsWrapper.isGroupSuppressBlankHeader();
              return this.beans.valueService.getValue(
                this.column,
                this.rowNode,
                !1,
                e && o && !n
              );
            }),
            (o.prototype.onMouseEvent = function (t, e) {
              if (!At(e))
                switch (t) {
                  case "click":
                    this.onCellClicked(e);
                    break;
                  case "mousedown":
                    this.onMouseDown(e);
                    break;
                  case "dblclick":
                    this.onCellDoubleClicked(e);
                    break;
                  case "mouseout":
                    this.onMouseOut(e);
                    break;
                  case "mouseover":
                    this.onMouseOver(e);
                }
            }),
            (o.prototype.dispatchCellContextMenuEvent = function (t) {
              var e = this.getComponentHolder(),
                o = this.createEvent(t, zt.EVENT_CELL_CONTEXT_MENU);
              this.beans.eventService.dispatchEvent(o),
                e.onCellContextMenu &&
                  window.setTimeout(function () {
                    return e.onCellContextMenu(o);
                  }, 0);
            }),
            (o.prototype.createEvent = function (t, e) {
              var o = {
                node: this.rowNode,
                data: this.rowNode.data,
                value: this.value,
                column: this.column,
                colDef: this.getComponentHolder(),
                context: this.beans.gridOptionsWrapper.getContext(),
                api: this.beans.gridApi,
                columnApi: this.beans.columnApi,
                rowPinned: this.rowNode.rowPinned,
                event: t,
                type: e,
                rowIndex: this.rowNode.rowIndex,
              };
              return this.scope && (o.$scope = this.scope), o;
            }),
            (o.prototype.onMouseOut = function (t) {
              var e = this.createEvent(t, zt.EVENT_CELL_MOUSE_OUT);
              this.beans.eventService.dispatchEvent(e),
                this.beans.columnHoverService.clearMouseOver();
            }),
            (o.prototype.onMouseOver = function (t) {
              var e = this.createEvent(t, zt.EVENT_CELL_MOUSE_OVER);
              this.beans.eventService.dispatchEvent(e),
                this.beans.columnHoverService.setMouseOver([this.column]);
            }),
            (o.prototype.onCellDoubleClicked = function (t) {
              var e = this.getComponentHolder(),
                o = this.createEvent(t, zt.EVENT_CELL_DOUBLE_CLICKED);
              this.beans.eventService.dispatchEvent(o),
                "function" == typeof e.onCellDoubleClicked &&
                  window.setTimeout(function () {
                    return e.onCellDoubleClicked(o);
                  }, 0),
                !this.beans.gridOptionsWrapper.isSingleClickEdit() &&
                  !this.beans.gridOptionsWrapper.isSuppressClickEdit() &&
                  this.startRowOrCellEdit();
            }),
            (o.prototype.startRowOrCellEdit = function (t, e) {
              this.beans.gridOptionsWrapper.isFullRowEdit()
                ? this.rowComp.startRowEditing(t, e, this)
                : this.startEditingIfEnabled(t, e, !0);
            }),
            (o.prototype.isCellEditable = function () {
              return this.column.isCellEditable(this.rowNode);
            }),
            (o.prototype.startEditingIfEnabled = function (t, e, o) {
              if (
                (void 0 === t && (t = null),
                void 0 === e && (e = null),
                void 0 === o && (o = !1),
                this.isCellEditable() && !this.editingCell)
              ) {
                (this.editingCell = !0), this.cellEditorVersion++;
                var n = this.afterCellEditorCreated.bind(
                    this,
                    this.cellEditorVersion
                  ),
                  r = this.createCellEditorParams(t, e, o);
                this.createCellEditor(r).then(n),
                  i(this.cellEditor) && o && this.focusCell(!0);
              }
            }),
            (o.prototype.createCellEditor = function (t) {
              var e = this;
              return this.beans.userComponentFactory
                .newCellEditor(this.column.getColDef(), t)
                .then(function (o) {
                  var n = o;
                  if (!n.isPopup || !n.isPopup()) return n;
                  e.beans.gridOptionsWrapper.isFullRowEdit() &&
                    console.warn(
                      "AG Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors."
                    );
                  var r = new vs(n);
                  return e.beans.context.createBean(r), r.init(t), r;
                });
            }),
            (o.prototype.afterCellEditorCreated = function (t, e) {
              if (t === this.cellEditorVersion && this.editingCell) {
                if (e.isCancelBeforeStart && e.isCancelBeforeStart())
                  return (
                    this.beans.context.destroyBean(e),
                    void (this.editingCell = !1)
                  );
                if (!e.getGui)
                  return (
                    console.warn(
                      "AG Grid: cellEditor for column " +
                        this.column.getId() +
                        " is missing getGui() method"
                    ),
                    e.render &&
                      console.warn(
                        "AG Grid: we found 'render' on the component, are you trying to set a React renderer but added it as colDef.cellEditor instead of colDef.cellEditorFmk?"
                      ),
                    this.beans.context.destroyBean(e),
                    void (this.editingCell = !1)
                  );
                (this.cellEditor = e),
                  (this.cellEditorInPopup =
                    void 0 !== e.isPopup && e.isPopup()),
                  this.setInlineEditingClass(),
                  this.cellEditorInPopup
                    ? this.addPopupCellEditor()
                    : this.addInCellEditor(),
                  e.afterGuiAttached && e.afterGuiAttached();
                var o = this.createEvent(null, zt.EVENT_CELL_EDITING_STARTED);
                this.beans.eventService.dispatchEvent(o);
              } else this.beans.context.destroyBean(e);
            }),
            (o.prototype.addInCellEditor = function () {
              var t = this.getGui();
              t.contains(document.activeElement) && t.focus(),
                this.clearCellElement(),
                this.cellEditor && t.appendChild(this.cellEditor.getGui()),
                this.angular1Compile();
            }),
            (o.prototype.addPopupCellEditor = function () {
              var t = this,
                e = this.cellEditor && this.cellEditor.getGui();
              if (e) {
                var o = this.beans.popupService,
                  n =
                    this.beans.gridOptionsWrapper.isStopEditingWhenGridLosesFocus(),
                  r =
                    this.cellEditor && this.cellEditor.getPopupPosition
                      ? this.cellEditor.getPopupPosition()
                      : "over",
                  i = {
                    column: this.column,
                    rowNode: this.rowNode,
                    type: "popupCellEditor",
                    eventSource: this.getGui(),
                    ePopup: e,
                    keepWithinBounds: !0,
                  },
                  s =
                    "under" === r
                      ? o.positionPopupUnderComponent.bind(o, i)
                      : o.positionPopupOverComponent.bind(o, i),
                  a = o.addPopup({
                    modal: n,
                    eChild: e,
                    closeOnEsc: !0,
                    closedCallback: function () {
                      t.onPopupEditorClosed();
                    },
                    anchorToElement: this.getGui(),
                    positionCallback: s,
                  });
                a && (this.hideEditorPopup = a.hideFunc),
                  this.angular1Compile();
              }
            }),
            (o.prototype.onPopupEditorClosed = function () {
              this.editingCell && this.stopRowOrCellEdit();
            }),
            (o.prototype.setInlineEditingClass = function () {
              if (this.isAlive()) {
                var t = this.editingCell && !this.cellEditorInPopup,
                  e = this.editingCell && this.cellEditorInPopup;
                this.addOrRemoveCssClass("ag-cell-inline-editing", t),
                  this.addOrRemoveCssClass(Ds, !t),
                  this.addOrRemoveCssClass("ag-cell-popup-editing", e),
                  je(this.getGui().parentNode, "ag-row-inline-editing", t),
                  je(this.getGui().parentNode, "ag-row-not-inline-editing", !t);
              }
            }),
            (o.prototype.createCellEditorParams = function (t, e, o) {
              return {
                value: this.getValue(),
                keyPress: t,
                charPress: e,
                column: this.column,
                colDef: this.column.getColDef(),
                rowIndex: this.cellPosition.rowIndex,
                node: this.rowNode,
                data: this.rowNode.data,
                api: this.beans.gridOptionsWrapper.getApi(),
                cellStartedEdit: o,
                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                context: this.beans.gridOptionsWrapper.getContext(),
                $scope: this.scope,
                onKeyDown: this.onKeyDown.bind(this),
                stopEditing: this.stopEditingAndFocus.bind(this),
                eGridCell: this.getGui(),
                parseValue: this.parseValue.bind(this),
                formatValue: this.formatValue.bind(this),
              };
            }),
            (o.prototype.stopEditingAndFocus = function (t) {
              void 0 === t && (t = !1),
                this.stopRowOrCellEdit(),
                this.focusCell(!0),
                t || this.navigateAfterEdit();
            }),
            (o.prototype.parseValue = function (t) {
              var e = this.getComponentHolder(),
                o = {
                  node: this.rowNode,
                  data: this.rowNode.data,
                  oldValue: this.value,
                  newValue: t,
                  colDef: e,
                  column: this.column,
                  api: this.beans.gridOptionsWrapper.getApi(),
                  columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                  context: this.beans.gridOptionsWrapper.getContext(),
                },
                n = e.valueParser;
              return r(n) ? this.beans.expressionService.evaluate(n, o) : t;
            }),
            (o.prototype.focusCell = function (t) {
              void 0 === t && (t = !1),
                this.beans.focusController.setFocusedCell(
                  this.cellPosition.rowIndex,
                  this.column,
                  this.rowNode.rowPinned,
                  t
                );
            }),
            (o.prototype.setFocusInOnEditor = function () {
              this.editingCell &&
                (this.cellEditor && this.cellEditor.focusIn
                  ? this.cellEditor.focusIn()
                  : this.focusCell(!0));
            }),
            (o.prototype.isEditing = function () {
              return this.editingCell;
            }),
            (o.prototype.onKeyDown = function (t) {
              var e = t.which || t.keyCode;
              switch (e) {
                case $n.ENTER:
                  this.onEnterKeyDown(t);
                  break;
                case $n.F2:
                  this.onF2KeyDown();
                  break;
                case $n.ESCAPE:
                  this.onEscapeKeyDown();
                  break;
                case $n.TAB:
                  this.onTabKeyDown(t);
                  break;
                case $n.BACKSPACE:
                case $n.DELETE:
                  this.onBackspaceOrDeleteKeyPressed(e);
                  break;
                case $n.DOWN:
                case $n.UP:
                case $n.RIGHT:
                case $n.LEFT:
                  this.onNavigationKeyPressed(t, e);
              }
            }),
            (o.prototype.setFocusOutOnEditor = function () {
              this.editingCell &&
                this.cellEditor &&
                this.cellEditor.focusOut &&
                this.cellEditor.focusOut();
            }),
            (o.prototype.onNavigationKeyPressed = function (t, e) {
              this.editingCell ||
                (t.shiftKey && this.rangeSelectionEnabled
                  ? this.onShiftRangeSelect(e)
                  : this.beans.rowRenderer.navigateToNextCell(
                      t,
                      e,
                      this.cellPosition,
                      !0
                    ),
                t.preventDefault());
            }),
            (o.prototype.onShiftRangeSelect = function (t) {
              if (this.beans.rangeController) {
                var e =
                  this.beans.rangeController.extendLatestRangeInDirection(t);
                e && this.beans.rowRenderer.ensureCellVisible(e);
              }
            }),
            (o.prototype.onTabKeyDown = function (t) {
              this.beans.rowRenderer.onTabKeyDown(this, t);
            }),
            (o.prototype.onBackspaceOrDeleteKeyPressed = function (t) {
              this.editingCell || this.startRowOrCellEdit(t);
            }),
            (o.prototype.onEnterKeyDown = function (t) {
              this.editingCell || this.rowComp.isEditing()
                ? this.stopEditingAndFocus()
                : this.beans.gridOptionsWrapper.isEnterMovesDown()
                ? this.beans.rowRenderer.navigateToNextCell(
                    null,
                    $n.DOWN,
                    this.cellPosition,
                    !1
                  )
                : (this.startRowOrCellEdit($n.ENTER),
                  this.editingCell && t.preventDefault());
            }),
            (o.prototype.navigateAfterEdit = function () {
              this.beans.gridOptionsWrapper.isFullRowEdit() ||
                (this.beans.gridOptionsWrapper.isEnterMovesDownAfterEdit() &&
                  this.beans.rowRenderer.navigateToNextCell(
                    null,
                    $n.DOWN,
                    this.cellPosition,
                    !1
                  ));
            }),
            (o.prototype.onF2KeyDown = function () {
              this.editingCell || this.startRowOrCellEdit($n.F2);
            }),
            (o.prototype.onEscapeKeyDown = function () {
              this.editingCell &&
                (this.stopRowOrCellEdit(!0), this.focusCell(!0));
            }),
            (o.prototype.onKeyPress = function (t) {
              if (Nt(t) === this.getGui() && !this.editingCell) {
                var e = String.fromCharCode(t.charCode);
                " " === e
                  ? this.onSpaceKeyPressed(t)
                  : Cn(t) &&
                    (this.startRowOrCellEdit(null, e), t.preventDefault());
              }
            }),
            (o.prototype.onSpaceKeyPressed = function (t) {
              var e = this.beans.gridOptionsWrapper;
              if (!this.editingCell && e.isRowSelection()) {
                var o = this.rowNode.isSelected(),
                  n = !o;
                if (n || !e.isSuppressRowDeselection()) {
                  var r =
                      this.beans.gridOptionsWrapper.isGroupSelectsFiltered(),
                    i = this.rowNode.setSelectedParams({
                      newValue: n,
                      rangeSelect: t.shiftKey,
                      groupSelectsFiltered: r,
                    });
                  void 0 === o &&
                    0 === i &&
                    this.rowNode.setSelectedParams({
                      newValue: !1,
                      rangeSelect: t.shiftKey,
                      groupSelectsFiltered: r,
                    });
                }
              }
              t.preventDefault();
            }),
            (o.prototype.onMouseDown = function (t) {
              var e = t.ctrlKey,
                o = t.metaKey,
                n = t.shiftKey,
                r = t.target,
                i = this.beans,
                s = i.eventService,
                a = i.rangeController;
              if (!this.isRightClickInExistingRange(t)) {
                if (!n || (a && !a.getCellRanges().length)) {
                  var l = (Te() || Ae()) && !this.editingCell && !ze(r);
                  this.focusCell(l);
                } else a && t.preventDefault();
                if (!this.containsWidget(r)) {
                  if (a) {
                    var u = this.cellPosition;
                    n
                      ? a.extendLatestRangeToCell(u)
                      : a.setRangeToCell(u, e || o);
                  }
                  s.dispatchEvent(
                    this.createEvent(t, zt.EVENT_CELL_MOUSE_DOWN)
                  );
                }
              }
            }),
            (o.prototype.isRightClickInExistingRange = function (t) {
              var e = this.beans.rangeController;
              return !(
                !e ||
                !e.isCellInAnyRange(this.getCellPosition()) ||
                2 !== t.button
              );
            }),
            (o.prototype.containsWidget = function (t) {
              return qe(t, "ag-selection-checkbox", 3);
            }),
            (o.prototype.isDoubleClickOnIPad = function () {
              if (!Ne() || xt("dblclick")) return !1;
              var t = new Date().getTime(),
                e = t - this.lastIPadMouseClickEvent < 200;
              return (this.lastIPadMouseClickEvent = t), e;
            }),
            (o.prototype.onCellClicked = function (t) {
              if (this.isDoubleClickOnIPad())
                return this.onCellDoubleClicked(t), void t.preventDefault();
              var e = this.beans,
                o = e.eventService,
                n = e.gridOptionsWrapper,
                r = this.createEvent(t, zt.EVENT_CELL_CLICKED);
              o.dispatchEvent(r);
              var i = this.getComponentHolder();
              i.onCellClicked &&
                window.setTimeout(function () {
                  return i.onCellClicked(r);
                }, 0),
                (n.isSingleClickEdit() || i.singleClickEdit) &&
                  !n.isSuppressClickEdit() &&
                  this.startRowOrCellEdit();
            }),
            (o.prototype.createGridCellVo = function () {
              this.cellPosition = {
                rowIndex: this.rowNode.rowIndex,
                rowPinned: this.rowNode.rowPinned,
                column: this.column,
              };
            }),
            (o.prototype.getRowPosition = function () {
              return {
                rowIndex: this.cellPosition.rowIndex,
                rowPinned: this.cellPosition.rowPinned,
              };
            }),
            (o.prototype.getCellPosition = function () {
              return this.cellPosition;
            }),
            (o.prototype.getParentRow = function () {
              return this.eParentRow;
            }),
            (o.prototype.setParentRow = function (t) {
              this.eParentRow = t;
            }),
            (o.prototype.getColumn = function () {
              return this.column;
            }),
            (o.prototype.getComponentHolder = function () {
              return this.column.getColDef();
            }),
            (o.prototype.detach = function () {
              this.eParentRow.removeChild(this.getGui());
            }),
            (o.prototype.destroy = function () {
              this.createCellRendererFunc &&
                this.beans.taskQueue.cancelTask(this.createCellRendererFunc),
                this.stopEditing(),
                (this.cellRenderer = this.beans.context.destroyBean(
                  this.cellRenderer
                )),
                this.beans.context.destroyBean(this.selectionHandle),
                t.prototype.destroy.call(this);
            }),
            (o.prototype.onLeftChanged = function () {
              var t = this.modifyLeftForPrintLayout(this.getCellLeft());
              (this.getGui().style.left = t + "px"), this.refreshAriaIndex();
            }),
            (o.prototype.modifyLeftForPrintLayout = function (t) {
              if (
                !this.printLayout ||
                this.column.getPinned() === vt.PINNED_LEFT
              )
                return t;
              var e =
                this.beans.columnController.getDisplayedColumnsLeftWidth();
              return this.column.getPinned() === vt.PINNED_RIGHT
                ? e +
                    this.beans.columnController.getBodyContainerWidth() +
                    (t || 0)
                : e + (t || 0);
            }),
            (o.prototype.onWidthChanged = function () {
              var t = this.getCellWidth();
              this.getGui().style.width = t + "px";
            }),
            (o.prototype.getRangeBorders = function () {
              var t,
                e,
                o = this,
                n = this.beans.gridOptionsWrapper.isEnableRtl(),
                r = !1,
                i = !1,
                s = !1,
                a = !1,
                l = this.cellPosition.column,
                u = this.beans,
                p = u.rangeController,
                c = u.columnController;
              n
                ? ((t = c.getDisplayedColAfter(l)),
                  (e = c.getDisplayedColBefore(l)))
                : ((t = c.getDisplayedColBefore(l)),
                  (e = c.getDisplayedColAfter(l)));
              var d = p.getCellRanges().filter(function (t) {
                return p.isCellInSpecificRange(o.cellPosition, t);
              });
              t || (a = !0), e || (i = !0);
              for (var h = 0; h < d.length && !(r && i && s && a); h++) {
                var f = d[h],
                  g = p.getRangeStartRow(f),
                  y = p.getRangeEndRow(f);
                !r &&
                  this.beans.rowPositionUtils.sameRow(g, this.cellPosition) &&
                  (r = !0),
                  !s &&
                    this.beans.rowPositionUtils.sameRow(y, this.cellPosition) &&
                    (s = !0),
                  !a && t && f.columns.indexOf(t) < 0 && (a = !0),
                  !i && e && f.columns.indexOf(e) < 0 && (i = !0);
              }
              return { top: r, right: i, bottom: s, left: a };
            }),
            (o.prototype.getInitialRangeClasses = function () {
              var t = [];
              if (!this.rangeSelectionEnabled || !this.rangeCount) return t;
              t.push(xs), this.hasChartRange && t.push(Ms);
              var e = Math.min(this.rangeCount, 4);
              if (
                (t.push(xs + "-" + e),
                this.isSingleCell() && t.push(Is),
                this.rangeCount > 0)
              ) {
                var o = this.getRangeBorders();
                o.top && t.push(Ss),
                  o.right && t.push(Os),
                  o.bottom && t.push(_s),
                  o.left && t.push(Rs);
              }
              return this.selectionHandle && t.push(Ls), t;
            }),
            (o.prototype.onRowIndexChanged = function () {
              this.createGridCellVo(),
                this.onCellFocused(),
                this.onRangeSelectionChanged();
            }),
            (o.prototype.onRangeSelectionChanged = function () {
              var t = this.beans.rangeController;
              if (t) {
                var e = this.rangeCount,
                  o = t.getCellRangeCount(this.cellPosition),
                  n = this.getGui();
                e !== o &&
                  (this.addOrRemoveCssClass(xs, 0 !== o),
                  this.addOrRemoveCssClass(xs + "-1", 1 === o),
                  this.addOrRemoveCssClass(xs + "-2", 2 === o),
                  this.addOrRemoveCssClass(xs + "-3", 3 === o),
                  this.addOrRemoveCssClass(xs + "-4", o >= 4),
                  (this.rangeCount = o)),
                  en(n, this.rangeCount > 0);
                var r = this.getHasChartRange();
                r !== this.hasChartRange &&
                  ((this.hasChartRange = r),
                  this.addOrRemoveCssClass(Ms, this.hasChartRange)),
                  this.updateRangeBorders(),
                  this.addOrRemoveCssClass(Is, this.isSingleCell()),
                  this.refreshHandle();
              }
            }),
            (o.prototype.getHasChartRange = function () {
              var t = this.beans.rangeController;
              if (!this.rangeCount || !t) return !1;
              var o = t.getCellRanges();
              return (
                o.length > 0 &&
                o.every(function (t) {
                  return S(
                    [e.CellRangeType.DIMENSION, e.CellRangeType.VALUE],
                    t.type
                  );
                })
              );
            }),
            (o.prototype.shouldHaveSelectionHandle = function () {
              var t = this.beans,
                o = t.gridOptionsWrapper,
                n = t.rangeController,
                r = n.getCellRanges(),
                i = r.length;
              if (this.rangeCount < 1 || i < 1) return !1;
              var s = y(r),
                a = this.getCellPosition(),
                l =
                  1 === i &&
                  (o.isEnableFillHandle() || o.isEnableRangeHandle()) &&
                  !this.editingCell;
              if (this.hasChartRange) {
                var u =
                  r[0].type === e.CellRangeType.DIMENSION &&
                  n.isCellInSpecificRange(a, r[0]);
                this.addOrRemoveCssClass("ag-cell-range-chart-category", u),
                  (l = s.type === e.CellRangeType.VALUE);
              }
              return (
                l &&
                null != s.endRow &&
                n.isContiguousRange(s) &&
                n.isBottomRightCell(s, a)
              );
            }),
            (o.prototype.addSelectionHandle = function () {
              var t = this.beans,
                o = t.gridOptionsWrapper,
                n = y(t.rangeController.getCellRanges()).type,
                r =
                  o.isEnableFillHandle() && i(n)
                    ? e.SelectionHandleType.FILL
                    : e.SelectionHandleType.RANGE;
              this.selectionHandle &&
                this.selectionHandle.getType() !== r &&
                (this.selectionHandle = this.beans.context.destroyBean(
                  this.selectionHandle
                )),
                this.selectionHandle ||
                  (this.selectionHandle =
                    this.beans.selectionHandleFactory.createSelectionHandle(r)),
                this.selectionHandle.refresh(this);
            }),
            (o.prototype.updateRangeBordersIfRangeCount = function () {
              this.rangeCount > 0 &&
                (this.updateRangeBorders(), this.refreshHandle());
            }),
            (o.prototype.refreshHandle = function () {
              if (this.beans.rangeController) {
                var t = this.shouldHaveSelectionHandle();
                this.selectionHandle &&
                  !t &&
                  (this.selectionHandle = this.beans.context.destroyBean(
                    this.selectionHandle
                  )),
                  t && this.addSelectionHandle(),
                  this.addOrRemoveCssClass(Ls, !!this.selectionHandle);
              }
            }),
            (o.prototype.updateRangeBorders = function () {
              var t = this.getRangeBorders(),
                e = this.isSingleCell(),
                o = !e && t.right,
                n = !e && t.bottom,
                r = !e && t.left;
              this.addOrRemoveCssClass(Ss, !e && t.top),
                this.addOrRemoveCssClass(Os, o),
                this.addOrRemoveCssClass(_s, n),
                this.addOrRemoveCssClass(Rs, r);
            }),
            (o.prototype.onFirstRightPinnedChanged = function () {
              var t = this.column.isFirstRightPinned();
              this.firstRightPinned !== t &&
                ((this.firstRightPinned = t), this.addOrRemoveCssClass(Ts, t));
            }),
            (o.prototype.onLastLeftPinnedChanged = function () {
              var t = this.column.isLastLeftPinned();
              this.lastLeftPinned !== t &&
                ((this.lastLeftPinned = t), this.addOrRemoveCssClass(As, t));
            }),
            (o.prototype.refreshShouldDestroy = function () {
              var t = this.usingWrapper,
                e = this.includeRowDraggingComponent,
                o = this.includeDndSourceComponent,
                n = this.includeSelectionComponent;
              return (
                this.setUsingWrapper(),
                t !== this.usingWrapper ||
                  e !== this.includeRowDraggingComponent ||
                  o !== this.includeDndSourceComponent ||
                  n !== this.includeSelectionComponent
              );
            }),
            (o.prototype.populateTemplate = function () {
              if (this.usingWrapper) {
                (this.eCellValue = this.getRefElement("eCellValue")),
                  (this.eCellWrapper = this.getRefElement("eCellWrapper")),
                  (this.eCellValue.id = "cell-" + this.getCompId());
                var t = "";
                this.includeRowDraggingComponent && this.addRowDragging(),
                  this.includeDndSourceComponent && this.addDndSource(),
                  this.includeSelectionComponent &&
                    (t += this.addSelectionCheckbox().getCheckboxId()),
                  Ho(this.getGui(), t + " " + this.eCellValue.id);
              } else
                (this.eCellValue = this.getGui()),
                  (this.eCellWrapper = this.eCellValue);
            }),
            (o.prototype.getFrameworkOverrides = function () {
              return this.beans.frameworkOverrides;
            }),
            (o.prototype.addRowDragging = function (t) {
              var e = this,
                o = this.beans.gridOptionsWrapper.isPagination(),
                n = this.beans.gridOptionsWrapper.isRowDragManaged(),
                r = this.beans.gridOptionsWrapper.isRowModelDefault();
              if (n) {
                if (!r)
                  return void q(function () {
                    return console.warn(
                      "AG Grid: managed row dragging is only allowed in the Client Side Row Model"
                    );
                  }, "CellComp.addRowDragging");
                if (o)
                  return void q(function () {
                    return console.warn(
                      "AG Grid: managed row dragging is not possible when doing pagination"
                    );
                  }, "CellComp.addRowDragging");
              }
              this.rowDraggingComp
                ? t && this.rowDraggingComp.setDragElement(t)
                : ((this.rowDraggingComp = new hs(
                    this.rowNode,
                    this.column,
                    function () {
                      return e.value;
                    },
                    this.beans,
                    t
                  )),
                  this.createManagedBean(
                    this.rowDraggingComp,
                    this.beans.context
                  )),
                t ||
                  this.eCellWrapper.insertBefore(
                    this.rowDraggingComp.getGui(),
                    this.eCellValue
                  );
            }),
            (o.prototype.addDndSource = function () {
              var t = new ws(
                this.rowNode,
                this.column,
                this.getValueToUse(),
                this.beans,
                this.getGui()
              );
              this.createManagedBean(t, this.beans.context),
                this.eCellWrapper.insertBefore(t.getGui(), this.eCellValue);
            }),
            (o.prototype.addSelectionCheckbox = function () {
              var t = this,
                e = new Dr();
              this.beans.context.createBean(e);
              var o = this.getComponentHolder().checkboxSelection;
              return (
                "function" != typeof o && (o = void 0),
                e.init({
                  rowNode: this.rowNode,
                  column: this.column,
                  visibleFunc: o,
                }),
                this.addDestroyFunc(function () {
                  return t.beans.context.destroyBean(e);
                }),
                this.eCellWrapper.insertBefore(e.getGui(), this.eCellValue),
                e
              );
            }),
            (o.prototype.addDomData = function () {
              var t = this,
                e = this.getGui();
              this.beans.gridOptionsWrapper.setDomData(
                e,
                o.DOM_DATA_KEY_CELL_COMP,
                this
              ),
                this.addDestroyFunc(function () {
                  return t.beans.gridOptionsWrapper.setDomData(
                    e,
                    o.DOM_DATA_KEY_CELL_COMP,
                    null
                  );
                });
            }),
            (o.prototype.isSingleCell = function () {
              var t = this.beans.rangeController;
              return 1 === this.rangeCount && t && !t.isMoreThanOneCell();
            }),
            (o.prototype.onCellFocused = function (t) {
              var e = this.beans.focusController.isCellFocused(
                this.cellPosition
              );
              if (
                (e !== this.cellFocused &&
                  (!this.beans.gridOptionsWrapper.isSuppressCellSelection() &&
                    this.addOrRemoveCssClass(Ps, e),
                  (this.cellFocused = e)),
                e && t && t.forceBrowserFocus)
              ) {
                var o = this.getFocusableElement();
                o.focus(),
                  (document.activeElement &&
                    document.activeElement !== document.body) ||
                    o.focus();
              }
              var n = this.beans.gridOptionsWrapper.isFullRowEdit();
              e || n || !this.editingCell || this.stopRowOrCellEdit();
            }),
            (o.prototype.stopRowOrCellEdit = function (t) {
              void 0 === t && (t = !1),
                this.beans.gridOptionsWrapper.isFullRowEdit()
                  ? this.rowComp.stopRowEditing(t)
                  : this.stopEditing(t);
            }),
            (o.prototype.stopEditing = function (t) {
              if ((void 0 === t && (t = !1), this.editingCell))
                if (this.cellEditor) {
                  var e,
                    o = this.getValue(),
                    n = !1;
                  if (
                    (t ||
                      (this.cellEditor.isCancelAfterEnd &&
                        this.cellEditor.isCancelAfterEnd()) ||
                      ((e = this.cellEditor.getValue()), (n = !0)),
                    (this.editingCell = !1),
                    this.beans.context.destroyBean(this.cellEditor),
                    (this.cellEditor = null),
                    this.cellEditorInPopup && this.hideEditorPopup)
                  )
                    this.hideEditorPopup(), (this.hideEditorPopup = null);
                  else {
                    this.clearCellElement();
                    var r = this.getGui();
                    if (this.usingWrapper) r.appendChild(this.eCellWrapper);
                    else if (this.cellRenderer) {
                      var i = this.cellRendererGui;
                      i && r.appendChild(i);
                    }
                  }
                  this.setInlineEditingClass(),
                    this.refreshHandle(),
                    n &&
                      e !== o &&
                      ((this.suppressRefreshCell = !0),
                      this.rowNode.setDataValue(this.column, e),
                      (this.suppressRefreshCell = !1)),
                    this.refreshCell({ forceRefresh: !0, suppressFlash: !0 });
                  var s = Es(
                    Es(
                      {},
                      this.createEvent(null, zt.EVENT_CELL_EDITING_STOPPED)
                    ),
                    { oldValue: o, newValue: e }
                  );
                  this.beans.eventService.dispatchEvent(s);
                } else this.editingCell = !1;
            }),
            (o.prototype.clearCellElement = function () {
              var t = this.getGui();
              t.contains(document.activeElement) &&
                !Te() &&
                t.focus({ preventScroll: !0 }),
                ro(t);
            }),
            (o.DOM_DATA_KEY_CELL_COMP = "cellComp"),
            (o.CELL_RENDERER_TYPE_NORMAL = "cellRenderer"),
            (o.CELL_RENDERER_TYPE_PINNED = "pinnedRowCellRenderer"),
            o
          );
        })(jn),
        ks = function () {
          return (ks =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Vs = (function () {
          function t() {}
          return (
            (t.createChildScopeOrNull = function (t, e, o) {
              if (!o.isAngularCompileRows()) return null;
              var n = e.$new();
              return (
                (n.data = ks({}, t.data)),
                (n.rowNode = t),
                (n.context = o.getContext()),
                {
                  scope: n,
                  scopeDestroyFunc: function () {
                    n.$destroy(),
                      (n.data = null),
                      (n.rowNode = null),
                      (n.context = null);
                  },
                }
              );
            }),
            t
          );
        })(),
        Ws = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Hs = (function (t) {
          function o(e, o, n, r, i, s, a, l, u, p, c) {
            var d = t.call(this) || this;
            return (
              (d.eAllRowContainers = []),
              (d.fullWidthRowDestroyFuncs = []),
              (d.active = !0),
              (d.rowContainerReadyCount = 0),
              (d.refreshNeeded = !1),
              (d.columnRefreshPending = !1),
              (d.cellComps = {}),
              (d.createSecondPassFuncs = []),
              (d.removeFirstPassFuncs = []),
              (d.removeSecondPassFuncs = []),
              (d.initialised = !1),
              (d.elementOrderChanged = !1),
              (d.lastMouseDownOnDragger = !1),
              (d.parentScope = e),
              (d.beans = a),
              (d.bodyContainerComp = o),
              (d.pinnedLeftContainerComp = n),
              (d.pinnedRightContainerComp = r),
              (d.fullWidthContainerComp = i),
              (d.rowNode = s),
              (d.rowIsEven = d.rowNode.rowIndex % 2 == 0),
              (d.paginationPage = d.beans.paginationProxy.getCurrentPage()),
              (d.useAnimationFrameForCreate = u),
              (d.printLayout = p),
              (d.embedFullWidth = c),
              d.setAnimateFlags(l),
              d
            );
          }
          return (
            Ws(o, t),
            (o.prototype.init = function () {
              var t = this;
              (this.rowFocused = this.beans.focusController.isRowFocused(
                this.rowNode.rowIndex,
                this.rowNode.rowPinned
              )),
                this.setupAngular1Scope(),
                (this.rowLevel =
                  this.beans.rowCssClassCalculator.calculateRowLevel(
                    this.rowNode
                  )),
                this.setupRowContainers(),
                this.addListeners(),
                this.slideRowIn &&
                  this.createSecondPassFuncs.push(function () {
                    t.onTopChanged();
                  }),
                this.fadeRowIn &&
                  this.createSecondPassFuncs.push(function () {
                    t.eAllRowContainers.forEach(function (t) {
                      return Be(t, "ag-opacity-zero");
                    });
                  });
            }),
            (o.prototype.setupAngular1Scope = function () {
              var t = Vs.createChildScopeOrNull(
                this.rowNode,
                this.parentScope,
                this.beans.gridOptionsWrapper
              );
              t &&
                ((this.scope = t.scope),
                this.addDestroyFunc(t.scopeDestroyFunc));
            }),
            (o.prototype.createTemplate = function (t, e) {
              void 0 === e && (e = null);
              var o = [],
                n = this.rowNode.rowHeight,
                r = this.getInitialRowClasses(e).join(" "),
                i = Zt(this.rowNode.id),
                s = this.preProcessStylesFromGridOptions(),
                a = this.getRowBusinessKey(),
                l = Zt(a),
                u = this.getInitialRowTopStyle(),
                p = this.rowNode.getRowIndexString(),
                c = this.beans.headerNavigationService.getHeaderRowCount();
              return (
                o.push("<div"),
                o.push(' role="row"'),
                o.push(
                  ' row-index="' +
                    p +
                    '" aria-rowindex="' +
                    (c + this.rowNode.rowIndex + 1) +
                    '"'
                ),
                o.push(i ? ' row-id="' + i + '"' : ""),
                o.push(a ? ' row-business-key="' + l + '"' : ""),
                o.push(' comp-id="' + this.getCompId() + '"'),
                o.push(' class="' + r + '"'),
                this.fullWidthRow && o.push(' tabindex="-1"'),
                this.beans.gridOptionsWrapper.isRowSelection() &&
                  o.push(
                    ' aria-selected="' +
                      (this.rowNode.isSelected() ? "true" : "false") +
                      '"'
                  ),
                this.rowNode.group &&
                  o.push(
                    " aria-expanded=" +
                      (this.rowNode.expanded ? "true" : "false")
                  ),
                o.push(' style="height: ' + n + "px; " + u + " " + s + '">'),
                o.push(t),
                o.push("</div>"),
                o.join("")
              );
            }),
            (o.prototype.getCellForCol = function (t) {
              var e = this.cellComps[t.getColId()];
              return e ? e.getGui() : null;
            }),
            (o.prototype.afterFlush = function () {
              this.initialised ||
                ((this.initialised = !0),
                this.executeProcessRowPostCreateFunc());
            }),
            (o.prototype.executeProcessRowPostCreateFunc = function () {
              var t =
                this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();
              t &&
                t({
                  eRow: this.eBodyRow,
                  ePinnedLeftRow: this.ePinnedLeftRow,
                  ePinnedRightRow: this.ePinnedRightRow,
                  node: this.rowNode,
                  api: this.beans.gridOptionsWrapper.getApi(),
                  rowIndex: this.rowNode.rowIndex,
                  addRenderedRowListener: this.addEventListener.bind(this),
                  columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                  context: this.beans.gridOptionsWrapper.getContext(),
                });
            }),
            (o.prototype.getInitialRowTopStyle = function () {
              if (this.printLayout) return "";
              var t = this.slideRowIn
                  ? this.roundRowTopToBounds(this.rowNode.oldRowTop)
                  : this.rowNode.rowTop,
                e = this.applyPaginationOffset(t),
                o = this.rowNode.isRowPinned()
                  ? e
                  : this.beans.maxDivHeightScaler.getRealPixelPosition(e);
              return this.beans.gridOptionsWrapper.isSuppressRowTransform()
                ? "top: " + o + "px; "
                : "transform: translateY(" + o + "px);";
            }),
            (o.prototype.getRowBusinessKey = function () {
              var t = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();
              if ("function" == typeof t) return t(this.rowNode);
            }),
            (o.prototype.areAllContainersReady = function () {
              return 3 === this.rowContainerReadyCount;
            }),
            (o.prototype.lazyCreateCells = function (t, e) {
              if (this.active) {
                var o = this.createCells(t);
                (e.innerHTML = o.template),
                  this.callAfterRowAttachedOnCells(o.cellComps, e),
                  this.rowContainerReadyCount++,
                  this.areAllContainersReady() &&
                    this.refreshNeeded &&
                    this.refreshCells();
              }
            }),
            (o.prototype.createRowContainer = function (t, e, o) {
              var n = this,
                r = this.useAnimationFrameForCreate,
                i = r ? { cellComps: [], template: "" } : this.createCells(e),
                s = this.createTemplate(i.template);
              t.appendRowTemplate(s, function () {
                var s = t.getRowElement(n.getCompId());
                n.refreshAriaLabel(s, !!n.rowNode.isSelected()),
                  n.afterRowAttached(t, s),
                  o(s),
                  r
                    ? n.beans.taskQueue.createTask(
                        n.lazyCreateCells.bind(n, e, s),
                        n.rowNode.rowIndex,
                        "createTasksP1"
                      )
                    : (n.callAfterRowAttachedOnCells(i.cellComps, s),
                      (n.rowContainerReadyCount = 3));
              });
            }),
            (o.prototype.setupRowContainers = function () {
              var t = this.rowNode.isFullWidthCell(),
                e = this.beans.doingMasterDetail && this.rowNode.detail,
                n = this.beans.columnController.isPivotMode(),
                r =
                  this.rowNode.group &&
                  !this.rowNode.footer &&
                  this.beans.gridOptionsWrapper.isGroupUseEntireRow(n);
              this.rowNode.stub
                ? this.createFullWidthRows(
                    o.LOADING_CELL_RENDERER,
                    o.LOADING_CELL_RENDERER_COMP_NAME,
                    !1
                  )
                : e
                ? this.createFullWidthRows(
                    o.DETAIL_CELL_RENDERER,
                    o.DETAIL_CELL_RENDERER_COMP_NAME,
                    !0
                  )
                : t
                ? this.createFullWidthRows(o.FULL_WIDTH_CELL_RENDERER, null, !1)
                : r
                ? this.createFullWidthRows(
                    o.GROUP_ROW_RENDERER,
                    o.GROUP_ROW_RENDERER_COMP_NAME,
                    !1
                  )
                : this.setupNormalRowContainers();
            }),
            (o.prototype.setupNormalRowContainers = function () {
              var t,
                e = this,
                o = [],
                n = [];
              this.printLayout
                ? (t = this.beans.columnController.getAllDisplayedColumns())
                : ((t =
                    this.beans.columnController.getViewportCenterColumnsForRow(
                      this.rowNode
                    )),
                  (o =
                    this.beans.columnController.getDisplayedLeftColumnsForRow(
                      this.rowNode
                    )),
                  (n =
                    this.beans.columnController.getDisplayedRightColumnsForRow(
                      this.rowNode
                    ))),
                this.createRowContainer(
                  this.bodyContainerComp,
                  t,
                  function (t) {
                    return (e.eBodyRow = t);
                  }
                ),
                this.createRowContainer(
                  this.pinnedRightContainerComp,
                  n,
                  function (t) {
                    return (e.ePinnedRightRow = t);
                  }
                ),
                this.createRowContainer(
                  this.pinnedLeftContainerComp,
                  o,
                  function (t) {
                    return (e.ePinnedLeftRow = t);
                  }
                );
            }),
            (o.prototype.createFullWidthRows = function (t, e, o) {
              var n = this;
              if (((this.fullWidthRow = !0), this.embedFullWidth)) {
                if (
                  (this.createFullWidthRowContainer(
                    this.bodyContainerComp,
                    null,
                    null,
                    t,
                    e,
                    function (t) {
                      n.eFullWidthRowBody = t;
                    },
                    function (t) {
                      n.fullWidthRowComponentBody = t;
                    },
                    o
                  ),
                  this.printLayout)
                )
                  return;
                this.createFullWidthRowContainer(
                  this.pinnedLeftContainerComp,
                  vt.PINNED_LEFT,
                  "ag-cell-last-left-pinned",
                  t,
                  e,
                  function (t) {
                    n.eFullWidthRowLeft = t;
                  },
                  function (t) {
                    n.fullWidthRowComponentLeft = t;
                  },
                  o
                ),
                  this.createFullWidthRowContainer(
                    this.pinnedRightContainerComp,
                    vt.PINNED_RIGHT,
                    "ag-cell-first-right-pinned",
                    t,
                    e,
                    function (t) {
                      n.eFullWidthRowRight = t;
                    },
                    function (t) {
                      n.fullWidthRowComponentRight = t;
                    },
                    o
                  );
              } else
                this.createFullWidthRowContainer(
                  this.fullWidthContainerComp,
                  null,
                  null,
                  t,
                  e,
                  function (t) {
                    n.eFullWidthRow = t;
                  },
                  function (t) {
                    n.fullWidthRowComponent = t;
                  },
                  o
                );
            }),
            (o.prototype.setAnimateFlags = function (t) {
              if (t) {
                var e = r(this.rowNode.oldRowTop);
                (this.slideRowIn = e), (this.fadeRowIn = !e);
              } else (this.slideRowIn = !1), (this.fadeRowIn = !1);
            }),
            (o.prototype.isEditing = function () {
              return this.editingRow;
            }),
            (o.prototype.stopRowEditing = function (t) {
              this.stopEditing(t);
            }),
            (o.prototype.isFullWidth = function () {
              return this.fullWidthRow;
            }),
            (o.prototype.refreshFullWidth = function () {
              var t = this,
                e = function (e, o, n) {
                  if (!e || !o) return !0;
                  if (!o.refresh) return !1;
                  var r = t.createFullWidthParams(e, n);
                  return o.refresh(r);
                },
                o = e(this.eFullWidthRow, this.fullWidthRowComponent, null),
                n = e(
                  this.eFullWidthRowBody,
                  this.fullWidthRowComponentBody,
                  null
                ),
                r = e(
                  this.eFullWidthRowLeft,
                  this.fullWidthRowComponentLeft,
                  vt.PINNED_LEFT
                ),
                i = e(
                  this.eFullWidthRowRight,
                  this.fullWidthRowComponentRight,
                  vt.PINNED_RIGHT
                );
              return o && n && r && i;
            }),
            (o.prototype.addListeners = function () {
              this.addManagedListener(
                this.rowNode,
                Pr.EVENT_HEIGHT_CHANGED,
                this.onRowHeightChanged.bind(this)
              ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_ROW_SELECTED,
                  this.onRowSelected.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_ROW_INDEX_CHANGED,
                  this.onRowIndexChanged.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_TOP_CHANGED,
                  this.onTopChanged.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_EXPANDED_CHANGED,
                  this.updateExpandedCss.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_HAS_CHILDREN_CHANGED,
                  this.updateExpandedCss.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_DATA_CHANGED,
                  this.onRowNodeDataChanged.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_CELL_CHANGED,
                  this.onRowNodeCellChanged.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_HIGHLIGHT_CHANGED,
                  this.onRowNodeHighlightChanged.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_DRAGGING_CHANGED,
                  this.onRowNodeDraggingChanged.bind(this)
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_UI_LEVEL_CHANGED,
                  this.onUiLevelChanged.bind(this)
                );
              var t = this.beans.eventService;
              this.addManagedListener(
                t,
                zt.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED,
                this.onPaginationPixelOffsetChanged.bind(this)
              ),
                this.addManagedListener(
                  t,
                  zt.EVENT_HEIGHT_SCALE_CHANGED,
                  this.onTopChanged.bind(this)
                ),
                this.addManagedListener(
                  t,
                  zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                  this.onDisplayedColumnsChanged.bind(this)
                ),
                this.addManagedListener(
                  t,
                  zt.EVENT_VIRTUAL_COLUMNS_CHANGED,
                  this.onVirtualColumnsChanged.bind(this)
                ),
                this.addManagedListener(
                  t,
                  zt.EVENT_COLUMN_RESIZED,
                  this.onColumnResized.bind(this)
                ),
                this.addManagedListener(
                  t,
                  zt.EVENT_CELL_FOCUSED,
                  this.onCellFocusChanged.bind(this)
                ),
                this.addManagedListener(
                  t,
                  zt.EVENT_PAGINATION_CHANGED,
                  this.onPaginationChanged.bind(this)
                ),
                this.addManagedListener(
                  t,
                  zt.EVENT_MODEL_UPDATED,
                  this.onModelUpdated.bind(this)
                ),
                this.addManagedListener(
                  t,
                  zt.EVENT_COLUMN_MOVED,
                  this.onColumnMoved.bind(this)
                ),
                this.addListenersForCellComps();
            }),
            (o.prototype.addListenersForCellComps = function () {
              var t = this;
              this.addManagedListener(
                this.rowNode,
                Pr.EVENT_ROW_INDEX_CHANGED,
                function () {
                  t.forEachCellComp(function (t) {
                    return t.onRowIndexChanged();
                  });
                }
              ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_CELL_CHANGED,
                  function (e) {
                    t.forEachCellComp(function (t) {
                      return t.onCellChanged(e);
                    });
                  }
                );
            }),
            (o.prototype.onRowNodeDataChanged = function (t) {
              this.forEachCellComp(function (e) {
                return e.refreshCell({
                  suppressFlash: !t.update,
                  newData: !t.update,
                });
              }),
                this.onRowSelected(),
                this.postProcessCss();
            }),
            (o.prototype.onRowNodeCellChanged = function () {
              this.postProcessCss();
            }),
            (o.prototype.postProcessCss = function () {
              this.postProcessStylesFromGridOptions(),
                this.postProcessClassesFromGridOptions(),
                this.postProcessRowClassRules(),
                this.postProcessRowDragging();
            }),
            (o.prototype.onRowNodeHighlightChanged = function () {
              var t = this.rowNode.highlighted;
              this.eAllRowContainers.forEach(function (e) {
                Be(e, "ag-row-highlight-above"),
                  Be(e, "ag-row-highlight-below"),
                  t && He(e, "ag-row-highlight-" + t);
              });
            }),
            (o.prototype.onRowNodeDraggingChanged = function () {
              this.postProcessRowDragging();
            }),
            (o.prototype.postProcessRowDragging = function () {
              var t = this.rowNode.dragging;
              this.eAllRowContainers.forEach(function (e) {
                return je(e, "ag-row-dragging", t);
              });
            }),
            (o.prototype.updateExpandedCss = function () {
              var t = this.rowNode.isExpandable(),
                e = 1 == this.rowNode.expanded;
              this.eAllRowContainers.forEach(function (o) {
                je(o, "ag-row-group", t),
                  je(o, "ag-row-group-expanded", t && e),
                  je(o, "ag-row-group-contracted", t && !e),
                  jo(o, t && e);
              });
            }),
            (o.prototype.onDisplayedColumnsChanged = function () {
              this.fullWidthRow || this.refreshCells();
            }),
            (o.prototype.destroyFullWidthComponents = function () {
              this.fullWidthRowDestroyFuncs.forEach(function (t) {
                return t();
              }),
                (this.fullWidthRowDestroyFuncs = []),
                this.fullWidthRowComponent &&
                  (this.beans.detailRowCompCache.addOrDestroy(
                    this.rowNode,
                    null,
                    this.fullWidthRowComponent
                  ),
                  (this.fullWidthRowComponent = null)),
                this.fullWidthRowComponentBody &&
                  (this.beans.detailRowCompCache.addOrDestroy(
                    this.rowNode,
                    null,
                    this.fullWidthRowComponentBody
                  ),
                  (this.fullWidthRowComponentBody = null)),
                this.fullWidthRowComponentLeft &&
                  (this.beans.detailRowCompCache.addOrDestroy(
                    this.rowNode,
                    vt.PINNED_LEFT,
                    this.fullWidthRowComponentLeft
                  ),
                  (this.fullWidthRowComponentLeft = null)),
                this.fullWidthRowComponentRight &&
                  (this.beans.detailRowCompCache.addOrDestroy(
                    this.rowNode,
                    vt.PINNED_RIGHT,
                    this.fullWidthRowComponentRight
                  ),
                  (this.fullWidthRowComponentRight = null));
            }),
            (o.prototype.getContainerForCell = function (t) {
              switch (t) {
                case vt.PINNED_LEFT:
                  return this.ePinnedLeftRow;
                case vt.PINNED_RIGHT:
                  return this.ePinnedRightRow;
                default:
                  return this.eBodyRow;
              }
            }),
            (o.prototype.onVirtualColumnsChanged = function () {
              this.fullWidthRow || this.refreshCells();
            }),
            (o.prototype.onColumnResized = function () {
              this.fullWidthRow || this.refreshCells();
            }),
            (o.prototype.getRowPosition = function () {
              return {
                rowPinned: this.rowNode.rowPinned,
                rowIndex: this.rowNode.rowIndex,
              };
            }),
            (o.prototype.onKeyboardNavigate = function (t) {
              var e = this.rowNode,
                o = this.beans.focusController.getFocusedCell();
              this.beans.rowRenderer.navigateToNextCell(
                t,
                t.keyCode,
                {
                  rowIndex: e.rowIndex,
                  rowPinned: e.rowPinned,
                  column: o && o.column,
                },
                !0
              ),
                t.preventDefault();
            }),
            (o.prototype.onTabKeyDown = function (t) {
              this.isFullWidth() &&
                this.beans.rowRenderer.onTabKeyDown(this, t);
            }),
            (o.prototype.onFullWidthRowFocused = function (t) {
              var e = this.rowNode,
                o =
                  this.fullWidthRow &&
                  t.rowIndex === e.rowIndex &&
                  t.rowPinned == e.rowPinned;
              je(this.eFullWidthRow, "ag-full-width-focus", o),
                o &&
                  (this.embedFullWidth
                    ? this.eFullWidthRowBody
                    : this.eFullWidthRow
                  ).focus();
            }),
            (o.prototype.refreshCell = function (t) {
              this.areAllContainersReady() &&
                (this.destroyCells([t.getColumn().getId()]),
                this.refreshCells());
            }),
            (o.prototype.refreshCells = function () {
              if (this.areAllContainersReady())
                if (
                  this.beans.gridOptionsWrapper.isSuppressAnimationFrame() ||
                  this.printLayout
                )
                  this.refreshCellsInAnimationFrame();
                else {
                  if (this.columnRefreshPending) return;
                  this.beans.taskQueue.createTask(
                    this.refreshCellsInAnimationFrame.bind(this),
                    this.rowNode.rowIndex,
                    "createTasksP1"
                  );
                }
              else this.refreshNeeded = !0;
            }),
            (o.prototype.refreshCellsInAnimationFrame = function () {
              if (this.active) {
                var t, e, o;
                (this.columnRefreshPending = !1),
                  this.printLayout
                    ? ((t =
                        this.beans.columnController.getAllDisplayedColumns()),
                      (e = []),
                      (o = []))
                    : ((t =
                        this.beans.columnController.getViewportCenterColumnsForRow(
                          this.rowNode
                        )),
                      (e =
                        this.beans.columnController.getDisplayedLeftColumnsForRow(
                          this.rowNode
                        )),
                      (o =
                        this.beans.columnController.getDisplayedRightColumnsForRow(
                          this.rowNode
                        ))),
                  this.insertCellsIntoContainer(this.eBodyRow, t),
                  this.insertCellsIntoContainer(this.ePinnedLeftRow, e),
                  this.insertCellsIntoContainer(this.ePinnedRightRow, o),
                  (this.elementOrderChanged = !1);
                var n = Object.keys(this.cellComps);
                t.forEach(function (t) {
                  return C(n, t.getId());
                }),
                  e.forEach(function (t) {
                    return C(n, t.getId());
                  }),
                  o.forEach(function (t) {
                    return C(n, t.getId());
                  });
                var r = n.filter(this.isCellEligibleToBeRemoved.bind(this));
                this.destroyCells(r);
              }
            }),
            (o.prototype.onColumnMoved = function () {
              this.elementOrderChanged = !0;
            }),
            (o.prototype.destroyCells = function (t) {
              var e = this;
              t.forEach(function (t) {
                var o = e.cellComps[t];
                i(o) || (o.detach(), o.destroy(), (e.cellComps[t] = null));
              });
            }),
            (o.prototype.isCellEligibleToBeRemoved = function (t) {
              var e = this.beans.columnController.getAllDisplayedColumns(),
                o = !0,
                n = this.cellComps[t];
              if (!n || this.isCellInWrongRow(n)) return o;
              var r = n.isEditing(),
                i = this.beans.focusController.isCellFocused(
                  n.getCellPosition()
                );
              if (r || i) {
                var s = n.getColumn();
                return !(e.indexOf(s) >= 0) && o;
              }
              return o;
            }),
            (o.prototype.ensureCellInCorrectContainer = function (t) {
              if (!this.printLayout) {
                var e = t.getGui(),
                  o = t.getColumn().getPinned(),
                  n = this.getContainerForCell(o),
                  r = t.getParentRow();
                r !== n &&
                  (r && r.removeChild(e),
                  n.appendChild(e),
                  t.setParentRow(n),
                  (this.elementOrderChanged = !0));
              }
            }),
            (o.prototype.isCellInWrongRow = function (t) {
              var e = t.getColumn(),
                o = this.getContainerForCell(e.getPinned());
              return t.getParentRow() !== o;
            }),
            (o.prototype.insertCellsIntoContainer = function (t, e) {
              var o = this;
              if (t) {
                var n = [],
                  r = [];
                if (
                  (e.forEach(function (e) {
                    var i = e.getId(),
                      s = o.cellComps[i];
                    s && s.getColumn() == e
                      ? o.ensureCellInCorrectContainer(s)
                      : (s && o.destroyCells([i]), o.createNewCell(e, t, n, r));
                  }),
                  n.length > 0 &&
                    (lo(t, n.join("")), this.callAfterRowAttachedOnCells(r, t)),
                  this.elementOrderChanged &&
                    this.beans.gridOptionsWrapper.isEnsureDomOrder())
                ) {
                  var i = e.map(function (t) {
                    return o.getCellForCol(t);
                  });
                  ho(t, i);
                }
              }
            }),
            (o.prototype.addDomData = function (t) {
              var e = this.beans.gridOptionsWrapper;
              e.setDomData(t, o.DOM_DATA_KEY_RENDERED_ROW, this),
                this.addDestroyFunc(function () {
                  e.setDomData(t, o.DOM_DATA_KEY_RENDERED_ROW, null);
                });
            }),
            (o.prototype.createNewCell = function (t, e, o, n) {
              var r = new Gs(
                  this.scope,
                  this.beans,
                  t,
                  this.rowNode,
                  this,
                  !1,
                  this.printLayout
                ),
                i = r.getCreateTemplate();
              o.push(i),
                n.push(r),
                (this.cellComps[t.getId()] = r),
                r.setParentRow(e),
                (this.elementOrderChanged = !0);
            }),
            (o.prototype.onMouseEvent = function (t, e) {
              switch (t) {
                case "dblclick":
                  this.onRowDblClick(e);
                  break;
                case "click":
                  this.onRowClick(e);
                  break;
                case "mousedown":
                  this.onRowMouseDown(e);
              }
            }),
            (o.prototype.createRowEvent = function (t, e) {
              return {
                type: t,
                node: this.rowNode,
                data: this.rowNode.data,
                rowIndex: this.rowNode.rowIndex,
                rowPinned: this.rowNode.rowPinned,
                context: this.beans.gridOptionsWrapper.getContext(),
                api: this.beans.gridOptionsWrapper.getApi(),
                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                event: e,
              };
            }),
            (o.prototype.createRowEventWithSource = function (t, e) {
              var o = this.createRowEvent(t, e);
              return (o.source = this), o;
            }),
            (o.prototype.onRowDblClick = function (t) {
              if (!At(t)) {
                var e = this.createRowEventWithSource(
                  zt.EVENT_ROW_DOUBLE_CLICKED,
                  t
                );
                this.beans.eventService.dispatchEvent(e);
              }
            }),
            (o.prototype.onRowMouseDown = function (t) {
              if (
                ((this.lastMouseDownOnDragger = qe(t.target, "ag-row-drag", 3)),
                this.isFullWidth())
              ) {
                var e = this.rowNode;
                this.beans.focusController.setFocusedCell(
                  e.rowIndex,
                  this.beans.columnController.getAllDisplayedColumns()[0],
                  e.rowPinned,
                  !0
                );
              }
            }),
            (o.prototype.onRowClick = function (t) {
              if (!At(t) && !this.lastMouseDownOnDragger) {
                var e = this.createRowEventWithSource(zt.EVENT_ROW_CLICKED, t);
                this.beans.eventService.dispatchEvent(e);
                var o = t.ctrlKey || t.metaKey,
                  n = t.shiftKey;
                if (
                  !(
                    (this.beans.gridOptionsWrapper.isGroupSelectsChildren() &&
                      this.rowNode.group) ||
                    !this.rowNode.selectable ||
                    this.rowNode.rowPinned ||
                    !this.beans.gridOptionsWrapper.isRowSelection() ||
                    this.beans.gridOptionsWrapper.isSuppressRowClickSelection()
                  )
                ) {
                  var r =
                      this.beans.gridOptionsWrapper.isRowMultiSelectWithClick(),
                    i =
                      !this.beans.gridOptionsWrapper.isSuppressRowDeselection();
                  this.rowNode.isSelected()
                    ? r
                      ? this.rowNode.setSelectedParams({ newValue: !1 })
                      : o
                      ? i && this.rowNode.setSelectedParams({ newValue: !1 })
                      : this.rowNode.setSelectedParams({
                          newValue: !n,
                          clearSelection: !n,
                          rangeSelect: n,
                        })
                    : this.rowNode.setSelectedParams({
                        newValue: !0,
                        clearSelection: !r && !o,
                        rangeSelect: n,
                      });
                }
              }
            }),
            (o.prototype.createFullWidthRowContainer = function (
              t,
              o,
              n,
              r,
              i,
              s,
              a,
              l
            ) {
              var u = this,
                p = this.createTemplate("", n);
              t.appendRowTemplate(p, function () {
                var n = t.getRowElement(u.getCompId()),
                  p = u.createFullWidthParams(n, o),
                  c = function (t) {
                    if (u.isAlive()) {
                      var e = t.getGui();
                      n.appendChild(e),
                        l && u.setupDetailRowAutoHeight(e),
                        a(t);
                    } else u.beans.context.destroyBean(t);
                  },
                  d = u.beans.detailRowCompCache.get(u.rowNode, o);
                if (d) c(d);
                else {
                  var h = u.beans.userComponentFactory.newFullWidthCellRenderer(
                    p,
                    r,
                    i
                  );
                  if (!h) {
                    var f = Ct.isRegistered(e.ModuleNames.MasterDetailModule);
                    return void ("agDetailCellRenderer" !== i || f
                      ? console.error(
                          "AG Grid: fullWidthCellRenderer " + i + " not found"
                        )
                      : console.warn(
                          "AG Grid: cell renderer agDetailCellRenderer (for master detail) not found. Did you forget to include the master detail module?"
                        ));
                  }
                  h.then(c);
                }
                u.afterRowAttached(t, n), s(n), u.angular1Compile(n);
              });
            }),
            (o.prototype.setupDetailRowAutoHeight = function (t) {
              var e = this;
              if (this.beans.gridOptionsWrapper.isDetailRowAutoHeight()) {
                var o = function () {
                    var o = t.clientHeight;
                    null != o &&
                      o > 0 &&
                      e.beans.frameworkOverrides.setTimeout(function () {
                        e.rowNode.setRowHeight(o),
                          e.beans.clientSideRowModel
                            ? e.beans.clientSideRowModel.onRowHeightChanged()
                            : e.beans.serverSideRowModel &&
                              e.beans.serverSideRowModel.onRowHeightChanged();
                      }, 0);
                  },
                  n = this.beans.resizeObserverService.observeResize(t, o);
                this.fullWidthRowDestroyFuncs.push(n), o();
              }
            }),
            (o.prototype.angular1Compile = function (t) {
              this.scope && this.beans.$compile(t)(this.scope);
            }),
            (o.prototype.createFullWidthParams = function (t, e) {
              return {
                fullWidth: !0,
                data: this.rowNode.data,
                node: this.rowNode,
                value: this.rowNode.key,
                $scope: this.scope ? this.scope : this.parentScope,
                $compile: this.beans.$compile,
                rowIndex: this.rowNode.rowIndex,
                api: this.beans.gridOptionsWrapper.getApi(),
                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                context: this.beans.gridOptionsWrapper.getContext(),
                eGridCell: t,
                eParentOfValue: t,
                pinned: e,
                addRenderedRowListener: this.addEventListener.bind(this),
              };
            }),
            (o.prototype.getInitialRowClasses = function (t) {
              var e = {
                rowNode: this.rowNode,
                extraCssClass: t,
                rowFocused: this.rowFocused,
                fadeRowIn: this.fadeRowIn,
                rowIsEven: this.rowIsEven,
                rowLevel: this.rowLevel,
                fullWidthRow: this.fullWidthRow,
                firstRowOnPage: this.isFirstRowOnPage(),
                lastRowOnPage: this.isLastRowOnPage(),
                printLayout: this.printLayout,
                expandable: this.rowNode.isExpandable(),
                scope: this.scope,
              };
              return this.beans.rowCssClassCalculator.getInitialRowClasses(e);
            }),
            (o.prototype.onUiLevelChanged = function () {
              var t = this.beans.rowCssClassCalculator.calculateRowLevel(
                this.rowNode
              );
              if (this.rowLevel != t) {
                var e = "ag-row-level-" + t,
                  o = "ag-row-level-" + this.rowLevel;
                this.eAllRowContainers.forEach(function (t) {
                  He(t, e), Be(t, o);
                });
              }
              this.rowLevel = t;
            }),
            (o.prototype.isFirstRowOnPage = function () {
              return (
                this.rowNode.rowIndex ===
                this.beans.paginationProxy.getPageFirstRow()
              );
            }),
            (o.prototype.isLastRowOnPage = function () {
              return (
                this.rowNode.rowIndex ===
                this.beans.paginationProxy.getPageLastRow()
              );
            }),
            (o.prototype.onModelUpdated = function () {
              var t = this.isFirstRowOnPage(),
                e = this.isLastRowOnPage();
              this.firstRowOnPage !== t &&
                ((this.firstRowOnPage = t),
                this.eAllRowContainers.forEach(function (e) {
                  return je(e, "ag-row-first", t);
                })),
                this.lastRowOnPage !== e &&
                  ((this.lastRowOnPage = e),
                  this.eAllRowContainers.forEach(function (t) {
                    return je(t, "ag-row-last", e);
                  }));
            }),
            (o.prototype.stopEditing = function (t) {
              if (
                (void 0 === t && (t = !1),
                this.forEachCellComp(function (e) {
                  e.stopEditing(t);
                }),
                this.editingRow)
              ) {
                if (!t) {
                  var e = this.createRowEvent(zt.EVENT_ROW_VALUE_CHANGED);
                  this.beans.eventService.dispatchEvent(e);
                }
                this.setEditingRow(!1);
              }
            }),
            (o.prototype.setEditingRow = function (t) {
              (this.editingRow = t),
                this.eAllRowContainers.forEach(function (e) {
                  return je(e, "ag-row-editing", t);
                });
              var e = this.createRowEvent(
                t ? zt.EVENT_ROW_EDITING_STARTED : zt.EVENT_ROW_EDITING_STOPPED
              );
              this.beans.eventService.dispatchEvent(e);
            }),
            (o.prototype.startRowEditing = function (t, e, o) {
              void 0 === t && (t = null),
                void 0 === e && (e = null),
                void 0 === o && (o = null),
                this.editingRow ||
                  (this.forEachCellComp(function (n) {
                    var r = n === o;
                    r
                      ? n.startEditingIfEnabled(t, e, r)
                      : n.startEditingIfEnabled(null, null, r);
                  }),
                  this.setEditingRow(!0));
            }),
            (o.prototype.forEachCellComp = function (t) {
              F(this.cellComps, function (e, o) {
                o && t(o);
              });
            }),
            (o.prototype.postProcessClassesFromGridOptions = function () {
              var t = this,
                e =
                  this.beans.rowCssClassCalculator.processClassesFromGridOptions(
                    this.rowNode,
                    this.scope
                  );
              e &&
                e.length &&
                e.forEach(function (e) {
                  t.eAllRowContainers.forEach(function (t) {
                    return He(t, e);
                  });
                });
            }),
            (o.prototype.postProcessRowClassRules = function () {
              var t = this;
              this.beans.rowCssClassCalculator.processRowClassRules(
                this.rowNode,
                this.scope,
                function (e) {
                  t.eAllRowContainers.forEach(function (t) {
                    return He(t, e);
                  });
                },
                function (e) {
                  t.eAllRowContainers.forEach(function (t) {
                    return Be(t, e);
                  });
                }
              );
            }),
            (o.prototype.preProcessStylesFromGridOptions = function () {
              return Do(this.processStylesFromGridOptions());
            }),
            (o.prototype.postProcessStylesFromGridOptions = function () {
              var t = this.processStylesFromGridOptions();
              this.eAllRowContainers.forEach(function (e) {
                return go(e, t);
              });
            }),
            (o.prototype.processStylesFromGridOptions = function () {
              var t = this.beans.gridOptionsWrapper.getRowStyle();
              if (!t || "function" != typeof t) {
                var e,
                  o = this.beans.gridOptionsWrapper.getRowStyleFunc();
                return (
                  o &&
                    (e = o({
                      data: this.rowNode.data,
                      node: this.rowNode,
                      rowIndex: this.rowNode.rowIndex,
                      $scope: this.scope,
                      api: this.beans.gridOptionsWrapper.getApi(),
                      columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
                      context: this.beans.gridOptionsWrapper.getContext(),
                    })),
                  W({}, t, e)
                );
              }
              console.warn(
                "AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead"
              );
            }),
            (o.prototype.createCells = function (t) {
              var e = this,
                o = [],
                n = [];
              return (
                t.forEach(function (t) {
                  var r = new Gs(
                      e.scope,
                      e.beans,
                      t,
                      e.rowNode,
                      e,
                      !1,
                      e.printLayout
                    ),
                    i = r.getCreateTemplate();
                  o.push(i), n.push(r), (e.cellComps[t.getId()] = r);
                }),
                { template: o.join(""), cellComps: n }
              );
            }),
            (o.prototype.onRowSelected = function () {
              var t = this,
                e = this.rowNode.isSelected();
              this.eAllRowContainers.forEach(function (o) {
                en(o, e), je(o, "ag-row-selected", e), t.refreshAriaLabel(o, e);
              });
            }),
            (o.prototype.refreshAriaLabel = function (t, e) {
              e && this.beans.gridOptionsWrapper.isSuppressRowDeselection()
                ? t.removeAttribute("aria-label")
                : Vo(
                    t,
                    this.beans.gridOptionsWrapper.getLocaleTextFunc()(
                      e ? "ariaRowDeselect" : "ariaRowSelect",
                      "Press SPACE to " +
                        (e ? "deselect" : "select") +
                        " this row."
                    )
                  );
            }),
            (o.prototype.callAfterRowAttachedOnCells = function (t, e) {
              var o = this;
              t.forEach(function (t) {
                t.setParentRow(e),
                  t.afterAttached(),
                  o.editingRow && t.startEditingIfEnabled();
              });
            }),
            (o.prototype.afterRowAttached = function (t, e) {
              var o = this;
              this.addDomData(e),
                this.removeSecondPassFuncs.push(function () {
                  t.removeRowElement(e);
                }),
                this.removeFirstPassFuncs.push(function () {
                  if (r(o.rowNode.rowTop)) {
                    var t = o.roundRowTopToBounds(o.rowNode.rowTop);
                    o.setRowTop(t);
                  } else He(e, "ag-opacity-zero");
                }),
                this.eAllRowContainers.push(e),
                this.useAnimationFrameForCreate
                  ? this.beans.taskQueue.createTask(
                      this.addHoverFunctionality.bind(this, e),
                      this.rowNode.rowIndex,
                      "createTasksP2"
                    )
                  : this.addHoverFunctionality(e);
            }),
            (o.prototype.addHoverFunctionality = function (t) {
              var e = this;
              this.active &&
                (this.addManagedListener(t, "mouseenter", function () {
                  return e.rowNode.onMouseEnter();
                }),
                this.addManagedListener(t, "mouseleave", function () {
                  return e.rowNode.onMouseLeave();
                }),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_MOUSE_ENTER,
                  function () {
                    e.beans.gridOptionsWrapper.isSuppressRowHoverHighlight() ||
                      He(t, "ag-row-hover");
                  }
                ),
                this.addManagedListener(
                  this.rowNode,
                  Pr.EVENT_MOUSE_LEAVE,
                  function () {
                    Be(t, "ag-row-hover");
                  }
                ));
            }),
            (o.prototype.roundRowTopToBounds = function (t) {
              var e = this.beans.gridPanel.getVScrollPosition(),
                o = this.applyPaginationOffset(e.top, !0) - 100,
                n = this.applyPaginationOffset(e.bottom, !0) + 100;
              return Math.min(Math.max(o, t), n);
            }),
            (o.prototype.getFrameworkOverrides = function () {
              return this.beans.frameworkOverrides;
            }),
            (o.prototype.onRowHeightChanged = function () {
              if (r(this.rowNode.rowHeight)) {
                var t = this.rowNode.rowHeight + "px";
                this.eAllRowContainers.forEach(function (e) {
                  return (e.style.height = t);
                });
              }
            }),
            (o.prototype.addEventListener = function (e, o) {
              ("renderedRowRemoved" !== e && "rowRemoved" !== e) ||
                ((e = zt.EVENT_VIRTUAL_ROW_REMOVED),
                console.warn(
                  "AG Grid: Since version 11, event renderedRowRemoved is now called " +
                    zt.EVENT_VIRTUAL_ROW_REMOVED
                )),
                t.prototype.addEventListener.call(this, e, o);
            }),
            (o.prototype.removeEventListener = function (e, o) {
              ("renderedRowRemoved" !== e && "rowRemoved" !== e) ||
                ((e = zt.EVENT_VIRTUAL_ROW_REMOVED),
                console.warn(
                  "AG Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called " +
                    zt.EVENT_VIRTUAL_ROW_REMOVED
                )),
                t.prototype.removeEventListener.call(this, e, o);
            }),
            (o.prototype.destroy = function (e) {
              void 0 === e && (e = !1),
                (this.active = !1),
                this.destroyFullWidthComponents(),
                e
                  ? (this.removeFirstPassFuncs.forEach(function (t) {
                      return t();
                    }),
                    this.removeSecondPassFuncs.push(
                      this.destroyContainingCells.bind(this)
                    ))
                  : (this.destroyContainingCells(),
                    this.getAndClearDelayedDestroyFunctions().forEach(function (
                      t
                    ) {
                      return t();
                    }));
              var o = this.createRowEvent(zt.EVENT_VIRTUAL_ROW_REMOVED);
              this.dispatchEvent(o),
                this.beans.eventService.dispatchEvent(o),
                t.prototype.destroy.call(this);
            }),
            (o.prototype.destroyContainingCells = function () {
              var t = Object.keys(this.cellComps);
              this.destroyCells(t);
            }),
            (o.prototype.getAndClearDelayedDestroyFunctions = function () {
              var t = this.removeSecondPassFuncs;
              return (this.removeSecondPassFuncs = []), t;
            }),
            (o.prototype.onCellFocusChanged = function () {
              var t = this.beans.focusController.isRowFocused(
                this.rowNode.rowIndex,
                this.rowNode.rowPinned
              );
              t !== this.rowFocused &&
                (this.eAllRowContainers.forEach(function (e) {
                  return je(e, "ag-row-focus", t);
                }),
                this.eAllRowContainers.forEach(function (e) {
                  return je(e, "ag-row-no-focus", !t);
                }),
                (this.rowFocused = t)),
                !t && this.editingRow && this.stopEditing(!1);
            }),
            (o.prototype.onPaginationChanged = function () {
              var t = this.beans.paginationProxy.getCurrentPage();
              this.paginationPage !== t &&
                ((this.paginationPage = t), this.onTopChanged());
            }),
            (o.prototype.onTopChanged = function () {
              this.setRowTop(this.rowNode.rowTop);
            }),
            (o.prototype.onPaginationPixelOffsetChanged = function () {
              this.onTopChanged();
            }),
            (o.prototype.applyPaginationOffset = function (t, e) {
              return (
                void 0 === e && (e = !1),
                this.rowNode.isRowPinned()
                  ? t
                  : t +
                    this.beans.paginationProxy.getPixelOffset() * (e ? 1 : -1)
              );
            }),
            (o.prototype.setRowTop = function (t) {
              if (!this.printLayout && r(t)) {
                var e = this.applyPaginationOffset(t),
                  o =
                    (this.rowNode.isRowPinned()
                      ? e
                      : this.beans.maxDivHeightScaler.getRealPixelPosition(e)) +
                    "px";
                this.beans.gridOptionsWrapper.isSuppressRowTransform()
                  ? this.eAllRowContainers.forEach(function (t) {
                      return (t.style.top = o);
                    })
                  : this.eAllRowContainers.forEach(function (t) {
                      return (t.style.transform = "translateY(" + o + ")");
                    });
              }
            }),
            (o.prototype.getAndClearNextVMTurnFunctions = function () {
              var t = this.createSecondPassFuncs;
              return (this.createSecondPassFuncs = []), t;
            }),
            (o.prototype.getRowNode = function () {
              return this.rowNode;
            }),
            (o.prototype.getRenderedCellForColumn = function (t) {
              var e = this,
                o = this.cellComps[t.getColId()];
              if (o) return o;
              var n = Object.keys(this.cellComps)
                .map(function (t) {
                  return e.cellComps[t];
                })
                .filter(function (e) {
                  return e && -1 !== e.getColSpanningList().indexOf(t);
                });
              return n.length ? n[0] : null;
            }),
            (o.prototype.onRowIndexChanged = function () {
              null != this.rowNode.rowIndex &&
                (this.onCellFocusChanged(), this.updateRowIndexes());
            }),
            (o.prototype.updateRowIndexes = function () {
              var t = this,
                e = this.rowNode.getRowIndexString(),
                o = this.rowNode.rowIndex % 2 == 0,
                n = this.rowIsEven !== o,
                r = this.beans.headerNavigationService.getHeaderRowCount();
              n && (this.rowIsEven = o),
                this.eAllRowContainers.forEach(function (i) {
                  i.setAttribute("row-index", e),
                    qo(i, r + t.rowNode.rowIndex + 1),
                    n && (je(i, "ag-row-even", o), je(i, "ag-row-odd", !o));
                });
            }),
            (o.prototype.ensureDomOrder = function () {
              [
                { el: this.getBodyRowElement(), ct: this.bodyContainerComp },
                {
                  el: this.getPinnedLeftRowElement(),
                  ct: this.pinnedLeftContainerComp,
                },
                {
                  el: this.getPinnedRightRowElement(),
                  ct: this.pinnedRightContainerComp,
                },
                {
                  el: this.getFullWidthRowElement(),
                  ct: this.fullWidthContainerComp,
                },
              ].forEach(function (t) {
                t.el && t.ct.ensureDomOrder(t.el);
              });
            }),
            (o.prototype.getPinnedLeftRowElement = function () {
              return this.ePinnedLeftRow
                ? this.ePinnedLeftRow
                : this.eFullWidthRowLeft;
            }),
            (o.prototype.getPinnedRightRowElement = function () {
              return this.ePinnedRightRow
                ? this.ePinnedRightRow
                : this.eFullWidthRowRight;
            }),
            (o.prototype.getBodyRowElement = function () {
              return this.eBodyRow ? this.eBodyRow : this.eFullWidthRowBody;
            }),
            (o.prototype.getFullWidthRowElement = function () {
              return this.eFullWidthRow;
            }),
            (o.DOM_DATA_KEY_RENDERED_ROW = "renderedRow"),
            (o.FULL_WIDTH_CELL_RENDERER = "fullWidthCellRenderer"),
            (o.GROUP_ROW_RENDERER = "groupRowRenderer"),
            (o.GROUP_ROW_RENDERER_COMP_NAME = "agGroupRowRenderer"),
            (o.LOADING_CELL_RENDERER = "loadingCellRenderer"),
            (o.LOADING_CELL_RENDERER_COMP_NAME = "agLoadingCellRenderer"),
            (o.DETAIL_CELL_RENDERER = "detailCellRenderer"),
            (o.DETAIL_CELL_RENDERER_COMP_NAME = "agDetailCellRenderer"),
            o
          );
        })(jn),
        Bs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        js = function () {
          return (js =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Us = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        zs = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.destroyFuncsForColumnListeners = []),
              (e.rowCompsByIndex = {}),
              (e.floatingTopRowComps = []),
              (e.floatingBottomRowComps = []),
              (e.refreshInProgress = !1),
              e
            );
          }
          return (
            Bs(e, t),
            (e.prototype.registerGridCore = function (t) {
              this.gridCore = t;
            }),
            (e.prototype.getGridCore = function () {
              return this.gridCore;
            }),
            (e.prototype.agWire = function (t) {
              this.logger = t.create("RowRenderer");
            }),
            (e.prototype.registerGridComp = function (t) {
              (this.gridPanel = t),
                (this.rowContainers = this.gridPanel.getRowContainers()),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_PAGINATION_CHANGED,
                  this.onPageLoaded.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_PINNED_ROW_DATA_CHANGED,
                  this.onPinnedRowDataChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                  this.onDisplayedColumnsChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_BODY_SCROLL,
                  this.redrawAfterScroll.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_BODY_HEIGHT_CHANGED,
                  this.redrawAfterScroll.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_DOM_LAYOUT,
                  this.onDomLayoutChanged.bind(this)
                ),
                this.registerCellEventListeners(),
                (this.printLayout =
                  this.gridOptionsWrapper.getDomLayout() ===
                  vt.DOM_LAYOUT_PRINT),
                (this.embedFullWidthRows =
                  this.printLayout ||
                  this.gridOptionsWrapper.isEmbedFullWidthRows()),
                this.redrawAfterModelUpdate();
            }),
            (e.prototype.registerCellEventListeners = function () {
              var t = this;
              this.addManagedListener(
                this.eventService,
                zt.EVENT_CELL_FOCUSED,
                function (e) {
                  t.forEachCellComp(function (t) {
                    return t.onCellFocused(e);
                  }),
                    t.forEachRowComp(function (t, o) {
                      o.isFullWidth() && o.onFullWidthRowFocused(e);
                    });
                }
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_FLASH_CELLS,
                  function (e) {
                    t.forEachCellComp(function (t) {
                      return t.onFlashCells(e);
                    });
                  }
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_HOVER_CHANGED,
                  function () {
                    t.forEachCellComp(function (t) {
                      return t.onColumnHover();
                    });
                  }
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
                  function () {
                    t.printLayout &&
                      t.forEachCellComp(function (t) {
                        return t.onLeftChanged();
                      });
                  }
                ),
                this.gridOptionsWrapper.isEnableRangeSelection() &&
                  (this.addManagedListener(
                    this.eventService,
                    zt.EVENT_RANGE_SELECTION_CHANGED,
                    function () {
                      t.forEachCellComp(function (t) {
                        return t.onRangeSelectionChanged();
                      });
                    }
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_COLUMN_MOVED,
                    function () {
                      t.forEachCellComp(function (t) {
                        return t.updateRangeBordersIfRangeCount();
                      });
                    }
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_COLUMN_PINNED,
                    function () {
                      t.forEachCellComp(function (t) {
                        return t.updateRangeBordersIfRangeCount();
                      });
                    }
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_COLUMN_VISIBLE,
                    function () {
                      t.forEachCellComp(function (t) {
                        return t.updateRangeBordersIfRangeCount();
                      });
                    }
                  )),
                this.refreshListenersToColumnsForCellComps(),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_GRID_COLUMNS_CHANGED,
                  this.refreshListenersToColumnsForCellComps.bind(this)
                ),
                this.addDestroyFunc(this.removeGridColumnListeners.bind(this));
            }),
            (e.prototype.removeGridColumnListeners = function () {
              this.destroyFuncsForColumnListeners.forEach(function (t) {
                return t();
              }),
                (this.destroyFuncsForColumnListeners.length = 0);
            }),
            (e.prototype.refreshListenersToColumnsForCellComps = function () {
              var t = this;
              this.removeGridColumnListeners();
              var e = this.columnController.getAllGridColumns();
              e &&
                e.forEach(function (e) {
                  var o = function (o) {
                      t.forEachCellComp(function (t) {
                        t.getColumn() === e && o(t);
                      });
                    },
                    n = function () {
                      o(function (t) {
                        return t.onLeftChanged();
                      });
                    },
                    r = function () {
                      o(function (t) {
                        return t.onWidthChanged();
                      });
                    },
                    i = function () {
                      o(function (t) {
                        return t.onFirstRightPinnedChanged();
                      });
                    },
                    s = function () {
                      o(function (t) {
                        return t.onLastLeftPinnedChanged();
                      });
                    };
                  e.addEventListener(bt.EVENT_LEFT_CHANGED, n),
                    e.addEventListener(bt.EVENT_WIDTH_CHANGED, r),
                    e.addEventListener(bt.EVENT_FIRST_RIGHT_PINNED_CHANGED, i),
                    e.addEventListener(bt.EVENT_LAST_LEFT_PINNED_CHANGED, s),
                    t.destroyFuncsForColumnListeners.push(function () {
                      e.removeEventListener(bt.EVENT_LEFT_CHANGED, n),
                        e.removeEventListener(bt.EVENT_WIDTH_CHANGED, r),
                        e.removeEventListener(
                          bt.EVENT_FIRST_RIGHT_PINNED_CHANGED,
                          i
                        ),
                        e.removeEventListener(
                          bt.EVENT_LAST_LEFT_PINNED_CHANGED,
                          s
                        );
                    });
                });
            }),
            (e.prototype.onDomLayoutChanged = function () {
              var t =
                  this.gridOptionsWrapper.getDomLayout() ===
                  vt.DOM_LAYOUT_PRINT,
                e = t || this.gridOptionsWrapper.isEmbedFullWidthRows(),
                o = e !== this.embedFullWidthRows || this.printLayout !== t;
              (this.printLayout = t),
                (this.embedFullWidthRows = e),
                o && this.redrawAfterModelUpdate();
            }),
            (e.prototype.datasourceChanged = function () {
              (this.firstRenderedRow = 0), (this.lastRenderedRow = -1);
              var t = Object.keys(this.rowCompsByIndex);
              this.removeRowComps(t);
            }),
            (e.prototype.onPageLoaded = function (t) {
              i(t) &&
                (t = {
                  type: zt.EVENT_MODEL_UPDATED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  animate: !1,
                  keepRenderedRows: !1,
                  newData: !1,
                  newPage: !1,
                }),
                this.onModelUpdated(t);
            }),
            (e.prototype.getAllCellsForColumn = function (t) {
              var e = [];
              function o(o, n) {
                var r = n.getCellForCol(t);
                r && e.push(r);
              }
              return (
                F(this.rowCompsByIndex, o),
                F(this.floatingBottomRowComps, o),
                F(this.floatingTopRowComps, o),
                e
              );
            }),
            (e.prototype.refreshFloatingRowComps = function () {
              this.refreshFloatingRows(
                this.floatingTopRowComps,
                this.pinnedRowModel.getPinnedTopRowData(),
                this.rowContainers.floatingTopPinnedLeft,
                this.rowContainers.floatingTopPinnedRight,
                this.rowContainers.floatingTop,
                this.rowContainers.floatingTopFullWidth
              ),
                this.refreshFloatingRows(
                  this.floatingBottomRowComps,
                  this.pinnedRowModel.getPinnedBottomRowData(),
                  this.rowContainers.floatingBottomPinnedLeft,
                  this.rowContainers.floatingBottomPinnedRight,
                  this.rowContainers.floatingBottom,
                  this.rowContainers.floatingBottomFullWidth
                );
            }),
            (e.prototype.refreshFloatingRows = function (t, e, o, n, r, i) {
              var s = this;
              t.forEach(function (t) {
                t.destroy();
              }),
                (t.length = 0),
                e &&
                  e.forEach(function (e) {
                    var a = new Hs(
                      s.$scope,
                      r,
                      o,
                      n,
                      i,
                      e,
                      s.beans,
                      !1,
                      !1,
                      s.printLayout,
                      s.embedFullWidthRows
                    );
                    a.init(), t.push(a);
                  }),
                this.flushContainers(t);
            }),
            (e.prototype.onPinnedRowDataChanged = function () {
              this.redrawAfterModelUpdate({ recycleRows: !0 });
            }),
            (e.prototype.onModelUpdated = function (t) {
              this.redrawAfterModelUpdate({
                recycleRows: t.keepRenderedRows,
                animate: t.animate,
                newData: t.newData,
                newPage: t.newPage,
                onlyBody: !0,
              });
            }),
            (e.prototype.getRenderedIndexesForRowNodes = function (t) {
              var e = [];
              return (
                i(t) ||
                  F(this.rowCompsByIndex, function (o, n) {
                    var r = n.getRowNode();
                    t.indexOf(r) >= 0 && e.push(o);
                  }),
                e
              );
            }),
            (e.prototype.redrawRows = function (t) {
              if (t && 0 != t.length) {
                var e = this.getRenderedIndexesForRowNodes(t);
                this.removeRowComps(e),
                  this.redrawAfterModelUpdate({ recycleRows: !0 });
              }
            }),
            (e.prototype.getCellToRestoreFocusToAfterRefresh = function (t) {
              var e = t.suppressKeepFocus
                ? null
                : this.focusController.getFocusCellToUseAfterRefresh();
              if (i(e)) return null;
              var o = document.activeElement;
              return i(
                this.gridOptionsWrapper.getDomData(o, Gs.DOM_DATA_KEY_CELL_COMP)
              )
                ? null
                : e;
            }),
            (e.prototype.redrawAfterModelUpdate = function (t) {
              void 0 === t && (t = {}), this.getLockOnRefresh();
              var e = this.getCellToRestoreFocusToAfterRefresh(t);
              this.sizeContainerToPageHeight(), this.scrollToTopIfNewData(t);
              var o = !this.printLayout && !!t.recycleRows,
                n = t.animate && this.gridOptionsWrapper.isAnimateRows(),
                r = this.binRowComps(o),
                i = (function () {
                  if (null == e || null == r) return !1;
                  var t = !1;
                  return (
                    F(r, function (o, n) {
                      var r = n.getRowNode();
                      r.rowIndex == e.rowIndex &&
                        r.rowPinned == e.rowPinned &&
                        (t = !0);
                    }),
                    t
                  );
                })();
              this.redraw(r, n),
                t.onlyBody || this.refreshFloatingRowComps(),
                i || this.restoreFocusedCell(e),
                this.releaseLockOnRefresh();
            }),
            (e.prototype.scrollToTopIfNewData = function (t) {
              var e = t.newData || t.newPage,
                o = this.gridOptionsWrapper.isSuppressScrollOnNewData();
              e && !o && this.gridPanel.scrollToTop();
            }),
            (e.prototype.sizeContainerToPageHeight = function () {
              var t = [
                this.rowContainers.body,
                this.rowContainers.fullWidth,
                this.rowContainers.pinnedLeft,
                this.rowContainers.pinnedRight,
              ];
              if (this.printLayout)
                t.forEach(function (t) {
                  return t.setHeight(null);
                });
              else {
                var e = this.paginationProxy.getCurrentPageHeight();
                0 === e && (e = 1), this.maxDivHeightScaler.setModelHeight(e);
                var o = this.maxDivHeightScaler.getUiContainerHeight();
                t.forEach(function (t) {
                  return t.setHeight(o);
                });
              }
            }),
            (e.prototype.getLockOnRefresh = function () {
              if (this.refreshInProgress)
                throw new Error(
                  "AG Grid: cannot get grid to draw rows when it is in the middle of drawing rows. Your code probably called a grid API method while the grid was in the render stage. To overcome this, put the API call into a timeout, e.g. instead of api.refreshView(), call setTimeout(function() { api.refreshView(); }, 0). To see what part of your code that caused the refresh check this stacktrace."
                );
              this.refreshInProgress = !0;
            }),
            (e.prototype.releaseLockOnRefresh = function () {
              this.refreshInProgress = !1;
            }),
            (e.prototype.restoreFocusedCell = function (t) {
              t &&
                this.focusController.setFocusedCell(
                  t.rowIndex,
                  t.column,
                  t.rowPinned,
                  !0
                );
            }),
            (e.prototype.stopEditing = function (t) {
              void 0 === t && (t = !1),
                this.forEachRowComp(function (e, o) {
                  o.stopEditing(t);
                });
            }),
            (e.prototype.forEachCellComp = function (t) {
              this.forEachRowComp(function (e, o) {
                return o.forEachCellComp(t);
              });
            }),
            (e.prototype.forEachRowComp = function (t) {
              F(this.rowCompsByIndex, t),
                F(this.floatingTopRowComps, t),
                F(this.floatingBottomRowComps, t);
            }),
            (e.prototype.addRenderedRowListener = function (t, e, o) {
              var n = this.rowCompsByIndex[e];
              n && n.addEventListener(t, o);
            }),
            (e.prototype.flashCells = function (t) {
              void 0 === t && (t = {});
              var e = t.flashDelay,
                o = t.fadeDelay;
              this.forEachCellCompFiltered(t.rowNodes, t.columns, function (t) {
                return t.flashCell({ flashDelay: e, fadeDelay: o });
              });
            }),
            (e.prototype.refreshCells = function (t) {
              void 0 === t && (t = {});
              var e = {
                forceRefresh: t.force,
                newData: !1,
                suppressFlash: t.suppressFlash,
              };
              this.forEachCellCompFiltered(t.rowNodes, t.columns, function (t) {
                if (t.refreshShouldDestroy()) {
                  var o = t.getRenderedRow();
                  o && o.refreshCell(t);
                } else t.refreshCell(e);
              });
            }),
            (e.prototype.getCellRendererInstances = function (t) {
              var e = [];
              return (
                this.forEachCellCompFiltered(
                  t.rowNodes,
                  t.columns,
                  function (t) {
                    var o = t.getCellRenderer();
                    o && e.push(o);
                  }
                ),
                e
              );
            }),
            (e.prototype.getCellEditorInstances = function (t) {
              var e = [];
              return (
                this.forEachCellCompFiltered(
                  t.rowNodes,
                  t.columns,
                  function (t) {
                    var o = t.getCellEditor();
                    o && e.push(o);
                  }
                ),
                e
              );
            }),
            (e.prototype.getEditingCells = function () {
              var t = [];
              return (
                this.forEachCellComp(function (e) {
                  if (e.isEditing()) {
                    var o = e.getCellPosition();
                    t.push(o);
                  }
                }),
                t
              );
            }),
            (e.prototype.forEachCellCompFiltered = function (t, e, o) {
              var n,
                i,
                s = this;
              r(t) &&
                ((n = { top: {}, bottom: {}, normal: {} }),
                t.forEach(function (t) {
                  var e = t.id;
                  t.rowPinned === vt.PINNED_TOP
                    ? (n.top[e] = !0)
                    : t.rowPinned === vt.PINNED_BOTTOM
                    ? (n.bottom[e] = !0)
                    : (n.normal[e] = !0);
                })),
                r(e) &&
                  ((i = {}),
                  e.forEach(function (t) {
                    var e = s.columnController.getGridColumn(t);
                    r(e) && (i[e.getId()] = !0);
                  }));
              var a = function (t) {
                var e = t.getRowNode(),
                  s = e.id,
                  a = e.rowPinned;
                if (r(n))
                  if (a === vt.PINNED_BOTTOM) {
                    if (!n.bottom[s]) return;
                  } else if (a === vt.PINNED_TOP) {
                    if (!n.top[s]) return;
                  } else if (!n.normal[s]) return;
                t.forEachCellComp(function (t) {
                  var e = t.getColumn().getId();
                  (i && !i[e]) || (o && o(t));
                });
              };
              F(this.rowCompsByIndex, function (t, e) {
                a(e);
              }),
                this.floatingTopRowComps && this.floatingTopRowComps.forEach(a),
                this.floatingBottomRowComps &&
                  this.floatingBottomRowComps.forEach(a);
            }),
            (e.prototype.destroy = function () {
              var e = Object.keys(this.rowCompsByIndex);
              this.removeRowComps(e), t.prototype.destroy.call(this);
            }),
            (e.prototype.binRowComps = function (t) {
              var e,
                o = this,
                n = {};
              return (
                t
                  ? ((e = []),
                    F(this.rowCompsByIndex, function (t, i) {
                      var s = i.getRowNode();
                      r(s.id)
                        ? ((n[s.id] = i), delete o.rowCompsByIndex[t])
                        : e.push(t);
                    }))
                  : (e = Object.keys(this.rowCompsByIndex)),
                this.removeRowComps(e),
                n
              );
            }),
            (e.prototype.removeRowComps = function (t) {
              var e = this;
              t.forEach(function (t) {
                var o = e.rowCompsByIndex[t];
                o && o.destroy(), delete e.rowCompsByIndex[t];
              });
            }),
            (e.prototype.redrawAfterScroll = function () {
              this.getLockOnRefresh(),
                this.redraw(null, !1, !0),
                this.releaseLockOnRefresh();
            }),
            (e.prototype.removeRowCompsNotToDraw = function (t) {
              var e = {};
              t.forEach(function (t) {
                return (e[t] = !0);
              });
              var o = Object.keys(this.rowCompsByIndex).filter(function (t) {
                return !e[t];
              });
              this.removeRowComps(o);
            }),
            (e.prototype.calculateIndexesToDraw = function (t) {
              var e = this,
                o = ie(this.firstRenderedRow, this.lastRenderedRow),
                n = function (t, n) {
                  var r = n.getRowNode().rowIndex;
                  null != r &&
                    (r < e.firstRenderedRow || r > e.lastRenderedRow) &&
                    e.doNotUnVirtualiseRow(n) &&
                    o.push(r);
                };
              return (
                F(this.rowCompsByIndex, n),
                F(t, n),
                o.sort(function (t, e) {
                  return t - e;
                }),
                o
              );
            }),
            (e.prototype.redraw = function (t, e, o) {
              var n = this;
              void 0 === e && (e = !1),
                void 0 === o && (o = !1),
                this.maxDivHeightScaler.updateOffset(),
                this.workOutFirstAndLastRowsToRender();
              var i = this.calculateIndexesToDraw(t);
              this.removeRowCompsNotToDraw(i), this.printLayout && (e = !1);
              var s = [],
                a = [];
              i.forEach(function (i) {
                var l = n.createOrUpdateRowComp(i, t, e, o);
                r(l) && (a.push(l), O(s, l.getAndClearNextVMTurnFunctions()));
              }),
                this.flushContainers(a),
                J(s),
                !o ||
                this.gridOptionsWrapper.isSuppressAnimationFrame() ||
                this.printLayout
                  ? this.destroyRowComps(t, e)
                  : this.beans.taskQueue.addDestroyTask(
                      this.destroyRowComps.bind(this, t, e)
                    ),
                this.checkAngularCompile(),
                this.gridPanel.updateRowCount();
            }),
            (e.prototype.flushContainers = function (t) {
              F(this.rowContainers, function (t, e) {
                e && e.flushRowTemplates();
              }),
                t.forEach(function (t) {
                  return t.afterFlush();
                });
            }),
            (e.prototype.onDisplayedColumnsChanged = function () {
              var t = this.columnController.isPinningLeft(),
                e = this.columnController.isPinningRight();
              (this.pinningLeft !== t || e !== this.pinningRight) &&
                ((this.pinningLeft = t),
                (this.pinningRight = e),
                this.embedFullWidthRows && this.redrawFullWidthEmbeddedRows());
            }),
            (e.prototype.redrawFullWidthEmbeddedRows = function () {
              var t = [];
              F(this.rowCompsByIndex, function (e, o) {
                if (o.isFullWidth()) {
                  var n = o.getRowNode().rowIndex;
                  t.push(n.toString());
                }
              }),
                this.refreshFloatingRowComps(),
                this.removeRowComps(t),
                this.redrawAfterScroll();
            }),
            (e.prototype.refreshFullWidthRows = function (t) {
              var e = [],
                o = !!t,
                n = o ? {} : void 0;
              o &&
                n &&
                t.forEach(function (t) {
                  return (n[t.id] = !0);
                }),
                F(this.rowCompsByIndex, function (t, r) {
                  if (r.isFullWidth()) {
                    var i = r.getRowNode();
                    if (
                      o &&
                      n &&
                      !n[i.id] &&
                      !n[i.level > 0 && i.parent ? i.parent.id : void 0]
                    )
                      return;
                    if (!r.refreshFullWidth()) {
                      var s = r.getRowNode().rowIndex;
                      e.push(s.toString());
                    }
                  }
                }),
                this.removeRowComps(e),
                this.redrawAfterScroll();
            }),
            (e.prototype.createOrUpdateRowComp = function (t, e, o, n) {
              var i = null,
                s = this.rowCompsByIndex[t];
              if (
                (s ||
                  (r((i = this.paginationProxy.getRow(t))) &&
                    r(e) &&
                    e[i.id] &&
                    i.alreadyRendered &&
                    ((s = e[i.id]), (e[i.id] = null))),
                s)
              )
                s && s.ensureDomOrder();
              else {
                if ((i || (i = this.paginationProxy.getRow(t)), !r(i))) return;
                s = this.createRowComp(i, o, n);
              }
              return (
                i && (i.alreadyRendered = !0), (this.rowCompsByIndex[t] = s), s
              );
            }),
            (e.prototype.destroyRowComps = function (t, e) {
              var o = [];
              F(t, function (t, n) {
                n &&
                  (n.destroy(e), O(o, n.getAndClearDelayedDestroyFunctions()));
              }),
                $(o);
            }),
            (e.prototype.checkAngularCompile = function () {
              var t = this;
              this.gridOptionsWrapper.isAngularCompileRows() &&
                window.setTimeout(function () {
                  t.$scope.$apply();
                }, 0);
            }),
            (e.prototype.workOutFirstAndLastRowsToRender = function () {
              var t,
                e,
                o = this;
              if (this.paginationProxy.isRowsToRender())
                if (this.printLayout)
                  (t = this.paginationProxy.getPageFirstRow()),
                    (e = this.paginationProxy.getPageLastRow());
                else {
                  var n = this.paginationProxy.getPixelOffset(),
                    r = this.paginationProxy.getCurrentPagePixelRange(),
                    i = r.pageFirstPixel,
                    s = r.pageLastPixel,
                    a = this.maxDivHeightScaler.getOffset(),
                    l = this.gridPanel.getVScrollPosition(),
                    u = l.top,
                    p = l.bottom,
                    c = this.gridOptionsWrapper.getRowBufferInPixels(),
                    d = Math.max(u + n - c, i) + a,
                    h = Math.min(p + n + c, s) + a;
                  this.ensureAllRowsInRangeHaveHeightsCalculated(d, h);
                  var f = this.paginationProxy.getRowIndexAtPixel(d),
                    g = this.paginationProxy.getRowIndexAtPixel(h),
                    y = this.paginationProxy.getPageFirstRow(),
                    m = this.paginationProxy.getPageLastRow();
                  f < y && (f = y), g > m && (g = m), (t = f), (e = g);
                }
              else (t = 0), (e = -1);
              var v =
                  this.gridOptionsWrapper.getDomLayout() ===
                  vt.DOM_LAYOUT_NORMAL,
                C =
                  this.gridOptionsWrapper.isSuppressMaxRenderedRowRestriction(),
                w = Math.max(this.gridOptionsWrapper.getRowBuffer(), 500);
              if (
                (v && !C && e - t > w && (e = t + w),
                (t !== this.firstRenderedRow || e !== this.lastRenderedRow) &&
                  ((this.firstRenderedRow = t),
                  (this.lastRenderedRow = e),
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_VIEWPORT_CHANGED,
                    firstRow: t,
                    lastRow: e,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  })),
                this.paginationProxy.isRowsToRender())
              ) {
                var b = {
                  type: zt.EVENT_FIRST_DATA_RENDERED,
                  firstRow: t,
                  lastRow: e,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                };
                window.setTimeout(function () {
                  return o.eventService.dispatchEventOnce(b);
                }, 50);
              }
            }),
            (e.prototype.ensureAllRowsInRangeHaveHeightsCalculated = function (
              t,
              e
            ) {
              this.paginationProxy.ensureRowHeightsValid(t, e, -1, -1) &&
                (this.sizeContainerToPageHeight(),
                this.maxDivHeightScaler.updateOffset());
            }),
            (e.prototype.getFirstVirtualRenderedRow = function () {
              return this.firstRenderedRow;
            }),
            (e.prototype.getLastVirtualRenderedRow = function () {
              return this.lastRenderedRow;
            }),
            (e.prototype.doNotUnVirtualiseRow = function (t) {
              var e = t.getRowNode(),
                o = this.focusController.isRowNodeFocused(e),
                n = t.isEditing();
              return (
                !!(o || n || e.detail) && !!this.paginationProxy.isRowPresent(e)
              );
            }),
            (e.prototype.createRowComp = function (t, e, o) {
              var n = this.gridOptionsWrapper.isSuppressAnimationFrame(),
                r = new Hs(
                  this.$scope,
                  this.rowContainers.body,
                  this.rowContainers.pinnedLeft,
                  this.rowContainers.pinnedRight,
                  this.rowContainers.fullWidth,
                  t,
                  this.beans,
                  e,
                  o && !n && !this.printLayout,
                  this.printLayout,
                  this.embedFullWidthRows
                );
              return r.init(), r;
            }),
            (e.prototype.getRenderedNodes = function () {
              var t = this.rowCompsByIndex;
              return Object.keys(t).map(function (e) {
                return t[e].getRowNode();
              });
            }),
            (e.prototype.navigateToNextCell = function (t, e, o, n) {
              for (
                var s = o, a = !1;
                s && (s === o || !this.isValidNavigateCell(s));

              )
                this.gridOptionsWrapper.isEnableRtl()
                  ? e === $n.LEFT && (s = this.getLastCellOfColSpan(s))
                  : e === $n.RIGHT && (s = this.getLastCellOfColSpan(s)),
                  (a = i(
                    (s = this.cellNavigationService.getNextCellToFocus(e, s))
                  ));
              if (
                (a &&
                  t &&
                  t.keyCode === $n.UP &&
                  (s = { rowIndex: -1, rowPinned: null, column: o.column }),
                n)
              ) {
                var l = this.gridOptionsWrapper.getNavigateToNextCellFunc();
                if (r(l)) {
                  var u = l({
                    key: e,
                    previousCellPosition: o,
                    nextCellPosition: s || null,
                    event: t,
                  });
                  r(u)
                    ? (u.floating &&
                        (q(function () {
                          console.warn(
                            "AG Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?"
                          );
                        }, "no floating in userCell"),
                        (u.rowPinned = u.floating)),
                      (s = {
                        rowPinned: u.rowPinned,
                        rowIndex: u.rowIndex,
                        column: u.column,
                      }))
                    : (s = null);
                }
              }
              if (s)
                if (s.rowIndex < 0) {
                  var p =
                    this.beans.headerNavigationService.getHeaderRowCount();
                  this.focusController.focusHeaderPosition({
                    headerRowIndex: p + s.rowIndex,
                    column: o.column,
                  });
                } else {
                  var c = this.getNormalisedPosition(s);
                  c ? this.focusPosition(c) : this.tryToFocusFullWidthRow(s);
                }
            }),
            (e.prototype.getNormalisedPosition = function (t) {
              this.ensureCellVisible(t);
              var e = this.getComponentForCell(t);
              return e
                ? ((t = e.getCellPosition()), this.ensureCellVisible(t), t)
                : null;
            }),
            (e.prototype.tryToFocusFullWidthRow = function (t, e) {
              void 0 === e && (e = !1);
              var o = this.columnController.getAllDisplayedColumns(),
                n = this.getRowCompByPosition(t);
              if (!n || !n.isFullWidth()) return !1;
              var r = {
                rowIndex: t.rowIndex,
                rowPinned: t.rowPinned,
                column: t.column || (e ? y(o) : o[0]),
              };
              return this.focusPosition(r), !0;
            }),
            (e.prototype.focusPosition = function (t) {
              this.focusController.setFocusedCell(
                t.rowIndex,
                t.column,
                t.rowPinned,
                !0
              ),
                this.rangeController && this.rangeController.setRangeToCell(t);
            }),
            (e.prototype.isValidNavigateCell = function (t) {
              return !!this.rowPositionUtils.getRowNode(t);
            }),
            (e.prototype.getLastCellOfColSpan = function (t) {
              var e = this.getComponentForCell(t);
              if (!e) return t;
              var o = e.getColSpanningList();
              return 1 === o.length
                ? t
                : {
                    rowIndex: t.rowIndex,
                    column: y(o),
                    rowPinned: t.rowPinned,
                  };
            }),
            (e.prototype.ensureCellVisible = function (t) {
              i(t.rowPinned) && this.gridPanel.ensureIndexVisible(t.rowIndex),
                t.column.isPinned() ||
                  this.gridPanel.ensureColumnVisible(t.column),
                this.gridPanel.horizontallyScrollHeaderCenterAndFloatingCenter(),
                this.animationFrameService.flushAllFrames();
            }),
            (e.prototype.startEditingCell = function (t, e, o) {
              var n = this.getComponentForCell(t);
              n && n.startRowOrCellEdit(e, o);
            }),
            (e.prototype.getRowCompByPosition = function (t) {
              var e;
              switch (t.rowPinned) {
                case vt.PINNED_TOP:
                  e = this.floatingTopRowComps[t.rowIndex];
                  break;
                case vt.PINNED_BOTTOM:
                  e = this.floatingBottomRowComps[t.rowIndex];
                  break;
                default:
                  e = this.rowCompsByIndex[t.rowIndex];
              }
              return e;
            }),
            (e.prototype.getComponentForCell = function (t) {
              var e = this.getRowCompByPosition(t);
              return e ? e.getRenderedCellForColumn(t.column) : null;
            }),
            (e.prototype.getRowNode = function (t) {
              switch (t.rowPinned) {
                case vt.PINNED_TOP:
                  return this.pinnedRowModel.getPinnedTopRowData()[t.rowIndex];
                case vt.PINNED_BOTTOM:
                  return this.pinnedRowModel.getPinnedBottomRowData()[
                    t.rowIndex
                  ];
                default:
                  return this.rowModel.getRow(t.rowIndex);
              }
            }),
            (e.prototype.onTabKeyDown = function (t, e) {
              var o = e.shiftKey;
              if (this.moveToCellAfter(t, o)) e.preventDefault();
              else if (o) {
                var n = t.getRowPosition(),
                  r = n.rowIndex;
                if (
                  n.rowPinned
                    ? 0 === r
                    : r === this.paginationProxy.getPageFirstRow()
                ) {
                  e.preventDefault();
                  var i =
                      this.beans.headerNavigationService.getHeaderRowCount() -
                      1,
                    s = y(this.columnController.getAllDisplayedColumns());
                  this.focusController.focusHeaderPosition({
                    headerRowIndex: i,
                    column: s,
                  });
                }
              } else
                t instanceof Gs && t.focusCell(!0),
                  this.focusController.focusNextGridCoreContainer(!1) &&
                    e.preventDefault();
            }),
            (e.prototype.tabToNextCell = function (t) {
              var e = this.focusController.getFocusedCell();
              if (i(e)) return !1;
              var o = this.getComponentForCell(e);
              return (
                !!(
                  !i(o) ||
                  ((o = this.getRowCompByPosition(e)) && o.isFullWidth())
                ) && this.moveToCellAfter(o, t)
              );
            }),
            (e.prototype.moveToCellAfter = function (t, e) {
              return (
                (t.isEditing()
                  ? this.gridOptionsWrapper.isFullRowEdit()
                    ? this.moveToNextEditingRow(t, e)
                    : this.moveToNextEditingCell(t, e)
                  : this.moveToNextCellNotEditing(t, e)) ||
                !!this.focusController.getFocusedHeader()
              );
            }),
            (e.prototype.moveToNextEditingCell = function (t, e) {
              var o = t.getCellPosition();
              t.stopEditing();
              var n = this.findNextCellToFocusOn(o, e, !0),
                i = r(n);
              return (
                i &&
                  n &&
                  (n.startEditingIfEnabled(null, null, !0), n.focusCell(!1)),
                i
              );
            }),
            (e.prototype.moveToNextEditingRow = function (t, e) {
              var o = t.getCellPosition(),
                n = this.findNextCellToFocusOn(o, e, !0),
                i = r(n);
              return i && n && this.moveEditToNextCellOrRow(t, n), i;
            }),
            (e.prototype.moveToNextCellNotEditing = function (t, e) {
              var o,
                n = this.columnController.getAllDisplayedColumns();
              o =
                t instanceof Hs
                  ? js(js({}, t.getRowPosition()), { column: e ? n[0] : y(n) })
                  : t.getCellPosition();
              var i = this.findNextCellToFocusOn(o, e, !1);
              if (i instanceof Gs) i.focusCell(!0);
              else if (i)
                return this.tryToFocusFullWidthRow(i.getRowPosition(), e);
              return r(i);
            }),
            (e.prototype.moveEditToNextCellOrRow = function (t, e) {
              var o = t.getCellPosition(),
                n = e.getCellPosition();
              if (n && o.rowIndex === n.rowIndex && o.rowPinned === n.rowPinned)
                t.setFocusOutOnEditor(), e.setFocusInOnEditor();
              else {
                var r = t.getRenderedRow(),
                  i = e.getRenderedRow();
                t.setFocusOutOnEditor(),
                  r.stopEditing(),
                  i.startRowEditing(),
                  e.setFocusInOnEditor();
              }
              e.focusCell();
            }),
            (e.prototype.findNextCellToFocusOn = function (t, e, o) {
              for (var n = t; ; ) {
                e || (n = this.getLastCellOfColSpan(n)),
                  (n = this.cellNavigationService.getNextTabbedCell(n, e));
                var i = this.gridOptionsWrapper.getTabToNextCellFunc();
                if (r(i)) {
                  var s = i({
                    backwards: e,
                    editing: o,
                    previousCellPosition: t,
                    nextCellPosition: n || null,
                  });
                  r(s)
                    ? (s.floating &&
                        (q(function () {
                          console.warn(
                            "AG Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?"
                          );
                        }, "no floating in userCell"),
                        (s.rowPinned = s.floating)),
                      (n = {
                        rowIndex: s.rowIndex,
                        column: s.column,
                        rowPinned: s.rowPinned,
                      }))
                    : (n = null);
                }
                if (!n) return null;
                if (n.rowIndex < 0) {
                  var a =
                    this.beans.headerNavigationService.getHeaderRowCount();
                  return (
                    this.focusController.focusHeaderPosition({
                      headerRowIndex: a + n.rowIndex,
                      column: n.column,
                    }),
                    null
                  );
                }
                if (o) {
                  var l = this.lookupRowNodeForCell(n);
                  if (!l || !n.column.isCellEditable(l)) continue;
                }
                this.ensureCellVisible(n);
                var u = this.getComponentForCell(n);
                if (u) {
                  if (!u.isSuppressNavigable())
                    return (
                      this.rangeController &&
                        this.rangeController.setRangeToCell(n),
                      u
                    );
                } else {
                  var p = this.getRowCompByPosition(n);
                  if (p && p.isFullWidth()) return p;
                }
              }
            }),
            (e.prototype.lookupRowNodeForCell = function (t) {
              return t.rowPinned === vt.PINNED_TOP
                ? this.pinnedRowModel.getPinnedTopRow(t.rowIndex)
                : t.rowPinned === vt.PINNED_BOTTOM
                ? this.pinnedRowModel.getPinnedBottomRow(t.rowIndex)
                : this.paginationProxy.getRow(t.rowIndex);
            }),
            (e.prototype.isRangeInRenderedViewport = function (t, e) {
              return !(
                null == t ||
                null == e ||
                e < this.firstRenderedRow ||
                t > this.lastRenderedRow
              );
            }),
            Us([ut("paginationProxy")], e.prototype, "paginationProxy", void 0),
            Us(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Us([ut("$scope")], e.prototype, "$scope", void 0),
            Us([ut("pinnedRowModel")], e.prototype, "pinnedRowModel", void 0),
            Us([ut("rowModel")], e.prototype, "rowModel", void 0),
            Us([ut("focusController")], e.prototype, "focusController", void 0),
            Us(
              [ut("cellNavigationService")],
              e.prototype,
              "cellNavigationService",
              void 0
            ),
            Us([ut("columnApi")], e.prototype, "columnApi", void 0),
            Us([ut("gridApi")], e.prototype, "gridApi", void 0),
            Us([ut("beans")], e.prototype, "beans", void 0),
            Us(
              [ut("maxDivHeightScaler")],
              e.prototype,
              "maxDivHeightScaler",
              void 0
            ),
            Us(
              [ut("animationFrameService")],
              e.prototype,
              "animationFrameService",
              void 0
            ),
            Us(
              [ut("rowPositionUtils")],
              e.prototype,
              "rowPositionUtils",
              void 0
            ),
            Us([pt("rangeController")], e.prototype, "rangeController", void 0),
            Us(
              [
                (0,
                (o = dt("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "agWire",
              null
            ),
            Us([lt("rowRenderer")], e)
          );
          var o;
        })(Ht),
        Ks = (function () {
          function t() {}
          return (
            (t.addHeaderClassesFromColDef = function (t, e, o, n, r) {
              i(t) ||
                this.addColumnClassesFromCollDef(t.headerClass, t, e, o, n, r);
            }),
            (t.addToolPanelClassesFromColDef = function (t, e, o, n, r) {
              i(t) ||
                this.addColumnClassesFromCollDef(
                  t.toolPanelClass,
                  t,
                  e,
                  o,
                  n,
                  r
                );
            }),
            (t.addColumnClassesFromCollDef = function (t, e, o, n, r, s) {
              var a;
              i(t) ||
                ("string" ==
                typeof (a =
                  "function" == typeof t
                    ? t({
                        colDef: e,
                        column: r,
                        columnGroup: s,
                        context: n.getContext(),
                        api: n.getApi(),
                      })
                    : t)
                  ? He(o, a)
                  : Array.isArray(a) &&
                    a.forEach(function (t) {
                      He(o, t);
                    }));
            }),
            t
          );
        })(),
        Ys = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Xs = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        qs = (function (t) {
          function e(e, o) {
            var n = t.call(this) || this;
            return (n.columns = e), (n.element = o), n;
          }
          return (
            Ys(e, t),
            (e.prototype.postConstruct = function () {
              this.addMouseHoverListeners();
            }),
            (e.prototype.addMouseHoverListeners = function () {
              this.addManagedListener(
                this.element,
                "mouseout",
                this.onMouseOut.bind(this)
              ),
                this.addManagedListener(
                  this.element,
                  "mouseover",
                  this.onMouseOver.bind(this)
                );
            }),
            (e.prototype.onMouseOut = function () {
              this.columnHoverService.clearMouseOver();
            }),
            (e.prototype.onMouseOver = function () {
              this.columnHoverService.setMouseOver(this.columns);
            }),
            Xs(
              [ut("columnHoverService")],
              e.prototype,
              "columnHoverService",
              void 0
            ),
            Xs([st], e.prototype, "postConstruct", null),
            e
          );
        })(Ht),
        Qs = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Zs = (function (t) {
          function e(e, o, n, r) {
            var i = t.call(this) || this;
            return (
              (i.columnOrGroup = e),
              (i.eCell = o),
              (i.ariaEl =
                i.eCell.querySelector("[role=columnheader]") || i.eCell),
              (i.colsSpanning = r),
              (i.beans = n),
              (i.printLayout =
                n.gridOptionsWrapper.getDomLayout() === vt.DOM_LAYOUT_PRINT),
              i
            );
          }
          return (
            Qs(e, t),
            (e.prototype.setColsSpanning = function (t) {
              (this.colsSpanning = t), this.onLeftChanged();
            }),
            (e.prototype.getColumnOrGroup = function () {
              return this.beans.gridOptionsWrapper.isEnableRtl() &&
                this.colsSpanning
                ? y(this.colsSpanning)
                : this.columnOrGroup;
            }),
            (e.prototype.postConstruct = function () {
              this.addManagedListener(
                this.columnOrGroup,
                bt.EVENT_LEFT_CHANGED,
                this.onLeftChanged.bind(this)
              ),
                this.setLeftFirstTime(),
                this.printLayout &&
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
                    this.onLeftChanged.bind(this)
                  );
            }),
            (e.prototype.setLeftFirstTime = function () {
              var t =
                  this.beans.gridOptionsWrapper.isSuppressColumnMoveAnimation(),
                e = r(this.columnOrGroup.getOldLeft());
              this.beans.columnAnimationService.isActive() && e && !t
                ? this.animateInLeft()
                : this.onLeftChanged();
            }),
            (e.prototype.animateInLeft = function () {
              var t = this,
                e = this.getColumnOrGroup().getLeft(),
                o = this.getColumnOrGroup().getOldLeft();
              this.setLeft(o),
                (this.actualLeft = e),
                this.beans.columnAnimationService.executeNextVMTurn(
                  function () {
                    t.actualLeft === e && t.setLeft(e);
                  }
                );
            }),
            (e.prototype.onLeftChanged = function () {
              var t = this.getColumnOrGroup(),
                e = t.getLeft();
              (this.actualLeft = this.modifyLeftForPrintLayout(t, e)),
                this.setLeft(this.actualLeft);
            }),
            (e.prototype.modifyLeftForPrintLayout = function (t, e) {
              if (!this.printLayout) return e;
              if (t.getPinned() === vt.PINNED_LEFT) return e;
              var o =
                this.beans.columnController.getDisplayedColumnsLeftWidth();
              return t.getPinned() === vt.PINNED_RIGHT
                ? o + this.beans.columnController.getBodyContainerWidth() + e
                : o + e;
            }),
            (e.prototype.setLeft = function (t) {
              var e;
              if (
                (r(t) && (this.eCell.style.left = t + "px"),
                this.columnOrGroup instanceof bt)
              )
                e = this.columnOrGroup;
              else {
                var o = this.columnOrGroup.getLeafColumns();
                if (!o.length) return;
                o.length > 1 && $o(this.ariaEl, o.length), (e = o[0]);
              }
              var n = this.beans.columnController.getAriaColumnIndex(e);
              Zo(this.ariaEl, n);
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([st], e.prototype, "postConstruct", null),
            e
          );
        })(Ht),
        $s = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Js = (function (t) {
          function e(e, o) {
            var n = t.call(this, o) || this;
            return (
              (n.labelSeparator = ""),
              (n.labelAlignment = "left"),
              (n.label = ""),
              (n.config = e || {}),
              n
            );
          }
          return (
            $s(e, t),
            (e.prototype.postConstruct = function () {
              He(this.getGui(), "ag-labeled"), He(this.eLabel, "ag-label");
              var t = this.config,
                e = t.labelSeparator,
                o = t.label,
                n = t.labelWidth,
                r = t.labelAlignment;
              null != e && this.setLabelSeparator(e),
                null != o && this.setLabel(o),
                null != n && this.setLabelWidth(n),
                this.setLabelAlignment(r || this.labelAlignment),
                this.refreshLabel();
            }),
            (e.prototype.refreshLabel = function () {
              ro(this.eLabel),
                "string" == typeof this.label
                  ? (this.eLabel.innerText = this.label + this.labelSeparator)
                  : this.label && this.eLabel.appendChild(this.label),
                "" === this.label
                  ? (He(this.eLabel, "ag-hidden"),
                    this.eLabel.setAttribute("role", "presentation"))
                  : (Be(this.eLabel, "ag-hidden"),
                    this.eLabel.removeAttribute("role"));
            }),
            (e.prototype.setLabelSeparator = function (t) {
              return (
                this.labelSeparator === t ||
                  ((this.labelSeparator = t),
                  null != this.label && this.refreshLabel()),
                this
              );
            }),
            (e.prototype.getLabelId = function () {
              return (
                (this.eLabel.id =
                  this.eLabel.id || "ag-" + this.getCompId() + "-label"),
                this.eLabel.id
              );
            }),
            (e.prototype.getLabel = function () {
              return this.label;
            }),
            (e.prototype.setLabel = function (t) {
              return (
                this.label === t || ((this.label = t), this.refreshLabel()),
                this
              );
            }),
            (e.prototype.setLabelAlignment = function (t) {
              var e = this.getGui();
              return (
                je(e, "ag-label-align-left", "left" === t),
                je(e, "ag-label-align-right", "right" === t),
                je(e, "ag-label-align-top", "top" === t),
                this
              );
            }),
            (e.prototype.setLabelWidth = function (t) {
              return null == this.label || vo(this.eLabel, t), this;
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([st], e.prototype, "postConstruct", null),
            e
          );
        })(jn),
        ta = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ea = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, e, o) || this;
            return (r.className = n), (r.disabled = !1), r;
          }
          return (
            ta(e, t),
            (e.prototype.postConstruct = function () {
              t.prototype.postConstruct.call(this),
                this.className && He(this.getGui(), this.className);
            }),
            (e.prototype.onValueChange = function (t) {
              var o = this;
              return (
                this.addManagedListener(this, e.EVENT_CHANGED, function () {
                  return t(o.getValue());
                }),
                this
              );
            }),
            (e.prototype.getWidth = function () {
              return this.getGui().clientWidth;
            }),
            (e.prototype.setWidth = function (t) {
              return Co(this.getGui(), t), this;
            }),
            (e.prototype.getPreviousValue = function () {
              return this.previousValue;
            }),
            (e.prototype.getValue = function () {
              return this.value;
            }),
            (e.prototype.setValue = function (t, o) {
              return (
                this.value === t ||
                  ((this.previousValue = this.value),
                  (this.value = t),
                  o || this.dispatchEvent({ type: e.EVENT_CHANGED })),
                this
              );
            }),
            (e.prototype.setDisabled = function (t) {
              t = !!t;
              var e = this.getGui();
              return (
                Xe(e, t), je(e, "ag-disabled", t), (this.disabled = t), this
              );
            }),
            (e.prototype.isDisabled = function () {
              return !!this.disabled;
            }),
            (e.EVENT_CHANGED = "valueChange"),
            e
          );
        })(Js),
        oa = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        na = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ra = (function (t) {
          function e(e, o, n, r) {
            void 0 === n && (n = "text"), void 0 === r && (r = "input");
            var i =
              t.call(
                this,
                e,
                '\n            <div role="presentation">\n                <div ref="eLabel" class="ag-input-field-label"></div>\n                <div ref="eWrapper" class="ag-wrapper ag-input-wrapper" role="presentation">\n                    <' +
                  r +
                  ' ref="eInput" class="ag-input-field-input"></' +
                  r +
                  ">\n                </div>\n            </div>",
                o
              ) || this;
            return (i.inputType = n), (i.displayFieldTag = r), i;
          }
          return (
            oa(e, t),
            (e.prototype.postConstruct = function () {
              t.prototype.postConstruct.call(this),
                this.setInputType(),
                He(this.eLabel, this.className + "-label"),
                He(this.eWrapper, this.className + "-input-wrapper"),
                He(this.eInput, this.className + "-input"),
                He(this.getGui(), "ag-input-field"),
                (this.eInput.id =
                  this.eInput.id || "ag-" + this.getCompId() + "-input");
              var e = this.config,
                o = e.width,
                n = e.value;
              null != o && this.setWidth(o),
                null != n && this.setValue(n),
                this.addInputListeners();
            }),
            (e.prototype.refreshLabel = function () {
              r(this.getLabel())
                ? Wo(this.eInput, this.getLabelId())
                : this.eInput.removeAttribute("aria-labelledby"),
                t.prototype.refreshLabel.call(this);
            }),
            (e.prototype.addInputListeners = function () {
              var t = this;
              this.addManagedListener(this.eInput, "input", function (e) {
                return t.setValue(e.target.value);
              });
            }),
            (e.prototype.setInputType = function () {
              "input" === this.displayFieldTag &&
                this.eInput.setAttribute("type", this.inputType);
            }),
            (e.prototype.getInputElement = function () {
              return this.eInput;
            }),
            (e.prototype.setInputWidth = function (t) {
              return vo(this.eWrapper, t), this;
            }),
            (e.prototype.setInputName = function (t) {
              return this.getInputElement().setAttribute("name", t), this;
            }),
            (e.prototype.getFocusableElement = function () {
              return this.eInput;
            }),
            (e.prototype.setMaxLength = function (t) {
              return (this.eInput.maxLength = t), this;
            }),
            (e.prototype.setInputPlaceholder = function (t) {
              return Po(this.eInput, "placeholder", t), this;
            }),
            (e.prototype.setInputAriaLabel = function (t) {
              return Vo(this.eInput, t), this;
            }),
            (e.prototype.setDisabled = function (e) {
              return Xe(this.eInput, e), t.prototype.setDisabled.call(this, e);
            }),
            na([Kn("eLabel")], e.prototype, "eLabel", void 0),
            na([Kn("eWrapper")], e.prototype, "eWrapper", void 0),
            na([Kn("eInput")], e.prototype, "eInput", void 0),
            e
          );
        })(ea),
        ia = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        sa = (function (t) {
          function e(e, o, n) {
            void 0 === o && (o = "ag-checkbox"),
              void 0 === n && (n = "checkbox");
            var r = t.call(this, e, o, n) || this;
            return (
              (r.labelAlignment = "right"),
              (r.selected = !1),
              (r.readOnly = !1),
              (r.passive = !1),
              r
            );
          }
          return (
            ia(e, t),
            (e.prototype.addInputListeners = function () {
              this.addManagedListener(
                this.eInput,
                "click",
                this.onCheckboxClick.bind(this)
              ),
                this.addManagedListener(
                  this.eLabel,
                  "click",
                  this.toggle.bind(this)
                );
            }),
            (e.prototype.getNextValue = function () {
              return void 0 === this.selected || !this.selected;
            }),
            (e.prototype.setPassive = function (t) {
              this.passive = t;
            }),
            (e.prototype.isReadOnly = function () {
              return this.readOnly;
            }),
            (e.prototype.setReadOnly = function (t) {
              je(this.eWrapper, "ag-disabled", t),
                (this.eInput.disabled = t),
                (this.readOnly = t);
            }),
            (e.prototype.setDisabled = function (e) {
              return (
                je(this.eWrapper, "ag-disabled", e),
                t.prototype.setDisabled.call(this, e)
              );
            }),
            (e.prototype.toggle = function () {
              var t = this.isSelected(),
                e = this.getNextValue();
              this.passive ? this.dispatchChange(e, t) : this.setValue(e);
            }),
            (e.prototype.getValue = function () {
              return this.isSelected();
            }),
            (e.prototype.setValue = function (t, e) {
              return this.refreshSelectedClass(t), this.setSelected(t, e), this;
            }),
            (e.prototype.setName = function (t) {
              return (this.getInputElement().name = t), this;
            }),
            (e.prototype.isSelected = function () {
              return this.selected;
            }),
            (e.prototype.setSelected = function (t, e) {
              this.isSelected() !== t &&
                ((this.previousValue = this.isSelected()),
                (t = this.selected = "boolean" == typeof t ? t : void 0),
                (this.eInput.checked = t),
                (this.eInput.indeterminate = void 0 === t),
                e || this.dispatchChange(this.selected, this.previousValue));
            }),
            (e.prototype.dispatchChange = function (t, o, n) {
              this.dispatchEvent({
                type: e.EVENT_CHANGED,
                selected: t,
                previousValue: o,
                event: n,
              });
              var r = this.getInputElement();
              this.eventService.dispatchEvent({
                type: zt.EVENT_CHECKBOX_CHANGED,
                id: r.id,
                name: r.name,
                selected: t,
                previousValue: o,
              });
            }),
            (e.prototype.onCheckboxClick = function (t) {
              if (!this.passive) {
                var e = this.isSelected(),
                  o = (this.selected = t.target.checked);
                this.refreshSelectedClass(o), this.dispatchChange(o, e, t);
              }
            }),
            (e.prototype.refreshSelectedClass = function (t) {
              je(this.eWrapper, "ag-checked", !0 === t),
                je(this.eWrapper, "ag-indeterminate", null == t);
            }),
            e
          );
        })(ra),
        aa = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        la = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ua = (function (t) {
          function e(e, o) {
            var n = t.call(this) || this;
            (n.cbSelectAllVisible = !1),
              (n.processingEventFromCheckbox = !1),
              (n.cbSelectAll = e),
              (n.column = o);
            var r = o.getColDef();
            return (
              (n.filteredOnly = !!r && !!r.headerCheckboxSelectionFilteredOnly),
              n
            );
          }
          return (
            aa(e, t),
            (e.prototype.postConstruct = function () {
              this.showOrHideSelectAll(),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_NEW_COLUMNS_LOADED,
                  this.showOrHideSelectAll.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                  this.showOrHideSelectAll.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_SELECTION_CHANGED,
                  this.onSelectionChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_MODEL_UPDATED,
                  this.onModelChanged.bind(this)
                ),
                this.addManagedListener(
                  this.cbSelectAll,
                  sa.EVENT_CHANGED,
                  this.onCbSelectAll.bind(this)
                ),
                this.cbSelectAll
                  .getInputElement()
                  .setAttribute("tabindex", "-1"),
                this.refreshSelectAllLabel();
            }),
            (e.prototype.showOrHideSelectAll = function () {
              (this.cbSelectAllVisible = this.isCheckboxSelection()),
                this.cbSelectAll.setDisplayed(this.cbSelectAllVisible),
                this.cbSelectAllVisible &&
                  (this.checkRightRowModelType(), this.updateStateOfCheckbox()),
                this.refreshHeaderAriaDescribedBy(this.cbSelectAllVisible);
            }),
            (e.prototype.refreshHeaderAriaDescribedBy = function (t) {
              var e = this.cbSelectAll.getParentComponent(),
                o = e && e.getGui();
              if (o && so(o)) {
                var n = "";
                o && (n = ko(o));
                var r = this.cbSelectAll.getInputElement().id,
                  i = -1 !== n.indexOf(r);
                t
                  ? i || Ho(o, r + " " + n.trim())
                  : i &&
                    Ho(
                      o,
                      n
                        .trim()
                        .split(" ")
                        .filter(function (t) {
                          return t === r;
                        })
                        .join(" ")
                    );
              }
            }),
            (e.prototype.onModelChanged = function () {
              this.cbSelectAllVisible && this.updateStateOfCheckbox();
            }),
            (e.prototype.onSelectionChanged = function () {
              this.cbSelectAllVisible && this.updateStateOfCheckbox();
            }),
            (e.prototype.getNextCheckboxState = function (t) {
              return (
                (0 !== t.selected || 0 !== t.notSelected) &&
                (t.selected > 0 && t.notSelected > 0 ? null : t.selected > 0)
              );
            }),
            (e.prototype.updateStateOfCheckbox = function () {
              if (!this.processingEventFromCheckbox) {
                this.processingEventFromCheckbox = !0;
                var t = this.getSelectionCount(),
                  e = this.getNextCheckboxState(t);
                this.cbSelectAll.setValue(e),
                  this.refreshSelectAllLabel(),
                  (this.processingEventFromCheckbox = !1);
              }
            }),
            (e.prototype.refreshSelectAllLabel = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = this.cbSelectAll.getValue()
                  ? t("ariaChecked", "checked")
                  : t("ariaUnchecked", "unchecked"),
                o = t(
                  "ariaRowSelectAll",
                  "Press Space to toggle all rows selection"
                );
              this.cbSelectAll.setInputAriaLabel(o + " (" + e + ")");
            }),
            (e.prototype.getSelectionCount = function () {
              var t = this,
                e = 0,
                o = 0,
                n = function (n) {
                  (t.gridOptionsWrapper.isGroupSelectsChildren() && n.group) ||
                    (n.isSelected() ? e++ : n.selectable && o++);
                };
              return (
                this.filteredOnly
                  ? this.gridApi.forEachNodeAfterFilter(n)
                  : this.gridApi.forEachNode(n),
                { notSelected: o, selected: e }
              );
            }),
            (e.prototype.checkRightRowModelType = function () {
              var t = this.rowModel.getType();
              t === vt.ROW_MODEL_TYPE_CLIENT_SIDE ||
                console.warn(
                  "AG Grid: selectAllCheckbox is only available if using normal row model, you are using " +
                    t
                );
            }),
            (e.prototype.onCbSelectAll = function () {
              this.processingEventFromCheckbox ||
                (this.cbSelectAllVisible &&
                  (this.cbSelectAll.getValue()
                    ? this.selectionController.selectAllRowNodes(
                        this.filteredOnly
                      )
                    : this.selectionController.deselectAllRowNodes(
                        this.filteredOnly
                      )));
            }),
            (e.prototype.isCheckboxSelection = function () {
              var t = this.column.getColDef().headerCheckboxSelection;
              return (
                "function" == typeof t &&
                  (t = t({
                    column: this.column,
                    colDef: this.column.getColDef(),
                    columnApi: this.columnApi,
                    api: this.gridApi,
                  })),
                !(
                  !t ||
                  (this.gridOptionsWrapper.isRowModelServerSide()
                    ? (console.warn(
                        "headerCheckboxSelection is not supported for Server Side Row Model"
                      ),
                      1)
                    : this.gridOptionsWrapper.isRowModelInfinite()
                    ? (console.warn(
                        "headerCheckboxSelection is not supported for Infinite Row Model"
                      ),
                      1)
                    : this.gridOptionsWrapper.isRowModelViewport() &&
                      (console.warn(
                        "headerCheckboxSelection is not supported for Viewport Row Model"
                      ),
                      1))
                )
              );
            }),
            la([ut("gridApi")], e.prototype, "gridApi", void 0),
            la([ut("columnApi")], e.prototype, "columnApi", void 0),
            la([ut("rowModel")], e.prototype, "rowModel", void 0),
            la(
              [ut("selectionController")],
              e.prototype,
              "selectionController",
              void 0
            ),
            la([st], e.prototype, "postConstruct", null),
            e
          );
        })(Ht),
        pa = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ca = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            pa(e, t),
            (e.prototype.shouldStopEventPropagation = function (t) {
              var e = this.focusController.getFocusedHeader();
              return bn(this.gridOptionsWrapper, t, e.headerRowIndex, e.column);
            }),
            (e.prototype.getColumn = function () {
              return this.column;
            }),
            (e.prototype.getPinned = function () {
              return this.pinned;
            }),
            e
          );
        })(sr),
        da = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ha = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        fa = (function (t) {
          function o(e, n) {
            var r = t.call(this, o.TEMPLATE) || this;
            return (
              (r.headerCompVersion = 0),
              (r.refreshFunctions = []),
              (r.column = e),
              (r.pinned = n),
              r
            );
          }
          return (
            da(o, t),
            (o.prototype.postConstruct = function () {
              t.prototype.postConstruct.call(this),
                (this.colDefVersion = this.columnController.getColDefVersion()),
                this.updateState(),
                this.setupWidth(),
                this.setupMovingCss(),
                this.setupTooltip(),
                this.setupResize(),
                this.setupMenuClass(),
                this.setupSortableClass(),
                this.addColumnHoverListener(),
                this.addActiveHeaderMouseListeners(),
                this.createManagedBean(new qs([this.column], this.getGui())),
                this.addManagedListener(
                  this.column,
                  bt.EVENT_FILTER_ACTIVE_CHANGED,
                  this.onFilterChanged.bind(this)
                ),
                this.onFilterChanged(),
                this.createManagedBean(new ua(this.cbSelectAll, this.column)),
                this.cbSelectAll.setParentComponent(this),
                this.createManagedBean(
                  new Zs(this.column, this.getGui(), this.beans)
                ),
                this.addAttributes(),
                Ks.addHeaderClassesFromColDef(
                  this.column.getColDef(),
                  this.getGui(),
                  this.gridOptionsWrapper,
                  this.column,
                  null
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_NEW_COLUMNS_LOADED,
                  this.onNewColumnsLoaded.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_VALUE_CHANGED,
                  this.onColumnValueChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  this.onColumnRowGroupChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_PIVOT_CHANGED,
                  this.onColumnPivotChanged.bind(this)
                ),
                this.appendHeaderComp();
            }),
            (o.prototype.onColumnRowGroupChanged = function () {
              this.checkDisplayName();
            }),
            (o.prototype.onColumnPivotChanged = function () {
              this.checkDisplayName();
            }),
            (o.prototype.onColumnValueChanged = function () {
              this.checkDisplayName();
            }),
            (o.prototype.checkDisplayName = function () {
              this.displayName !== this.calculateDisplayName() &&
                this.refresh();
            }),
            (o.prototype.updateState = function () {
              var t = this.column.getColDef();
              (this.sortable = t.sortable),
                (this.displayName = this.calculateDisplayName()),
                (this.draggable = this.workOutDraggable());
            }),
            (o.prototype.calculateDisplayName = function () {
              return this.columnController.getDisplayNameForColumn(
                this.column,
                "header",
                !0
              );
            }),
            (o.prototype.onNewColumnsLoaded = function () {
              var t = this.columnController.getColDefVersion();
              t != this.colDefVersion &&
                ((this.colDefVersion = t), this.refresh());
            }),
            (o.prototype.refresh = function () {
              this.updateState();
              var t = this.column.getColDef();
              this.colDefHeaderComponent == t.headerComponent &&
              this.colDefHeaderComponentFramework ==
                t.headerComponentFramework &&
              this.attemptHeaderCompRefresh()
                ? ((this.draggable && !this.moveDragSource) ||
                    (!this.draggable && this.moveDragSource)) &&
                  this.attachDraggingToHeaderComp()
                : this.appendHeaderComp(),
                this.refreshFunctions.forEach(function (t) {
                  return t();
                });
            }),
            (o.prototype.destroyHeaderComp = function () {
              this.headerComp &&
                (this.getGui().removeChild(this.headerCompGui),
                (this.headerComp = this.destroyBean(this.headerComp)),
                (this.headerCompGui = void 0)),
                this.removeMoveDragSource();
            }),
            (o.prototype.removeMoveDragSource = function () {
              this.moveDragSource &&
                (this.dragAndDropService.removeDragSource(this.moveDragSource),
                (this.moveDragSource = void 0));
            }),
            (o.prototype.attemptHeaderCompRefresh = function () {
              if (!this.headerComp) return !0;
              if (!this.headerComp.refresh) return !1;
              var t = this.createParams(),
                e = this.userComponentFactory.createFinalParams(
                  this.getComponentHolder(),
                  "headerComponent",
                  t
                );
              return this.headerComp.refresh(e);
            }),
            (o.prototype.addActiveHeaderMouseListeners = function () {
              var t = this,
                e = function (e) {
                  return t.setActiveHeader("mouseenter" === e.type);
                };
              this.addManagedListener(this.getGui(), "mouseenter", e),
                this.addManagedListener(this.getGui(), "mouseleave", e);
            }),
            (o.prototype.setActiveHeader = function (t) {
              je(this.getGui(), "ag-header-active", t);
            }),
            (o.prototype.onFocusIn = function (t) {
              if (!this.getGui().contains(t.relatedTarget)) {
                var e = this.getParentComponent();
                this.focusController.setFocusedHeader(
                  e.getRowIndex(),
                  this.getColumn()
                );
              }
              this.setActiveHeader(!0);
            }),
            (o.prototype.onFocusOut = function (t) {
              this.getGui().contains(t.relatedTarget) ||
                this.setActiveHeader(!1);
            }),
            (o.prototype.handleKeyDown = function (t) {
              var e = this.headerComp;
              if (e) {
                if (t.keyCode === $n.SPACE) {
                  var o = this.cbSelectAll;
                  o.isDisplayed() &&
                    !o.getGui().contains(document.activeElement) &&
                    (t.preventDefault(), o.setValue(!o.getValue()));
                }
                t.keyCode === $n.ENTER &&
                  (t.ctrlKey || t.metaKey
                    ? this.menuEnabled &&
                      e.showMenu &&
                      (t.preventDefault(), e.showMenu())
                    : this.sortable &&
                      this.sortController.progressSort(
                        this.column,
                        t.shiftKey,
                        "uiColumnSorted"
                      ));
              }
            }),
            (o.prototype.onTabKeyDown = function () {}),
            (o.prototype.getComponentHolder = function () {
              return this.column.getColDef();
            }),
            (o.prototype.addColumnHoverListener = function () {
              this.addManagedListener(
                this.eventService,
                zt.EVENT_COLUMN_HOVER_CHANGED,
                this.onColumnHover.bind(this)
              ),
                this.onColumnHover();
            }),
            (o.prototype.onColumnHover = function () {
              var t = this.columnHoverService.isHovered(this.column);
              je(this.getGui(), "ag-column-hover", t);
            }),
            (o.prototype.setupSortableClass = function () {
              var t = this,
                e = this.getGui(),
                o = function () {
                  je(e, "ag-header-cell-sortable", !!t.sortable);
                },
                n = function () {
                  t.sortable ? Jo(e, Lo(t.column)) : tn(e);
                };
              o(),
                n(),
                this.refreshFunctions.push(o),
                this.refreshFunctions.push(n),
                this.addManagedListener(
                  this.column,
                  bt.EVENT_SORT_CHANGED,
                  n.bind(this)
                );
            }),
            (o.prototype.onFilterChanged = function () {
              var t = this.column.isFilterActive();
              je(this.getGui(), "ag-header-cell-filtered", t);
            }),
            (o.prototype.appendHeaderComp = function () {
              this.headerCompVersion++;
              var t = this.column.getColDef();
              (this.colDefHeaderComponent = t.headerComponent),
                (this.colDefHeaderComponentFramework =
                  t.headerComponentFramework);
              var e = this.createParams(),
                o = this.afterHeaderCompCreated.bind(
                  this,
                  this.headerCompVersion
                );
              this.userComponentFactory.newHeaderComponent(e).then(o);
            }),
            (o.prototype.createParams = function () {
              var t = this,
                e = this.column.getColDef();
              return (
                (this.menuEnabled =
                  this.menuFactory.isMenuEnabled(this.column) &&
                  !e.suppressMenu),
                {
                  column: this.column,
                  displayName: this.displayName,
                  enableSorting: e.sortable,
                  enableMenu: this.menuEnabled,
                  showColumnMenu: function (e) {
                    t.gridApi.showColumnMenuAfterButtonClick(t.column, e);
                  },
                  progressSort: function (e) {
                    t.sortController.progressSort(
                      t.column,
                      !!e,
                      "uiColumnSorted"
                    );
                  },
                  setSort: function (e, o) {
                    t.sortController.setSortForColumn(
                      t.column,
                      e,
                      !!o,
                      "uiColumnSorted"
                    );
                  },
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  context: this.gridOptionsWrapper.getContext(),
                  eGridHeader: this.getGui(),
                }
              );
            }),
            (o.prototype.afterHeaderCompCreated = function (t, e) {
              t == this.headerCompVersion && this.isAlive()
                ? (this.destroyHeaderComp(),
                  (this.headerComp = e),
                  (this.headerCompGui = e.getGui()),
                  this.getGui().appendChild(this.headerCompGui),
                  this.attachDraggingToHeaderComp())
                : this.destroyBean(e);
            }),
            (o.prototype.onColumnMovingChanged = function () {
              this.column.isMoving()
                ? He(this.getGui(), "ag-header-cell-moving")
                : Be(this.getGui(), "ag-header-cell-moving");
            }),
            (o.prototype.workOutDraggable = function () {
              var t = this.column.getColDef();
              return (
                !(
                  this.gridOptionsWrapper.isSuppressMovableColumns() ||
                  t.suppressMovable ||
                  t.lockPosition
                ) ||
                !!t.enableRowGroup ||
                !!t.enablePivot
              );
            }),
            (o.prototype.attachDraggingToHeaderComp = function () {
              var t = this;
              this.removeMoveDragSource(),
                this.draggable &&
                  ((this.moveDragSource = {
                    type: e.DragSourceType.HeaderCell,
                    eElement: this.headerCompGui,
                    defaultIconName: ps.ICON_HIDE,
                    getDragItem: function () {
                      return t.createDragItem();
                    },
                    dragItemName: this.displayName,
                    onDragStarted: function () {
                      return t.column.setMoving(!0, "uiColumnMoved");
                    },
                    onDragStopped: function () {
                      return t.column.setMoving(!1, "uiColumnMoved");
                    },
                  }),
                  this.dragAndDropService.addDragSource(
                    this.moveDragSource,
                    !0
                  ));
            }),
            (o.prototype.createDragItem = function () {
              var t = {};
              return (
                (t[this.column.getId()] = this.column.isVisible()),
                { columns: [this.column], visibleState: t }
              );
            }),
            (o.prototype.setupResize = function () {
              var t,
                e,
                o = this,
                n = this.getComponentHolder(),
                r = [],
                i = function () {
                  r.forEach(function (t) {
                    return t();
                  }),
                    (r.length = 0);
                },
                s = function () {
                  var s = o.column.isResizable(),
                    a =
                      !o.gridOptionsWrapper.isSuppressAutoSize() &&
                      !n.suppressAutoSize;
                  (s !== t || a !== e) &&
                    ((t = s),
                    (e = a),
                    i(),
                    (function () {
                      if ((Ke(o.eResize, t), t)) {
                        var n = o.horizontalResizeService.addResizeBar({
                          eResizeBar: o.eResize,
                          onResizeStart: o.onResizeStart.bind(o),
                          onResizing: o.onResizing.bind(o, !1),
                          onResizeEnd: o.onResizing.bind(o, !0),
                        });
                        if ((r.push(n), e)) {
                          var i = o.gridOptionsWrapper.isSkipHeaderOnAutoSize(),
                            s = function () {
                              o.columnController.autoSizeColumn(
                                o.column,
                                i,
                                "uiColumnResized"
                              );
                            };
                          o.eResize.addEventListener("dblclick", s);
                          var a = new Cr(o.eResize);
                          a.addEventListener(Cr.EVENT_DOUBLE_TAP, s),
                            o.addDestroyFunc(function () {
                              o.eResize.removeEventListener("dblclick", s),
                                a.removeEventListener(Cr.EVENT_DOUBLE_TAP, s),
                                a.destroy();
                            });
                        }
                      }
                    })());
                };
              s(), this.addDestroyFunc(i), this.refreshFunctions.push(s);
            }),
            (o.prototype.onResizing = function (t, e) {
              var o = this.normaliseResizeAmount(e);
              this.columnController.setColumnWidths(
                [{ key: this.column, newWidth: this.resizeStartWidth + o }],
                this.resizeWithShiftKey,
                t,
                "uiColumnDragged"
              ),
                t && Be(this.getGui(), "ag-column-resizing");
            }),
            (o.prototype.onResizeStart = function (t) {
              (this.resizeStartWidth = this.column.getActualWidth()),
                (this.resizeWithShiftKey = t),
                He(this.getGui(), "ag-column-resizing");
            }),
            (o.prototype.getTooltipParams = function () {
              var e = t.prototype.getTooltipParams.call(this);
              return (
                (e.location = "header"), (e.colDef = this.column.getColDef()), e
              );
            }),
            (o.prototype.setupTooltip = function () {
              var t = this,
                e = function () {
                  var e = t.column.getColDef().headerTooltip;
                  t.setTooltip(e);
                };
              e(), this.refreshFunctions.push(e);
            }),
            (o.prototype.setupMovingCss = function () {
              this.addManagedListener(
                this.column,
                bt.EVENT_MOVING_CHANGED,
                this.onColumnMovingChanged.bind(this)
              ),
                this.onColumnMovingChanged();
            }),
            (o.prototype.addAttributes = function () {
              this.getGui().setAttribute("col-id", this.column.getColId());
            }),
            (o.prototype.setupWidth = function () {
              this.addManagedListener(
                this.column,
                bt.EVENT_WIDTH_CHANGED,
                this.onColumnWidthChanged.bind(this)
              ),
                this.onColumnWidthChanged();
            }),
            (o.prototype.setupMenuClass = function () {
              this.addManagedListener(
                this.column,
                bt.EVENT_MENU_VISIBLE_CHANGED,
                this.onMenuVisible.bind(this)
              );
            }),
            (o.prototype.onMenuVisible = function () {
              this.addOrRemoveCssClass(
                "ag-column-menu-visible",
                this.column.isMenuVisible()
              );
            }),
            (o.prototype.onColumnWidthChanged = function () {
              this.getGui().style.width = this.column.getActualWidth() + "px";
            }),
            (o.prototype.normaliseResizeAmount = function (t) {
              var e = t;
              return (
                this.gridOptionsWrapper.isEnableRtl()
                  ? this.pinned !== vt.PINNED_LEFT && (e *= -1)
                  : this.pinned === vt.PINNED_RIGHT && (e *= -1),
                e
              );
            }),
            (o.TEMPLATE =
              '<div class="ag-header-cell" role="columnheader" unselectable="on" tabindex="-1">\n            <div ref="eResize" class="ag-header-cell-resize" role="presentation"></div>\n            <ag-checkbox ref="cbSelectAll" class="ag-header-select-all" role="presentation"></ag-checkbox>\n        </div>'),
            ha(
              [ut("dragAndDropService")],
              o.prototype,
              "dragAndDropService",
              void 0
            ),
            ha(
              [ut("columnController")],
              o.prototype,
              "columnController",
              void 0
            ),
            ha(
              [ut("horizontalResizeService")],
              o.prototype,
              "horizontalResizeService",
              void 0
            ),
            ha([ut("menuFactory")], o.prototype, "menuFactory", void 0),
            ha([ut("gridApi")], o.prototype, "gridApi", void 0),
            ha([ut("columnApi")], o.prototype, "columnApi", void 0),
            ha([ut("sortController")], o.prototype, "sortController", void 0),
            ha(
              [ut("userComponentFactory")],
              o.prototype,
              "userComponentFactory",
              void 0
            ),
            ha(
              [ut("columnHoverService")],
              o.prototype,
              "columnHoverService",
              void 0
            ),
            ha([ut("beans")], o.prototype, "beans", void 0),
            ha([Kn("eResize")], o.prototype, "eResize", void 0),
            ha([Kn("cbSelectAll")], o.prototype, "cbSelectAll", void 0),
            ha([at], o.prototype, "destroyHeaderComp", null),
            o
          );
        })(ca),
        ga = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ya = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ma = (function (t) {
          function o(e, n) {
            var r = t.call(this, o.TEMPLATE) || this;
            return (
              (r.removeChildListenersFuncs = []),
              (r.column = e),
              (r.pinned = n),
              r
            );
          }
          return (
            ga(o, t),
            (o.prototype.postConstruct = function () {
              t.prototype.postConstruct.call(this),
                Ks.addHeaderClassesFromColDef(
                  this.getComponentHolder(),
                  this.getGui(),
                  this.gridOptionsWrapper,
                  null,
                  this.column
                );
              var e = this.columnController.getDisplayNameForColumnGroup(
                this.column,
                "header"
              );
              this.appendHeaderGroupComp(e),
                this.setupResize(),
                this.addClasses(),
                this.setupWidth(),
                this.addAttributes(),
                this.setupMovingCss(),
                this.setupTooltip(),
                this.setupExpandable(),
                this.createManagedBean(
                  new qs(
                    this.column.getOriginalColumnGroup().getLeafColumns(),
                    this.getGui()
                  )
                ),
                this.createManagedBean(
                  new Zs(this.column, this.getGui(), this.beans)
                );
            }),
            (o.prototype.onFocusIn = function (t) {
              if (!this.getGui().contains(t.relatedTarget)) {
                var e = this.getParentComponent();
                this.beans.focusController.setFocusedHeader(
                  e.getRowIndex(),
                  this.getColumn()
                );
              }
            }),
            (o.prototype.handleKeyDown = function (t) {
              var e = document.activeElement,
                o = this.getGui();
              if (this.expandable && e === o && t.keyCode === $n.ENTER) {
                var n = this.getColumn(),
                  r = !n.isExpanded();
                this.columnController.setColumnGroupOpened(
                  n.getOriginalColumnGroup(),
                  r,
                  "uiColumnExpanded"
                );
              }
            }),
            (o.prototype.onTabKeyDown = function () {}),
            (o.prototype.setupExpandable = function () {
              var t = this.getColumn().getOriginalColumnGroup();
              this.refreshExpanded(),
                this.addManagedListener(
                  t,
                  St.EVENT_EXPANDABLE_CHANGED,
                  this.refreshExpanded.bind(this)
                ),
                this.addManagedListener(
                  t,
                  St.EVENT_EXPANDED_CHANGED,
                  this.refreshExpanded.bind(this)
                );
            }),
            (o.prototype.refreshExpanded = function () {
              var t = this.getColumn(),
                e = this.getGui(),
                o = t.isExpandable(),
                n = t.isExpanded();
              (this.expandable = o),
                o ? jo(e, n) : e.removeAttribute("aria-expanded");
            }),
            (o.prototype.setupMovingCss = function () {
              var t = this;
              this.column
                .getOriginalColumnGroup()
                .getLeafColumns()
                .forEach(function (e) {
                  t.addManagedListener(
                    e,
                    bt.EVENT_MOVING_CHANGED,
                    t.onColumnMovingChanged.bind(t)
                  );
                }),
                this.onColumnMovingChanged();
            }),
            (o.prototype.getComponentHolder = function () {
              return this.column.getColGroupDef();
            }),
            (o.prototype.getTooltipParams = function () {
              var e = t.prototype.getTooltipParams.call(this);
              return (
                (e.location = "headerGroup"),
                (e.colDef = this.getComponentHolder()),
                (e.column = this.getColumn()),
                e
              );
            }),
            (o.prototype.setupTooltip = function () {
              var t = this.getComponentHolder(),
                e = t && t.headerTooltip;
              null != e && this.setTooltip(e);
            }),
            (o.prototype.onColumnMovingChanged = function () {
              je(
                this.getGui(),
                "ag-header-cell-moving",
                this.column.isMoving()
              );
            }),
            (o.prototype.addAttributes = function () {
              this.getGui().setAttribute("col-id", this.column.getUniqueId());
            }),
            (o.prototype.appendHeaderGroupComp = function (t) {
              var e = this,
                o = {
                  displayName: t,
                  columnGroup: this.column,
                  setExpanded: function (t) {
                    e.columnController.setColumnGroupOpened(
                      e.column.getOriginalColumnGroup(),
                      t,
                      "gridInitializing"
                    );
                  },
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  context: this.gridOptionsWrapper.getContext(),
                };
              if (!t) {
                for (
                  var n = this.column, r = n.getLeafColumns();
                  n.getParent() &&
                  n.getParent().getLeafColumns().length === r.length;

                )
                  n = n.getParent();
                var i = n.getColGroupDef();
                i && (t = i.headerName),
                  t ||
                    (t = r
                      ? this.columnController.getDisplayNameForColumn(
                          r[0],
                          "header",
                          !0
                        )
                      : "");
              }
              var s = this.afterHeaderCompCreated.bind(this, t);
              this.userComponentFactory.newHeaderGroupComponent(o).then(s);
            }),
            (o.prototype.afterHeaderCompCreated = function (t, e) {
              var o = this;
              this.getGui().appendChild(e.getGui()),
                this.addDestroyFunc(function () {
                  o.getContext().destroyBean(e);
                }),
                this.setupMove(e.getGui(), t);
            }),
            (o.prototype.addClasses = function () {
              var t = this.column.isPadding() ? "no" : "with";
              this.addCssClass("ag-header-group-cell-" + t + "-group");
            }),
            (o.prototype.setupMove = function (t, o) {
              var n = this;
              if (t && !this.isSuppressMoving()) {
                var r = this.column.getOriginalColumnGroup().getLeafColumns(),
                  i = {
                    type: e.DragSourceType.HeaderCell,
                    eElement: t,
                    defaultIconName: ps.ICON_HIDE,
                    dragItemName: o,
                    getDragItem: this.getDragItemForGroup.bind(this),
                    onDragStarted: function () {
                      return r.forEach(function (t) {
                        return t.setMoving(!0, "uiColumnDragged");
                      });
                    },
                    onDragStopped: function () {
                      return r.forEach(function (t) {
                        return t.setMoving(!1, "uiColumnDragged");
                      });
                    },
                  };
                this.dragAndDropService.addDragSource(i, !0),
                  this.addDestroyFunc(function () {
                    return n.dragAndDropService.removeDragSource(i);
                  });
              }
            }),
            (o.prototype.getDragItemForGroup = function () {
              var t = this.column.getOriginalColumnGroup().getLeafColumns(),
                e = {};
              t.forEach(function (t) {
                return (e[t.getId()] = t.isVisible());
              });
              var o = [];
              return (
                this.columnController
                  .getAllDisplayedColumns()
                  .forEach(function (e) {
                    t.indexOf(e) >= 0 && (o.push(e), C(t, e));
                  }),
                t.forEach(function (t) {
                  return o.push(t);
                }),
                { columns: o, visibleState: e }
              );
            }),
            (o.prototype.isSuppressMoving = function () {
              var t = !1;
              return (
                this.column.getLeafColumns().forEach(function (e) {
                  (e.getColDef().suppressMovable ||
                    e.getColDef().lockPosition) &&
                    (t = !0);
                }),
                t || this.gridOptionsWrapper.isSuppressMovableColumns()
              );
            }),
            (o.prototype.setupWidth = function () {
              this.addListenersToChildrenColumns(),
                this.addManagedListener(
                  this.column,
                  Et.EVENT_DISPLAYED_CHILDREN_CHANGED,
                  this.onDisplayedChildrenChanged.bind(this)
                ),
                this.onWidthChanged(),
                this.addDestroyFunc(
                  this.removeListenersOnChildrenColumns.bind(this)
                );
            }),
            (o.prototype.onDisplayedChildrenChanged = function () {
              this.addListenersToChildrenColumns(), this.onWidthChanged();
            }),
            (o.prototype.addListenersToChildrenColumns = function () {
              var t = this;
              this.removeListenersOnChildrenColumns();
              var e = this.onWidthChanged.bind(this);
              this.column.getLeafColumns().forEach(function (o) {
                o.addEventListener(bt.EVENT_WIDTH_CHANGED, e),
                  o.addEventListener(bt.EVENT_VISIBLE_CHANGED, e),
                  t.removeChildListenersFuncs.push(function () {
                    o.removeEventListener(bt.EVENT_WIDTH_CHANGED, e),
                      o.removeEventListener(bt.EVENT_VISIBLE_CHANGED, e);
                  });
              });
            }),
            (o.prototype.removeListenersOnChildrenColumns = function () {
              this.removeChildListenersFuncs.forEach(function (t) {
                return t();
              }),
                (this.removeChildListenersFuncs = []);
            }),
            (o.prototype.onWidthChanged = function () {
              this.getGui().style.width = this.column.getActualWidth() + "px";
            }),
            (o.prototype.setupResize = function () {
              var t = this;
              if (
                ((this.eHeaderCellResize = this.getRefElement("agResize")),
                this.column.isResizable())
              ) {
                var e = this.horizontalResizeService.addResizeBar({
                  eResizeBar: this.eHeaderCellResize,
                  onResizeStart: this.onResizeStart.bind(this),
                  onResizing: this.onResizing.bind(this, !1),
                  onResizeEnd: this.onResizing.bind(this, !0),
                });
                if (
                  (this.addDestroyFunc(e),
                  !this.gridOptionsWrapper.isSuppressAutoSize())
                ) {
                  var o = this.gridOptionsWrapper.isSkipHeaderOnAutoSize();
                  this.eHeaderCellResize.addEventListener(
                    "dblclick",
                    function (e) {
                      var n = [];
                      t.column.getDisplayedLeafColumns().forEach(function (t) {
                        t.getColDef().suppressAutoSize || n.push(t.getColId());
                      }),
                        n.length > 0 &&
                          t.columnController.autoSizeColumns(
                            n,
                            o,
                            "uiColumnResized"
                          );
                    }
                  );
                }
              } else io(this.eHeaderCellResize);
            }),
            (o.prototype.onResizeStart = function (t) {
              var e = this,
                o = this.column.getDisplayedLeafColumns();
              (this.resizeCols = o.filter(function (t) {
                return t.isResizable();
              })),
                (this.resizeStartWidth = 0),
                this.resizeCols.forEach(function (t) {
                  return (e.resizeStartWidth += t.getActualWidth());
                }),
                (this.resizeRatios = []),
                this.resizeCols.forEach(function (t) {
                  return e.resizeRatios.push(
                    t.getActualWidth() / e.resizeStartWidth
                  );
                });
              var n = null;
              if (
                (t &&
                  (n = this.columnController.getDisplayedGroupAfter(
                    this.column
                  )),
                n)
              ) {
                var r = n.getDisplayedLeafColumns();
                (this.resizeTakeFromCols = r.filter(function (t) {
                  return t.isResizable();
                })),
                  (this.resizeTakeFromStartWidth = 0),
                  this.resizeTakeFromCols.forEach(function (t) {
                    return (e.resizeTakeFromStartWidth += t.getActualWidth());
                  }),
                  (this.resizeTakeFromRatios = []),
                  this.resizeTakeFromCols.forEach(function (t) {
                    return e.resizeTakeFromRatios.push(
                      t.getActualWidth() / e.resizeTakeFromStartWidth
                    );
                  });
              } else
                (this.resizeTakeFromCols = null),
                  (this.resizeTakeFromStartWidth = null),
                  (this.resizeTakeFromRatios = null);
              He(this.getGui(), "ag-column-resizing");
            }),
            (o.prototype.onResizing = function (t, e) {
              var o = [],
                n = this.normaliseDragChange(e);
              o.push({
                columns: this.resizeCols,
                ratios: this.resizeRatios,
                width: this.resizeStartWidth + n,
              }),
                this.resizeTakeFromCols &&
                  o.push({
                    columns: this.resizeTakeFromCols,
                    ratios: this.resizeTakeFromRatios,
                    width: this.resizeTakeFromStartWidth - n,
                  }),
                this.columnController.resizeColumnSets(o, t, "uiColumnDragged"),
                t && Be(this.getGui(), "ag-column-resizing");
            }),
            (o.prototype.normaliseDragChange = function (t) {
              var e = t;
              return (
                this.gridOptionsWrapper.isEnableRtl()
                  ? this.pinned !== vt.PINNED_LEFT && (e *= -1)
                  : this.pinned === vt.PINNED_RIGHT && (e *= -1),
                e
              );
            }),
            (o.TEMPLATE =
              '<div class="ag-header-group-cell" role="columnheader" tabindex="-1">\n            <div ref="agResize" class="ag-header-cell-resize" role="presentation"></div>\n        </div>'),
            ya(
              [ut("columnController")],
              o.prototype,
              "columnController",
              void 0
            ),
            ya(
              [ut("horizontalResizeService")],
              o.prototype,
              "horizontalResizeService",
              void 0
            ),
            ya(
              [ut("dragAndDropService")],
              o.prototype,
              "dragAndDropService",
              void 0
            ),
            ya(
              [ut("userComponentFactory")],
              o.prototype,
              "userComponentFactory",
              void 0
            ),
            ya([ut("beans")], o.prototype, "beans", void 0),
            ya([ut("gridApi")], o.prototype, "gridApi", void 0),
            ya([ut("columnApi")], o.prototype, "columnApi", void 0),
            o
          );
        })(ca),
        va = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ca = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        wa = (function (t) {
          function e() {
            return (
              t.call(
                this,
                '\n            <div class="ag-floating-filter-input" role="presentation">\n                <ag-input-text-field ref="eFloatingFilterText"></ag-input-text-field>\n            </div>'
              ) || this
            );
          }
          return (
            va(e, t),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this);
            }),
            (e.prototype.init = function (t) {
              this.params = t;
              var e = this.columnController.getDisplayNameForColumn(
                  t.column,
                  "header",
                  !0
                ),
                o = this.gridOptionsWrapper.getLocaleTextFunc();
              this.eFloatingFilterText
                .setDisabled(!0)
                .setInputAriaLabel(
                  e + " " + o("ariaFilterInput", "Filter Input")
                );
            }),
            (e.prototype.onParentModelChanged = function (t) {
              var e = this;
              t
                ? this.params.parentFilterInstance(function (o) {
                    if (o.getModelAsString) {
                      var n = o.getModelAsString(t);
                      e.eFloatingFilterText.setValue(n);
                    }
                  })
                : this.eFloatingFilterText.setValue("");
            }),
            Ca(
              [Kn("eFloatingFilterText")],
              e.prototype,
              "eFloatingFilterText",
              void 0
            ),
            Ca(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            e
          );
        })(jn),
        ba = (function () {
          function t() {}
          return (
            (t.getFloatingFilterType = function (t) {
              return this.filterToFloatingFilterMapping[t];
            }),
            (t.filterToFloatingFilterMapping = {
              set: "agSetColumnFloatingFilter",
              agSetColumnFilter: "agSetColumnFloatingFilter",
              multi: "agMultiColumnFloatingFilter",
              agMultiColumnFilter: "agMultiColumnFloatingFilter",
              number: "agNumberColumnFloatingFilter",
              agNumberColumnFilter: "agNumberColumnFloatingFilter",
              date: "agDateColumnFloatingFilter",
              agDateColumnFilter: "agDateColumnFloatingFilter",
              text: "agTextColumnFloatingFilter",
              agTextColumnFilter: "agTextColumnFloatingFilter",
            }),
            t
          );
        })(),
        Ea = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Sa = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Oa = (function (t) {
          function o(e, n) {
            var r = t.call(this, o.TEMPLATE) || this;
            return (r.column = e), (r.pinned = n), r;
          }
          return (
            Ea(o, t),
            (o.prototype.postConstruct = function () {
              t.prototype.postConstruct.call(this),
                this.setupFloatingFilter(),
                this.setupWidth(),
                this.setupLeftPositioning(),
                this.setupColumnHover(),
                this.createManagedBean(new qs([this.column], this.getGui())),
                this.addManagedListener(
                  this.eButtonShowMainFilter,
                  "click",
                  this.showParentFilter.bind(this)
                );
            }),
            (o.prototype.onTabKeyDown = function (t) {
              var e = document.activeElement,
                o = this.getGui();
              if (e !== o) {
                t.preventDefault();
                var n = this.focusController.findNextFocusableElement(
                  o,
                  null,
                  t.shiftKey
                );
                n ? n.focus() : o.focus();
              }
            }),
            (o.prototype.handleKeyDown = function (t) {
              var e = document.activeElement,
                o = this.getGui(),
                n = e === o;
              switch (t.keyCode) {
                case $n.UP:
                case $n.DOWN:
                  n || t.preventDefault();
                case $n.LEFT:
                case $n.RIGHT:
                  if (n) return;
                  t.stopPropagation();
                case $n.ENTER:
                  n && this.focusController.focusInto(o) && t.preventDefault();
                  break;
                case $n.ESCAPE:
                  n || this.getGui().focus();
              }
            }),
            (o.prototype.onFocusIn = function (t) {
              if (!this.getGui().contains(t.relatedTarget)) {
                var e = this.getParentComponent();
                this.beans.focusController.setFocusedHeader(
                  e.getRowIndex(),
                  this.getColumn()
                );
              }
            }),
            (o.prototype.setupFloatingFilter = function () {
              var t = this,
                e = this.column.getColDef();
              e.filter &&
                e.floatingFilter &&
                ((this.floatingFilterCompPromise =
                  this.getFloatingFilterInstance()),
                this.floatingFilterCompPromise &&
                  this.floatingFilterCompPromise.then(function (e) {
                    e &&
                      (t.setupWithFloatingFilter(e), t.setupSyncWithFilter());
                  }));
            }),
            (o.prototype.setupLeftPositioning = function () {
              var t = new Zs(this.column, this.getGui(), this.beans);
              this.createManagedBean(t);
            }),
            (o.prototype.setupSyncWithFilter = function () {
              var t = this,
                e = function (e) {
                  t.onParentModelChanged(t.currentParentModel(), e);
                };
              this.addManagedListener(this.column, bt.EVENT_FILTER_CHANGED, e),
                this.filterManager.isFilterActive(this.column) && e(null);
            }),
            (o.prototype.showParentFilter = function () {
              this.menuFactory.showMenuAfterButtonClick(
                this.column,
                this.suppressFilterButton
                  ? this.eFloatingFilterBody
                  : this.eButtonShowMainFilter,
                "filterMenuTab",
                ["filterMenuTab"]
              );
            }),
            (o.prototype.setupColumnHover = function () {
              this.addManagedListener(
                this.eventService,
                zt.EVENT_COLUMN_HOVER_CHANGED,
                this.onColumnHover.bind(this)
              ),
                this.onColumnHover();
            }),
            (o.prototype.onColumnHover = function () {
              je(
                this.getGui(),
                "ag-column-hover",
                this.columnHoverService.isHovered(this.column)
              );
            }),
            (o.prototype.setupWidth = function () {
              this.addManagedListener(
                this.column,
                bt.EVENT_WIDTH_CHANGED,
                this.onColumnWidthChanged.bind(this)
              ),
                this.onColumnWidthChanged();
            }),
            (o.prototype.onColumnWidthChanged = function () {
              this.getGui().style.width = this.column.getActualWidth() + "px";
            }),
            (o.prototype.setupWithFloatingFilter = function (t) {
              var e = this,
                o = function () {
                  e.getContext().destroyBean(t);
                };
              if (this.isAlive()) {
                this.addDestroyFunc(o);
                var n = t.getGui();
                je(
                  this.eFloatingFilterBody,
                  "ag-floating-filter-full-body",
                  this.suppressFilterButton
                ),
                  je(
                    this.eFloatingFilterBody,
                    "ag-floating-filter-body",
                    !this.suppressFilterButton
                  ),
                  Ke(this.eButtonWrapper, !this.suppressFilterButton);
                var r = yn("filter", this.gridOptionsWrapper, this.column);
                this.eButtonShowMainFilter.appendChild(r),
                  this.eFloatingFilterBody.appendChild(n),
                  t.afterGuiAttached && t.afterGuiAttached();
              } else o();
            }),
            (o.prototype.parentFilterInstance = function (t) {
              var e = this.getFilterComponent();
              e && e.then(t);
            }),
            (o.prototype.getFilterComponent = function (t) {
              return (
                void 0 === t && (t = !0),
                this.filterManager.getFilterComponent(this.column, "NO_UI", t)
              );
            }),
            (o.getDefaultFloatingFilterType = function (t) {
              if (null == t) return null;
              var o = null;
              return (
                "string" == typeof t.filter
                  ? (o = ba.getFloatingFilterType(t.filter))
                  : t.filterFramework ||
                    (!0 === t.filter &&
                      (o = Ct.isRegistered(e.ModuleNames.SetFilterModule)
                        ? "agSetColumnFloatingFilter"
                        : "agTextColumnFloatingFilter")),
                o
              );
            }),
            (o.prototype.getFloatingFilterInstance = function () {
              var t = this.column.getColDef(),
                e = o.getDefaultFloatingFilterType(t),
                n = this.filterManager.createFilterParams(this.column, t),
                r = this.userComponentFactory.createFinalParams(t, "filter", n),
                i = {
                  api: this.gridApi,
                  column: this.column,
                  filterParams: r,
                  currentParentModel: this.currentParentModel.bind(this),
                  parentFilterInstance: this.parentFilterInstance.bind(this),
                  showParentFilter: this.showParentFilter.bind(this),
                  onFloatingFilterChanged:
                    this.onFloatingFilterChanged.bind(this),
                  suppressFilterButton: !1,
                };
              this.suppressFilterButton =
                !!t.floatingFilterComponentParams &&
                !!t.floatingFilterComponentParams.suppressFilterButton;
              var s = this.userComponentFactory.newFloatingFilterComponent(
                t,
                i,
                e
              );
              if (!s) {
                var a = this.getFilterComponentPrototype(t);
                if (a && a.prototype && a.prototype.getModelAsString) {
                  var l =
                    this.userComponentFactory.createUserComponentFromConcreteClass(
                      wa,
                      i
                    );
                  s = Mn.resolve(l);
                }
              }
              return s;
            }),
            (o.prototype.createDynamicParams = function () {
              return {
                column: this.column,
                colDef: this.column.getColDef(),
                api: this.gridApi,
                columnApi: this.columnApi,
              };
            }),
            (o.prototype.getFilterComponentPrototype = function (t) {
              var e = this.userComponentFactory.lookupComponentClassDef(
                t,
                "filter",
                this.createDynamicParams()
              );
              return e ? e.component : null;
            }),
            (o.prototype.currentParentModel = function () {
              var t = this.getFilterComponent(!1);
              return t
                ? t.resolveNow(null, function (t) {
                    return t && t.getModel();
                  })
                : null;
            }),
            (o.prototype.onParentModelChanged = function (t, e) {
              this.floatingFilterCompPromise &&
                this.floatingFilterCompPromise.then(function (o) {
                  return o && o.onParentModelChanged(t, e);
                });
            }),
            (o.prototype.onFloatingFilterChanged = function () {
              console.warn(
                "AG Grid: since version 21.x, how floating filters are implemented has changed. Instead of calling params.onFloatingFilterChanged(), get a reference to the main filter via params.parentFilterInstance() and then set a value on the parent filter directly."
              );
            }),
            (o.TEMPLATE =
              '<div class="ag-header-cell" role="columnheader" tabindex="-1">\n            <div class="ag-floating-filter-full-body" ref="eFloatingFilterBody" role="presentation"></div>\n            <div class="ag-floating-filter-button ag-hidden" ref="eButtonWrapper" role="presentation">\n                <button type="button" aria-label="Open Filter Menu" class="ag-floating-filter-button-button" ref="eButtonShowMainFilter" tabindex="-1"></button>\n            </div>\n        </div>'),
            Sa(
              [ut("columnHoverService")],
              o.prototype,
              "columnHoverService",
              void 0
            ),
            Sa(
              [ut("userComponentFactory")],
              o.prototype,
              "userComponentFactory",
              void 0
            ),
            Sa([ut("gridApi")], o.prototype, "gridApi", void 0),
            Sa([ut("columnApi")], o.prototype, "columnApi", void 0),
            Sa([ut("filterManager")], o.prototype, "filterManager", void 0),
            Sa([ut("menuFactory")], o.prototype, "menuFactory", void 0),
            Sa([ut("beans")], o.prototype, "beans", void 0),
            Sa(
              [Kn("eFloatingFilterBody")],
              o.prototype,
              "eFloatingFilterBody",
              void 0
            ),
            Sa([Kn("eButtonWrapper")], o.prototype, "eButtonWrapper", void 0),
            Sa(
              [Kn("eButtonShowMainFilter")],
              o.prototype,
              "eButtonShowMainFilter",
              void 0
            ),
            o
          );
        })(ca),
        _a = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ra = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.COLUMN_GROUP = 0)] = "COLUMN_GROUP"),
          (t[(t.COLUMN = 1)] = "COLUMN"),
          (t[(t.FLOATING_FILTER = 2)] = "FLOATING_FILTER");
      })(us || (us = {}));
      var Pa,
        Ta = (function (t) {
          function e(e, o, n) {
            var r =
              t.call(this, '<div class="ag-header-row" role="row"></div>') ||
              this;
            (r.headerComps = {}),
              r.setRowIndex(e),
              (r.type = o),
              (r.pinned = n);
            var i = us[o].toLowerCase().replace(/_/g, "-");
            return (
              r.addCssClass("ag-header-row-" + i),
              De() && (r.getGui().style.transform = "translateZ(0)"),
              r
            );
          }
          return (
            _a(e, t),
            (e.prototype.forEachHeaderElement = function (t) {
              var e = this;
              Object.keys(this.headerComps).forEach(function (o) {
                t(e.headerComps[o]);
              });
            }),
            (e.prototype.setRowIndex = function (t) {
              (this.dept = t), qo(this.getGui(), t + 1);
            }),
            (e.prototype.getRowIndex = function () {
              return this.dept;
            }),
            (e.prototype.getType = function () {
              return this.type;
            }),
            (e.prototype.destroyAllChildComponents = function () {
              var t = Object.keys(this.headerComps);
              this.destroyChildComponents(t);
            }),
            (e.prototype.destroyChildComponents = function (t) {
              var e = this;
              t.forEach(function (t) {
                var o = e.headerComps[t];
                e.getGui().removeChild(o.getGui()),
                  e.destroyBean(o),
                  delete e.headerComps[t];
              });
            }),
            (e.prototype.onRowHeightChanged = function () {
              var t,
                e,
                o = this.columnController.getHeaderRowCount(),
                n = [],
                r = 0;
              this.columnController.isPivotMode()
                ? ((t = this.gridOptionsWrapper.getPivotGroupHeaderHeight()),
                  (e = this.gridOptionsWrapper.getPivotHeaderHeight()))
                : (this.columnController.hasFloatingFilters() && (o++, (r = 1)),
                  (t = this.gridOptionsWrapper.getGroupHeaderHeight()),
                  (e = this.gridOptionsWrapper.getHeaderHeight()));
              for (var i = o - (1 + r), s = 0; s < i; s++) n.push(t);
              for (n.push(e), s = 0; s < r; s++)
                n.push(this.gridOptionsWrapper.getFloatingFiltersHeight());
              var a = 0;
              for (s = 0; s < this.dept; s++) a += n[s];
              (this.getGui().style.top = a + "px"),
                (this.getGui().style.height = n[this.dept] + "px");
            }),
            (e.prototype.init = function () {
              this.onRowHeightChanged(),
                this.onVirtualColumnsChanged(),
                this.setWidth(),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_HEADER_HEIGHT,
                  this.onRowHeightChanged.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_PIVOT_HEADER_HEIGHT,
                  this.onRowHeightChanged.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_GROUP_HEADER_HEIGHT,
                  this.onRowHeightChanged.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_PIVOT_GROUP_HEADER_HEIGHT,
                  this.onRowHeightChanged.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_FLOATING_FILTERS_HEIGHT,
                  this.onRowHeightChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_VIRTUAL_COLUMNS_CHANGED,
                  this.onVirtualColumnsChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                  this.onDisplayedColumnsChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_RESIZED,
                  this.onColumnResized.bind(this)
                );
            }),
            (e.prototype.onColumnResized = function () {
              this.setWidth();
            }),
            (e.prototype.setWidth = function () {
              var t = this.getWidthForRow();
              this.getGui().style.width = t + "px";
            }),
            (e.prototype.getWidthForRow = function () {
              return this.gridOptionsWrapper.getDomLayout() ===
                vt.DOM_LAYOUT_PRINT
                ? i(this.pinned)
                  ? this.columnController.getContainerWidth(vt.PINNED_RIGHT) +
                    this.columnController.getContainerWidth(vt.PINNED_LEFT) +
                    this.columnController.getContainerWidth(null)
                  : 0
                : this.columnController.getContainerWidth(this.pinned);
            }),
            (e.prototype.onDisplayedColumnsChanged = function () {
              this.onVirtualColumnsChanged(), this.setWidth();
            }),
            (e.prototype.getColumnsInViewport = function () {
              return this.gridOptionsWrapper.getDomLayout() ===
                vt.DOM_LAYOUT_PRINT
                ? this.getColumnsInViewportPrintLayout()
                : this.getColumnsInViewportNormalLayout();
            }),
            (e.prototype.getColumnsInViewportPrintLayout = function () {
              var t = this;
              if (null != this.pinned) return [];
              var e = [],
                o = this.getActualDepth();
              return (
                [vt.PINNED_LEFT, null, vt.PINNED_RIGHT].forEach(function (n) {
                  var r = t.columnController.getVirtualHeaderGroupRow(n, o);
                  e = e.concat(r);
                }),
                e
              );
            }),
            (e.prototype.getActualDepth = function () {
              return this.type == us.FLOATING_FILTER
                ? this.dept - 1
                : this.dept;
            }),
            (e.prototype.getColumnsInViewportNormalLayout = function () {
              return this.columnController.getVirtualHeaderGroupRow(
                this.pinned,
                this.getActualDepth()
              );
            }),
            (e.prototype.onVirtualColumnsChanged = function () {
              var t = this,
                e = Object.keys(this.headerComps),
                o = [];
              if (
                (this.getColumnsInViewport().forEach(function (n) {
                  if (!n.isEmptyGroup()) {
                    var r = n.getUniqueId(),
                      i = t.getGui(),
                      s = t.headerComps[r];
                    if (
                      (s &&
                        s.getColumn() != n &&
                        (t.destroyChildComponents([r]), C(e, r), (s = void 0)),
                      s)
                    )
                      C(e, r);
                    else {
                      var a = t.createHeaderComp(n);
                      (t.headerComps[r] = a), i.appendChild(a.getGui());
                    }
                    o.push(r);
                  }
                }),
                e
                  .filter(function (e) {
                    var o = t.headerComps[e];
                    return (
                      !!t.focusController.isHeaderWrapperFocused(o) &&
                      t.columnController.isDisplayed(o.getColumn())
                    );
                  })
                  .forEach(function (t) {
                    C(e, t), o.push(t);
                  }),
                this.destroyChildComponents(e),
                this.gridOptionsWrapper.isEnsureDomOrder())
              ) {
                var n = o.map(function (e) {
                  return t.headerComps[e].getGui();
                });
                ho(this.getGui(), n);
              }
            }),
            (e.prototype.createHeaderComp = function (t) {
              var e;
              switch (this.type) {
                case us.COLUMN_GROUP:
                  e = new ma(t, this.pinned);
                  break;
                case us.FLOATING_FILTER:
                  e = new Oa(t, this.pinned);
                  break;
                default:
                  e = new fa(t, this.pinned);
              }
              return this.createBean(e), e.setParentComponent(this), e;
            }),
            (e.prototype.getHeaderComps = function () {
              return this.headerComps;
            }),
            Ra(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Ra([ut("focusController")], e.prototype, "focusController", void 0),
            Ra([at], e.prototype, "destroyAllChildComponents", null),
            Ra([st], e.prototype, "init", null),
            e
          );
        })(jn),
        Aa = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Da = (function () {
          function t(t, e) {
            (this.needToMoveLeft = !1),
              (this.needToMoveRight = !1),
              (this.pinned = t),
              (this.eContainer = e),
              (this.centerContainer = !r(t));
          }
          return (
            (t.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (t.prototype.init = function () {
              this.logger = this.loggerFactory.create("MoveColumnController");
            }),
            (t.prototype.getIconName = function () {
              return this.pinned ? ps.ICON_PINNED : ps.ICON_MOVE;
            }),
            (t.prototype.onDragEnter = function (t) {
              var o = t.dragItem.columns;
              if (t.dragSource.type === e.DragSourceType.ToolPanel)
                this.setColumnsVisible(o, !0, "uiColumnDragged");
              else {
                var n = t.dragItem.visibleState,
                  r = (o || []).filter(function (t) {
                    return n[t.getId()];
                  });
                this.setColumnsVisible(r, !0, "uiColumnDragged");
              }
              this.setColumnsPinned(o, this.pinned, "uiColumnDragged"),
                this.onDragging(t, !0);
            }),
            (t.prototype.onDragLeave = function (t) {
              if (
                !this.gridOptionsWrapper.isSuppressDragLeaveHidesColumns() &&
                !t.fromNudge
              ) {
                var e = t.dragSource.getDragItem();
                this.setColumnsVisible(e.columns, !1, "uiColumnDragged");
              }
              this.ensureIntervalCleared();
            }),
            (t.prototype.setColumnsVisible = function (t, e, o) {
              if ((void 0 === o && (o = "api"), t)) {
                var n = t.filter(function (t) {
                  return !t.getColDef().lockVisible;
                });
                this.columnController.setColumnsVisible(n, e, o);
              }
            }),
            (t.prototype.setColumnsPinned = function (t, e, o) {
              if ((void 0 === o && (o = "api"), t)) {
                var n = t.filter(function (t) {
                  return !t.getColDef().lockPinned;
                });
                this.columnController.setColumnsPinned(n, e, o);
              }
            }),
            (t.prototype.onDragStop = function () {
              this.ensureIntervalCleared();
            }),
            (t.prototype.normaliseX = function (t) {
              return (
                this.gridOptionsWrapper.isEnableRtl() &&
                  (t = this.eContainer.clientWidth - t),
                this.centerContainer &&
                  (t += this.gridPanel.getCenterViewportScrollLeft()),
                t
              );
            }),
            (t.prototype.checkCenterForScrolling = function (t) {
              if (this.centerContainer) {
                var e = this.gridPanel.getCenterViewportScrollLeft(),
                  o = e + this.gridPanel.getCenterWidth();
                this.gridOptionsWrapper.isEnableRtl()
                  ? ((this.needToMoveRight = t < e + 50),
                    (this.needToMoveLeft = t > o - 50))
                  : ((this.needToMoveLeft = t < e + 50),
                    (this.needToMoveRight = t > o - 50)),
                  this.needToMoveLeft || this.needToMoveRight
                    ? this.ensureIntervalStarted()
                    : this.ensureIntervalCleared();
              }
            }),
            (t.prototype.onDragging = function (t, e) {
              var o = this;
              if (
                (void 0 === e && (e = !1),
                (this.lastDraggingEvent = t),
                !i(t.hDirection))
              ) {
                var n = this.normaliseX(t.x);
                e || this.checkCenterForScrolling(n);
                var r = this.normaliseDirection(t.hDirection),
                  s = t.dragSource.type,
                  a = t.dragSource.getDragItem().columns;
                (a = a.filter(function (t) {
                  return !t.getColDef().lockPinned || t.getPinned() == o.pinned;
                })),
                  this.attemptMoveColumns(s, a, r, n, e);
              }
            }),
            (t.prototype.normaliseDirection = function (t) {
              if (!this.gridOptionsWrapper.isEnableRtl()) return t;
              switch (t) {
                case e.HorizontalDirection.Left:
                  return e.HorizontalDirection.Right;
                case e.HorizontalDirection.Right:
                  return e.HorizontalDirection.Left;
                default:
                  console.error("AG Grid: Unknown direction " + t);
              }
            }),
            (t.prototype.calculateOldIndex = function (t) {
              var e = this.columnController.getAllGridColumns(),
                o = v(
                  t.map(function (t) {
                    return e.indexOf(t);
                  })
                ),
                n = o[0];
              return y(o) - n != o.length - 1 ? null : n;
            }),
            (t.prototype.attemptMoveColumns = function (t, o, n, r, i) {
              var s = n === e.HorizontalDirection.Left,
                a = n === e.HorizontalDirection.Right,
                l = o.slice();
              this.columnController.sortColumnsLikeGridColumns(l);
              var u = this.calculateValidMoves(l, a, r),
                p = this.calculateOldIndex(l);
              if (0 !== u.length) {
                var c = u[0],
                  d = null !== p && !i;
                if ((t == e.DragSourceType.HeaderCell && (d = null !== p), d)) {
                  if (s && c >= p) return;
                  if (a && c <= p) return;
                }
                for (var h = 0; h < u.length; h++) {
                  var f = u[h];
                  if (this.columnController.doesMovePassRules(l, f))
                    return void this.columnController.moveColumns(
                      l,
                      f,
                      "uiColumnDragged"
                    );
                }
              }
            }),
            (t.prototype.calculateValidMoves = function (t, e, o) {
              if (
                this.gridOptionsWrapper.isSuppressMovableColumns() ||
                t.some(function (t) {
                  return t.getColDef().suppressMovable;
                })
              )
                return [];
              var n,
                r = this.columnController.getDisplayedColumns(this.pinned),
                i = this.columnController.getAllGridColumns(),
                s = r.filter(function (e) {
                  return S(t, e);
                }),
                a = r.filter(function (e) {
                  return !S(t, e);
                }),
                l = i.filter(function (e) {
                  return !S(t, e);
                }),
                u = 0,
                p = o;
              if (e) {
                var c = 0;
                s.forEach(function (t) {
                  return (c += t.getActualWidth());
                }),
                  (p -= c);
              }
              if (p > 0) {
                for (
                  var d = 0;
                  d < a.length && !((p -= a[d].getActualWidth()) < 0);
                  d++
                )
                  u++;
                e && u++;
              }
              u > 0
                ? (n = l.indexOf(a[u - 1]) + 1)
                : -1 === (n = l.indexOf(a[0])) && (n = 0);
              var h = [n],
                f = function (t, e) {
                  return t - e;
                };
              if (e) {
                for (var g = n + 1, y = i.length - 1; g <= y; ) h.push(g), g++;
                h.sort(f);
              } else {
                y = i.length - 1;
                for (var m = i[(g = n)]; g <= y && this.isColumnHidden(r, m); )
                  g++, h.push(g), (m = i[g]);
                for (g = n - 1; g >= 0; ) h.push(g), g--;
                h.sort(f).reverse();
              }
              return h;
            }),
            (t.prototype.isColumnHidden = function (t, e) {
              return t.indexOf(e) < 0;
            }),
            (t.prototype.ensureIntervalStarted = function () {
              this.movingIntervalId ||
                ((this.intervalCount = 0),
                (this.failedMoveAttempts = 0),
                (this.movingIntervalId = window.setInterval(
                  this.moveInterval.bind(this),
                  100
                )),
                this.dragAndDropService.setGhostIcon(
                  this.needToMoveLeft ? ps.ICON_LEFT : ps.ICON_RIGHT,
                  !0
                ));
            }),
            (t.prototype.ensureIntervalCleared = function () {
              this.movingIntervalId &&
                (window.clearInterval(this.movingIntervalId),
                (this.movingIntervalId = null),
                this.dragAndDropService.setGhostIcon(ps.ICON_MOVE));
            }),
            (t.prototype.moveInterval = function () {
              var t;
              this.intervalCount++,
                (t = 10 + 5 * this.intervalCount) > 100 && (t = 100);
              var e = null;
              if (
                (this.needToMoveLeft
                  ? (e = this.gridPanel.scrollHorizontally(-t))
                  : this.needToMoveRight &&
                    (e = this.gridPanel.scrollHorizontally(t)),
                0 !== e)
              )
                this.onDragging(this.lastDraggingEvent),
                  (this.failedMoveAttempts = 0);
              else {
                this.failedMoveAttempts++;
                var o = this.lastDraggingEvent.dragItem.columns.filter(
                  function (t) {
                    return !t.getColDef().lockPinned;
                  }
                );
                o.length > 0 &&
                  (this.dragAndDropService.setGhostIcon(ps.ICON_PINNED),
                  this.failedMoveAttempts > 7 &&
                    (this.setColumnsPinned(
                      o,
                      this.needToMoveLeft ? vt.PINNED_LEFT : vt.PINNED_RIGHT,
                      "uiColumnDragged"
                    ),
                    this.dragAndDropService.nudge()));
              }
            }),
            Aa([ut("loggerFactory")], t.prototype, "loggerFactory", void 0),
            Aa(
              [ut("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            Aa(
              [ut("dragAndDropService")],
              t.prototype,
              "dragAndDropService",
              void 0
            ),
            Aa(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            Aa([st], t.prototype, "init", null),
            t
          );
        })(),
        xa = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Fa = (function () {
          function t(t) {
            (this.columnsToAggregate = []),
              (this.columnsToGroup = []),
              (this.columnsToPivot = []),
              (this.pinned = t);
          }
          return (
            (t.prototype.onDragEnter = function (t) {
              var e = this;
              if (
                (this.clearColumnsList(),
                !this.gridOptionsWrapper.isFunctionsReadOnly())
              ) {
                var o = t.dragItem.columns;
                o &&
                  o.forEach(function (t) {
                    t.isPrimary() &&
                      (t.isAnyFunctionActive() ||
                        (t.isAllowValue()
                          ? e.columnsToAggregate.push(t)
                          : t.isAllowRowGroup()
                          ? e.columnsToGroup.push(t)
                          : t.isAllowPivot() && e.columnsToPivot.push(t)));
                  });
              }
            }),
            (t.prototype.getIconName = function () {
              return this.columnsToAggregate.length +
                this.columnsToGroup.length +
                this.columnsToPivot.length >
                0
                ? this.pinned
                  ? ps.ICON_PINNED
                  : ps.ICON_MOVE
                : null;
            }),
            (t.prototype.onDragLeave = function (t) {
              this.clearColumnsList();
            }),
            (t.prototype.clearColumnsList = function () {
              (this.columnsToAggregate.length = 0),
                (this.columnsToGroup.length = 0),
                (this.columnsToPivot.length = 0);
            }),
            (t.prototype.onDragging = function (t) {}),
            (t.prototype.onDragStop = function (t) {
              this.columnsToAggregate.length > 0 &&
                this.columnController.addValueColumns(
                  this.columnsToAggregate,
                  "toolPanelDragAndDrop"
                ),
                this.columnsToGroup.length > 0 &&
                  this.columnController.addRowGroupColumns(
                    this.columnsToGroup,
                    "toolPanelDragAndDrop"
                  ),
                this.columnsToPivot.length > 0 &&
                  this.columnController.addPivotColumns(
                    this.columnsToPivot,
                    "toolPanelDragAndDrop"
                  );
            }),
            xa(
              [ut("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            xa(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            t
          );
        })(),
        Na = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ma = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.ColumnMove = 0)] = "ColumnMove"), (t[(t.Pivot = 1)] = "Pivot");
      })(Pa || (Pa = {}));
      var Ia,
        La = (function (t) {
          function o(e, o) {
            var n = t.call(this) || this;
            return (
              (n.dropListeners = {}), (n.pinned = e), (n.eContainer = o), n
            );
          }
          return (
            Na(o, t),
            (o.prototype.registerGridComp = function (t) {
              switch (
                ((this.gridPanel = t),
                this.moveColumnController.registerGridComp(t),
                this.pinned)
              ) {
                case vt.PINNED_LEFT:
                  this.eSecondaryContainers =
                    this.gridPanel.getDropTargetLeftContainers();
                  break;
                case vt.PINNED_RIGHT:
                  this.eSecondaryContainers =
                    this.gridPanel.getDropTargetRightContainers();
                  break;
                default:
                  this.eSecondaryContainers =
                    this.gridPanel.getDropTargetBodyContainers();
              }
            }),
            (o.prototype.isInterestedIn = function (t) {
              return (
                t === e.DragSourceType.HeaderCell ||
                (t === e.DragSourceType.ToolPanel &&
                  this.gridOptionsWrapper.isAllowDragFromColumnsToolPanel())
              );
            }),
            (o.prototype.getSecondaryContainers = function () {
              return this.eSecondaryContainers;
            }),
            (o.prototype.getContainer = function () {
              return this.eContainer;
            }),
            (o.prototype.init = function () {
              this.moveColumnController = this.createBean(
                new Da(this.pinned, this.eContainer)
              );
              var t = new Fa(this.pinned);
              this.createBean(t),
                (this.dropListeners[Pa.ColumnMove] = this.moveColumnController),
                (this.dropListeners[Pa.Pivot] = t),
                this.dragAndDropService.addDropTarget(this);
            }),
            (o.prototype.getIconName = function () {
              return this.currentDropListener.getIconName();
            }),
            (o.prototype.getDropType = function (t) {
              return this.columnController.isPivotMode() &&
                t.dragSource.type === e.DragSourceType.ToolPanel
                ? Pa.Pivot
                : Pa.ColumnMove;
            }),
            (o.prototype.onDragEnter = function (t) {
              var e = this.getDropType(t);
              (this.currentDropListener = this.dropListeners[e]),
                this.currentDropListener.onDragEnter(t);
            }),
            (o.prototype.onDragLeave = function (t) {
              this.currentDropListener.onDragLeave(t);
            }),
            (o.prototype.onDragging = function (t) {
              this.currentDropListener.onDragging(t);
            }),
            (o.prototype.onDragStop = function (t) {
              this.currentDropListener.onDragStop(t);
            }),
            Ma(
              [ut("dragAndDropService")],
              o.prototype,
              "dragAndDropService",
              void 0
            ),
            Ma(
              [ut("columnController")],
              o.prototype,
              "columnController",
              void 0
            ),
            Ma([st], o.prototype, "init", null),
            o
          );
        })(Ht),
        Ga = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ka = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Va = (function (t) {
          function e(e, o, n) {
            var r = t.call(this) || this;
            return (
              (r.groupsRowComps = []),
              (r.eContainer = e),
              (r.pinned = n),
              (r.eViewport = o),
              r
            );
          }
          return (
            Ga(e, t),
            (e.prototype.forEachHeaderElement = function (t) {
              this.groupsRowComps &&
                this.groupsRowComps.forEach(function (e) {
                  return e.forEachHeaderElement(t);
                }),
                this.columnsRowComp &&
                  this.columnsRowComp.forEachHeaderElement(t),
                this.filtersRowComp &&
                  this.filtersRowComp.forEachHeaderElement(t);
            }),
            (e.prototype.init = function () {
              this.addManagedListener(
                this.eventService,
                zt.EVENT_GRID_COLUMNS_CHANGED,
                this.onGridColumnsChanged.bind(this)
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_SCROLL_VISIBILITY_CHANGED,
                  this.onScrollVisibilityChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_RESIZED,
                  this.onColumnResized.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                  this.onDisplayedColumnsChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_SCROLLBAR_WIDTH_CHANGED,
                  this.onScrollbarWidthChanged.bind(this)
                );
            }),
            (e.prototype.onColumnResized = function () {
              this.setWidthOfPinnedContainer();
            }),
            (e.prototype.onDisplayedColumnsChanged = function () {
              this.setWidthOfPinnedContainer();
            }),
            (e.prototype.onScrollVisibilityChanged = function () {
              this.setWidthOfPinnedContainer();
            }),
            (e.prototype.onScrollbarWidthChanged = function () {
              this.setWidthOfPinnedContainer();
            }),
            (e.prototype.setWidthOfPinnedContainer = function () {
              var t = this.pinned === vt.PINNED_LEFT,
                e = this.pinned === vt.PINNED_RIGHT,
                o = this.columnController,
                n = this.gridOptionsWrapper.isEnableRtl(),
                r = this.gridOptionsWrapper.getScrollbarWidth();
              if (t || e) {
                var i =
                  o[
                    t
                      ? "getDisplayedColumnsLeftWidth"
                      : "getDisplayedColumnsRightWidth"
                  ]();
                this.scrollVisibleService.isVerticalScrollShowing() &&
                  ((n && t) || (!n && e)) &&
                  (i += r),
                  Co(this.eContainer, i);
              }
            }),
            (e.prototype.getRowComps = function () {
              var t = [];
              return (
                this.groupsRowComps && (t = t.concat(this.groupsRowComps)),
                this.columnsRowComp && t.push(this.columnsRowComp),
                this.filtersRowComp && t.push(this.filtersRowComp),
                t
              );
            }),
            (e.prototype.onGridColumnsChanged = function () {
              this.refresh(!0);
            }),
            (e.prototype.refresh = function (t) {
              void 0 === t && (t = !1), this.refreshRowComps(t);
            }),
            (e.prototype.setupDragAndDrop = function (t) {
              var e = new La(
                this.pinned,
                this.eViewport ? this.eViewport : this.eContainer
              );
              this.createManagedBean(e), e.registerGridComp(t);
            }),
            (e.prototype.destroyRowComps = function (t) {
              void 0 === t && (t = !1),
                this.groupsRowComps.forEach(this.destroyRowComp.bind(this)),
                (this.groupsRowComps = []),
                this.destroyRowComp(this.filtersRowComp),
                (this.filtersRowComp = void 0),
                t ||
                  (this.destroyRowComp(this.columnsRowComp),
                  (this.columnsRowComp = void 0));
            }),
            (e.prototype.destroyRowComp = function (t) {
              t &&
                (this.destroyBean(t), this.eContainer.removeChild(t.getGui()));
            }),
            (e.prototype.refreshRowComps = function (t) {
              var e = this;
              void 0 === t && (t = !1);
              var o = new Fn();
              !(function () {
                var t = e.columnController.getHeaderRowCount() - 1;
                e.groupsRowComps.forEach(e.destroyRowComp.bind(e)),
                  (e.groupsRowComps = []);
                for (var n = 0; n < t; n++) {
                  var r = e.createBean(
                    new Ta(o.next(), us.COLUMN_GROUP, e.pinned)
                  );
                  e.groupsRowComps.push(r);
                }
              })(),
                (function () {
                  var n = o.next();
                  if (e.columnsRowComp) {
                    var r = e.columnsRowComp.getRowIndex() !== n;
                    (t && !r) ||
                      (e.destroyRowComp(e.columnsRowComp),
                      (e.columnsRowComp = void 0));
                  }
                  e.columnsRowComp ||
                    (e.columnsRowComp = e.createBean(
                      new Ta(n, us.COLUMN, e.pinned)
                    ));
                })(),
                (function () {
                  var n = function () {
                    e.destroyRowComp(e.filtersRowComp),
                      (e.filtersRowComp = void 0);
                  };
                  if (
                    !e.columnController.isPivotMode() &&
                    e.columnController.hasFloatingFilters()
                  ) {
                    var r = o.next();
                    if (e.filtersRowComp) {
                      var i = e.filtersRowComp.getRowIndex() !== r;
                      (t && !i) || n();
                    }
                    e.filtersRowComp ||
                      (e.filtersRowComp = e.createBean(
                        new Ta(r, us.FLOATING_FILTER, e.pinned)
                      ));
                  } else n();
                })(),
                this.getRowComps().forEach(function (t) {
                  return e.eContainer.appendChild(t.getGui());
                });
            }),
            ka(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            ka(
              [ut("scrollVisibleService")],
              e.prototype,
              "scrollVisibleService",
              void 0
            ),
            ka([st], e.prototype, "init", null),
            ka([at], e.prototype, "destroyRowComps", null),
            e
          );
        })(Ht),
        Wa = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ha = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      ((Ia = e.HeaderNavigationDirection || (e.HeaderNavigationDirection = {}))[
        (Ia.UP = 0)
      ] = "UP"),
        (Ia[(Ia.DOWN = 1)] = "DOWN"),
        (Ia[(Ia.LEFT = 2)] = "LEFT"),
        (Ia[(Ia.RIGHT = 3)] = "RIGHT");
      var Ba,
        ja = (function (t) {
          function o() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Wa(o, t),
            (o.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (o.prototype.registerHeaderRoot = function (t) {
              this.headerRoot = t;
            }),
            (o.prototype.getHeaderRowCount = function () {
              return 0 === this.headerRoot.getHeaderContainers().size
                ? 0
                : this.getHeaderContainer().getRowComps().length;
            }),
            (o.prototype.getHeaderRowType = function (t) {
              if (this.getHeaderRowCount())
                return this.getHeaderContainer().getRowComps()[t].getType();
            }),
            (o.prototype.getHeaderContainer = function (t) {
              return (
                void 0 === t && (t = "center"),
                null === t && (t = "center"),
                this.headerRoot.getHeaderContainers().get(t)
              );
            }),
            (o.prototype.navigateVertically = function (t, o, n) {
              if ((o || (o = this.focusController.getFocusedHeader()), !o))
                return !1;
              var r = o.headerRowIndex,
                i = o.column,
                s = this.getHeaderRowCount(),
                a = t === e.HeaderNavigationDirection.UP,
                l = a ? r - 1 : r + 1,
                u = null,
                p = !1;
              l < 0 && ((l = 0), (u = i), (p = !0)), l >= s && (l = -1);
              var c = this.getHeaderRowType(r);
              if (!p) {
                if (c === us.COLUMN_GROUP) {
                  var d = i;
                  u = a ? i.getParent() : d.getDisplayedChildren()[0];
                } else
                  c === us.FLOATING_FILTER
                    ? (u = i)
                    : ((d = i), (u = a ? d.getParent() : d));
                if (!u) return !1;
              }
              return this.focusController.focusHeaderPosition(
                { headerRowIndex: l, column: u },
                void 0,
                !1,
                !0,
                n
              );
            }),
            (o.prototype.navigateHorizontally = function (t, o, n) {
              void 0 === o && (o = !1);
              var r,
                i,
                s = this.focusController.getFocusedHeader(),
                a = t === e.HeaderNavigationDirection.LEFT,
                l = this.gridOptionsWrapper.isEnableRtl();
              return (r = this.headerPositionUtils.findHeader(
                s,
                (i = a !== l ? "Before" : "After")
              ))
                ? this.focusController.focusHeaderPosition(r, i, o, !0, n)
                : !o || this.focusNextHeaderRow(s, i, n);
            }),
            (o.prototype.focusNextHeaderRow = function (t, e, o) {
              var n = t.headerRowIndex,
                r = null;
              return (
                "Before" === e
                  ? n > 0 &&
                    (r = this.headerPositionUtils.findColAtEdgeForHeaderRow(
                      n - 1,
                      "end"
                    ))
                  : (r = this.headerPositionUtils.findColAtEdgeForHeaderRow(
                      n + 1,
                      "start"
                    )),
                this.focusController.focusHeaderPosition(r, e, !0, !0, o)
              );
            }),
            (o.prototype.scrollToColumn = function (t, e) {
              if ((void 0 === e && (e = "After"), !t.getPinned())) {
                var o;
                if (t instanceof Et) {
                  var n = t.getDisplayedLeafColumns();
                  o = "Before" === e ? y(n) : n[0];
                } else o = t;
                this.gridPanel.ensureColumnVisible(o),
                  this.gridPanel.horizontallyScrollHeaderCenterAndFloatingCenter(),
                  this.animationFrameService.flushAllFrames();
              }
            }),
            Ha([ut("focusController")], o.prototype, "focusController", void 0),
            Ha(
              [ut("headerPositionUtils")],
              o.prototype,
              "headerPositionUtils",
              void 0
            ),
            Ha(
              [ut("animationFrameService")],
              o.prototype,
              "animationFrameService",
              void 0
            ),
            Ha([lt("headerNavigationService")], o)
          );
        })(Ht),
        Ua = (function () {
          function t() {}
          return (
            (t.BACKSPACE = "Backspace"),
            (t.TAB = "Tab"),
            (t.ENTER = "Enter"),
            (t.SHIFT = "Shift"),
            (t.ESCAPE = "Escape"),
            (t.SPACE = " "),
            (t.LEFT = "ArrowLeft"),
            (t.UP = "ArrowUp"),
            (t.RIGHT = "ArrowRight"),
            (t.DOWN = "ArrowDown"),
            (t.DELETE = "Delete"),
            (t.NUM_PAD_DELETE = "Del"),
            (t.A = "a"),
            (t.C = "c"),
            (t.V = "v"),
            (t.D = "d"),
            (t.Z = "z"),
            (t.Y = "y"),
            (t.F2 = "F2"),
            (t.PAGE_UP = "PageUp"),
            (t.PAGE_DOWN = "PageDown"),
            (t.PAGE_HOME = "Home"),
            (t.PAGE_END = "End"),
            t
          );
        })(),
        za = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ka = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ya = (function (t) {
          function o() {
            var e = t.call(this, o.TEMPLATE) || this;
            return (e.headerContainers = new Map()), e;
          }
          return (
            za(o, t),
            (o.prototype.postConstruct = function () {
              var e = this;
              t.prototype.postConstruct.call(this),
                (this.printLayout =
                  this.gridOptionsWrapper.getDomLayout() ===
                  vt.DOM_LAYOUT_PRINT),
                this.gridApi.registerHeaderRootComp(this),
                this.autoWidthCalculator.registerHeaderRootComp(this),
                this.registerHeaderContainer(
                  new Va(this.eHeaderContainer, this.eHeaderViewport, null),
                  "center"
                ),
                this.registerHeaderContainer(
                  new Va(this.ePinnedLeftHeader, null, vt.PINNED_LEFT),
                  "left"
                ),
                this.registerHeaderContainer(
                  new Va(this.ePinnedRightHeader, null, vt.PINNED_RIGHT),
                  "right"
                ),
                this.headerContainers.forEach(function (t) {
                  return e.createManagedBean(t);
                }),
                this.headerNavigationService.registerHeaderRoot(this),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_DOM_LAYOUT,
                  this.onDomLayoutChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  this.onPivotModeChanged.bind(this)
                ),
                this.onPivotModeChanged(),
                this.addPreventHeaderScroll(),
                this.columnController.isReady() && this.refreshHeader();
            }),
            (o.prototype.registerGridComp = function (t) {
              (this.gridPanel = t),
                this.headerContainers.forEach(function (e) {
                  return e.setupDragAndDrop(t);
                });
            }),
            (o.prototype.registerHeaderContainer = function (t, e) {
              this.headerContainers.set(e, t);
            }),
            (o.prototype.onTabKeyDown = function (t) {
              var o = this.gridOptionsWrapper.isEnableRtl();
              (this.headerNavigationService.navigateHorizontally(
                t.shiftKey !== o
                  ? e.HeaderNavigationDirection.LEFT
                  : e.HeaderNavigationDirection.RIGHT,
                !0,
                t
              ) ||
                this.focusController.focusNextGridCoreContainer(t.shiftKey)) &&
                t.preventDefault();
            }),
            (o.prototype.handleKeyDown = function (t) {
              var o = null;
              switch (t.key) {
                case Ua.LEFT:
                  o = e.HeaderNavigationDirection.LEFT;
                case Ua.RIGHT:
                  r(o) || (o = e.HeaderNavigationDirection.RIGHT),
                    this.headerNavigationService.navigateHorizontally(o, !1, t);
                  break;
                case Ua.UP:
                  o = e.HeaderNavigationDirection.UP;
                case Ua.DOWN:
                  r(o) || (o = e.HeaderNavigationDirection.DOWN),
                    this.headerNavigationService.navigateVertically(
                      o,
                      null,
                      t
                    ) && t.preventDefault();
                  break;
                default:
                  return;
              }
            }),
            (o.prototype.onFocusOut = function (t) {
              var e = t.relatedTarget,
                o = this.getGui();
              (!e && o.contains(document.activeElement)) ||
                o.contains(e) ||
                this.focusController.clearFocusedHeader();
            }),
            (o.prototype.onDomLayoutChanged = function () {
              var t =
                this.gridOptionsWrapper.getDomLayout() === vt.DOM_LAYOUT_PRINT;
              this.printLayout !== t &&
                ((this.printLayout = t), this.refreshHeader());
            }),
            (o.prototype.setHorizontalScroll = function (t) {
              this.eHeaderContainer.style.transform = "translateX(" + t + "px)";
            }),
            (o.prototype.forEachHeaderElement = function (t) {
              this.headerContainers.forEach(function (e) {
                return e.forEachHeaderElement(t);
              });
            }),
            (o.prototype.refreshHeader = function () {
              this.headerContainers.forEach(function (t) {
                return t.refresh();
              });
            }),
            (o.prototype.onPivotModeChanged = function () {
              var t = this.columnController.isPivotMode();
              je(this.getGui(), "ag-pivot-on", t),
                je(this.getGui(), "ag-pivot-off", !t);
            }),
            (o.prototype.setHeight = function (t) {
              var e = t + 1 + "px";
              (this.getGui().style.height = e),
                (this.getGui().style.minHeight = e);
            }),
            (o.prototype.addPreventHeaderScroll = function () {
              var t = this;
              this.addManagedListener(
                this.eHeaderViewport,
                "scroll",
                function () {
                  var e = t.eHeaderViewport.scrollLeft;
                  0 !== e &&
                    (t.gridPanel.scrollHorizontally(e),
                    (t.eHeaderViewport.scrollLeft = 0));
                }
              );
            }),
            (o.prototype.getHeaderContainers = function () {
              return this.headerContainers;
            }),
            (o.prototype.setHeaderContainerWidth = function (t) {
              this.eHeaderContainer.style.width = t + "px";
            }),
            (o.prototype.setLeftVisible = function (t) {
              Ke(this.ePinnedLeftHeader, t);
            }),
            (o.prototype.setRightVisible = function (t) {
              Ke(this.ePinnedRightHeader, t);
            }),
            (o.TEMPLATE =
              '<div class="ag-header" role="presentation">\n            <div class="ag-pinned-left-header" ref="ePinnedLeftHeader" role="presentation"></div>\n            <div class="ag-header-viewport" ref="eHeaderViewport" role="presentation">\n                <div class="ag-header-container" ref="eHeaderContainer" role="rowgroup"></div>\n            </div>\n            <div class="ag-pinned-right-header" ref="ePinnedRightHeader" role="presentation"></div>\n        </div>'),
            Ka(
              [Kn("ePinnedLeftHeader")],
              o.prototype,
              "ePinnedLeftHeader",
              void 0
            ),
            Ka(
              [Kn("ePinnedRightHeader")],
              o.prototype,
              "ePinnedRightHeader",
              void 0
            ),
            Ka(
              [Kn("eHeaderContainer")],
              o.prototype,
              "eHeaderContainer",
              void 0
            ),
            Ka([Kn("eHeaderViewport")], o.prototype, "eHeaderViewport", void 0),
            Ka(
              [ut("columnController")],
              o.prototype,
              "columnController",
              void 0
            ),
            Ka([ut("gridApi")], o.prototype, "gridApi", void 0),
            Ka(
              [ut("autoWidthCalculator")],
              o.prototype,
              "autoWidthCalculator",
              void 0
            ),
            Ka(
              [ut("headerNavigationService")],
              o.prototype,
              "headerNavigationService",
              void 0
            ),
            o
          );
        })(sr),
        Xa = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        qa = function () {
          return (qa =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        Qa = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Za = (function (t) {
          function o() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.allAdvancedFilters = new Map()),
              (e.activeAdvancedFilters = []),
              (e.quickFilter = null),
              (e.quickFilterParts = null),
              (e.processingFilterChange = !1),
              e
            );
          }
          var n;
          return (
            Xa(o, t),
            (n = o),
            (o.prototype.init = function () {
              this.addManagedListener(
                this.eventService,
                zt.EVENT_ROW_DATA_CHANGED,
                this.onNewRowsLoaded.bind(this)
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_NEW_COLUMNS_LOADED,
                  this.onNewColumnsLoaded.bind(this)
                ),
                (this.quickFilter = this.parseQuickFilter(
                  this.gridOptionsWrapper.getQuickFilterText()
                )),
                this.setQuickFilterParts(),
                (this.allowShowChangeAfterFilter =
                  this.gridOptionsWrapper.isAllowShowChangeAfterFilter()),
                this.checkExternalFilter();
            }),
            (o.prototype.setQuickFilterParts = function () {
              this.quickFilterParts = this.quickFilter
                ? this.quickFilter.split(" ")
                : null;
            }),
            (o.prototype.setFilterModel = function (t) {
              var e = this,
                o = [];
              if (t) {
                var n = Pn(Object.keys(t));
                this.allAdvancedFilters.forEach(function (r, i) {
                  o.push(e.setModelOnFilterWrapper(r.filterPromise, t[i])),
                    n.delete(i);
                }),
                  n.forEach(function (n) {
                    var r = e.columnController.getPrimaryColumn(n);
                    if (r) {
                      var i = e.getOrCreateFilterWrapper(r, "NO_UI");
                      o.push(e.setModelOnFilterWrapper(i.filterPromise, t[n]));
                    } else console.warn("Warning ag-grid setFilterModel - no column found for colId " + n);
                  });
              } else
                this.allAdvancedFilters.forEach(function (t) {
                  o.push(e.setModelOnFilterWrapper(t.filterPromise, null));
                });
              Mn.all(o).then(function () {
                return e.onFilterChanged();
              });
            }),
            (o.prototype.setModelOnFilterWrapper = function (t, e) {
              return new Mn(function (o) {
                t.then(function (t) {
                  "function" != typeof t.setModel &&
                    (console.warn(
                      "Warning ag-grid - filter missing setModel method, which is needed for setFilterModel"
                    ),
                    o()),
                    (t.setModel(e) || Mn.resolve()).then(function () {
                      return o();
                    });
                });
              });
            }),
            (o.prototype.getFilterModel = function () {
              var t = {};
              return (
                this.allAdvancedFilters.forEach(function (e, o) {
                  var n = e.filterPromise.resolveNow(null, function (t) {
                    return t;
                  });
                  if (null == n) return null;
                  if ("function" == typeof n.getModel) {
                    var i = n.getModel();
                    r(i) && (t[o] = i);
                  } else console.warn("Warning ag-grid - filter API missing getModel method, which is needed for getFilterModel");
                }),
                t
              );
            }),
            (o.prototype.isAdvancedFilterPresent = function () {
              return this.activeAdvancedFilters.length > 0;
            }),
            (o.prototype.updateActiveFilters = function () {
              var t = this;
              (this.activeAdvancedFilters.length = 0),
                this.allAdvancedFilters.forEach(function (e) {
                  if (
                    e.filterPromise.resolveNow(!1, function (t) {
                      return t.isFilterActive();
                    })
                  ) {
                    var o = e.filterPromise.resolveNow(null, function (t) {
                      return t;
                    });
                    t.activeAdvancedFilters.push(o);
                  }
                });
            }),
            (o.prototype.updateFilterFlagInColumns = function (t, e) {
              this.allAdvancedFilters.forEach(function (o) {
                var n = o.filterPromise.resolveNow(!1, function (t) {
                  return t.isFilterActive();
                });
                o.column.setFilterActive(n, t, e);
              });
            }),
            (o.prototype.isAnyFilterPresent = function () {
              return (
                this.isQuickFilterPresent() ||
                this.isAdvancedFilterPresent() ||
                this.externalFilterPresent
              );
            }),
            (o.prototype.doAdvancedFiltersPass = function (t, e) {
              for (
                var o = t.data, n = 0;
                n < this.activeAdvancedFilters.length;
                n++
              ) {
                var r = this.activeAdvancedFilters[n];
                if (null != r && r !== e) {
                  if ("function" != typeof r.doesFilterPass)
                    throw new Error("Filter is missing method doesFilterPass");
                  if (!r.doesFilterPass({ node: t, data: o })) return !1;
                }
              }
              return !0;
            }),
            (o.prototype.parseQuickFilter = function (t) {
              return r(t)
                ? this.gridOptionsWrapper.isRowModelDefault()
                  ? t.toUpperCase()
                  : (console.warn(
                      "ag-grid: quick filtering only works with the Client-Side Row Model"
                    ),
                    null)
                : null;
            }),
            (o.prototype.setQuickFilter = function (t) {
              var e = this.parseQuickFilter(t);
              this.quickFilter !== e &&
                ((this.quickFilter = e),
                this.setQuickFilterParts(),
                this.onFilterChanged());
            }),
            (o.prototype.checkExternalFilter = function () {
              this.externalFilterPresent =
                this.gridOptionsWrapper.isExternalFilterPresent();
            }),
            (o.prototype.onFilterChanged = function (t, e) {
              this.updateActiveFilters(),
                this.updateFilterFlagInColumns("filterChanged", e),
                this.checkExternalFilter(),
                this.allAdvancedFilters.forEach(function (e) {
                  e.filterPromise.then(function (e) {
                    e !== t && e.onAnyFilterChanged && e.onAnyFilterChanged();
                  });
                });
              var o = {
                type: zt.EVENT_FILTER_CHANGED,
                api: this.gridApi,
                columnApi: this.columnApi,
              };
              e && V(o, e),
                (this.processingFilterChange = !0),
                this.eventService.dispatchEvent(o),
                (this.processingFilterChange = !1);
            }),
            (o.prototype.isSuppressFlashingCellsBecauseFiltering = function () {
              return (
                !this.allowShowChangeAfterFilter && this.processingFilterChange
              );
            }),
            (o.prototype.isQuickFilterPresent = function () {
              return null !== this.quickFilter;
            }),
            (o.prototype.doesRowPassOtherFilters = function (t, e) {
              return this.doesRowPassFilter({
                rowNode: e,
                filterInstanceToSkip: t,
              });
            }),
            (o.prototype.doesRowPassQuickFilterNoCache = function (t, e) {
              var o = this;
              return P(
                this.columnController.getAllColumnsForQuickFilter(),
                function (n) {
                  var i = o.getQuickFilterTextForColumn(n, t);
                  return r(i) && i.indexOf(e) >= 0;
                }
              );
            }),
            (o.prototype.doesRowPassQuickFilterCache = function (t, e) {
              return (
                t.quickFilterAggregateText ||
                  this.aggregateRowForQuickFilter(t),
                t.quickFilterAggregateText.indexOf(e) >= 0
              );
            }),
            (o.prototype.doesRowPassQuickFilter = function (t) {
              var e = this,
                o = this.gridOptionsWrapper.isCacheQuickFilter();
              return R(this.quickFilterParts, function (n) {
                return o
                  ? e.doesRowPassQuickFilterCache(t, n)
                  : e.doesRowPassQuickFilterNoCache(t, n);
              });
            }),
            (o.prototype.doesRowPassFilter = function (t) {
              return !(
                (this.isQuickFilterPresent() &&
                  !this.doesRowPassQuickFilter(t.rowNode)) ||
                (this.externalFilterPresent &&
                  !this.gridOptionsWrapper.doesExternalFilterPass(t.rowNode)) ||
                (this.isAdvancedFilterPresent() &&
                  !this.doAdvancedFiltersPass(
                    t.rowNode,
                    t.filterInstanceToSkip
                  ))
              );
            }),
            (o.prototype.getQuickFilterTextForColumn = function (t, e) {
              var o = this.valueService.getValue(t, e, !0),
                n = t.getColDef();
              if (n.getQuickFilterText) {
                var i = {
                  value: o,
                  node: e,
                  data: e.data,
                  column: t,
                  colDef: n,
                  context: this.gridOptionsWrapper.getContext(),
                };
                o = n.getQuickFilterText(i);
              }
              return r(o) ? o.toString().toUpperCase() : null;
            }),
            (o.prototype.aggregateRowForQuickFilter = function (t) {
              var e = this,
                o = [];
              T(
                this.columnController.getAllColumnsForQuickFilter(),
                function (n) {
                  var i = e.getQuickFilterTextForColumn(n, t);
                  r(i) && o.push(i);
                }
              ),
                (t.quickFilterAggregateText = o.join(n.QUICK_FILTER_SEPARATOR));
            }),
            (o.prototype.onNewRowsLoaded = function (t) {
              this.allAdvancedFilters.forEach(function (t) {
                t.filterPromise.then(function (t) {
                  t.onNewRowsLoaded && t.onNewRowsLoaded();
                });
              }),
                this.updateFilterFlagInColumns(t),
                this.updateActiveFilters();
            }),
            (o.prototype.createValueGetter = function (t) {
              var e = this;
              return function (o) {
                return e.valueService.getValue(t, o, !0);
              };
            }),
            (o.prototype.getFilterComponent = function (t, e, o) {
              if ((void 0 === o && (o = !0), o))
                return this.getOrCreateFilterWrapper(t, e).filterPromise;
              var n = this.cachedFilter(t);
              return n ? n.filterPromise : null;
            }),
            (o.prototype.isFilterActive = function (t) {
              var e = this.cachedFilter(t);
              return (
                !!e &&
                e.filterPromise.resolveNow(!1, function (t) {
                  return t.isFilterActive();
                })
              );
            }),
            (o.prototype.getOrCreateFilterWrapper = function (t, e) {
              var o = this.cachedFilter(t);
              return (
                o
                  ? "NO_UI" !== e && this.putIntoGui(o, e)
                  : ((o = this.createFilterWrapper(t, e)),
                    this.allAdvancedFilters.set(t.getColId(), o)),
                o
              );
            }),
            (o.prototype.cachedFilter = function (t) {
              return this.allAdvancedFilters.get(t.getColId());
            }),
            (o.prototype.createFilterInstance = function (t, o) {
              var n,
                r = this,
                i = Ct.isRegistered(e.ModuleNames.SetFilterModule)
                  ? "agSetColumnFilter"
                  : "agTextColumnFilter",
                s = t.getColDef(),
                a = qa(qa({}, this.createFilterParams(t, s, o)), {
                  filterModifiedCallback: function () {
                    r.eventService.dispatchEvent({
                      type: zt.EVENT_FILTER_MODIFIED,
                      api: r.gridApi,
                      columnApi: r.columnApi,
                      column: t,
                      filterInstance: n,
                    });
                  },
                  filterChangedCallback: function (t) {
                    return r.onFilterChanged(n, t);
                  },
                  doesRowPassOtherFilter: function (t) {
                    return r.doesRowPassOtherFilters(n, t);
                  },
                }),
                l = this.userComponentFactory.newFilterComponent(s, a, i);
              return (
                l &&
                  l.then(function (t) {
                    return (n = t);
                  }),
                l
              );
            }),
            (o.prototype.createFilterParams = function (t, e, o) {
              void 0 === o && (o = null);
              var n = {
                api: this.gridOptionsWrapper.getApi(),
                column: t,
                colDef: N(e),
                rowModel: this.rowModel,
                filterChangedCallback: function () {},
                filterModifiedCallback: function () {},
                valueGetter: this.createValueGetter(t),
                context: this.gridOptionsWrapper.getContext(),
                doesRowPassOtherFilter: function () {
                  return !0;
                },
              };
              return o && (n.$scope = o), n;
            }),
            (o.prototype.createFilterWrapper = function (t, e) {
              var o = {
                column: t,
                filterPromise: null,
                scope: null,
                compiledElement: null,
                guiPromise: Mn.resolve(null),
              };
              return (
                (o.scope = this.gridOptionsWrapper.isAngularCompileFilters()
                  ? this.$scope.$new()
                  : null),
                (o.filterPromise = this.createFilterInstance(t, o.scope)),
                o.filterPromise && this.putIntoGui(o, e),
                o
              );
            }),
            (o.prototype.putIntoGui = function (t, e) {
              var o = this,
                n = document.createElement("div");
              (n.className = "ag-filter"),
                (t.guiPromise = new Mn(function (i) {
                  t.filterPromise.then(function (s) {
                    var a = s.getGui();
                    if (
                      (r(a) ||
                        console.warn(
                          "getGui method from filter returned " +
                            a +
                            ", it should be a DOM element or an HTML template string."
                        ),
                      "string" == typeof a && (a = ao(a)),
                      n.appendChild(a),
                      t.scope)
                    ) {
                      var l = o.$compile(n)(t.scope);
                      (t.compiledElement = l),
                        window.setTimeout(function () {
                          return t.scope.$apply();
                        }, 0);
                    }
                    i(n),
                      o.eventService.dispatchEvent({
                        type: zt.EVENT_FILTER_OPENED,
                        column: t.column,
                        source: e,
                        eGui: n,
                        api: o.gridApi,
                        columnApi: o.columnApi,
                      });
                  });
                }));
            }),
            (o.prototype.onNewColumnsLoaded = function () {
              var t = this,
                e = !1;
              this.allAdvancedFilters.forEach(function (o) {
                !t.columnController.getPrimaryColumn(o.column) &&
                  ((e = !0), t.disposeFilterWrapper(o, "filterDestroyed"));
              }),
                e && this.onFilterChanged();
            }),
            (o.prototype.destroyFilter = function (t, e) {
              void 0 === e && (e = "api");
              var o = this.allAdvancedFilters.get(t.getColId());
              o && (this.disposeFilterWrapper(o, e), this.onFilterChanged());
            }),
            (o.prototype.disposeFilterWrapper = function (t, e) {
              var o = this;
              t.filterPromise.then(function (n) {
                (n.setModel(null) || Mn.resolve()).then(function () {
                  o.getContext().destroyBean(n),
                    t.column.setFilterActive(!1, e),
                    t.scope &&
                      (t.compiledElement && t.compiledElement.remove(),
                      t.scope.$destroy()),
                    o.allAdvancedFilters.delete(t.column.getColId());
                });
              });
            }),
            (o.prototype.destroy = function () {
              var e = this;
              t.prototype.destroy.call(this),
                this.allAdvancedFilters.forEach(function (t) {
                  return e.disposeFilterWrapper(t, "filterDestroyed");
                });
            }),
            (o.QUICK_FILTER_SEPARATOR = "\n"),
            Qa([ut("$compile")], o.prototype, "$compile", void 0),
            Qa([ut("$scope")], o.prototype, "$scope", void 0),
            Qa([ut("valueService")], o.prototype, "valueService", void 0),
            Qa(
              [ut("columnController")],
              o.prototype,
              "columnController",
              void 0
            ),
            Qa([ut("rowModel")], o.prototype, "rowModel", void 0),
            Qa([ut("columnApi")], o.prototype, "columnApi", void 0),
            Qa([ut("gridApi")], o.prototype, "gridApi", void 0),
            Qa(
              [ut("userComponentFactory")],
              o.prototype,
              "userComponentFactory",
              void 0
            ),
            Qa([st], o.prototype, "init", null),
            Qa([at], o.prototype, "destroy", null),
            (n = Qa([lt("filterManager")], o))
          );
        })(Ht),
        $a = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ja = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        tl = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.initialised = !1), e;
          }
          return (
            $a(e, t),
            (e.prototype.init = function () {
              (this.cellExpressions =
                this.gridOptionsWrapper.isEnableCellExpressions()),
                (this.initialised = !0);
            }),
            (e.prototype.getValue = function (t, e, o, n) {
              if (
                (void 0 === o && (o = !1),
                void 0 === n && (n = !1),
                this.initialised || this.init(),
                e)
              ) {
                var r,
                  i = t.getColDef(),
                  s = i.field,
                  a = t.getId(),
                  l = e.data,
                  u = e.groupData && void 0 !== e.groupData[a],
                  p = !n && e.aggData && void 0 !== e.aggData[a];
                if (
                  (o && i.filterValueGetter
                    ? (r = this.executeFilterValueGetter(
                        i.filterValueGetter,
                        l,
                        t,
                        e
                      ))
                    : this.gridOptionsWrapper.isTreeData() && p
                    ? (r = e.aggData[a])
                    : this.gridOptionsWrapper.isTreeData() && i.valueGetter
                    ? (r = this.executeValueGetter(i.valueGetter, l, t, e))
                    : this.gridOptionsWrapper.isTreeData() && s && l
                    ? (r = B(l, s, t.isFieldContainsDots()))
                    : u
                    ? (r = e.groupData[a])
                    : p
                    ? (r = e.aggData[a])
                    : i.valueGetter
                    ? (r = this.executeValueGetter(i.valueGetter, l, t, e))
                    : s && l && (r = B(l, s, t.isFieldContainsDots())),
                  this.cellExpressions &&
                    "string" == typeof r &&
                    0 === r.indexOf("="))
                ) {
                  var c = r.substring(1);
                  r = this.executeValueGetter(c, l, t, e);
                }
                if (null == r) {
                  var d = this.getOpenedGroup(e, t);
                  if (null != d) return d;
                }
                return r;
              }
            }),
            (e.prototype.getOpenedGroup = function (t, e) {
              if (
                this.gridOptionsWrapper.isShowOpenedGroup() &&
                e.getColDef().showRowGroup
              )
                for (
                  var o = e.getColDef().showRowGroup, n = t.parent;
                  null != n;

                ) {
                  if (
                    n.rowGroupColumn &&
                    (!0 === o || o === n.rowGroupColumn.getId())
                  )
                    return n.key;
                  n = n.parent;
                }
            }),
            (e.prototype.setValue = function (t, e, o, n) {
              var s = this.columnController.getPrimaryColumn(e);
              if (t && s) {
                i(t.data) && (t.data = {});
                var a = s.getColDef(),
                  l = a.field,
                  u = a.newValueHandler,
                  p = a.valueSetter;
                if (i(l) && i(u) && i(p))
                  console.warn(
                    "AG Grid: you need either field or valueSetter set on colDef for editing to work"
                  );
                else {
                  var c,
                    d = {
                      node: t,
                      data: t.data,
                      oldValue: this.getValue(s, t),
                      newValue: o,
                      colDef: s.getColDef(),
                      column: s,
                      api: this.gridOptionsWrapper.getApi(),
                      columnApi: this.gridOptionsWrapper.getColumnApi(),
                      context: this.gridOptionsWrapper.getContext(),
                    };
                  if (
                    ((d.newValue = o),
                    void 0 ===
                      (c =
                        u && r(u)
                          ? u(d)
                          : r(p)
                          ? this.expressionService.evaluate(p, d)
                          : this.setValueUsingField(
                              t.data,
                              l,
                              o,
                              s.isFieldContainsDots()
                            )) && (c = !0),
                    c)
                  ) {
                    t.resetQuickFilterAggregateText(),
                      this.valueCache.onDataChanged(),
                      (d.newValue = this.getValue(s, t));
                    var h = s.getColDef().onCellValueChanged;
                    "function" == typeof h &&
                      setTimeout(function () {
                        return h(d);
                      }, 0),
                      this.eventService.dispatchEvent({
                        type: zt.EVENT_CELL_VALUE_CHANGED,
                        event: null,
                        rowIndex: t.rowIndex,
                        rowPinned: t.rowPinned,
                        column: d.column,
                        api: d.api,
                        columnApi: d.columnApi,
                        colDef: d.colDef,
                        context: d.context,
                        data: t.data,
                        node: t,
                        oldValue: d.oldValue,
                        newValue: d.newValue,
                        value: d.newValue,
                        source: n,
                      });
                  }
                }
              }
            }),
            (e.prototype.setValueUsingField = function (t, e, o, n) {
              if (!e) return !1;
              if (n)
                for (var r = e.split("."), i = t; r.length > 0 && i; ) {
                  var s = r.shift();
                  0 === r.length ? (i[s] = o) : (i = i[s]);
                }
              else t[e] = o;
              return !0;
            }),
            (e.prototype.executeFilterValueGetter = function (t, e, o, n) {
              var r = {
                data: e,
                node: n,
                column: o,
                colDef: o.getColDef(),
                api: this.gridOptionsWrapper.getApi(),
                columnApi: this.gridOptionsWrapper.getColumnApi(),
                context: this.gridOptionsWrapper.getContext(),
                getValue: this.getValueCallback.bind(this, n),
              };
              return this.expressionService.evaluate(t, r);
            }),
            (e.prototype.executeValueGetter = function (t, e, o, n) {
              var r = o.getId(),
                i = this.valueCache.getValue(n, r);
              if (void 0 !== i) return i;
              var s = {
                  data: e,
                  node: n,
                  column: o,
                  colDef: o.getColDef(),
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                  context: this.gridOptionsWrapper.getContext(),
                  getValue: this.getValueCallback.bind(this, n),
                },
                a = this.expressionService.evaluate(t, s);
              return this.valueCache.setValue(n, r, a), a;
            }),
            (e.prototype.getValueCallback = function (t, e) {
              var o = this.columnController.getPrimaryColumn(e);
              return o ? this.getValue(o, t) : null;
            }),
            (e.prototype.getKeyForNode = function (t, e) {
              var o = this.getValue(t, e),
                n = t.getColDef().keyCreator,
                r = n ? n({ value: o }) : o;
              return (
                "string" == typeof r ||
                  null == r ||
                  ("[object Object]" === (r = String(r)) &&
                    q(function () {
                      console.warn(
                        "AG Grid: a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (se AG Grid docs) or b) to toString() on the object to return a key"
                      );
                    }, "getKeyForNode - warn about [object,object]")),
                r
              );
            }),
            Ja(
              [ut("expressionService")],
              e.prototype,
              "expressionService",
              void 0
            ),
            Ja(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Ja([ut("valueCache")], e.prototype, "valueCache", void 0),
            Ja([st], e.prototype, "init", null),
            Ja([lt("valueService")], e)
          );
        })(Ht),
        el = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ol = (function () {
          function t(t) {
            (this.childCount = 0),
              (this.rowTemplatesToAdd = []),
              (this.afterGuiAttachedCallbacks = []),
              (this.lastMadeVisibleTime = 0),
              (this.eContainer = t.eContainer),
              (this.eViewport = t.eViewport),
              t.eWrapper && (this.eWrapper = t.eWrapper),
              (this.hideWhenNoChildren = !!t.hideWhenNoChildren);
          }
          return (
            (t.prototype.setVerticalScrollPosition = function (t) {
              this.scrollTop = t;
            }),
            (t.prototype.postConstruct = function () {
              this.checkDomOrder(),
                this.checkVisibility(),
                this.gridOptionsWrapper.addEventListener(
                  Zi.PROP_DOM_LAYOUT,
                  this.checkDomOrder.bind(this)
                );
            }),
            (t.prototype.checkDomOrder = function () {
              this.domOrder = this.gridOptionsWrapper.isEnsureDomOrder();
            }),
            (t.prototype.getRowElement = function (t) {
              return this.eContainer.querySelector('[comp-id="' + t + '"]');
            }),
            (t.prototype.setHeight = function (t) {
              null != t
                ? ((this.eContainer.style.height = t + "px"),
                  this.eWrapper && (this.eWrapper.style.height = t + "px"))
                : (this.eContainer.style.height = "");
            }),
            (t.prototype.flushRowTemplates = function () {
              if (0 !== this.rowTemplatesToAdd.length) {
                var t = this.rowTemplatesToAdd.join("");
                lo(this.eContainer, t), (this.rowTemplatesToAdd.length = 0);
              }
              this.afterGuiAttachedCallbacks.forEach(function (t) {
                return t();
              }),
                (this.afterGuiAttachedCallbacks.length = 0),
                (this.lastPlacedElement = null);
            }),
            (t.prototype.appendRowTemplate = function (t, e) {
              this.domOrder
                ? (this.lastPlacedElement = fo(
                    this.eContainer,
                    t,
                    this.lastPlacedElement
                  ))
                : this.rowTemplatesToAdd.push(t),
                this.afterGuiAttachedCallbacks.push(e),
                this.childCount++,
                this.checkVisibility();
            }),
            (t.prototype.ensureDomOrder = function (t) {
              this.domOrder &&
                (co(this.eContainer, t, this.lastPlacedElement),
                (this.lastPlacedElement = t));
            }),
            (t.prototype.removeRowElement = function (t) {
              this.eContainer.removeChild(t),
                this.childCount--,
                this.checkVisibility();
            }),
            (t.prototype.checkVisibility = function () {
              if (this.hideWhenNoChildren) {
                var t = this.eViewport ? this.eViewport : this.eContainer,
                  e = this.childCount > 0;
                this.visible !== e &&
                  ((this.visible = e),
                  (this.lastMadeVisibleTime = new Date().getTime()),
                  Ke(t, e),
                  e &&
                    this.eViewport &&
                    (this.eViewport.scrollTop = this.scrollTop));
              }
            }),
            (t.prototype.isMadeVisibleRecently = function () {
              return new Date().getTime() - this.lastMadeVisibleTime < 500;
            }),
            el(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            el([st], t.prototype, "postConstruct", null),
            t
          );
        })(),
        nl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        rl = function () {
          return (rl =
            Object.assign ||
            function (t) {
              for (var e, o = 1, n = arguments.length; o < n; o++)
                for (var r in (e = arguments[o]))
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
              return t;
            }).apply(this, arguments);
        },
        il = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        sl = function () {
          for (var t = 0, e = 0, o = arguments.length; e < o; e++)
            t += arguments[e].length;
          var n = Array(t),
            r = 0;
          for (e = 0; e < o; e++)
            for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
              n[r] = i[s];
          return n;
        },
        al = (function (t) {
          function o(e, o) {
            var n = t.call(this) || this;
            return (
              (n.isMultiRowDrag = !1),
              (n.isGridSorted = !1),
              (n.isGridFiltered = !1),
              (n.isRowGroupActive = !1),
              (n.eContainer = e),
              (n.gridPanel = o),
              n
            );
          }
          return (
            nl(o, t),
            (o.prototype.postConstruct = function () {
              this.gridOptionsWrapper.isRowModelDefault() &&
                (this.clientSideRowModel = this.rowModel),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_SORT_CHANGED,
                  this.onSortChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_FILTER_CHANGED,
                  this.onFilterChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  this.onRowGroupChanged.bind(this)
                ),
                this.onSortChanged(),
                this.onFilterChanged(),
                this.onRowGroupChanged();
            }),
            (o.prototype.onSortChanged = function () {
              this.isGridSorted = this.sortController.isSortActive();
            }),
            (o.prototype.onFilterChanged = function () {
              this.isGridFiltered = this.filterManager.isAnyFilterPresent();
            }),
            (o.prototype.onRowGroupChanged = function () {
              var t = this.columnController.getRowGroupColumns();
              this.isRowGroupActive = !s(t);
            }),
            (o.prototype.getContainer = function () {
              return this.eContainer;
            }),
            (o.prototype.isInterestedIn = function (t) {
              return t === e.DragSourceType.RowDrag;
            }),
            (o.prototype.getIconName = function () {
              return this.gridOptionsWrapper.isRowDragManaged() &&
                this.shouldPreventRowMove()
                ? ps.ICON_NOT_ALLOWED
                : ps.ICON_MOVE;
            }),
            (o.prototype.shouldPreventRowMove = function () {
              return (
                this.isGridSorted ||
                this.isGridFiltered ||
                this.isRowGroupActive
              );
            }),
            (o.prototype.getRowNodes = function (t) {
              if (!this.isFromThisGrid(t)) return t.dragItem.rowNodes || [];
              var e = this.gridOptionsWrapper.isEnableMultiRowDragging(),
                o = this.selectionController.getSelectedNodes(),
                n = t.dragItem.rowNode;
              return e && -1 !== o.indexOf(n)
                ? ((this.isMultiRowDrag = !0), sl(o))
                : ((this.isMultiRowDrag = !1), [n]);
            }),
            (o.prototype.onDragEnter = function (t) {
              this.dispatchGridEvent(zt.EVENT_ROW_DRAG_ENTER, t),
                this.getRowNodes(t).forEach(function (t) {
                  t.setDragging(!0);
                }),
                this.onEnterOrDragging(t);
            }),
            (o.prototype.onDragging = function (t) {
              this.onEnterOrDragging(t);
            }),
            (o.prototype.isFromThisGrid = function (t) {
              return (
                t.dragSource.dragSourceDomDataKey ===
                this.gridOptionsWrapper.getDomDataKey()
              );
            }),
            (o.prototype.isDropZoneWithinThisGrid = function (t) {
              return !this.gridPanel.getGui().contains(t.dropZoneTarget);
            }),
            (o.prototype.onEnterOrDragging = function (t) {
              this.dispatchGridEvent(zt.EVENT_ROW_DRAG_MOVE, t),
                (this.lastDraggingEvent = t);
              var e = this.mouseEventService.getNormalisedPosition(t).y;
              this.gridOptionsWrapper.isRowDragManaged() &&
                this.doManagedDrag(t, e),
                this.checkCenterForScrolling(e);
            }),
            (o.prototype.doManagedDrag = function (t, e) {
              var o,
                n = this,
                r = this.isFromThisGrid(t);
              r
                ? ((o = [t.dragItem.rowNode]),
                  this.isMultiRowDrag &&
                    (o = sl(this.selectionController.getSelectedNodes()).sort(
                      function (t, e) {
                        return n.getRowIndexNumber(t) - n.getRowIndexNumber(e);
                      }
                    )),
                  (t.dragItem.rowNodes = o))
                : (o = t.dragItem.rowNodes),
                (this.gridOptionsWrapper.isRowDragManaged() &&
                  this.shouldPreventRowMove()) ||
                  (this.gridOptionsWrapper.isSuppressMoveWhenRowDragging() || !r
                    ? this.isDropZoneWithinThisGrid(t) ||
                      this.clientSideRowModel.highlightRowAtPixel(o[0], e)
                    : this.moveRows(o, e));
            }),
            (o.prototype.getRowIndexNumber = function (t) {
              return parseInt(y(t.getRowIndexString().split("-")), 10);
            }),
            (o.prototype.moveRowAndClearHighlight = function (t) {
              var e = this,
                o = this.clientSideRowModel.getLastHighlightedRowNode(),
                n = o && "below" === o.highlighted,
                r = this.mouseEventService.getNormalisedPosition(t).y,
                i = t.dragItem.rowNodes,
                s = n ? 1 : 0;
              if (this.isFromThisGrid(t))
                i.forEach(function (t) {
                  t.rowTop < r && (s -= 1);
                }),
                  this.moveRows(i, r, s);
              else {
                var a = this.gridOptionsWrapper.getRowNodeIdFunc(),
                  l = this.clientSideRowModel.getRowIndexAtPixel(r) + 1;
                "above" === this.clientSideRowModel.getHighlightPosition(r) &&
                  l--,
                  this.clientSideRowModel.updateRowData({
                    add: i
                      .map(function (t) {
                        return t.data;
                      })
                      .filter(function (t) {
                        return !e.clientSideRowModel.getRowNode(
                          a ? a(t) : t.id
                        );
                      }),
                    addIndex: l,
                  });
              }
              this.clearRowHighlight();
            }),
            (o.prototype.clearRowHighlight = function () {
              this.clientSideRowModel.highlightRowAtPixel(null);
            }),
            (o.prototype.moveRows = function (t, e, o) {
              void 0 === o && (o = 0),
                this.clientSideRowModel.ensureRowsAtPixel(t, e, o) &&
                  (this.focusController.clearFocusedCell(),
                  this.rangeController &&
                    this.rangeController.removeAllCellRanges());
            }),
            (o.prototype.checkCenterForScrolling = function (t) {
              var e = this.gridPanel.getVScrollPosition();
              (this.needToMoveUp = t < e.top + 50),
                (this.needToMoveDown = t > e.bottom - 50),
                this.needToMoveUp || this.needToMoveDown
                  ? this.ensureIntervalStarted()
                  : this.ensureIntervalCleared();
            }),
            (o.prototype.ensureIntervalStarted = function () {
              this.movingIntervalId ||
                ((this.intervalCount = 0),
                (this.movingIntervalId = window.setInterval(
                  this.moveInterval.bind(this),
                  100
                )));
            }),
            (o.prototype.ensureIntervalCleared = function () {
              r(this.movingIntervalId) &&
                (window.clearInterval(this.movingIntervalId),
                (this.movingIntervalId = null));
            }),
            (o.prototype.moveInterval = function () {
              var t;
              this.intervalCount++,
                (t = 10 + 5 * this.intervalCount) > 100 && (t = 100);
              var e = null;
              this.needToMoveDown
                ? (e = this.gridPanel.scrollVertically(t))
                : this.needToMoveUp &&
                  (e = this.gridPanel.scrollVertically(-t)),
                0 !== e && this.onDragging(this.lastDraggingEvent);
            }),
            (o.prototype.addRowDropZone = function (t) {
              var o = this;
              if (t.getContainer())
                if (this.dragAndDropService.findExternalZone(t))
                  console.warn(
                    "AG Grid: addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again."
                  );
                else {
                  var n = { getContainer: t.getContainer };
                  t.fromGrid
                    ? ((t.fromGrid = void 0), (n = t))
                    : (t.onDragEnter &&
                        (n.onDragEnter = function (e) {
                          t.onDragEnter(
                            o.draggingToRowDragEvent(zt.EVENT_ROW_DRAG_ENTER, e)
                          );
                        }),
                      t.onDragLeave &&
                        (n.onDragLeave = function (e) {
                          t.onDragLeave(
                            o.draggingToRowDragEvent(zt.EVENT_ROW_DRAG_LEAVE, e)
                          );
                        }),
                      t.onDragging &&
                        (n.onDragging = function (e) {
                          t.onDragging(
                            o.draggingToRowDragEvent(zt.EVENT_ROW_DRAG_MOVE, e)
                          );
                        }),
                      t.onDragStop &&
                        (n.onDragStop = function (e) {
                          t.onDragStop(
                            o.draggingToRowDragEvent(zt.EVENT_ROW_DRAG_END, e)
                          );
                        })),
                    this.dragAndDropService.addDropTarget(
                      rl(
                        {
                          isInterestedIn: function (t) {
                            return t === e.DragSourceType.RowDrag;
                          },
                          getIconName: function () {
                            return ps.ICON_MOVE;
                          },
                          external: !0,
                        },
                        n
                      )
                    );
                }
              else
                q(function () {
                  return console.warn(
                    "AG Grid: addRowDropZone - A container target needs to be provided"
                  );
                }, "add-drop-zone-empty-target");
            }),
            (o.prototype.getRowDropZone = function (t) {
              var e = this,
                o = this.getContainer.bind(this),
                n = this.onDragEnter.bind(this),
                r = this.onDragLeave.bind(this),
                i = this.onDragging.bind(this),
                s = this.onDragStop.bind(this);
              return t
                ? {
                    getContainer: o,
                    onDragEnter: t.onDragEnter
                      ? function (o) {
                          n(o),
                            t.onDragEnter(
                              e.draggingToRowDragEvent(
                                zt.EVENT_ROW_DRAG_ENTER,
                                o
                              )
                            );
                        }
                      : n,
                    onDragLeave: t.onDragLeave
                      ? function (o) {
                          r(o),
                            t.onDragLeave(
                              e.draggingToRowDragEvent(
                                zt.EVENT_ROW_DRAG_LEAVE,
                                o
                              )
                            );
                        }
                      : r,
                    onDragging: t.onDragging
                      ? function (o) {
                          i(o),
                            t.onDragging(
                              e.draggingToRowDragEvent(
                                zt.EVENT_ROW_DRAG_MOVE,
                                o
                              )
                            );
                        }
                      : i,
                    onDragStop: t.onDragStop
                      ? function (o) {
                          s(o),
                            t.onDragStop(
                              e.draggingToRowDragEvent(zt.EVENT_ROW_DRAG_END, o)
                            );
                        }
                      : s,
                    fromGrid: !0,
                  }
                : {
                    getContainer: o,
                    onDragEnter: n,
                    onDragLeave: r,
                    onDragging: i,
                    onDragStop: s,
                    fromGrid: !0,
                  };
            }),
            (o.prototype.draggingToRowDragEvent = function (t, o) {
              var n,
                r = this.mouseEventService.getNormalisedPosition(o).y,
                i = -1,
                s = null;
              switch (
                (r > this.paginationProxy.getCurrentPageHeight() ||
                  ((i = this.rowModel.getRowIndexAtPixel(r)),
                  (s = this.rowModel.getRow(i))),
                o.vDirection)
              ) {
                case e.VerticalDirection.Down:
                  n = "down";
                  break;
                case e.VerticalDirection.Up:
                  n = "up";
                  break;
                default:
                  n = null;
              }
              return {
                type: t,
                api: this.gridOptionsWrapper.getApi(),
                columnApi: this.gridOptionsWrapper.getColumnApi(),
                event: o.event,
                node: o.dragItem.rowNode,
                nodes: o.dragItem.rowNodes,
                overIndex: i,
                overNode: s,
                y: r,
                vDirection: n,
              };
            }),
            (o.prototype.dispatchGridEvent = function (t, e) {
              var o = this.draggingToRowDragEvent(t, e);
              this.eventService.dispatchEvent(o);
            }),
            (o.prototype.onDragLeave = function (t) {
              this.dispatchGridEvent(zt.EVENT_ROW_DRAG_LEAVE, t),
                this.stopDragging(t),
                this.gridOptionsWrapper.isRowDragManaged() &&
                  this.clearRowHighlight(),
                this.isFromThisGrid(t) && (this.isMultiRowDrag = !1);
            }),
            (o.prototype.onDragStop = function (t) {
              this.dispatchGridEvent(zt.EVENT_ROW_DRAG_END, t),
                this.stopDragging(t),
                !this.gridOptionsWrapper.isRowDragManaged() ||
                  (!this.gridOptionsWrapper.isSuppressMoveWhenRowDragging() &&
                    this.isFromThisGrid(t)) ||
                  this.isDropZoneWithinThisGrid(t) ||
                  this.moveRowAndClearHighlight(t);
            }),
            (o.prototype.stopDragging = function (t) {
              this.ensureIntervalCleared(),
                this.getRowNodes(t).forEach(function (t) {
                  t.setDragging(!1);
                });
            }),
            il(
              [ut("dragAndDropService")],
              o.prototype,
              "dragAndDropService",
              void 0
            ),
            il([ut("rowModel")], o.prototype, "rowModel", void 0),
            il([ut("paginationProxy")], o.prototype, "paginationProxy", void 0),
            il(
              [ut("columnController")],
              o.prototype,
              "columnController",
              void 0
            ),
            il([ut("focusController")], o.prototype, "focusController", void 0),
            il([ut("sortController")], o.prototype, "sortController", void 0),
            il([ut("filterManager")], o.prototype, "filterManager", void 0),
            il(
              [ut("selectionController")],
              o.prototype,
              "selectionController",
              void 0
            ),
            il([pt("rangeController")], o.prototype, "rangeController", void 0),
            il(
              [ut("mouseEventService")],
              o.prototype,
              "mouseEventService",
              void 0
            ),
            il([st], o.prototype, "postConstruct", null),
            o
          );
        })(Ht),
        ll = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ul = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        pl = (function (t) {
          function o() {
            var e =
              t.call(
                this,
                '<div class="ag-root ag-unselectable" role="grid" unselectable="on">\n        <ag-header-root ref="headerRoot" unselectable="on"></ag-header-root>\n        <div class="ag-floating-top" ref="eTop" role="presentation" unselectable="on">\n            <div class="ag-pinned-left-floating-top" ref="eLeftTop" role="presentation" unselectable="on"></div>\n            <div class="ag-floating-top-viewport" ref="eTopViewport" role="presentation" unselectable="on">\n                <div class="ag-floating-top-container" ref="eTopContainer" role="presentation" unselectable="on"></div>\n            </div>\n            <div class="ag-pinned-right-floating-top" ref="eRightTop" role="presentation" unselectable="on"></div>\n            <div class="ag-floating-top-full-width-container" ref="eTopFullWidthContainer" role="presentation" unselectable="on"></div>\n        </div>\n        <div class="ag-body-viewport" ref="eBodyViewport" role="presentation">\n            <div class="ag-pinned-left-cols-container" ref="eLeftContainer" role="presentation" unselectable="on"></div>\n            <div class="ag-center-cols-clipper" ref="eCenterColsClipper" role="presentation" unselectable="on">\n                <div class="ag-center-cols-viewport" ref="eCenterViewport" role="presentation">\n                    <div class="ag-center-cols-container" ref="eCenterContainer" role="rowgroup" unselectable="on"></div>\n                </div>\n            </div>\n            <div class="ag-pinned-right-cols-container" ref="eRightContainer" role="presentation" unselectable="on"></div>\n            <div class="ag-full-width-container" ref="eFullWidthContainer" role="presentation" unselectable="on"></div>\n        </div>\n        <div class="ag-floating-bottom" ref="eBottom" role="presentation" unselectable="on">\n            <div class="ag-pinned-left-floating-bottom" ref="eLeftBottom" role="presentation" unselectable="on"></div>\n            <div class="ag-floating-bottom-viewport" ref="eBottomViewport" role="presentation" unselectable="on">\n                <div class="ag-floating-bottom-container" ref="eBottomContainer" role="presentation" unselectable="on"></div>\n            </div>\n            <div class="ag-pinned-right-floating-bottom" ref="eRightBottom" role="presentation" unselectable="on"></div>\n            <div class="ag-floating-bottom-full-width-container" ref="eBottomFullWidthContainer" role="presentation" unselectable="on"></div>\n        </div>\n        <div class="ag-body-horizontal-scroll" ref="eHorizontalScrollBody" aria-hidden="true">\n            <div class="ag-horizontal-left-spacer" ref="eHorizontalLeftSpacer"></div>\n            <div class="ag-body-horizontal-scroll-viewport" ref="eBodyHorizontalScrollViewport">\n                <div class="ag-body-horizontal-scroll-container" ref="eBodyHorizontalScrollContainer"></div>\n            </div>\n            <div class="ag-horizontal-right-spacer" ref="eHorizontalRightSpacer"></div>\n        </div>\n        <ag-overlay-wrapper ref="overlayWrapper"></ag-overlay-wrapper>\n    </div>'
              ) || this;
            return (
              (e.scrollLeft = -1),
              (e.scrollTop = -1),
              (e.nextScrollTop = -1),
              (e.resetLastHorizontalScrollElementDebounced = et(
                e.resetLastHorizontalScrollElement.bind(e),
                500
              )),
              e
            );
          }
          return (
            ll(o, t),
            (o.prototype.getVScrollPosition = function () {
              return {
                top: this.eBodyViewport.scrollTop,
                bottom:
                  this.eBodyViewport.scrollTop +
                  this.eBodyViewport.offsetHeight,
              };
            }),
            (o.prototype.getHScrollPosition = function () {
              return {
                left: this.eCenterViewport.scrollLeft,
                right:
                  this.eCenterViewport.scrollLeft +
                  this.eCenterViewport.offsetWidth,
              };
            }),
            (o.prototype.onRowDataChanged = function () {
              this.showOrHideOverlay();
            }),
            (o.prototype.showOrHideOverlay = function () {
              var t = this.paginationProxy.isEmpty(),
                e = this.gridOptionsWrapper.isSuppressNoRowsOverlay();
              this[t && !e ? "showNoRowsOverlay" : "hideOverlay"]();
            }),
            (o.prototype.onNewColumnsLoaded = function () {
              this.columnController.isReady() &&
                !this.paginationProxy.isEmpty() &&
                this.hideOverlay(),
                this.rowRenderer.forEachCellComp(function (t) {
                  return t.onNewColumnsLoaded();
                });
            }),
            (o.prototype.init = function () {
              var t = this;
              (this.enableRtl = this.gridOptionsWrapper.isEnableRtl()),
                (this.printLayout =
                  this.gridOptionsWrapper.getDomLayout() ===
                  vt.DOM_LAYOUT_PRINT),
                this.gridOptionsWrapper.addLayoutElement(this.getGui()),
                this.gridOptionsWrapper.addLayoutElement(this.eBodyViewport),
                this.suppressScrollOnFloatingRow(),
                this.setupRowAnimationCssClass(),
                this.buildRowContainerComponents(),
                this.addEventListeners(),
                this.addDragListeners(),
                this.addScrollListener(),
                this.gridOptionsWrapper.isRowModelDefault() &&
                  !this.gridOptionsWrapper.getRowData() &&
                  this.showLoadingOverlay(),
                this.setCellTextSelection(
                  this.gridOptionsWrapper.isEnableCellTextSelect()
                ),
                this.setPinnedContainerSize(),
                this.setHeaderAndFloatingHeights(),
                this.disableBrowserDragging(),
                this.addMouseListeners(),
                this.addPreventScrollWhileDragging(),
                this.addKeyboardEvents(),
                this.addBodyViewportListener(),
                this.addStopEditingWhenGridLosesFocus(),
                this.mockContextMenuForIPad(),
                this.addRowDragListener(),
                this.$scope && this.addAngularApplyCheck(),
                this.onDisplayedColumnsWidthChanged(),
                this.gridApi.registerGridComp(this),
                this.alignedGridsService.registerGridComp(this),
                this.headerRootComp.registerGridComp(this),
                this.navigationService.registerGridComp(this),
                this.headerNavigationService.registerGridComp(this),
                this.heightScaler.registerGridComp(this),
                this.autoHeightCalculator.registerGridComp(this),
                this.columnAnimationService.registerGridComp(this),
                this.autoWidthCalculator.registerGridComp(this),
                this.paginationAutoPageSizeService.registerGridComp(this),
                this.mouseEventService.registerGridComp(this),
                this.beans.registerGridComp(this),
                this.rowRenderer.registerGridComp(this),
                this.animationFrameService.registerGridComp(this),
                this.contextMenuFactory &&
                  this.contextMenuFactory.registerGridComp(this),
                this.menuFactory && this.menuFactory.registerGridComp(this),
                (this.rangeController ||
                  this.gridOptionsWrapper.isRowSelectionMulti()) &&
                  (Yo(this.getGui(), !0),
                  this.rangeController &&
                    this.rangeController.registerGridComp(this)),
                [this.eCenterViewport, this.eBodyViewport].forEach(function (
                  e
                ) {
                  var o = t.resizeObserverService.observeResize(
                    e,
                    t.onCenterViewportResized.bind(t)
                  );
                  t.addDestroyFunc(function () {
                    return o();
                  });
                }),
                [this.eTop, this.eBodyViewport, this.eBottom].forEach(function (
                  e
                ) {
                  t.addManagedListener(e, "focusin", function () {
                    He(e, "ag-has-focus");
                  }),
                    t.addManagedListener(e, "focusout", function (t) {
                      e.contains(t.relatedTarget) || Be(e, "ag-has-focus");
                    });
                });
            }),
            (o.prototype.onDomLayoutChanged = function () {
              var t =
                this.gridOptionsWrapper.getDomLayout() === vt.DOM_LAYOUT_PRINT;
              this.printLayout !== t &&
                ((this.printLayout = t),
                this.setWidthsOfContainers(),
                this.setPinnedContainerSize());
            }),
            (o.prototype.onCenterViewportResized = function () {
              if (so(this.eCenterViewport)) {
                this.checkViewportAndScrolls();
                var t = this.getCenterWidth();
                t !== this.centerWidth &&
                  ((this.centerWidth = t),
                  this.columnController.refreshFlexedColumns({
                    viewportWidth: this.centerWidth,
                    updateBodyWidths: !0,
                    fireResizedEvent: !0,
                  }));
              } else this.bodyHeight = 0;
            }),
            (o.prototype.setColumnMovingCss = function (t) {
              this.addOrRemoveCssClass("ag-column-moving", t);
            }),
            (o.prototype.setCellTextSelection = function (t) {
              void 0 === t && (t = !1),
                [this.eTop, this.eBodyViewport, this.eBottom].forEach(function (
                  e
                ) {
                  return je(e, "ag-selectable", t);
                });
            }),
            (o.prototype.addRowDragListener = function () {
              (this.rowDragFeature = this.createManagedBean(
                new al(this.eBodyViewport, this)
              )),
                this.dragAndDropService.addDropTarget(this.rowDragFeature);
            }),
            (o.prototype.getRowDragFeature = function () {
              return this.rowDragFeature;
            }),
            (o.prototype.addStopEditingWhenGridLosesFocus = function () {
              var t = this;
              if (this.gridOptionsWrapper.isStopEditingWhenGridLosesFocus()) {
                var e = [this.eBodyViewport, this.eBottom, this.eTop],
                  o = function (o) {
                    var n = o.relatedTarget;
                    if (null !== Me(n)) {
                      var r = e.some(function (t) {
                        return t.contains(n);
                      });
                      if (!r) {
                        var i = t.popupService;
                        r =
                          i.getActivePopups().some(function (t) {
                            return t.contains(n);
                          }) || i.isElementWithinCustomPopup(n);
                      }
                      r || t.rowRenderer.stopEditing();
                    } else t.rowRenderer.stopEditing();
                  };
                e.forEach(function (e) {
                  return t.addManagedListener(e, "focusout", o);
                });
              }
            }),
            (o.prototype.addAngularApplyCheck = function () {
              var t = this,
                e = !1,
                o = function () {
                  e ||
                    ((e = !0),
                    window.setTimeout(function () {
                      (e = !1), t.$scope.$apply();
                    }, 0));
                };
              this.addManagedListener(
                this.eventService,
                zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                o
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_VIRTUAL_COLUMNS_CHANGED,
                  o
                );
            }),
            (o.prototype.disableBrowserDragging = function () {
              this.addGuiEventListener("dragstart", function (t) {
                if (t.target instanceof HTMLImageElement)
                  return t.preventDefault(), !1;
              });
            }),
            (o.prototype.addEventListeners = function () {
              this.addManagedListener(
                this.eventService,
                zt.EVENT_DISPLAYED_COLUMNS_CHANGED,
                this.onDisplayedColumnsChanged.bind(this)
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
                  this.onDisplayedColumnsWidthChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_PINNED_ROW_DATA_CHANGED,
                  this.setHeaderAndFloatingHeights.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_ROW_DATA_CHANGED,
                  this.onRowDataChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_ROW_DATA_UPDATED,
                  this.onRowDataChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_NEW_COLUMNS_LOADED,
                  this.onNewColumnsLoaded.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_SCROLLBAR_WIDTH_CHANGED,
                  this.onScrollbarWidthChanged.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_HEADER_HEIGHT,
                  this.setHeaderAndFloatingHeights.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_PIVOT_HEADER_HEIGHT,
                  this.setHeaderAndFloatingHeights.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_GROUP_HEADER_HEIGHT,
                  this.setHeaderAndFloatingHeights.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_PIVOT_GROUP_HEADER_HEIGHT,
                  this.setHeaderAndFloatingHeights.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_FLOATING_FILTERS_HEIGHT,
                  this.setHeaderAndFloatingHeights.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_DOM_LAYOUT,
                  this.onDomLayoutChanged.bind(this)
                );
            }),
            (o.prototype.addDragListeners = function () {
              var t = this;
              this.gridOptionsWrapper.isEnableRangeSelection() &&
                !i(this.rangeController) &&
                [
                  this.eLeftContainer,
                  this.eRightContainer,
                  this.eCenterContainer,
                  this.eTop,
                  this.eBottom,
                ].forEach(function (e) {
                  var o = {
                    eElement: e,
                    onDragStart: t.rangeController.onDragStart.bind(
                      t.rangeController
                    ),
                    onDragStop: t.rangeController.onDragStop.bind(
                      t.rangeController
                    ),
                    onDragging: t.rangeController.onDragging.bind(
                      t.rangeController
                    ),
                  };
                  t.dragService.addDragSource(o),
                    t.addDestroyFunc(function () {
                      return t.dragService.removeDragSource(o);
                    });
                });
            }),
            (o.prototype.addMouseListeners = function () {
              var t = this;
              [
                "dblclick",
                "contextmenu",
                "mouseover",
                "mouseout",
                "click",
                "mousedown",
              ].forEach(function (e) {
                var o = t.processMouseEvent.bind(t, e);
                t.eAllCellContainers.forEach(function (n) {
                  return t.addManagedListener(n, e, o);
                });
              });
            }),
            (o.prototype.addPreventScrollWhileDragging = function () {
              var t = this,
                e = function (e) {
                  t.dragService.isDragging() &&
                    e.cancelable &&
                    e.preventDefault();
                };
              this.eAllCellContainers.forEach(function (t) {
                t.addEventListener("touchmove", e, { passive: !1 });
              }),
                this.addDestroyFunc(function () {
                  t.eAllCellContainers.forEach(function (t) {
                    t.removeEventListener("touchmove", e);
                  });
                });
            }),
            (o.prototype.addKeyboardEvents = function () {
              var t = this;
              ["keydown", "keypress"].forEach(function (e) {
                var o = t.processKeyboardEvent.bind(t, e);
                t.eAllCellContainers.forEach(function (n) {
                  t.addManagedListener(n, e, o);
                });
              });
            }),
            (o.prototype.addBodyViewportListener = function () {
              var t = this;
              this.addManagedListener(
                this.eBodyViewport,
                "contextmenu",
                function (e) {
                  var o = Nt(e);
                  (o !== t.eBodyViewport && o !== t.eCenterViewport) ||
                    (t.onContextMenu(e, null, null, null, null, t.getGui()),
                    t.preventDefaultOnContextMenu(e));
                }
              );
            }),
            (o.prototype.getBodyClientRect = function () {
              if (this.eBodyViewport)
                return this.eBodyViewport.getBoundingClientRect();
            }),
            (o.prototype.getRowForEvent = function (t) {
              for (var e = Nt(t); e; ) {
                var o = this.gridOptionsWrapper.getDomData(
                  e,
                  Hs.DOM_DATA_KEY_RENDERED_ROW
                );
                if (o) return o;
                e = e.parentElement;
              }
              return null;
            }),
            (o.prototype.processKeyboardEvent = function (t, e) {
              var o = Ft(this.gridOptionsWrapper, e, "cellComp"),
                n = Ft(this.gridOptionsWrapper, e, "renderedRow");
              e.defaultPrevented ||
                (o
                  ? this.processCellKeyboardEvent(o, t, e)
                  : n &&
                    n.isFullWidth() &&
                    this.processFullWidthRowKeyboardEvent(n, t, e));
            }),
            (o.prototype.processCellKeyboardEvent = function (t, e, o) {
              var n = t.getRenderedRow().getRowNode(),
                r = t.getColumn(),
                i = t.isEditing();
              if (!wn(this.gridOptionsWrapper, o, n, r, i))
                switch (e) {
                  case "keydown":
                    (!i && this.navigationService.handlePageScrollingKey(o)) ||
                      t.onKeyDown(o),
                      this.doGridOperations(o, t);
                    break;
                  case "keypress":
                    t.onKeyPress(o);
                }
              if ("keydown" === e) {
                var s = t.createEvent(o, zt.EVENT_CELL_KEY_DOWN);
                this.eventService.dispatchEvent(s);
              }
              if ("keypress" === e) {
                var a = t.createEvent(o, zt.EVENT_CELL_KEY_PRESS);
                this.eventService.dispatchEvent(a);
              }
            }),
            (o.prototype.processFullWidthRowKeyboardEvent = function (t, e, o) {
              var n = t.getRowNode(),
                r = this.beans.focusController.getFocusedCell();
              if (
                !wn(this.gridOptionsWrapper, o, n, r && r.column, !1) &&
                "keydown" === e
              )
                switch (o.key) {
                  case Ua.UP:
                  case Ua.DOWN:
                    t.onKeyboardNavigate(o);
                    break;
                  case Ua.TAB:
                    t.onTabKeyDown(o);
                }
            }),
            (o.prototype.doGridOperations = function (t, e) {
              if (
                (t.ctrlKey || t.metaKey) &&
                !e.isEditing() &&
                this.mouseEventService.isEventFromThisGrid(t)
              )
                switch (t.which) {
                  case $n.A:
                    return this.onCtrlAndA(t);
                  case $n.C:
                    return this.onCtrlAndC(t);
                  case $n.V:
                    return this.onCtrlAndV();
                  case $n.D:
                    return this.onCtrlAndD(t);
                  case $n.Z:
                    return t.shiftKey
                      ? this.undoRedoService.redo()
                      : this.undoRedoService.undo();
                  case $n.Y:
                    return this.undoRedoService.redo();
                }
            }),
            (o.prototype.scrollToTop = function () {
              this.eBodyViewport.scrollTop = 0;
            }),
            (o.prototype.processMouseEvent = function (t, e) {
              if (this.mouseEventService.isEventFromThisGrid(e) && !At(e)) {
                var o = this.getRowForEvent(e),
                  n = this.mouseEventService.getRenderedCellForEvent(e);
                "contextmenu" === t
                  ? (this.preventDefaultOnContextMenu(e),
                    this.handleContextMenuMouseEvent(e, null, o, n))
                  : (n && n.onMouseEvent(t, e), o && o.onMouseEvent(t, e));
              }
            }),
            (o.prototype.mockContextMenuForIPad = function () {
              var t = this;
              Ne() &&
                this.eAllCellContainers.forEach(function (e) {
                  var o = new Cr(e);
                  t.addManagedListener(o, Cr.EVENT_LONG_TAP, function (e) {
                    var o = t.getRowForEvent(e.touchEvent),
                      n = t.mouseEventService.getRenderedCellForEvent(
                        e.touchEvent
                      );
                    t.handleContextMenuMouseEvent(null, e.touchEvent, o, n);
                  }),
                    t.addDestroyFunc(function () {
                      return o.destroy();
                    });
                });
            }),
            (o.prototype.handleContextMenuMouseEvent = function (t, e, o, n) {
              var r = o ? o.getRowNode() : null,
                i = n ? n.getColumn() : null,
                s = null;
              i &&
                (n.dispatchCellContextMenuEvent(t || e),
                (s = this.valueService.getValue(i, r)));
              var a = n ? n.getGui() : this.getGui();
              this.onContextMenu(t, e, r, i, s, a);
            }),
            (o.prototype.onContextMenu = function (t, e, o, n, r, i) {
              (!this.gridOptionsWrapper.isAllowContextMenuWithControlKey() &&
                t &&
                (t.ctrlKey || t.metaKey)) ||
                (this.contextMenuFactory &&
                  !this.gridOptionsWrapper.isSuppressContextMenu() &&
                  this.contextMenuFactory.showMenu(
                    o,
                    n,
                    r,
                    t || e.touches[0],
                    i
                  ) &&
                  (t || e).preventDefault());
            }),
            (o.prototype.preventDefaultOnContextMenu = function (t) {
              var e = this.gridOptionsWrapper,
                o = t.which;
              (e.isPreventDefaultOnContextMenu() ||
                (e.isSuppressMiddleClickScrolls() && 2 === o)) &&
                t.preventDefault();
            }),
            (o.prototype.onCtrlAndA = function (t) {
              var e = this,
                o = e.pinnedRowModel,
                n = e.rangeController,
                r = vt.PINNED_BOTTOM,
                i = vt.PINNED_TOP;
              if (n && e.paginationProxy.isRowsToRender()) {
                var a = [o.isEmpty(i), o.isEmpty(r)],
                  l = a[0] ? null : i,
                  u = void 0,
                  p = void 0;
                a[1]
                  ? ((u = null), (p = this.paginationProxy.getRowCount() - 1))
                  : ((u = r), (p = o.getPinnedBottomRowData().length - 1));
                var c = this.columnController.getAllDisplayedColumns();
                if (s(c)) return;
                n.setCellRange({
                  rowStartIndex: 0,
                  rowStartPinned: l,
                  rowEndIndex: p,
                  rowEndPinned: u,
                  columnStart: c[0],
                  columnEnd: y(c),
                });
              }
              t.preventDefault();
            }),
            (o.prototype.onCtrlAndC = function (t) {
              this.clipboardService &&
                !this.gridOptionsWrapper.isEnableCellTextSelection() &&
                (this.clipboardService.copyToClipboard(), t.preventDefault());
            }),
            (o.prototype.onCtrlAndV = function () {
              Ct.isRegistered(e.ModuleNames.ClipboardModule) &&
                !this.gridOptionsWrapper.isSuppressClipboardPaste() &&
                this.clipboardService.pasteFromClipboard();
            }),
            (o.prototype.onCtrlAndD = function (t) {
              Ct.isRegistered(e.ModuleNames.ClipboardModule) &&
                !this.gridOptionsWrapper.isSuppressClipboardPaste() &&
                this.clipboardService.copyRangeDown(),
                t.preventDefault();
            }),
            (o.prototype.ensureIndexVisible = function (t, e) {
              if (!this.printLayout) {
                var o = this.paginationProxy.getRowCount();
                if ("number" != typeof t || t < 0 || t >= o)
                  console.warn(
                    "invalid row index for ensureIndexVisible: " + t
                  );
                else {
                  (this.gridOptionsWrapper.isPagination() &&
                    !this.gridOptionsWrapper.isSuppressPaginationPanel()) ||
                    this.paginationProxy.goToPageWithIndex(t);
                  var n,
                    r = this.paginationProxy.getRow(t);
                  do {
                    var i = r.rowTop,
                      s = r.rowHeight,
                      a = this.paginationProxy.getPixelOffset(),
                      l = r.rowTop - a,
                      u = l + r.rowHeight,
                      p = this.getVScrollPosition(),
                      c = this.heightScaler.getOffset(),
                      d = p.top + c,
                      h = p.bottom + c,
                      f = h - d,
                      g = this.heightScaler.getScrollPositionForPixel(l),
                      y = this.heightScaler.getScrollPositionForPixel(u - f),
                      m = Math.min((g + y) / 2, l),
                      v = null;
                    "top" === e
                      ? (v = g)
                      : "bottom" === e
                      ? (v = y)
                      : "middle" === e
                      ? (v = m)
                      : d > l
                      ? (v = g)
                      : h < u && (v = y),
                      null !== v &&
                        ((this.eBodyViewport.scrollTop = v),
                        this.rowRenderer.redrawAfterScroll()),
                      (n = i !== r.rowTop || s !== r.rowHeight);
                  } while (n);
                  this.animationFrameService.flushAllFrames();
                }
              }
            }),
            (o.prototype.getCenterWidth = function () {
              return $e(this.eCenterViewport);
            }),
            (o.prototype.isHorizontalScrollShowing = function () {
              return (
                this.gridOptionsWrapper.isAlwaysShowHorizontalScroll() ||
                yo(this.eCenterViewport)
              );
            }),
            (o.prototype.isVerticalScrollShowing = function () {
              var t = this.gridOptionsWrapper.isAlwaysShowVerticalScroll();
              return (
                je(this.eBodyViewport, "ag-force-vertical-scroll", t),
                t || mo(this.eBodyViewport)
              );
            }),
            (o.prototype.onScrollbarWidthChanged = function () {
              this.checkViewportAndScrolls();
            }),
            (o.prototype.checkViewportAndScrolls = function () {
              this.updateScrollVisibleService(),
                this.checkBodyHeight(),
                this.onHorizontalViewportChanged(),
                this.setPinnedContainerSize(),
                this.scrollLeft !== this.getCenterViewportScrollLeft() &&
                  this.onBodyHorizontalScroll(this.eCenterViewport);
            }),
            (o.prototype.updateScrollVisibleService = function () {
              this.updateScrollVisibleServiceImpl(),
                setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);
            }),
            (o.prototype.updateScrollVisibleServiceImpl = function () {
              var t = {
                horizontalScrollShowing: !1,
                verticalScrollShowing: !1,
              };
              (t.verticalScrollShowing = this.isVerticalScrollShowing()),
                (t.horizontalScrollShowing = this.isHorizontalScrollShowing()),
                this.scrollVisibleService.setScrollsVisible(t),
                this.setHorizontalScrollVisible(t.horizontalScrollShowing),
                this.setVerticalScrollPaddingVisible(t.verticalScrollShowing);
            }),
            (o.prototype.setHorizontalScrollVisible = function (t) {
              var e = this.gridOptionsWrapper.isSuppressHorizontalScroll(),
                o = (t && this.gridOptionsWrapper.getScrollbarWidth()) || 0,
                n = e ? 0 : o,
                r = Te() && t;
              (this.eCenterViewport.style.height = "calc(100% + " + o + "px)"),
                wo(this.eHorizontalScrollBody, n),
                wo(this.eBodyHorizontalScrollViewport, n + (r ? 1 : 0)),
                wo(this.eBodyHorizontalScrollContainer, n);
            }),
            (o.prototype.setVerticalScrollPaddingVisible = function (t) {
              (this.eTop.style.overflowY = this.eBottom.style.overflowY =
                t ? "scroll" : "hidden"),
                this.setFakeHScrollSpacerWidths();
            }),
            (o.prototype.updateRowCount = function () {
              var t = this.headerNavigationService.getHeaderRowCount(),
                e = this.paginationProxy.getType(),
                o = -1;
              e === vt.ROW_MODEL_TYPE_CLIENT_SIDE &&
                ((o = 0),
                this.paginationProxy.forEachNode(function (t) {
                  t.group || o++;
                }));
              var n = -1 === o ? -1 : t + o;
              Xo(this.getGui(), n);
            }),
            (o.prototype.updateColumnCount = function () {
              var t = this.columnController.getAllGridColumns();
              Qo(this.getGui(), t.length);
            }),
            (o.prototype.ensureColumnVisible = function (t) {
              var e = this.columnController.getGridColumn(t);
              if (e)
                if (e.isPinned())
                  console.warn(
                    "calling ensureIndexVisible on a " +
                      e.getPinned() +
                      " pinned column doesn't make sense for column " +
                      e.getColId()
                  );
                else if (this.columnController.isColumnDisplayed(e)) {
                  var o,
                    n,
                    r = e.getLeft(),
                    i = r + e.getActualWidth(),
                    s = this.getCenterWidth(),
                    a = this.getCenterViewportScrollLeft(),
                    l = this.columnController.getBodyContainerWidth();
                  this.enableRtl
                    ? ((o = l - a - s), (n = l - a))
                    : ((o = a), (n = s + a));
                  var u = o > r,
                    p = n < i,
                    c = s < e.getActualWidth(),
                    d = u || c;
                  (d || p) &&
                    this.setCenterViewportScrollLeft(
                      this.enableRtl ? (d ? l - s - r : l - i) : d ? r : i - s
                    ),
                    this.onHorizontalViewportChanged(),
                    this.animationFrameService.flushAllFrames();
                } else console.warn("column is not currently visible");
            }),
            (o.prototype.showLoadingOverlay = function () {
              this.gridOptionsWrapper.isSuppressLoadingOverlay() ||
                this.overlayWrapper.showLoadingOverlay();
            }),
            (o.prototype.showNoRowsOverlay = function () {
              this.gridOptionsWrapper.isSuppressNoRowsOverlay() ||
                this.overlayWrapper.showNoRowsOverlay();
            }),
            (o.prototype.hideOverlay = function () {
              this.overlayWrapper.hideOverlay();
            }),
            (o.prototype.sizeColumnsToFit = function (t) {
              var e = this,
                o = 0;
              this.isVerticalScrollShowing() &&
                (o = this.gridOptionsWrapper.getScrollbarWidth());
              var n = $e(this.eBodyViewport) - o;
              n > 0
                ? this.columnController.sizeColumnsToFit(n, "sizeColumnsToFit")
                : void 0 === t
                ? window.setTimeout(function () {
                    e.sizeColumnsToFit(100);
                  }, 0)
                : 100 === t
                ? window.setTimeout(function () {
                    e.sizeColumnsToFit(500);
                  }, 100)
                : 500 === t
                ? window.setTimeout(function () {
                    e.sizeColumnsToFit(-1);
                  }, 500)
                : console.warn(
                    "AG Grid: tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?"
                  );
            }),
            (o.prototype.getCenterContainer = function () {
              return this.eCenterContainer;
            }),
            (o.prototype.getDropTargetBodyContainers = function () {
              return [
                this.eBodyViewport,
                this.eTopViewport,
                this.eBottomViewport,
              ];
            }),
            (o.prototype.getDropTargetLeftContainers = function () {
              return [this.eLeftContainer, this.eLeftBottom, this.eLeftTop];
            }),
            (o.prototype.getDropTargetRightContainers = function () {
              return [this.eRightContainer, this.eRightBottom, this.eRightTop];
            }),
            (o.prototype.buildRowContainerComponents = function () {
              var t = this;
              (this.eAllCellContainers = [
                this.eLeftContainer,
                this.eRightContainer,
                this.eCenterContainer,
                this.eTop,
                this.eBottom,
                this.eFullWidthContainer,
              ]),
                (this.rowContainerComponents = {
                  body: new ol({
                    eContainer: this.eCenterContainer,
                    eWrapper: this.eCenterColsClipper,
                    eViewport: this.eBodyViewport,
                  }),
                  fullWidth: new ol({ eContainer: this.eFullWidthContainer }),
                  pinnedLeft: new ol({ eContainer: this.eLeftContainer }),
                  pinnedRight: new ol({ eContainer: this.eRightContainer }),
                  floatingTop: new ol({ eContainer: this.eTopContainer }),
                  floatingTopPinnedLeft: new ol({ eContainer: this.eLeftTop }),
                  floatingTopPinnedRight: new ol({
                    eContainer: this.eRightTop,
                  }),
                  floatingTopFullWidth: new ol({
                    eContainer: this.eTopFullWidthContainer,
                    hideWhenNoChildren: !0,
                  }),
                  floatingBottom: new ol({ eContainer: this.eBottomContainer }),
                  floatingBottomPinnedLeft: new ol({
                    eContainer: this.eLeftBottom,
                  }),
                  floatingBottomPinnedRight: new ol({
                    eContainer: this.eRightBottom,
                  }),
                  floatingBottomFullWidth: new ol({
                    eContainer: this.eBottomFullWidthContainer,
                    hideWhenNoChildren: !0,
                  }),
                }),
                F(this.rowContainerComponents, function (e, o) {
                  o && t.getContext().createBean(o);
                });
            }),
            (o.prototype.setupRowAnimationCssClass = function () {
              var t = this,
                e = function () {
                  var e =
                    t.gridOptionsWrapper.isAnimateRows() &&
                    !t.heightScaler.isScaling();
                  je(t.eBodyViewport, "ag-row-animation", e),
                    je(t.eBodyViewport, "ag-row-no-animation", !e);
                };
              e(),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_HEIGHT_SCALE_CHANGED,
                  e
                );
            }),
            (o.prototype.suppressScrollOnFloatingRow = function () {
              var t = this;
              this.addManagedListener(this.eTopViewport, "scroll", function () {
                return (t.eTopViewport.scrollLeft = 0);
              }),
                this.addManagedListener(
                  this.eBottomViewport,
                  "scroll",
                  function () {
                    return (t.eTopViewport.scrollLeft = 0);
                  }
                );
            }),
            (o.prototype.getRowContainers = function () {
              return this.rowContainerComponents;
            }),
            (o.prototype.getFloatingTopBottom = function () {
              return [this.eTop, this.eBottom];
            }),
            (o.prototype.onDisplayedColumnsChanged = function () {
              this.setPinnedContainerSize(),
                this.setHeaderAndFloatingHeights(),
                this.onHorizontalViewportChanged(),
                this.updateScrollVisibleService(),
                this.updateColumnCount();
            }),
            (o.prototype.onDisplayedColumnsWidthChanged = function () {
              this.setWidthsOfContainers(),
                this.onHorizontalViewportChanged(),
                this.updateScrollVisibleService(),
                this.enableRtl &&
                  this.horizontallyScrollHeaderCenterAndFloatingCenter();
            }),
            (o.prototype.setWidthsOfContainers = function () {
              this.setCenterWidth(), this.setPinnedContainerSize();
            }),
            (o.prototype.setCenterWidth = function () {
              var t = this.headerRootComp,
                e = this.columnController,
                o = e.getBodyContainerWidth();
              this.printLayout &&
                (o +=
                  e.getDisplayedColumnsLeftWidth() +
                  e.getDisplayedColumnsRightWidth()),
                t.setHeaderContainerWidth(o);
              var n = o + "px";
              (this.eCenterContainer.style.width = n),
                (this.eBottomContainer.style.width = n),
                (this.eTopContainer.style.width = n),
                this.printLayout ||
                  (this.eBodyHorizontalScrollContainer.style.width = n);
            }),
            (o.prototype.setPinnedLeftWidth = function () {
              var t = this,
                e = this.pinningLeft,
                o = this.columnController.getDisplayedColumnsLeftWidth(),
                n = (this.pinningLeft = !this.printLayout && o > 0),
                r = [this.eLeftContainer, this.eLeftTop, this.eLeftBottom];
              e !== n && this.headerRootComp.setLeftVisible(n),
                r.forEach(function (e) {
                  return Ke(e, t.pinningLeft);
                }),
                n &&
                  r.forEach(function (t) {
                    return Co(t, o);
                  });
            }),
            (o.prototype.setPinnedRightWidth = function () {
              var t = this.pinningRight,
                e = this.columnController.getDisplayedColumnsRightWidth(),
                o = (this.pinningRight = !this.printLayout && e > 0),
                n = [this.eRightContainer, this.eRightTop, this.eRightBottom];
              t !== o && this.headerRootComp.setRightVisible(o),
                n.forEach(function (t) {
                  return Ke(t, o);
                }),
                o &&
                  n.forEach(function (t) {
                    return Co(t, e);
                  });
            }),
            (o.prototype.setPinnedContainerSize = function () {
              this.setPinnedLeftWidth(),
                this.setPinnedRightWidth(),
                this.setFakeHScrollSpacerWidths();
            }),
            (o.prototype.setFakeHScrollSpacerWidths = function () {
              var t = this.columnController.getDisplayedColumnsRightWidth(),
                e = !this.enableRtl && this.isVerticalScrollShowing(),
                o = this.gridOptionsWrapper.getScrollbarWidth();
              e && (t += o),
                Co(this.eHorizontalRightSpacer, t),
                je(this.eHorizontalRightSpacer, "ag-scroller-corner", t <= o);
              var n = this.columnController.getDisplayedColumnsLeftWidth();
              this.enableRtl && this.isVerticalScrollShowing() && (n += o),
                Co(this.eHorizontalLeftSpacer, n),
                je(this.eHorizontalLeftSpacer, "ag-scroller-corner", n <= o);
            }),
            (o.prototype.checkBodyHeight = function () {
              var t = Ze(this.eBodyViewport);
              this.bodyHeight !== t &&
                ((this.bodyHeight = t),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_BODY_HEIGHT_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                }));
            }),
            (o.prototype.setHeaderAndFloatingHeights = function () {
              var t,
                e,
                o,
                n = this,
                r = n.columnController,
                i = n.gridOptionsWrapper,
                s = n.pinnedRowModel,
                a = n.eTop,
                l = n.eBottom,
                u = 0,
                p = r.getHeaderRowCount();
              r.isPivotMode()
                ? ((e = i.getPivotGroupHeaderHeight()),
                  (o = i.getPivotHeaderHeight()))
                : (r.hasFloatingFilters() && (p++, (u = 1)),
                  (e = i.getGroupHeaderHeight()),
                  (o = i.getHeaderHeight()));
              var c = p - (1 + u);
              (t = u * i.getFloatingFiltersHeight()),
                (t += c * e),
                this.headerRootComp.setHeight((t += o));
              var d = s.getPinnedTopTotalHeight();
              d && (d += 1);
              var h = s.getPinnedBottomTotalHeight();
              h && (h += 1);
              var f = d + "px",
                g = h + "px";
              (a.style.minHeight = f),
                (a.style.height = f),
                (a.style.display = d ? "inherit" : "none"),
                (l.style.minHeight = g),
                (l.style.height = g),
                (l.style.display = h ? "inherit" : "none"),
                this.checkBodyHeight();
            }),
            (o.prototype.getBodyHeight = function () {
              return this.bodyHeight;
            }),
            (o.prototype.setHorizontalScrollPosition = function (t) {
              var e = this.eCenterViewport.scrollWidth - this.getCenterWidth();
              this.shouldBlockScrollUpdate("horizontal", t) &&
                (t = Math.min(Math.max(t, 0), e)),
                (this.eCenterViewport.scrollLeft = t),
                this.doHorizontalScroll(t);
            }),
            (o.prototype.setVerticalScrollPosition = function (t) {
              this.eBodyViewport.scrollTop = t;
            }),
            (o.prototype.scrollHorizontally = function (t) {
              var e = this.eCenterViewport.scrollLeft;
              return (
                this.setHorizontalScrollPosition(e + t),
                this.eCenterViewport.scrollLeft - e
              );
            }),
            (o.prototype.scrollVertically = function (t) {
              var e = this.eBodyViewport.scrollTop;
              return (
                this.setVerticalScrollPosition(e + t),
                this.eBodyViewport.scrollTop - e
              );
            }),
            (o.prototype.addScrollListener = function () {
              this.addManagedListener(
                this.eCenterViewport,
                "scroll",
                this.onCenterViewportScroll.bind(this)
              ),
                this.addManagedListener(
                  this.eBodyHorizontalScrollViewport,
                  "scroll",
                  this.onFakeHorizontalScroll.bind(this)
                );
              var t = this.gridOptionsWrapper.isDebounceVerticalScrollbar()
                ? et(this.onVerticalScroll.bind(this), 100)
                : this.onVerticalScroll.bind(this);
              this.addManagedListener(this.eBodyViewport, "scroll", t);
            }),
            (o.prototype.onVerticalScroll = function () {
              var t = this.eBodyViewport.scrollTop;
              this.shouldBlockScrollUpdate("vertical", t, !0) ||
                (this.animationFrameService.setScrollTop(t),
                (this.nextScrollTop = t),
                this.gridOptionsWrapper.isSuppressAnimationFrame()
                  ? ((this.scrollTop = this.nextScrollTop),
                    this.redrawRowsAfterScroll())
                  : this.animationFrameService.schedule());
            }),
            (o.prototype.executeAnimationFrameScroll = function () {
              var t = this.scrollTop != this.nextScrollTop;
              return (
                t &&
                  ((this.scrollTop = this.nextScrollTop),
                  this.redrawRowsAfterScroll()),
                t
              );
            }),
            (o.prototype.shouldBlockScrollUpdate = function (t, e, o) {
              if ((void 0 === o && (o = !1), o && !Ne())) return !1;
              if ("vertical" === t) {
                var n = Ze(this.eBodyViewport);
                if (e < 0 || e + n > this.eBodyViewport.scrollHeight) return !0;
              }
              if ("horizontal" === t) {
                var r = this.getCenterWidth(),
                  i = this.eCenterViewport.scrollWidth;
                if (this.enableRtl && eo()) {
                  if (e > 0) return !0;
                } else if (e < 0) return !0;
                if (Math.abs(e) + r > i) return !0;
              }
              return !1;
            }),
            (o.prototype.isControllingScroll = function (t) {
              return this.lastHorizontalScrollElement
                ? t === this.lastHorizontalScrollElement
                : ((this.lastHorizontalScrollElement = t), !0);
            }),
            (o.prototype.onFakeHorizontalScroll = function () {
              this.isControllingScroll(this.eBodyHorizontalScrollViewport) &&
                this.onBodyHorizontalScroll(this.eBodyHorizontalScrollViewport);
            }),
            (o.prototype.onCenterViewportScroll = function () {
              this.isControllingScroll(this.eCenterViewport) &&
                this.onBodyHorizontalScroll(this.eCenterViewport);
            }),
            (o.prototype.onBodyHorizontalScroll = function (t) {
              this.shouldBlockScrollUpdate(
                "horizontal",
                this.eCenterViewport.scrollLeft,
                !0
              ) ||
                (this.doHorizontalScroll(Math.floor(oo(t, this.enableRtl))),
                this.resetLastHorizontalScrollElementDebounced());
            }),
            (o.prototype.resetLastHorizontalScrollElement = function () {
              this.lastHorizontalScrollElement = null;
            }),
            (o.prototype.doHorizontalScroll = function (t) {
              (this.scrollLeft = t),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_BODY_SCROLL,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  direction: "horizontal",
                  left: this.scrollLeft,
                  top: this.scrollTop,
                }),
                this.horizontallyScrollHeaderCenterAndFloatingCenter(t),
                this.onHorizontalViewportChanged();
            }),
            (o.prototype.redrawRowsAfterScroll = function () {
              this.eventService.dispatchEvent({
                type: zt.EVENT_BODY_SCROLL,
                direction: "vertical",
                api: this.gridApi,
                columnApi: this.columnApi,
                left: this.scrollLeft,
                top: this.scrollTop,
              });
            }),
            (o.prototype.onHorizontalViewportChanged = function () {
              var t = this.getCenterWidth(),
                e = this.getCenterViewportScrollLeft();
              this.columnController.setViewportPosition(t, e);
            }),
            (o.prototype.getCenterViewportScrollLeft = function () {
              return oo(this.eCenterViewport, this.enableRtl);
            }),
            (o.prototype.setCenterViewportScrollLeft = function (t) {
              no(this.eCenterViewport, t, this.enableRtl);
            }),
            (o.prototype.horizontallyScrollHeaderCenterAndFloatingCenter =
              function (t) {
                void 0 === t && (t = this.getCenterViewportScrollLeft());
                var e = this.enableRtl ? t : -t;
                this.headerRootComp.setHorizontalScroll(e),
                  (this.eBottomContainer.style.transform =
                    "translateX(" + e + "px)"),
                  (this.eTopContainer.style.transform =
                    "translateX(" + e + "px)"),
                  no(
                    this.lastHorizontalScrollElement === this.eCenterViewport
                      ? this.eBodyHorizontalScrollViewport
                      : this.eCenterViewport,
                    t,
                    this.enableRtl
                  );
              }),
            (o.prototype.addScrollEventListener = function (t) {
              this.eBodyViewport.addEventListener("scroll", t);
            }),
            (o.prototype.removeScrollEventListener = function (t) {
              this.eBodyViewport.removeEventListener("scroll", t);
            }),
            ul(
              [ut("alignedGridsService")],
              o.prototype,
              "alignedGridsService",
              void 0
            ),
            ul([ut("rowRenderer")], o.prototype, "rowRenderer", void 0),
            ul([ut("pinnedRowModel")], o.prototype, "pinnedRowModel", void 0),
            ul(
              [ut("animationFrameService")],
              o.prototype,
              "animationFrameService",
              void 0
            ),
            ul(
              [ut("navigationService")],
              o.prototype,
              "navigationService",
              void 0
            ),
            ul(
              [ut("autoHeightCalculator")],
              o.prototype,
              "autoHeightCalculator",
              void 0
            ),
            ul(
              [ut("columnAnimationService")],
              o.prototype,
              "columnAnimationService",
              void 0
            ),
            ul(
              [ut("autoWidthCalculator")],
              o.prototype,
              "autoWidthCalculator",
              void 0
            ),
            ul(
              [ut("paginationAutoPageSizeService")],
              o.prototype,
              "paginationAutoPageSizeService",
              void 0
            ),
            ul([ut("beans")], o.prototype, "beans", void 0),
            ul([ut("paginationProxy")], o.prototype, "paginationProxy", void 0),
            ul([ut("columnApi")], o.prototype, "columnApi", void 0),
            ul([ut("gridApi")], o.prototype, "gridApi", void 0),
            ul([ut("dragService")], o.prototype, "dragService", void 0),
            ul(
              [ut("mouseEventService")],
              o.prototype,
              "mouseEventService",
              void 0
            ),
            ul([ut("$scope")], o.prototype, "$scope", void 0),
            ul(
              [ut("scrollVisibleService")],
              o.prototype,
              "scrollVisibleService",
              void 0
            ),
            ul([ut("valueService")], o.prototype, "valueService", void 0),
            ul(
              [ut("dragAndDropService")],
              o.prototype,
              "dragAndDropService",
              void 0
            ),
            ul([ut("maxDivHeightScaler")], o.prototype, "heightScaler", void 0),
            ul(
              [ut("resizeObserverService")],
              o.prototype,
              "resizeObserverService",
              void 0
            ),
            ul([ut("undoRedoService")], o.prototype, "undoRedoService", void 0),
            ul(
              [ut("columnController")],
              o.prototype,
              "columnController",
              void 0
            ),
            ul(
              [ut("headerNavigationService")],
              o.prototype,
              "headerNavigationService",
              void 0
            ),
            ul([ut("popupService")], o.prototype, "popupService", void 0),
            ul([pt("rangeController")], o.prototype, "rangeController", void 0),
            ul(
              [pt("contextMenuFactory")],
              o.prototype,
              "contextMenuFactory",
              void 0
            ),
            ul([pt("menuFactory")], o.prototype, "menuFactory", void 0),
            ul(
              [pt("clipboardService")],
              o.prototype,
              "clipboardService",
              void 0
            ),
            ul([Kn("eBodyViewport")], o.prototype, "eBodyViewport", void 0),
            ul(
              [Kn("eCenterContainer")],
              o.prototype,
              "eCenterContainer",
              void 0
            ),
            ul([Kn("eCenterViewport")], o.prototype, "eCenterViewport", void 0),
            ul([Kn("eLeftContainer")], o.prototype, "eLeftContainer", void 0),
            ul([Kn("eRightContainer")], o.prototype, "eRightContainer", void 0),
            ul(
              [Kn("eCenterColsClipper")],
              o.prototype,
              "eCenterColsClipper",
              void 0
            ),
            ul(
              [Kn("eHorizontalScrollBody")],
              o.prototype,
              "eHorizontalScrollBody",
              void 0
            ),
            ul(
              [Kn("eHorizontalLeftSpacer")],
              o.prototype,
              "eHorizontalLeftSpacer",
              void 0
            ),
            ul(
              [Kn("eHorizontalRightSpacer")],
              o.prototype,
              "eHorizontalRightSpacer",
              void 0
            ),
            ul(
              [Kn("eBodyHorizontalScrollViewport")],
              o.prototype,
              "eBodyHorizontalScrollViewport",
              void 0
            ),
            ul(
              [Kn("eBodyHorizontalScrollContainer")],
              o.prototype,
              "eBodyHorizontalScrollContainer",
              void 0
            ),
            ul(
              [Kn("eFullWidthContainer")],
              o.prototype,
              "eFullWidthContainer",
              void 0
            ),
            ul([Kn("eTop")], o.prototype, "eTop", void 0),
            ul([Kn("eLeftTop")], o.prototype, "eLeftTop", void 0),
            ul([Kn("eRightTop")], o.prototype, "eRightTop", void 0),
            ul([Kn("eTopContainer")], o.prototype, "eTopContainer", void 0),
            ul([Kn("eTopViewport")], o.prototype, "eTopViewport", void 0),
            ul(
              [Kn("eTopFullWidthContainer")],
              o.prototype,
              "eTopFullWidthContainer",
              void 0
            ),
            ul([Kn("eBottom")], o.prototype, "eBottom", void 0),
            ul([Kn("eLeftBottom")], o.prototype, "eLeftBottom", void 0),
            ul([Kn("eRightBottom")], o.prototype, "eRightBottom", void 0),
            ul(
              [Kn("eBottomContainer")],
              o.prototype,
              "eBottomContainer",
              void 0
            ),
            ul([Kn("eBottomViewport")], o.prototype, "eBottomViewport", void 0),
            ul(
              [Kn("eBottomFullWidthContainer")],
              o.prototype,
              "eBottomFullWidthContainer",
              void 0
            ),
            ul([Kn("headerRoot")], o.prototype, "headerRootComp", void 0),
            ul([Kn("overlayWrapper")], o.prototype, "overlayWrapper", void 0),
            ul([st], o.prototype, "init", null),
            o
          );
        })(jn);
      ((Ba =
        e.ClientSideRowModelSteps ||
        (e.ClientSideRowModelSteps = {})).EVERYTHING = "group"),
        (Ba.FILTER = "filter"),
        (Ba.SORT = "sort"),
        (Ba.MAP = "map"),
        (Ba.AGGREGATE = "aggregate"),
        (Ba.PIVOT = "pivot"),
        (Ba.NOTHING = "nothing");
      var cl,
        dl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        hl = (function () {
          function t() {
            (this.detailGridInfoMap = {}), (this.destroyCalled = !1);
          }
          return (
            (t.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (t.prototype.registerGridCore = function (t) {
              this.gridCore = t;
            }),
            (t.prototype.registerHeaderRootComp = function (t) {
              this.headerRootComp = t;
            }),
            (t.prototype.init = function () {
              switch (this.rowModel.getType()) {
                case vt.ROW_MODEL_TYPE_CLIENT_SIDE:
                  this.clientSideRowModel = this.rowModel;
                  break;
                case vt.ROW_MODEL_TYPE_INFINITE:
                  this.infiniteRowModel = this.rowModel;
                  break;
                case vt.ROW_MODEL_TYPE_SERVER_SIDE:
                  this.serverSideRowModel = this.rowModel;
              }
            }),
            (t.prototype.__getAlignedGridService = function () {
              return this.alignedGridsService;
            }),
            (t.prototype.addDetailGridInfo = function (t, e) {
              this.detailGridInfoMap[t] = e;
            }),
            (t.prototype.removeDetailGridInfo = function (t) {
              this.detailGridInfoMap[t] = void 0;
            }),
            (t.prototype.getDetailGridInfo = function (t) {
              return this.detailGridInfoMap[t];
            }),
            (t.prototype.forEachDetailGridInfo = function (t) {
              var e = 0;
              F(this.detailGridInfoMap, function (o, n) {
                r(n) && (t(n, e), e++);
              });
            }),
            (t.prototype.getDataAsCsv = function (t) {
              if (
                Ct.assertRegistered(
                  e.ModuleNames.CsvExportModule,
                  "api.getDataAsCsv"
                )
              )
                return this.csvCreator.getDataAsCsv(t);
            }),
            (t.prototype.exportDataAsCsv = function (t) {
              Ct.assertRegistered(
                e.ModuleNames.CsvExportModule,
                "api.exportDataAsCSv"
              ) && this.csvCreator.exportDataAsCsv(t);
            }),
            (t.prototype.getDataAsExcel = function (t) {
              if (
                Ct.assertRegistered(
                  e.ModuleNames.ExcelExportModule,
                  "api.getDataAsExcel"
                )
              )
                return this.excelCreator.getDataAsExcel(t);
            }),
            (t.prototype.exportDataAsExcel = function (t) {
              Ct.assertRegistered(
                e.ModuleNames.ExcelExportModule,
                "api.exportDataAsExcel"
              ) && this.excelCreator.exportDataAsExcel(t);
            }),
            (t.prototype.setEnterpriseDatasource = function (t) {
              console.warn(
                "ag-grid: since version 18.x, api.setEnterpriseDatasource() should be replaced with api.setServerSideDatasource()"
              ),
                this.setServerSideDatasource(t);
            }),
            (t.prototype.setGridAriaProperty = function (t, e) {
              if (t) {
                var o = this.gridPanel.getGui(),
                  n = "aria-" + t;
                null === e ? o.removeAttribute(n) : o.setAttribute(n, e);
              }
            }),
            (t.prototype.setServerSideDatasource = function (t) {
              this.serverSideRowModel
                ? this.serverSideRowModel.setDatasource(t)
                : console.warn(
                    "AG Grid: you can only use an enterprise datasource when gridOptions.rowModelType is '" +
                      vt.ROW_MODEL_TYPE_SERVER_SIDE +
                      "'"
                  );
            }),
            (t.prototype.setDatasource = function (t) {
              this.gridOptionsWrapper.isRowModelInfinite()
                ? this.rowModel.setDatasource(t)
                : console.warn(
                    "AG Grid: you can only use a datasource when gridOptions.rowModelType is '" +
                      vt.ROW_MODEL_TYPE_INFINITE +
                      "'"
                  );
            }),
            (t.prototype.setViewportDatasource = function (t) {
              this.gridOptionsWrapper.isRowModelViewport()
                ? this.rowModel.setViewportDatasource(t)
                : console.warn(
                    "AG Grid: you can only use a viewport datasource when gridOptions.rowModelType is '" +
                      vt.ROW_MODEL_TYPE_VIEWPORT +
                      "'"
                  );
            }),
            (t.prototype.setRowData = function (t) {
              if (this.gridOptionsWrapper.isRowModelDefault())
                if (this.gridOptionsWrapper.isImmutableData()) {
                  var e = this.immutableService.createTransactionForRowData(t);
                  if (!e) return;
                  var o = this.clientSideRowModel.updateRowData(e[0], e[1]);
                  o && this.rowRenderer.refreshFullWidthRows(o.update);
                } else
                  this.selectionController.reset(),
                    this.clientSideRowModel.setRowData(t);
              else
                console.warn(
                  "cannot call setRowData unless using normal row model"
                );
            }),
            (t.prototype.setFloatingTopRowData = function (t) {
              console.warn(
                "AG Grid: since v12, api.setFloatingTopRowData() is now api.setPinnedTopRowData()"
              ),
                this.setPinnedTopRowData(t);
            }),
            (t.prototype.setFloatingBottomRowData = function (t) {
              console.warn(
                "AG Grid: since v12, api.setFloatingBottomRowData() is now api.setPinnedBottomRowData()"
              ),
                this.setPinnedBottomRowData(t);
            }),
            (t.prototype.getFloatingTopRowCount = function () {
              return (
                console.warn(
                  "AG Grid: since v12, api.getFloatingTopRowCount() is now api.getPinnedTopRowCount()"
                ),
                this.getPinnedTopRowCount()
              );
            }),
            (t.prototype.getFloatingBottomRowCount = function () {
              return (
                console.warn(
                  "AG Grid: since v12, api.getFloatingBottomRowCount() is now api.getPinnedBottomRowCount()"
                ),
                this.getPinnedBottomRowCount()
              );
            }),
            (t.prototype.getFloatingTopRow = function (t) {
              return (
                console.warn(
                  "AG Grid: since v12, api.getFloatingTopRow() is now api.getPinnedTopRow()"
                ),
                this.getPinnedTopRow(t)
              );
            }),
            (t.prototype.getFloatingBottomRow = function (t) {
              return (
                console.warn(
                  "AG Grid: since v12, api.getFloatingBottomRow() is now api.getPinnedBottomRow()"
                ),
                this.getPinnedBottomRow(t)
              );
            }),
            (t.prototype.setPinnedTopRowData = function (t) {
              this.pinnedRowModel.setPinnedTopRowData(t);
            }),
            (t.prototype.setPinnedBottomRowData = function (t) {
              this.pinnedRowModel.setPinnedBottomRowData(t);
            }),
            (t.prototype.getPinnedTopRowCount = function () {
              return this.pinnedRowModel.getPinnedTopRowCount();
            }),
            (t.prototype.getPinnedBottomRowCount = function () {
              return this.pinnedRowModel.getPinnedBottomRowCount();
            }),
            (t.prototype.getPinnedTopRow = function (t) {
              return this.pinnedRowModel.getPinnedTopRow(t);
            }),
            (t.prototype.getPinnedBottomRow = function (t) {
              return this.pinnedRowModel.getPinnedBottomRow(t);
            }),
            (t.prototype.setColumnDefs = function (t, e) {
              void 0 === e && (e = "api"),
                this.columnController.setColumnDefs(t, e);
            }),
            (t.prototype.setAutoGroupColumnDef = function (t, e) {
              this.gridOptionsWrapper.setProperty("autoGroupColumnDef", t, !0);
            }),
            (t.prototype.expireValueCache = function () {
              this.valueCache.expire();
            }),
            (t.prototype.getVerticalPixelRange = function () {
              return this.gridPanel.getVScrollPosition();
            }),
            (t.prototype.getHorizontalPixelRange = function () {
              return this.gridPanel.getHScrollPosition();
            }),
            (t.prototype.setAlwaysShowHorizontalScroll = function (t) {
              this.gridOptionsWrapper.setProperty(
                "alwaysShowHorizontalScroll",
                t
              );
            }),
            (t.prototype.setAlwaysShowVerticalScroll = function (t) {
              this.gridOptionsWrapper.setProperty(
                "alwaysShowVerticalScroll",
                t
              );
            }),
            (t.prototype.refreshToolPanel = function () {
              this.gridCore.refreshSideBar();
            }),
            (t.prototype.refreshCells = function (t) {
              void 0 === t && (t = {}),
                Array.isArray(t)
                  ? console.warn(
                      "since AG Grid v11.1, refreshCells() now takes parameters, please see the documentation."
                    )
                  : this.rowRenderer.refreshCells(t);
            }),
            (t.prototype.flashCells = function (t) {
              void 0 === t && (t = {}), this.rowRenderer.flashCells(t);
            }),
            (t.prototype.redrawRows = function (t) {
              void 0 === t && (t = {}),
                t && t.rowNodes
                  ? this.rowRenderer.redrawRows(t.rowNodes)
                  : this.rowRenderer.redrawAfterModelUpdate();
            }),
            (t.prototype.timeFullRedraw = function (t) {
              void 0 === t && (t = 1);
              var e = 0,
                o = 0,
                n = 0,
                r = this;
              !(function i() {
                var s = new Date().getTime();
                r.rowRenderer.redrawAfterModelUpdate();
                var a = new Date().getTime();
                window.setTimeout(function () {
                  var r = new Date().getTime(),
                    l = a - s,
                    u = r - a;
                  console.log(
                    "duration:  processing = " + l + "ms, reflow = " + u + "ms"
                  ),
                    e++,
                    (o += l),
                    (n += u),
                    e < t
                      ? window.setTimeout(i, 1e3)
                      : (console.log("tests complete. iteration count = " + e),
                        console.log("average processing = " + o / e + "ms"),
                        console.log("average reflow = " + n / e + "ms"));
                }, 0);
              })();
            }),
            (t.prototype.refreshView = function () {
              console.warn(
                "AG Grid: since v11.1, refreshView() is deprecated, please call refreshCells() or redrawRows() instead"
              ),
                this.redrawRows();
            }),
            (t.prototype.refreshRows = function (t) {
              console.warn(
                "since AG Grid v11.1, refreshRows() is deprecated, please use refreshCells({rowNodes: rows}) or redrawRows({rowNodes: rows}) instead"
              ),
                this.refreshCells({ rowNodes: t });
            }),
            (t.prototype.rowDataChanged = function (t) {
              console.warn(
                "AG Grid: rowDataChanged is deprecated, either call refreshView() to refresh everything, or call rowNode.setRowData(newData) to set value on a particular node"
              ),
                this.redrawRows();
            }),
            (t.prototype.softRefreshView = function () {
              console.error(
                "AG Grid: since v16, softRefreshView() is no longer supported. Please check the documentation on how to refresh."
              );
            }),
            (t.prototype.refreshGroupRows = function () {
              console.warn(
                "AG Grid: since v11.1, refreshGroupRows() is no longer supported, call refreshCells() instead. Because refreshCells() now does dirty checking, it will only refresh cells that have changed, so it should not be necessary to only refresh the group rows."
              ),
                this.refreshCells();
            }),
            (t.prototype.setFunctionsReadOnly = function (t) {
              this.gridOptionsWrapper.setProperty("functionsReadOnly", t);
            }),
            (t.prototype.refreshHeader = function () {
              this.headerRootComp.refreshHeader(),
                this.gridPanel.setHeaderAndFloatingHeights();
            }),
            (t.prototype.isAnyFilterPresent = function () {
              return this.filterManager.isAnyFilterPresent();
            }),
            (t.prototype.isAdvancedFilterPresent = function () {
              return (
                console.warn(
                  "AG Grid: isAdvancedFilterPresent() is deprecated, please use isColumnFilterPresent()"
                ),
                this.isColumnFilterPresent()
              );
            }),
            (t.prototype.isColumnFilterPresent = function () {
              return this.filterManager.isAdvancedFilterPresent();
            }),
            (t.prototype.isQuickFilterPresent = function () {
              return this.filterManager.isQuickFilterPresent();
            }),
            (t.prototype.getModel = function () {
              return this.rowModel;
            }),
            (t.prototype.setRowNodeExpanded = function (t, e) {
              t && t.setExpanded(e);
            }),
            (t.prototype.onGroupExpandedOrCollapsed = function (t) {
              i(this.clientSideRowModel) &&
                console.warn(
                  "AG Grid: cannot call onGroupExpandedOrCollapsed unless using normal row model"
                ),
                r(t) &&
                  console.warn(
                    "AG Grid: api.onGroupExpandedOrCollapsed - refreshFromIndex parameter is no longer used, the grid will refresh all rows"
                  ),
                this.clientSideRowModel.refreshModel({
                  step: e.ClientSideRowModelSteps.MAP,
                });
            }),
            (t.prototype.refreshInMemoryRowModel = function (t) {
              console.warn(
                "ag-grid: since version 18.x, api.refreshInMemoryRowModel() should be replaced with api.refreshClientSideRowModel()"
              ),
                this.refreshClientSideRowModel(t);
            }),
            (t.prototype.refreshClientSideRowModel = function (t) {
              i(this.clientSideRowModel) &&
                console.warn(
                  "cannot call refreshClientSideRowModel unless using normal row model"
                );
              var o = e.ClientSideRowModelSteps.EVERYTHING,
                n = {
                  group: e.ClientSideRowModelSteps.EVERYTHING,
                  filter: e.ClientSideRowModelSteps.FILTER,
                  map: e.ClientSideRowModelSteps.MAP,
                  aggregate: e.ClientSideRowModelSteps.AGGREGATE,
                  sort: e.ClientSideRowModelSteps.SORT,
                  pivot: e.ClientSideRowModelSteps.PIVOT,
                };
              r(t) && (o = n[t]),
                i(o)
                  ? console.error(
                      "AG Grid: invalid step " +
                        t +
                        ", available steps are " +
                        Object.keys(n).join(", ")
                    )
                  : this.clientSideRowModel.refreshModel({
                      step: o,
                      keepRenderedRows: !0,
                      animate: !0,
                      keepEditingRows: !0,
                    });
            }),
            (t.prototype.isAnimationFrameQueueEmpty = function () {
              return this.animationFrameService.isQueueEmpty();
            }),
            (t.prototype.getRowNode = function (t) {
              return this.rowModel.getRowNode(t);
            }),
            (t.prototype.getSizesForCurrentTheme = function () {
              return {
                rowHeight: this.gridOptionsWrapper.getRowHeightAsNumber(),
                headerHeight: this.gridOptionsWrapper.getHeaderHeight(),
              };
            }),
            (t.prototype.expandAll = function () {
              this.clientSideRowModel
                ? this.clientSideRowModel.expandOrCollapseAll(!0)
                : this.serverSideRowModel
                ? this.serverSideRowModel.expandAll(!0)
                : console.warn(
                    "AG Grid: expandAll only works with Client Side Row Model and Server Side Row Model"
                  );
            }),
            (t.prototype.collapseAll = function () {
              this.clientSideRowModel
                ? this.clientSideRowModel.expandOrCollapseAll(!1)
                : this.serverSideRowModel
                ? this.serverSideRowModel.expandAll(!1)
                : console.warn(
                    "AG Grid: collapseAll only works with Client Side Row Model and Server Side Row Model"
                  );
            }),
            (t.prototype.getToolPanelInstance = function (t) {
              return this.gridCore.getToolPanelInstance(t);
            }),
            (t.prototype.addVirtualRowListener = function (t, e, o) {
              "string" != typeof t &&
                console.warn(
                  "AG Grid: addVirtualRowListener is deprecated, please use addRenderedRowListener."
                ),
                this.addRenderedRowListener(t, e, o);
            }),
            (t.prototype.addRenderedRowListener = function (t, e, o) {
              "virtualRowSelected" === t &&
                console.warn(
                  "AG Grid: event virtualRowSelected is deprecated, to register for individual row\n                selection events, add a listener directly to the row node."
                ),
                this.rowRenderer.addRenderedRowListener(t, e, o);
            }),
            (t.prototype.setQuickFilter = function (t) {
              this.filterManager.setQuickFilter(t);
            }),
            (t.prototype.selectIndex = function (t, e, o) {
              console.warn(
                "AG Grid: do not use api for selection, call node.setSelected(value) instead"
              ),
                o &&
                  console.warn(
                    "AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"
                  ),
                this.selectionController.selectIndex(t, e);
            }),
            (t.prototype.deselectIndex = function (t, e) {
              void 0 === e && (e = !1),
                console.warn(
                  "AG Grid: do not use api for selection, call node.setSelected(value) instead"
                ),
                e &&
                  console.warn(
                    "AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"
                  ),
                this.selectionController.deselectIndex(t);
            }),
            (t.prototype.selectNode = function (t, e, o) {
              void 0 === e && (e = !1),
                void 0 === o && (o = !1),
                console.warn(
                  "AG Grid: API for selection is deprecated, call node.setSelected(value) instead"
                ),
                o &&
                  console.warn(
                    "AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"
                  ),
                t.setSelectedParams({ newValue: !0, clearSelection: !e });
            }),
            (t.prototype.deselectNode = function (t, e) {
              void 0 === e && (e = !1),
                console.warn(
                  "AG Grid: API for selection is deprecated, call node.setSelected(value) instead"
                ),
                e &&
                  console.warn(
                    "AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"
                  ),
                t.setSelectedParams({ newValue: !1 });
            }),
            (t.prototype.selectAll = function () {
              this.selectionController.selectAllRowNodes();
            }),
            (t.prototype.deselectAll = function () {
              this.selectionController.deselectAllRowNodes();
            }),
            (t.prototype.selectAllFiltered = function () {
              this.selectionController.selectAllRowNodes(!0);
            }),
            (t.prototype.deselectAllFiltered = function () {
              this.selectionController.deselectAllRowNodes(!0);
            }),
            (t.prototype.recomputeAggregates = function () {
              i(this.clientSideRowModel) &&
                console.warn(
                  "cannot call recomputeAggregates unless using normal row model"
                ),
                console.warn(
                  "recomputeAggregates is deprecated, please call api.refreshClientSideRowModel('aggregate') instead"
                ),
                this.clientSideRowModel.refreshModel({
                  step: e.ClientSideRowModelSteps.AGGREGATE,
                });
            }),
            (t.prototype.sizeColumnsToFit = function () {
              this.gridPanel.sizeColumnsToFit();
            }),
            (t.prototype.showLoadingOverlay = function () {
              this.gridPanel.showLoadingOverlay();
            }),
            (t.prototype.showNoRowsOverlay = function () {
              this.gridPanel.showNoRowsOverlay();
            }),
            (t.prototype.hideOverlay = function () {
              this.gridPanel.hideOverlay();
            }),
            (t.prototype.isNodeSelected = function (t) {
              return (
                console.warn(
                  "AG Grid: no need to call api.isNodeSelected(), just call node.isSelected() instead"
                ),
                t.isSelected()
              );
            }),
            (t.prototype.getSelectedNodesById = function () {
              return (
                console.error(
                  "AG Grid: since version 3.4, getSelectedNodesById no longer exists, use getSelectedNodes() instead"
                ),
                null
              );
            }),
            (t.prototype.getSelectedNodes = function () {
              return this.selectionController.getSelectedNodes();
            }),
            (t.prototype.getSelectedRows = function () {
              return this.selectionController.getSelectedRows();
            }),
            (t.prototype.getBestCostNodeSelection = function () {
              return this.selectionController.getBestCostNodeSelection();
            }),
            (t.prototype.getRenderedNodes = function () {
              return this.rowRenderer.getRenderedNodes();
            }),
            (t.prototype.ensureColIndexVisible = function (t) {
              console.warn(
                "AG Grid: ensureColIndexVisible(index) no longer supported, use ensureColumnVisible(colKey) instead."
              );
            }),
            (t.prototype.ensureColumnVisible = function (t) {
              this.gridPanel.ensureColumnVisible(t);
            }),
            (t.prototype.ensureIndexVisible = function (t, e) {
              this.gridPanel.ensureIndexVisible(t, e);
            }),
            (t.prototype.ensureNodeVisible = function (t, e) {
              this.gridCore.ensureNodeVisible(t, e);
            }),
            (t.prototype.forEachLeafNode = function (t) {
              i(this.clientSideRowModel) &&
                console.warn(
                  "cannot call forEachNode unless using normal row model"
                ),
                this.clientSideRowModel.forEachLeafNode(t);
            }),
            (t.prototype.forEachNode = function (t) {
              this.rowModel.forEachNode(t);
            }),
            (t.prototype.forEachNodeAfterFilter = function (t) {
              i(this.clientSideRowModel) &&
                console.warn(
                  "cannot call forEachNodeAfterFilter unless using normal row model"
                ),
                this.clientSideRowModel.forEachNodeAfterFilter(t);
            }),
            (t.prototype.forEachNodeAfterFilterAndSort = function (t) {
              i(this.clientSideRowModel) &&
                console.warn(
                  "cannot call forEachNodeAfterFilterAndSort unless using normal row model"
                ),
                this.clientSideRowModel.forEachNodeAfterFilterAndSort(t);
            }),
            (t.prototype.getFilterApiForColDef = function (t) {
              return (
                console.warn(
                  "ag-grid API method getFilterApiForColDef deprecated, use getFilterInstance instead"
                ),
                this.getFilterInstance(t)
              );
            }),
            (t.prototype.getFilterInstance = function (t, e) {
              var o = this.columnController.getPrimaryColumn(t);
              if (o) {
                var n = this.filterManager.getFilterComponent(o, "NO_UI"),
                  r =
                    n &&
                    n.resolveNow(null, function (t) {
                      return t;
                    });
                return e && (r ? setTimeout(e, 0, r) : n && n.then(e)), r;
              }
            }),
            (t.prototype.getFilterApi = function (t) {
              return (
                console.warn(
                  "AG Grid: getFilterApi is deprecated, use getFilterInstance instead"
                ),
                this.getFilterInstance(t)
              );
            }),
            (t.prototype.destroyFilter = function (t) {
              var e = this.columnController.getPrimaryColumn(t);
              if (e)
                return this.filterManager.destroyFilter(e, "filterDestroyed");
            }),
            (t.prototype.getStatusPanel = function (t) {
              if (this.statusBarService)
                return this.statusBarService.getStatusPanel(t);
            }),
            (t.prototype.getColumnDef = function (t) {
              var e = this.columnController.getPrimaryColumn(t);
              return e ? e.getColDef() : null;
            }),
            (t.prototype.getColumnDefs = function () {
              return this.columnController.getColumnDefs();
            }),
            (t.prototype.onFilterChanged = function () {
              this.filterManager.onFilterChanged();
            }),
            (t.prototype.onSortChanged = function () {
              this.sortController.onSortChanged();
            }),
            (t.prototype.setSortModel = function (t, e) {
              console.warn(
                "AG Grid: as of version 24.0.0, setSortModel() is deprecated, sort information is now part of Column State. Please use columnApi.applyColumnState() instead."
              );
              var o = [];
              t &&
                t.forEach(function (t, e) {
                  o.push({ colId: t.colId, sort: t.sort, sortIndex: e });
                }),
                this.columnController.applyColumnState({
                  state: o,
                  defaultState: { sort: null },
                });
            }),
            (t.prototype.getSortModel = function () {
              console.warn(
                "AG Grid: as of version 24.0.0, getSortModel() is deprecated, sort information is now part of Column State. Please use columnApi.getColumnState() instead."
              );
              var t = this.columnController
                  .getColumnState()
                  .filter(function (t) {
                    return null != t.sort;
                  }),
                e = {};
              t.forEach(function (t) {
                e[t.colId] = t.sortIndex;
              });
              var o = t.map(function (t) {
                return { colId: t.colId, sort: t.sort };
              });
              return (
                o.sort(function (t, o) {
                  return e[t.colId] - e[o.colId];
                }),
                o
              );
            }),
            (t.prototype.setFilterModel = function (t) {
              this.filterManager.setFilterModel(t);
            }),
            (t.prototype.getFilterModel = function () {
              return this.filterManager.getFilterModel();
            }),
            (t.prototype.getFocusedCell = function () {
              return this.focusController.getFocusedCell();
            }),
            (t.prototype.clearFocusedCell = function () {
              return this.focusController.clearFocusedCell();
            }),
            (t.prototype.setFocusedCell = function (t, e, o) {
              this.focusController.setFocusedCell(t, e, o, !0);
            }),
            (t.prototype.setSuppressRowDrag = function (t) {
              this.gridOptionsWrapper.setProperty(Zi.PROP_SUPPRESS_ROW_DRAG, t);
            }),
            (t.prototype.setSuppressMoveWhenRowDragging = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_SUPPRESS_MOVE_WHEN_ROW_DRAG,
                t
              );
            }),
            (t.prototype.setSuppressRowClickSelection = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_SUPPRESS_ROW_CLICK_SELECTION,
                t
              );
            }),
            (t.prototype.addRowDropZone = function (t) {
              this.gridPanel.getRowDragFeature().addRowDropZone(t);
            }),
            (t.prototype.removeRowDropZone = function (t) {
              var e = this.dragAndDropService.findExternalZone(t);
              e && this.dragAndDropService.removeDropTarget(e);
            }),
            (t.prototype.getRowDropZoneParams = function (t) {
              return this.gridPanel.getRowDragFeature().getRowDropZone(t);
            }),
            (t.prototype.setHeaderHeight = function (t) {
              this.gridOptionsWrapper.setProperty(Zi.PROP_HEADER_HEIGHT, t),
                this.doLayout();
            }),
            (t.prototype.setDomLayout = function (t) {
              this.gridOptionsWrapper.setProperty(Zi.PROP_DOM_LAYOUT, t);
            }),
            (t.prototype.setEnableCellTextSelection = function (t) {
              this.gridPanel.setCellTextSelection(t);
            }),
            (t.prototype.setFillHandleDirection = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_FILL_HANDLE_DIRECTION,
                t
              );
            }),
            (t.prototype.setGroupHeaderHeight = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_GROUP_HEADER_HEIGHT,
                t
              ),
                this.doLayout();
            }),
            (t.prototype.setFloatingFiltersHeight = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_FLOATING_FILTERS_HEIGHT,
                t
              ),
                this.doLayout();
            }),
            (t.prototype.setPivotGroupHeaderHeight = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_PIVOT_GROUP_HEADER_HEIGHT,
                t
              ),
                this.doLayout();
            }),
            (t.prototype.setPivotHeaderHeight = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_PIVOT_HEADER_HEIGHT,
                t
              ),
                this.doLayout();
            }),
            (t.prototype.isSideBarVisible = function () {
              return this.gridCore.isSideBarVisible();
            }),
            (t.prototype.setSideBarVisible = function (t) {
              this.gridCore.setSideBarVisible(t);
            }),
            (t.prototype.setSideBarPosition = function (t) {
              this.gridCore.setSideBarPosition(t);
            }),
            (t.prototype.openToolPanel = function (t) {
              this.gridCore.openToolPanel(t);
            }),
            (t.prototype.closeToolPanel = function () {
              this.gridCore.closeToolPanel();
            }),
            (t.prototype.getOpenedToolPanel = function () {
              return this.gridCore.getOpenedToolPanel();
            }),
            (t.prototype.getSideBar = function () {
              return this.gridCore.getSideBar();
            }),
            (t.prototype.setSideBar = function (t) {
              return this.gridCore.setSideBar(t);
            }),
            (t.prototype.setSuppressClipboardPaste = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_SUPPRESS_CLIPBOARD_PASTE,
                t
              );
            }),
            (t.prototype.isToolPanelShowing = function () {
              return this.gridCore.isToolPanelShowing();
            }),
            (t.prototype.doLayout = function () {
              this.gridPanel.checkViewportAndScrolls();
            }),
            (t.prototype.resetRowHeights = function () {
              r(this.clientSideRowModel) &&
                this.clientSideRowModel.resetRowHeights();
            }),
            (t.prototype.setGroupRemoveSingleChildren = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_GROUP_REMOVE_SINGLE_CHILDREN,
                t
              );
            }),
            (t.prototype.setGroupRemoveLowestSingleChildren = function (t) {
              this.gridOptionsWrapper.setProperty(
                Zi.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN,
                t
              );
            }),
            (t.prototype.onRowHeightChanged = function () {
              this.clientSideRowModel
                ? this.clientSideRowModel.onRowHeightChanged()
                : this.serverSideRowModel &&
                  this.serverSideRowModel.onRowHeightChanged();
            }),
            (t.prototype.getValue = function (t, e) {
              var o = this.columnController.getPrimaryColumn(t);
              return (
                i(o) && (o = this.columnController.getGridColumn(t)),
                i(o) ? null : this.valueService.getValue(o, e)
              );
            }),
            (t.prototype.addEventListener = function (t, e) {
              var o = this.gridOptionsWrapper.useAsyncEvents();
              this.eventService.addEventListener(t, e, o);
            }),
            (t.prototype.addGlobalListener = function (t) {
              var e = this.gridOptionsWrapper.useAsyncEvents();
              this.eventService.addGlobalListener(t, e);
            }),
            (t.prototype.removeEventListener = function (t, e) {
              var o = this.gridOptionsWrapper.useAsyncEvents();
              this.eventService.removeEventListener(t, e, o);
            }),
            (t.prototype.removeGlobalListener = function (t) {
              var e = this.gridOptionsWrapper.useAsyncEvents();
              this.eventService.removeGlobalListener(t, e);
            }),
            (t.prototype.dispatchEvent = function (t) {
              this.eventService.dispatchEvent(t);
            }),
            (t.prototype.destroy = function () {
              this.destroyCalled ||
                ((this.destroyCalled = !0),
                this.context.destroyBean(this.gridCore),
                this.context.destroy());
            }),
            (t.prototype.cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid =
              function () {
                setTimeout(j.bind(window, this, "Grid API"), 100);
              }),
            (t.prototype.warnIfDestroyed = function (t) {
              return (
                this.destroyCalled &&
                  console.warn(
                    "AG Grid: Grid API method " +
                      t +
                      " was called on a grid that was destroyed."
                  ),
                this.destroyCalled
              );
            }),
            (t.prototype.resetQuickFilter = function () {
              this.warnIfDestroyed("resetQuickFilter") ||
                this.rowModel.forEachNode(function (t) {
                  return (t.quickFilterAggregateText = null);
                });
            }),
            (t.prototype.getRangeSelections = function () {
              return (
                console.warn(
                  "AG Grid: in v20.1.x, api.getRangeSelections() is gone, please use getCellRanges() instead.\n        We had to change how cell selections works a small bit to allow charting to integrate. The return type of\n        getCellRanges() is a bit different, please check the AG Grid documentation."
                ),
                null
              );
            }),
            (t.prototype.getCellRanges = function () {
              return this.rangeController
                ? this.rangeController.getCellRanges()
                : (console.warn(
                    "AG Grid: cell range selection is only available in AG Grid Enterprise"
                  ),
                  null);
            }),
            (t.prototype.camelCaseToHumanReadable = function (t) {
              return $t(t);
            }),
            (t.prototype.addRangeSelection = function (t) {
              console.warn(
                "AG Grid: As of version 21.x, range selection changed slightly to allow charting integration. Please call api.addCellRange() instead of api.addRangeSelection()"
              );
            }),
            (t.prototype.addCellRange = function (t) {
              this.rangeController ||
                console.warn(
                  "AG Grid: cell range selection is only available in AG Grid Enterprise"
                ),
                this.rangeController.addCellRange(t);
            }),
            (t.prototype.clearRangeSelection = function () {
              this.rangeController ||
                console.warn(
                  "AG Grid: cell range selection is only available in AG Grid Enterprise"
                ),
                this.rangeController.removeAllCellRanges();
            }),
            (t.prototype.undoCellEditing = function () {
              this.undoRedoService.undo();
            }),
            (t.prototype.redoCellEditing = function () {
              this.undoRedoService.redo();
            }),
            (t.prototype.getCurrentUndoSize = function () {
              return this.undoRedoService.getCurrentUndoStackSize();
            }),
            (t.prototype.getCurrentRedoSize = function () {
              return this.undoRedoService.getCurrentRedoStackSize();
            }),
            (t.prototype.getChartModels = function () {
              if (
                Ct.assertRegistered(
                  e.ModuleNames.RangeSelectionModule,
                  "api.getChartModels"
                ) &&
                Ct.assertRegistered(
                  e.ModuleNames.GridChartsModule,
                  "api.getChartModels"
                )
              )
                return this.chartService.getChartModels();
            }),
            (t.prototype.createRangeChart = function (t) {
              if (
                Ct.assertRegistered(
                  e.ModuleNames.RangeSelectionModule,
                  "api.createRangeChart"
                ) &&
                Ct.assertRegistered(
                  e.ModuleNames.GridChartsModule,
                  "api.createRangeChart"
                )
              )
                return this.chartService.createRangeChart(t);
            }),
            (t.prototype.createCrossFilterChart = function (t) {
              if (
                Ct.assertRegistered(
                  e.ModuleNames.RangeSelectionModule,
                  "api.createCrossFilterChart"
                ) &&
                Ct.assertRegistered(
                  e.ModuleNames.GridChartsModule,
                  "api.createCrossFilterChart"
                )
              )
                return this.chartService.createCrossFilterChart(t);
            }),
            (t.prototype.restoreChart = function (t, o) {
              if (
                Ct.assertRegistered(
                  e.ModuleNames.RangeSelectionModule,
                  "api.restoreChart"
                ) &&
                Ct.assertRegistered(
                  e.ModuleNames.GridChartsModule,
                  "api.restoreChart"
                )
              )
                return this.chartService.restoreChart(t, o);
            }),
            (t.prototype.createPivotChart = function (t) {
              if (
                Ct.assertRegistered(
                  e.ModuleNames.RangeSelectionModule,
                  "api.createPivotChart"
                ) &&
                Ct.assertRegistered(
                  e.ModuleNames.GridChartsModule,
                  "api.createPivotChart"
                )
              )
                return this.chartService.createPivotChart(t);
            }),
            (t.prototype.copySelectedRowsToClipboard = function (t, e) {
              this.clipboardService ||
                console.warn(
                  "AG Grid: clipboard is only available in AG Grid Enterprise"
                ),
                this.clipboardService.copySelectedRowsToClipboard(t, e);
            }),
            (t.prototype.copySelectedRangeToClipboard = function (t) {
              this.clipboardService ||
                console.warn(
                  "AG Grid: clipboard is only available in AG Grid Enterprise"
                ),
                this.clipboardService.copySelectedRangeToClipboard(t);
            }),
            (t.prototype.copySelectedRangeDown = function () {
              this.clipboardService ||
                console.warn(
                  "AG Grid: clipboard is only available in AG Grid Enterprise"
                ),
                this.clipboardService.copyRangeDown();
            }),
            (t.prototype.showColumnMenuAfterButtonClick = function (t, e) {
              var o = this.columnController.getGridColumn(t);
              this.menuFactory.showMenuAfterButtonClick(o, e);
            }),
            (t.prototype.showColumnMenuAfterMouseClick = function (t, e) {
              var o = this.columnController.getGridColumn(t);
              o || (o = this.columnController.getPrimaryColumn(t)),
                o
                  ? this.menuFactory.showMenuAfterMouseEvent(o, e)
                  : console.error("AG Grid: column '" + t + "' not found");
            }),
            (t.prototype.hidePopupMenu = function () {
              this.contextMenuFactory &&
                this.contextMenuFactory.hideActiveMenu(),
                this.menuFactory.hideActiveMenu();
            }),
            (t.prototype.setPopupParent = function (t) {
              this.gridOptionsWrapper.setProperty(Zi.PROP_POPUP_PARENT, t);
            }),
            (t.prototype.tabToNextCell = function () {
              return this.rowRenderer.tabToNextCell(!1);
            }),
            (t.prototype.tabToPreviousCell = function () {
              return this.rowRenderer.tabToNextCell(!0);
            }),
            (t.prototype.getCellRendererInstances = function (t) {
              return (
                void 0 === t && (t = {}),
                this.rowRenderer.getCellRendererInstances(t)
              );
            }),
            (t.prototype.getCellEditorInstances = function (t) {
              return (
                void 0 === t && (t = {}),
                this.rowRenderer.getCellEditorInstances(t)
              );
            }),
            (t.prototype.getEditingCells = function () {
              return this.rowRenderer.getEditingCells();
            }),
            (t.prototype.stopEditing = function (t) {
              void 0 === t && (t = !1), this.rowRenderer.stopEditing(t);
            }),
            (t.prototype.startEditingCell = function (t) {
              var e = this.columnController.getGridColumn(t.colKey);
              if (e) {
                var o = {
                  rowIndex: t.rowIndex,
                  rowPinned: t.rowPinned,
                  column: e,
                };
                i(t.rowPinned) && this.gridPanel.ensureIndexVisible(t.rowIndex),
                  this.rowRenderer.startEditingCell(o, t.keyPress, t.charPress);
              } else console.warn("AG Grid: no column found for " + t.colKey);
            }),
            (t.prototype.addAggFunc = function (t, e) {
              this.aggFuncService && this.aggFuncService.addAggFunc(t, e);
            }),
            (t.prototype.addAggFuncs = function (t) {
              this.aggFuncService && this.aggFuncService.addAggFuncs(t);
            }),
            (t.prototype.clearAggFuncs = function () {
              this.aggFuncService && this.aggFuncService.clear();
            }),
            (t.prototype.applyServerSideTransaction = function (t) {
              if (this.serverSideTransactionManager)
                return this.serverSideTransactionManager.applyTransaction(t);
              console.warn(
                "AG Grid: Cannot apply Server Side Transaction if not using the Server Side Row Model."
              );
            }),
            (t.prototype.applyServerSideTransactionAsync = function (t, e) {
              if (this.serverSideTransactionManager)
                return this.serverSideTransactionManager.applyTransactionAsync(
                  t,
                  e
                );
              console.warn(
                "AG Grid: Cannot apply Server Side Transaction if not using the Server Side Row Model."
              );
            }),
            (t.prototype.retryServerSideLoads = function () {
              this.serverSideRowModel
                ? this.serverSideRowModel.retryLoads()
                : console.warn(
                    "AG Grid: API retryServerSideLoads() can only be used when using Server-Side Row Model."
                  );
            }),
            (t.prototype.flushServerSideAsyncTransactions = function () {
              if (this.serverSideTransactionManager)
                return this.serverSideTransactionManager.flushAsyncTransactions();
              console.warn(
                "AG Grid: Cannot flush Server Side Transaction if not using the Server Side Row Model."
              );
            }),
            (t.prototype.applyTransaction = function (t) {
              if (this.clientSideRowModel) {
                var e = this.clientSideRowModel.updateRowData(t);
                return (
                  this.rowRenderer.refreshFullWidthRows(e.update),
                  this.gridOptionsWrapper.isSuppressChangeDetection() ||
                    this.rowRenderer.refreshCells(),
                  e
                );
              }
              console.error(
                "AG Grid: updateRowData() only works with ClientSideRowModel. Working with InfiniteRowModel was deprecated in v23.1 and removed in v24.1"
              );
            }),
            (t.prototype.updateRowData = function (t) {
              return (
                q(function () {
                  return console.warn(
                    "AG Grid: as of v23.1, grid API updateRowData(transaction) is now called applyTransaction(transaction). updateRowData is deprecated and will be removed in a future major release."
                  );
                }, "updateRowData deprecated"),
                this.applyTransaction(t)
              );
            }),
            (t.prototype.applyTransactionAsync = function (t, e) {
              this.clientSideRowModel
                ? this.clientSideRowModel.batchUpdateRowData(t, e)
                : console.error(
                    "AG Grid: api.applyTransactionAsync() only works with ClientSideRowModel."
                  );
            }),
            (t.prototype.flushAsyncTransactions = function () {
              this.clientSideRowModel
                ? this.clientSideRowModel.flushAsyncTransactions()
                : console.error(
                    "AG Grid: api.applyTransactionAsync() only works with ClientSideRowModel."
                  );
            }),
            (t.prototype.batchUpdateRowData = function (t, e) {
              q(function () {
                return console.warn(
                  "AG Grid: as of v23.1, grid API batchUpdateRowData(transaction, callback) is now called applyTransactionAsync(transaction, callback). batchUpdateRowData is deprecated and will be removed in a future major release."
                );
              }, "batchUpdateRowData deprecated"),
                this.applyTransactionAsync(t, e);
            }),
            (t.prototype.insertItemsAtIndex = function (t, e, o) {
              console.warn(
                "AG Grid: insertItemsAtIndex() is deprecated, use updateRowData(transaction) instead."
              ),
                this.updateRowData({
                  add: e,
                  addIndex: t,
                  update: null,
                  remove: null,
                });
            }),
            (t.prototype.removeItems = function (t, e) {
              console.warn(
                "AG Grid: removeItems() is deprecated, use updateRowData(transaction) instead."
              );
              var o = t.map(function (t) {
                return t.data;
              });
              this.updateRowData({
                add: null,
                addIndex: null,
                update: null,
                remove: o,
              });
            }),
            (t.prototype.addItems = function (t, e) {
              console.warn(
                "AG Grid: addItems() is deprecated, use updateRowData(transaction) instead."
              ),
                this.updateRowData({
                  add: t,
                  addIndex: null,
                  update: null,
                  remove: null,
                });
            }),
            (t.prototype.refreshVirtualPageCache = function () {
              console.warn(
                "AG Grid: refreshVirtualPageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead"
              ),
                this.refreshInfiniteCache();
            }),
            (t.prototype.refreshInfinitePageCache = function () {
              console.warn(
                "AG Grid: refreshInfinitePageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead"
              ),
                this.refreshInfiniteCache();
            }),
            (t.prototype.refreshInfiniteCache = function () {
              this.infiniteRowModel
                ? this.infiniteRowModel.refreshCache()
                : console.warn(
                    "AG Grid: api.refreshInfiniteCache is only available when rowModelType='infinite'."
                  );
            }),
            (t.prototype.purgeVirtualPageCache = function () {
              console.warn(
                "AG Grid: purgeVirtualPageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead"
              ),
                this.purgeInfinitePageCache();
            }),
            (t.prototype.purgeInfinitePageCache = function () {
              console.warn(
                "AG Grid: purgeInfinitePageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead"
              ),
                this.purgeInfiniteCache();
            }),
            (t.prototype.purgeInfiniteCache = function () {
              this.infiniteRowModel
                ? this.infiniteRowModel.purgeCache()
                : console.warn(
                    "AG Grid: api.purgeInfiniteCache is only available when rowModelType='infinite'."
                  );
            }),
            (t.prototype.purgeEnterpriseCache = function (t) {
              console.warn(
                "ag-grid: since version 18.x, api.purgeEnterpriseCache() should be replaced with api.purgeServerSideCache()"
              ),
                this.purgeServerSideCache(t);
            }),
            (t.prototype.purgeServerSideCache = function (t) {
              void 0 === t && (t = []),
                this.serverSideRowModel
                  ? (console.warn(
                      "AG Grid: since v25.0, api.purgeServerSideCache is deprecated. Please use api.refreshServerSideStore({purge: true}) instead."
                    ),
                    this.refreshServerSideStore({ route: t, purge: !0 }))
                  : console.warn(
                      "AG Grid: api.purgeServerSideCache is only available when rowModelType='serverSide'."
                    );
            }),
            (t.prototype.refreshServerSideStore = function (t) {
              this.serverSideRowModel
                ? this.serverSideRowModel.refreshStore(t)
                : console.warn(
                    "AG Grid: api.refreshServerSideStore is only available when rowModelType='serverSide'."
                  );
            }),
            (t.prototype.getServerSideStoreState = function () {
              return this.serverSideRowModel
                ? this.serverSideRowModel.getStoreState()
                : (console.warn(
                    "AG Grid: api.getServerSideStoreState is only available when rowModelType='serverSide'."
                  ),
                  []);
            }),
            (t.prototype.getVirtualRowCount = function () {
              return (
                console.warn(
                  "AG Grid: getVirtualRowCount() is now called getInfiniteRowCount(), please call getInfiniteRowCount() instead"
                ),
                this.getInfiniteRowCount()
              );
            }),
            (t.prototype.getInfiniteRowCount = function () {
              if (this.infiniteRowModel)
                return this.infiniteRowModel.getRowCount();
              console.warn(
                "AG Grid: api.getVirtualRowCount is only available when rowModelType='virtual'."
              );
            }),
            (t.prototype.isMaxRowFound = function () {
              return (
                console.warn(
                  "AG Grid: api.isLastRowIndexKnown is deprecated, please use api.isLastRowIndexKnown()"
                ),
                this.isLastRowIndexKnown()
              );
            }),
            (t.prototype.isLastRowIndexKnown = function () {
              if (this.infiniteRowModel)
                return this.infiniteRowModel.isLastRowIndexKnown();
              console.warn(
                "AG Grid: api.isMaxRowFound is only available when rowModelType='virtual'."
              );
            }),
            (t.prototype.setVirtualRowCount = function (t, e) {
              console.warn(
                "AG Grid: setVirtualRowCount() is now called setInfiniteRowCount(), please call setInfiniteRowCount() instead"
              ),
                this.setRowCount(t, e);
            }),
            (t.prototype.setInfiniteRowCount = function (t, e) {
              console.warn(
                "AG Grid: setInfiniteRowCount() is now called setRowCount(), please call setRowCount() instead"
              ),
                this.setRowCount(t, e);
            }),
            (t.prototype.setRowCount = function (t, e) {
              this.infiniteRowModel
                ? this.infiniteRowModel.setRowCount(t, e)
                : console.warn(
                    "AG Grid: api.setRowCount is only available for Infinite Row Model."
                  );
            }),
            (t.prototype.getVirtualPageState = function () {
              return (
                console.warn(
                  "AG Grid: getVirtualPageState() is now called getCacheBlockState(), please call getCacheBlockState() instead"
                ),
                this.getCacheBlockState()
              );
            }),
            (t.prototype.getInfinitePageState = function () {
              return (
                console.warn(
                  "AG Grid: getInfinitePageState() is now called getCacheBlockState(), please call getCacheBlockState() instead"
                ),
                this.getCacheBlockState()
              );
            }),
            (t.prototype.getCacheBlockState = function () {
              return this.rowNodeBlockLoader.getBlockState();
            }),
            (t.prototype.checkGridSize = function () {
              this.gridPanel.setHeaderAndFloatingHeights();
            }),
            (t.prototype.getFirstRenderedRow = function () {
              return (
                console.warn(
                  "in AG Grid v12, getFirstRenderedRow() was renamed to getFirstDisplayedRow()"
                ),
                this.getFirstDisplayedRow()
              );
            }),
            (t.prototype.getFirstDisplayedRow = function () {
              return this.rowRenderer.getFirstVirtualRenderedRow();
            }),
            (t.prototype.getLastRenderedRow = function () {
              return (
                console.warn(
                  "in AG Grid v12, getLastRenderedRow() was renamed to getLastDisplayedRow()"
                ),
                this.getLastDisplayedRow()
              );
            }),
            (t.prototype.getLastDisplayedRow = function () {
              return this.rowRenderer.getLastVirtualRenderedRow();
            }),
            (t.prototype.getDisplayedRowAtIndex = function (t) {
              return this.rowModel.getRow(t);
            }),
            (t.prototype.getDisplayedRowCount = function () {
              return this.rowModel.getRowCount();
            }),
            (t.prototype.paginationIsLastPageFound = function () {
              return this.paginationProxy.isLastPageFound();
            }),
            (t.prototype.paginationGetPageSize = function () {
              return this.paginationProxy.getPageSize();
            }),
            (t.prototype.paginationSetPageSize = function (t) {
              this.gridOptionsWrapper.setProperty("paginationPageSize", t);
            }),
            (t.prototype.paginationGetCurrentPage = function () {
              return this.paginationProxy.getCurrentPage();
            }),
            (t.prototype.paginationGetTotalPages = function () {
              return this.paginationProxy.getTotalPages();
            }),
            (t.prototype.paginationGetRowCount = function () {
              return this.paginationProxy.getMasterRowCount();
            }),
            (t.prototype.paginationGoToNextPage = function () {
              this.paginationProxy.goToNextPage();
            }),
            (t.prototype.paginationGoToPreviousPage = function () {
              this.paginationProxy.goToPreviousPage();
            }),
            (t.prototype.paginationGoToFirstPage = function () {
              this.paginationProxy.goToFirstPage();
            }),
            (t.prototype.paginationGoToLastPage = function () {
              this.paginationProxy.goToLastPage();
            }),
            (t.prototype.paginationGoToPage = function (t) {
              this.paginationProxy.goToPage(t);
            }),
            dl(
              [pt("immutableService")],
              t.prototype,
              "immutableService",
              void 0
            ),
            dl([pt("csvCreator")], t.prototype, "csvCreator", void 0),
            dl([pt("excelCreator")], t.prototype, "excelCreator", void 0),
            dl([ut("rowRenderer")], t.prototype, "rowRenderer", void 0),
            dl([ut("filterManager")], t.prototype, "filterManager", void 0),
            dl(
              [ut("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            dl(
              [ut("selectionController")],
              t.prototype,
              "selectionController",
              void 0
            ),
            dl(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            dl([ut("valueService")], t.prototype, "valueService", void 0),
            dl(
              [ut("alignedGridsService")],
              t.prototype,
              "alignedGridsService",
              void 0
            ),
            dl([ut("eventService")], t.prototype, "eventService", void 0),
            dl([ut("pinnedRowModel")], t.prototype, "pinnedRowModel", void 0),
            dl([ut("context")], t.prototype, "context", void 0),
            dl([ut("rowModel")], t.prototype, "rowModel", void 0),
            dl([ut("sortController")], t.prototype, "sortController", void 0),
            dl([ut("paginationProxy")], t.prototype, "paginationProxy", void 0),
            dl([ut("focusController")], t.prototype, "focusController", void 0),
            dl(
              [ut("dragAndDropService")],
              t.prototype,
              "dragAndDropService",
              void 0
            ),
            dl([pt("rangeController")], t.prototype, "rangeController", void 0),
            dl(
              [pt("clipboardService")],
              t.prototype,
              "clipboardService",
              void 0
            ),
            dl([pt("aggFuncService")], t.prototype, "aggFuncService", void 0),
            dl([ut("menuFactory")], t.prototype, "menuFactory", void 0),
            dl(
              [pt("contextMenuFactory")],
              t.prototype,
              "contextMenuFactory",
              void 0
            ),
            dl([ut("valueCache")], t.prototype, "valueCache", void 0),
            dl(
              [ut("animationFrameService")],
              t.prototype,
              "animationFrameService",
              void 0
            ),
            dl(
              [pt("statusBarService")],
              t.prototype,
              "statusBarService",
              void 0
            ),
            dl([pt("chartService")], t.prototype, "chartService", void 0),
            dl([pt("undoRedoService")], t.prototype, "undoRedoService", void 0),
            dl(
              [pt("rowNodeBlockLoader")],
              t.prototype,
              "rowNodeBlockLoader",
              void 0
            ),
            dl(
              [pt("ssrmTransactionManager")],
              t.prototype,
              "serverSideTransactionManager",
              void 0
            ),
            dl([st], t.prototype, "init", null),
            dl(
              [at],
              t.prototype,
              "cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid",
              null
            ),
            dl([lt("gridApi")], t)
          );
        })(),
        fl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        gl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        yl = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.expressionToFunctionCache = {}), e;
          }
          return (
            fl(e, t),
            (e.prototype.setBeans = function (t) {
              this.logger = t.create("ExpressionService");
            }),
            (e.prototype.evaluate = function (t, e) {
              return "function" == typeof t
                ? t(e)
                : "string" == typeof t
                ? this.evaluateExpression(t, e)
                : void console.error(
                    "AG Grid: value should be either a string or a function",
                    t
                  );
            }),
            (e.prototype.evaluateExpression = function (t, e) {
              try {
                return this.createExpressionFunction(t)(
                  e.value,
                  e.context,
                  e.oldValue,
                  e.newValue,
                  e.value,
                  e.node,
                  e.data,
                  e.colDef,
                  e.rowIndex,
                  e.api,
                  e.columnApi,
                  e.getValue,
                  e.column,
                  e.columnGroup
                );
              } catch (o) {
                return (
                  console.log("Processing of the expression failed"),
                  console.log("Expression = " + t),
                  console.log("Params =", e),
                  console.log("Exception = " + o),
                  null
                );
              }
            }),
            (e.prototype.createExpressionFunction = function (t) {
              if (this.expressionToFunctionCache[t])
                return this.expressionToFunctionCache[t];
              var e = this.createFunctionBody(t),
                o = new Function(
                  "x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, columnApi, getValue, column, columnGroup",
                  e
                );
              return (this.expressionToFunctionCache[t] = o), o;
            }),
            (e.prototype.createFunctionBody = function (t) {
              return t.indexOf("return") >= 0 ? t : "return " + t + ";";
            }),
            gl(
              [
                (0,
                (o = dt("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            gl([lt("expressionService")], e)
          );
          var o;
        })(Ht),
        ml = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        vl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Cl = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.templateCache = {}), (e.waitingCallbacks = {}), e;
          }
          return (
            ml(e, t),
            (e.prototype.getTemplate = function (t, e) {
              var o = this.templateCache[t];
              if (o) return o;
              var n = this.waitingCallbacks[t],
                r = this;
              if (!n) {
                this.waitingCallbacks[t] = n = [];
                var i = new XMLHttpRequest();
                (i.onload = function () {
                  r.handleHttpResult(this, t);
                }),
                  i.open("GET", t),
                  i.send();
              }
              return e && n.push(e), null;
            }),
            (e.prototype.handleHttpResult = function (t, e) {
              if (200 === t.status && null !== t.response) {
                this.templateCache[e] = t.response || t.responseText;
                for (var o = this.waitingCallbacks[e], n = 0; n < o.length; n++)
                  (0, o[n])();
                if (this.$scope) {
                  var r = this;
                  window.setTimeout(function () {
                    r.$scope.$apply();
                  }, 0);
                }
              } else
                console.warn(
                  "Unable to get template error " + t.status + " - " + e
                );
            }),
            vl([ut("$scope")], e.prototype, "$scope", void 0),
            vl([lt("templateService")], e)
          );
        })(Ht),
        wl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        bl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        El = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          var o;
          return (
            wl(e, t),
            (o = e),
            (e.addKeyboardModeEvents = function (t, e) {
              var n = o.instancesMonitored.get(t);
              n && n.length > 0
                ? -1 === n.indexOf(e) && n.push(e)
                : (o.instancesMonitored.set(t, [e]),
                  t.addEventListener("keydown", o.toggleKeyboardMode),
                  t.addEventListener("mousedown", o.toggleKeyboardMode));
            }),
            (e.removeKeyboardModeEvents = function (t, e) {
              var n = o.instancesMonitored.get(t),
                r = [];
              n &&
                n.length &&
                ((r = (function () {
                  for (var t = 0, e = 0, o = arguments.length; e < o; e++)
                    t += arguments[e].length;
                  var n = Array(t),
                    r = 0;
                  for (e = 0; e < o; e++)
                    for (
                      var i = arguments[e], s = 0, a = i.length;
                      s < a;
                      s++, r++
                    )
                      n[r] = i[s];
                  return n;
                })(n).filter(function (t) {
                  return t !== e;
                })),
                o.instancesMonitored.set(t, r)),
                0 === r.length &&
                  (t.removeEventListener("keydown", o.toggleKeyboardMode),
                  t.removeEventListener("mousedown", o.toggleKeyboardMode));
            }),
            (e.toggleKeyboardMode = function (t) {
              var e = o.keyboardModeActive,
                n = "keydown" === t.type;
              if (
                !(
                  (n && (t.ctrlKey || t.metaKey || t.altKey)) ||
                  (e && n) ||
                  (!e && !n)
                )
              ) {
                o.keyboardModeActive = n;
                var r = t.target.ownerDocument;
                if (r) {
                  var i = o.instancesMonitored.get(r);
                  i &&
                    i.forEach(function (t) {
                      t.dispatchEvent({
                        type: n
                          ? zt.EVENT_KEYBOARD_FOCUS
                          : zt.EVENT_MOUSE_FOCUS,
                      });
                    });
                }
              }
            }),
            (e.prototype.init = function () {
              var t = this.clearFocusedCell.bind(this);
              this.addManagedListener(
                this.eventService,
                zt.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                t
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_NEW_COLUMNS_LOADED,
                  this.onColumnEverythingChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_GROUP_OPENED,
                  t
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  t
                );
            }),
            (e.prototype.registerGridCore = function (t) {
              var e = this;
              this.gridCore = t;
              var n = this.gridOptionsWrapper.getDocument();
              o.addKeyboardModeEvents(n, t),
                this.addDestroyFunc(function () {
                  return e.unregisterGridCore(t);
                });
            }),
            (e.prototype.unregisterGridCore = function (t) {
              var e = this.gridOptionsWrapper.getDocument();
              o.removeKeyboardModeEvents(e, t);
            }),
            (e.prototype.onColumnEverythingChanged = function () {
              if (this.focusedCellPosition) {
                var t = this.focusedCellPosition.column,
                  e = this.columnController.getGridColumn(t.getId());
                t !== e && this.clearFocusedCell();
              }
            }),
            (e.prototype.isKeyboardMode = function () {
              return o.keyboardModeActive;
            }),
            (e.prototype.getFocusCellToUseAfterRefresh = function () {
              return this.gridOptionsWrapper.isSuppressFocusAfterRefresh() ||
                !this.focusedCellPosition
                ? null
                : this.getGridCellForDomElement(document.activeElement)
                ? this.focusedCellPosition
                : null;
            }),
            (e.prototype.getGridCellForDomElement = function (t) {
              for (var e = t; e; ) {
                var o = this.gridOptionsWrapper.getDomData(
                  e,
                  Gs.DOM_DATA_KEY_CELL_COMP
                );
                if (o) return o.getCellPosition();
                e = e.parentNode;
              }
              return null;
            }),
            (e.prototype.clearFocusedCell = function () {
              (this.focusedCellPosition = null), this.onCellFocused(!1);
            }),
            (e.prototype.getFocusedCell = function () {
              return this.focusedCellPosition;
            }),
            (e.prototype.setFocusedCell = function (t, e, o, r) {
              void 0 === r && (r = !1);
              var i = this.columnController.getGridColumn(e);
              i
                ? ((this.focusedCellPosition = i
                    ? { rowIndex: t, rowPinned: n(o), column: i }
                    : null),
                  this.onCellFocused(r))
                : (this.focusedCellPosition = null);
            }),
            (e.prototype.isCellFocused = function (t) {
              return (
                null != this.focusedCellPosition &&
                this.focusedCellPosition.column === t.column &&
                this.isRowFocused(t.rowIndex, t.rowPinned)
              );
            }),
            (e.prototype.isRowNodeFocused = function (t) {
              return this.isRowFocused(t.rowIndex, t.rowPinned);
            }),
            (e.prototype.isHeaderWrapperFocused = function (t) {
              if (null == this.focusedHeaderPosition) return !1;
              var e = t.getColumn(),
                o = t.getParentComponent().getRowIndex(),
                n = t.getPinned(),
                r = this.focusedHeaderPosition,
                i = r.column;
              return e === i && o === r.headerRowIndex && n == i.getPinned();
            }),
            (e.prototype.clearFocusedHeader = function () {
              this.focusedHeaderPosition = null;
            }),
            (e.prototype.getFocusedHeader = function () {
              return this.focusedHeaderPosition;
            }),
            (e.prototype.setFocusedHeader = function (t, e) {
              this.focusedHeaderPosition = { headerRowIndex: t, column: e };
            }),
            (e.prototype.focusHeaderPosition = function (t, e, o, n, r) {
              if (
                (void 0 === e && (e = null),
                void 0 === o && (o = !1),
                void 0 === n && (n = !1),
                n)
              ) {
                var i,
                  s = this.gridOptionsWrapper,
                  a = this.getFocusedHeader(),
                  l = this.headerNavigationService.getHeaderRowCount();
                o
                  ? (i = s.getTabToNextHeaderFunc()) &&
                    (t = i({
                      backwards: "Before" === e,
                      previousHeaderPosition: a,
                      nextHeaderPosition: t,
                      headerRowCount: l,
                    }))
                  : (i = s.getNavigateToNextHeaderFunc()) &&
                    r &&
                    (t = i({
                      key: r.key,
                      previousHeaderPosition: a,
                      nextHeaderPosition: t,
                      headerRowCount: l,
                      event: r,
                    }));
              }
              if (!t) return !1;
              if (-1 === t.headerRowIndex) return this.focusGridView(t.column);
              this.headerNavigationService.scrollToColumn(t.column, e);
              var u = this.headerNavigationService
                .getHeaderContainer(t.column.getPinned())
                .getRowComps()
                [t.headerRowIndex].getHeaderComps()[t.column.getUniqueId()];
              return !!u && (u.getFocusableElement().focus(), !0);
            }),
            (e.prototype.isAnyCellFocused = function () {
              return !!this.focusedCellPosition;
            }),
            (e.prototype.isRowFocused = function (t, e) {
              return (
                null != this.focusedCellPosition &&
                this.focusedCellPosition.rowIndex === t &&
                this.focusedCellPosition.rowPinned === n(e)
              );
            }),
            (e.prototype.findFocusableElements = function (t, e, o) {
              void 0 === o && (o = !1);
              var n = vt.FOCUSABLE_EXCLUDE;
              e && (n += ", " + e), o && (n += ', [tabindex="-1"]');
              var r,
                i = Array.prototype.slice.apply(
                  t.querySelectorAll(vt.FOCUSABLE_SELECTOR)
                ),
                s = Array.prototype.slice.apply(t.querySelectorAll(n));
              return s.length
                ? ((r = s),
                  i.filter(function (t) {
                    return -1 === r.indexOf(t);
                  }))
                : i;
            }),
            (e.prototype.focusInto = function (t, e, o) {
              void 0 === e && (e = !1), void 0 === o && (o = !1);
              var n = this.findFocusableElements(t, null, o),
                r = e ? y(n) : n[0];
              return !!r && (r.focus(), !0);
            }),
            (e.prototype.findNextFocusableElement = function (t, e, o) {
              var n = this.findFocusableElements(
                  t,
                  e ? ':not([tabindex="-1"])' : null
                ),
                r =
                  (e
                    ? _(n, function (t) {
                        return t.contains(document.activeElement);
                      })
                    : n.indexOf(document.activeElement)) + (o ? -1 : 1);
              return r < 0 || r >= n.length ? null : n[r];
            }),
            (e.prototype.isFocusUnderManagedComponent = function (t) {
              var e = t.querySelectorAll("." + sr.FOCUS_MANAGED_CLASS);
              if (!e.length) return !1;
              for (var o = 0; o < e.length; o++)
                if (e[o].contains(document.activeElement)) return !0;
              return !1;
            }),
            (e.prototype.findTabbableParent = function (t, e) {
              void 0 === e && (e = 5);
              for (var o = 0; t && null === Me(t) && ++o <= e; )
                t = t.parentElement;
              return null === Me(t) ? null : t;
            }),
            (e.prototype.onCellFocused = function (t) {
              var e = {
                type: zt.EVENT_CELL_FOCUSED,
                forceBrowserFocus: t,
                rowIndex: null,
                column: null,
                floating: null,
                api: this.gridApi,
                columnApi: this.columnApi,
                rowPinned: null,
              };
              this.focusedCellPosition &&
                ((e.rowIndex = this.focusedCellPosition.rowIndex),
                (e.column = this.focusedCellPosition.column),
                (e.rowPinned = this.focusedCellPosition.rowPinned)),
                this.eventService.dispatchEvent(e);
            }),
            (e.prototype.focusGridView = function (t, e) {
              var o = e
                ? this.rowPositionUtils.getLastRow()
                : this.rowPositionUtils.getFirstRow();
              if (!o) return !1;
              var r = o.rowIndex,
                i = o.rowPinned,
                s = this.getFocusedHeader();
              return (
                !t && s && (t = s.column),
                !(
                  null == r ||
                  !t ||
                  (this.rowRenderer.ensureCellVisible({
                    rowIndex: r,
                    column: t,
                    rowPinned: i,
                  }),
                  this.setFocusedCell(r, t, n(i), !0),
                  this.rangeController &&
                    this.rangeController.setRangeToCell({
                      rowIndex: r,
                      rowPinned: i,
                      column: t,
                    }),
                  0)
                )
              );
            }),
            (e.prototype.focusNextGridCoreContainer = function (t) {
              return (
                !!this.gridCore.focusNextInnerContainer(t) ||
                (t || this.gridCore.forceFocusOutOfContainer(), !1)
              );
            }),
            (e.AG_KEYBOARD_FOCUS = "ag-keyboard-focus"),
            (e.keyboardModeActive = !1),
            (e.instancesMonitored = new Map()),
            bl(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            bl(
              [ut("headerNavigationService")],
              e.prototype,
              "headerNavigationService",
              void 0
            ),
            bl([ut("columnApi")], e.prototype, "columnApi", void 0),
            bl([ut("gridApi")], e.prototype, "gridApi", void 0),
            bl([ut("rowRenderer")], e.prototype, "rowRenderer", void 0),
            bl(
              [ut("rowPositionUtils")],
              e.prototype,
              "rowPositionUtils",
              void 0
            ),
            bl([pt("rangeController")], e.prototype, "rangeController", void 0),
            bl([st], e.prototype, "init", null),
            (o = bl([lt("focusController")], e))
          );
        })(Ht),
        Sl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ol = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        _l = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.popupList = []), e;
          }
          return (
            Sl(e, t),
            (e.prototype.registerGridCore = function (t) {
              var e = this;
              (this.gridCore = t),
                this.addManagedListener(
                  this.gridCore,
                  zt.EVENT_KEYBOARD_FOCUS,
                  function () {
                    T(e.popupList, function (t) {
                      return He(t.element, El.AG_KEYBOARD_FOCUS);
                    });
                  }
                ),
                this.addManagedListener(
                  this.gridCore,
                  zt.EVENT_MOUSE_FOCUS,
                  function () {
                    T(e.popupList, function (t) {
                      return Be(t.element, El.AG_KEYBOARD_FOCUS);
                    });
                  }
                );
            }),
            (e.prototype.getPopupParent = function () {
              return (
                this.gridOptionsWrapper.getPopupParent() ||
                this.gridCore.getRootGui()
              );
            }),
            (e.prototype.positionPopupForMenu = function (t) {
              var e = t.eventSource.getBoundingClientRect(),
                o = this.getParentRect(),
                n = this.keepYWithinBounds(t, e.top - o.top),
                r = t.ePopup.clientWidth > 0 ? t.ePopup.clientWidth : 200;
              t.ePopup.style.minWidth = r + "px";
              var i,
                s = o.right - o.left - r;
              function a() {
                return e.right - o.left - 2;
              }
              function l() {
                return e.left - o.left - r;
              }
              this.gridOptionsWrapper.isEnableRtl()
                ? ((i = l()) < 0 && (i = a()), i > s && (i = 0))
                : ((i = a()) > s && (i = l()), i < 0 && (i = 0)),
                (t.ePopup.style.left = i + "px"),
                (t.ePopup.style.top = n + "px");
            }),
            (e.prototype.positionPopupUnderMouseEvent = function (t) {
              var e = this.calculatePointerAlign(t.mouseEvent);
              this.positionPopup({
                ePopup: t.ePopup,
                x: e.x,
                y: e.y,
                nudgeX: t.nudgeX,
                nudgeY: t.nudgeY,
                keepWithinBounds: !0,
              }),
                this.callPostProcessPopup(
                  t.type,
                  t.ePopup,
                  null,
                  t.mouseEvent,
                  t.column,
                  t.rowNode
                );
            }),
            (e.prototype.calculatePointerAlign = function (t) {
              var e = this.getParentRect();
              return { x: t.clientX - e.left, y: t.clientY - e.top };
            }),
            (e.prototype.positionPopupUnderComponent = function (t) {
              var e = t.eventSource.getBoundingClientRect(),
                o = t.alignSide || "left",
                n = this.getParentRect(),
                r = e.left - n.left;
              "right" === o && (r -= t.ePopup.offsetWidth - e.width),
                this.positionPopup({
                  ePopup: t.ePopup,
                  minWidth: t.minWidth,
                  minHeight: t.minHeight,
                  nudgeX: t.nudgeX,
                  nudgeY: t.nudgeY,
                  x: r,
                  y: e.top - n.top + e.height,
                  keepWithinBounds: t.keepWithinBounds,
                }),
                this.callPostProcessPopup(
                  t.type,
                  t.ePopup,
                  t.eventSource,
                  null,
                  t.column,
                  t.rowNode
                );
            }),
            (e.prototype.positionPopupOverComponent = function (t) {
              var e = t.eventSource.getBoundingClientRect(),
                o = this.getParentRect();
              this.positionPopup({
                ePopup: t.ePopup,
                minWidth: t.minWidth,
                nudgeX: t.nudgeX,
                nudgeY: t.nudgeY,
                x: e.left - o.left,
                y: e.top - o.top,
                keepWithinBounds: t.keepWithinBounds,
              }),
                this.callPostProcessPopup(
                  t.type,
                  t.ePopup,
                  t.eventSource,
                  null,
                  t.column,
                  t.rowNode
                );
            }),
            (e.prototype.callPostProcessPopup = function (t, e, o, n, r, i) {
              var s = this.gridOptionsWrapper.getPostProcessPopupFunc();
              s &&
                s({
                  column: r,
                  rowNode: i,
                  ePopup: e,
                  type: t,
                  eventSource: o,
                  mouseEvent: n,
                });
            }),
            (e.prototype.positionPopup = function (t) {
              var e = t.x,
                o = t.y;
              t.nudgeX && (e += t.nudgeX),
                t.nudgeY && (o += t.nudgeY),
                t.keepWithinBounds &&
                  ((e = this.keepXWithinBounds(t, e)),
                  (o = this.keepYWithinBounds(t, o))),
                (t.ePopup.style.left = e + "px"),
                (t.ePopup.style.top = o + "px");
            }),
            (e.prototype.getActivePopups = function () {
              return this.popupList.map(function (t) {
                return t.element;
              });
            }),
            (e.prototype.getParentRect = function () {
              var t = this.getPopupParent(),
                e = this.gridOptionsWrapper.getDocument();
              t === e.body && (t = e.documentElement);
              var o = getComputedStyle(t),
                n = t.getBoundingClientRect();
              return {
                top: n.top + parseFloat(o.borderTopWidth) || 0,
                left: n.left + parseFloat(o.borderLeftWidth) || 0,
                right: n.right + parseFloat(o.borderRightWidth) || 0,
                bottom: n.bottom + parseFloat(o.borderBottomWidth) || 0,
              };
            }),
            (e.prototype.keepYWithinBounds = function (t, e) {
              var o = this.gridOptionsWrapper.getDocument(),
                n = o.documentElement,
                r = this.getPopupParent(),
                i = r.getBoundingClientRect(),
                s = o.documentElement.getBoundingClientRect(),
                a = r === o.body,
                l = Math.min(200, i.height),
                u = 0;
              t.minHeight && t.minHeight < l
                ? (l = t.minHeight)
                : t.ePopup.offsetHeight > 0 &&
                  ((l = t.ePopup.clientHeight), (u = Je(t.ePopup) - l));
              var p = a ? Je(n) + n.scrollTop : i.height;
              a && (p -= Math.abs(s.top - i.top));
              var c = p - l - u;
              return Math.min(Math.max(e, 0), Math.abs(c));
            }),
            (e.prototype.keepXWithinBounds = function (t, e) {
              var o = this.gridOptionsWrapper.getDocument(),
                n = o.documentElement,
                r = this.getPopupParent(),
                i = r.getBoundingClientRect(),
                s = o.documentElement.getBoundingClientRect(),
                a = r === o.body,
                l = t.ePopup,
                u = Math.min(200, i.width),
                p = 0;
              t.minWidth && t.minWidth < u
                ? (u = t.minWidth)
                : l.offsetWidth > 0 &&
                  ((l.style.minWidth = (u = l.offsetWidth) + "px"),
                  (p = to(l) - u));
              var c = a ? to(n) + n.scrollLeft : i.width;
              a && (c -= Math.abs(s.left - i.left));
              var d = c - u - p;
              return Math.min(Math.max(e, 0), Math.abs(d));
            }),
            (e.prototype.keepPopupPositionedRelativeTo = function (t) {
              var e = this.getPopupParent(),
                o = e.getBoundingClientRect(),
                n = t.element.getBoundingClientRect(),
                r = o.top - n.top,
                i = o.left - n.left,
                s = r,
                a = i,
                l = t.ePopup.style.top,
                u = parseInt(l.substring(0, l.length - 1), 10),
                p = t.ePopup.style.left,
                c = parseInt(p.substring(0, p.length - 1), 10),
                d = window.setInterval(function () {
                  var o = e.getBoundingClientRect(),
                    n = t.element.getBoundingClientRect();
                  if (
                    0 == n.top &&
                    0 == n.left &&
                    0 == n.height &&
                    0 == n.width
                  )
                    t.hidePopup();
                  else {
                    var l = o.top - n.top;
                    l != s && (t.ePopup.style.top = u + r - l + "px"), (s = l);
                    var p = o.left - n.left;
                    p != a && (t.ePopup.style.left = c + i - p + "px"), (a = p);
                  }
                }, 200);
              return function () {
                null != d && window.clearInterval(d), (d = void 0);
              };
            }),
            (e.prototype.addPopup = function (t) {
              var e = this,
                o = t.modal,
                n = t.eChild,
                r = t.closeOnEsc,
                i = t.closedCallback,
                s = t.click,
                a = t.alwaysOnTop,
                l = t.afterGuiAttached,
                u = t.positionCallback,
                p = t.anchorToElement,
                c = this.gridOptionsWrapper.getDocument();
              if (c) {
                var d = _(this.popupList, function (t) {
                  return t.element === n;
                });
                if (-1 !== d) {
                  var h = this.popupList[d];
                  return {
                    hideFunc: h.hideFunc,
                    stopAnchoringFunc: h.stopAnchoringFunc,
                  };
                }
                var f = this.getPopupParent();
                f.appendChild(n),
                  null == n.style.top && (n.style.top = "0px"),
                  null == n.style.left && (n.style.left = "0px");
                var g = document.createElement("div"),
                  y = this.environment.getTheme().theme;
                y && He(g, y),
                  He(g, "ag-popup"),
                  He(
                    n,
                    this.gridOptionsWrapper.isEnableRtl() ? "ag-rtl" : "ag-ltr"
                  ),
                  He(n, "ag-popup-child"),
                  this.focusController.isKeyboardMode() &&
                    He(n, El.AG_KEYBOARD_FOCUS),
                  g.appendChild(n),
                  f.appendChild(g),
                  a ? this.setAlwaysOnTop(g, !0) : this.bringPopupToFront(g);
                var m,
                  v = !1,
                  C = function (t) {
                    g.contains(document.activeElement) &&
                      (t.which || t.keyCode) === $n.ESCAPE &&
                      E({ keyboardEvent: t });
                  },
                  w = function (t) {
                    return E({ mouseEvent: t });
                  },
                  b = function (t) {
                    return E({ touchEvent: t });
                  },
                  E = function (t) {
                    void 0 === t && (t = {});
                    var o = t.mouseEvent,
                      r = t.touchEvent,
                      a = t.keyboardEvent;
                    e.isEventFromCurrentPopup(
                      { mouseEvent: o, touchEvent: r },
                      n
                    ) ||
                      e.isEventSameChainAsOriginalEvent({
                        originalMouseEvent: s,
                        mouseEvent: o,
                        touchEvent: r,
                      }) ||
                      v ||
                      ((v = !0),
                      f.removeChild(g),
                      c.removeEventListener("keydown", C),
                      c.removeEventListener("mousedown", w),
                      c.removeEventListener("touchstart", b),
                      c.removeEventListener("contextmenu", w),
                      e.eventService.removeEventListener(
                        zt.EVENT_DRAG_STARTED,
                        w
                      ),
                      i && i(o || r || a),
                      (e.popupList = e.popupList.filter(function (t) {
                        return t.element !== n;
                      })),
                      m && m());
                  };
                return (
                  l && l({ hidePopup: E }),
                  window.setTimeout(function () {
                    r && c.addEventListener("keydown", C),
                      o &&
                        (c.addEventListener("mousedown", w),
                        e.eventService.addEventListener(
                          zt.EVENT_DRAG_STARTED,
                          w
                        ),
                        c.addEventListener("touchstart", b),
                        c.addEventListener("contextmenu", w));
                  }, 0),
                  u && u(),
                  p &&
                    (m = this.keepPopupPositionedRelativeTo({
                      element: p,
                      ePopup: n,
                      hidePopup: E,
                    })),
                  this.popupList.push({
                    element: n,
                    hideFunc: E,
                    stopAnchoringFunc: m,
                  }),
                  { hideFunc: E, stopAnchoringFunc: m }
                );
              }
              console.warn(
                "ag-grid: could not find the document, document is empty"
              );
            }),
            (e.prototype.isEventFromCurrentPopup = function (t, e) {
              var o = t.mouseEvent || t.touchEvent;
              if (!o) return !1;
              var n = _(this.popupList, function (t) {
                return t.element === e;
              });
              if (-1 === n) return !1;
              for (var r = n; r < this.popupList.length; r++)
                if (Mt(this.popupList[r].element, o)) return !0;
              return this.isElementWithinCustomPopup(o.target);
            }),
            (e.prototype.isElementWithinCustomPopup = function (t) {
              if (!this.popupList.length) return !1;
              for (; t && t !== document.body; ) {
                if (
                  t.classList.contains("ag-custom-component-popup") ||
                  null === t.parentElement
                )
                  return !0;
                t = t.parentElement;
              }
              return !1;
            }),
            (e.prototype.isEventSameChainAsOriginalEvent = function (t) {
              var e = t.originalMouseEvent,
                o = t.mouseEvent,
                n = t.touchEvent,
                r = null;
              if ((o ? (r = o) : n && (r = n.touches[0]), r && e)) {
                var i = o ? o.screenY : 0,
                  s = Math.abs(e.screenX - (o ? o.screenX : 0)) < 5,
                  a = Math.abs(e.screenY - i) < 5;
                if (s && a) return !0;
              }
              return !1;
            }),
            (e.prototype.getWrapper = function (t) {
              for (; !Ue(t, "ag-popup") && t.parentElement; )
                t = t.parentElement;
              return Ue(t, "ag-popup") ? t : null;
            }),
            (e.prototype.setAlwaysOnTop = function (t, e) {
              var o = this.getWrapper(t);
              o &&
                (je(o, "ag-always-on-top", !!e),
                e && this.bringPopupToFront(o));
            }),
            (e.prototype.bringPopupToFront = function (t) {
              var e = this.getPopupParent(),
                o = Array.prototype.slice.call(e.querySelectorAll(".ag-popup")),
                n = o.length,
                r = Array.prototype.slice.call(
                  e.querySelectorAll(".ag-popup.ag-always-on-top")
                ),
                i = r.length,
                s = this.getWrapper(t);
              if (s && !(n <= 1) && e.contains(t)) {
                var a = o.indexOf(s);
                i
                  ? Ue(s, "ag-always-on-top")
                    ? a !== n - 1 && y(r).insertAdjacentElement("afterend", s)
                    : a !== n - i - 1 &&
                      r[0].insertAdjacentElement("beforebegin", s)
                  : a !== n - 1 && y(o).insertAdjacentElement("afterend", s);
                var l = {
                  type: "popupToFront",
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                  eWrapper: s,
                };
                this.eventService.dispatchEvent(l);
              }
            }),
            Ol([ut("environment")], e.prototype, "environment", void 0),
            Ol([ut("focusController")], e.prototype, "focusController", void 0),
            Ol([lt("popupService")], e)
          );
        })(Ht),
        Rl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Pl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Tl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Rl(e, t),
            (e.prototype.setBeans = function (t) {
              this.logging = t.isDebug();
            }),
            (e.prototype.create = function (t) {
              return new Al(t, this.isLogging.bind(this));
            }),
            (e.prototype.isLogging = function () {
              return this.logging;
            }),
            Pl(
              [
                (0,
                (o = dt("gridOptionsWrapper")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            Pl([lt("loggerFactory")], e)
          );
          var o;
        })(Ht),
        Al = (function () {
          function t(t, e) {
            (this.name = t), (this.isLoggingFunc = e);
          }
          return (
            (t.prototype.isLogging = function () {
              return this.isLoggingFunc();
            }),
            (t.prototype.log = function (t) {
              this.isLoggingFunc() &&
                console.log("AG Grid." + this.name + ": " + t);
            }),
            t
          );
        })(),
        Dl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        xl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Fl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Dl(e, t),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.registerHeaderRootComp = function (t) {
              this.headerRootComp = t;
            }),
            (e.prototype.getPreferredWidthForColumn = function (t, e) {
              var o = this.getHeaderCellForColumn(t);
              if (!o) return -1;
              var n = document.createElement("span");
              n.style.position = "fixed";
              var r = this.gridPanel.getCenterContainer();
              r.appendChild(n),
                this.putRowCellsIntoDummyContainer(t, n),
                e || this.cloneItemIntoDummy(o, n);
              var i = n.offsetWidth;
              return (
                r.removeChild(n),
                i + this.gridOptionsWrapper.getAutoSizePadding()
              );
            }),
            (e.prototype.getHeaderCellForColumn = function (t) {
              var e = null;
              return (
                this.headerRootComp.forEachHeaderElement(function (o) {
                  if (o instanceof fa) {
                    var n = o;
                    n.getColumn() === t && (e = n);
                  }
                }),
                e ? e.getGui() : null
              );
            }),
            (e.prototype.putRowCellsIntoDummyContainer = function (t, e) {
              var o = this;
              this.rowRenderer.getAllCellsForColumn(t).forEach(function (t) {
                return o.cloneItemIntoDummy(t, e);
              });
            }),
            (e.prototype.cloneItemIntoDummy = function (t, e) {
              var o = t.cloneNode(!0);
              (o.style.width = ""),
                (o.style.position = "static"),
                (o.style.left = "");
              var n = document.createElement("div");
              Ue(o, "ag-header-cell")
                ? (He(n, "ag-header"),
                  He(n, "ag-header-row"),
                  (n.style.position = "static"))
                : He(n, "ag-row"),
                (n.style.display = "table-row"),
                n.appendChild(o),
                e.appendChild(n);
            }),
            xl([ut("rowRenderer")], e.prototype, "rowRenderer", void 0),
            xl([lt("autoWidthCalculator")], e)
          );
        })(Ht),
        Nl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ml = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Il = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Nl(e, t),
            (e.prototype.addResizeBar = function (t) {
              var e = this,
                o = {
                  dragStartPixels: t.dragStartPixels || 0,
                  eElement: t.eResizeBar,
                  onDragStart: this.onDragStart.bind(this, t),
                  onDragStop: this.onDragStop.bind(this, t),
                  onDragging: this.onDragging.bind(this, t),
                };
              return (
                this.dragService.addDragSource(o, !0),
                function () {
                  return e.dragService.removeDragSource(o);
                }
              );
            }),
            (e.prototype.onDragStart = function (t, e) {
              (this.dragStartX = e.clientX), this.setResizeIcons();
              var o = e instanceof MouseEvent && !0 === e.shiftKey;
              t.onResizeStart(o);
            }),
            (e.prototype.setResizeIcons = function () {
              (this.oldBodyCursor = this.eGridDiv.style.cursor),
                (this.oldUserSelect = this.eGridDiv.style.userSelect),
                (this.oldWebkitUserSelect =
                  this.eGridDiv.style.webkitUserSelect),
                (this.eGridDiv.style.cursor = "ew-resize"),
                (this.eGridDiv.style.userSelect = "none"),
                (this.eGridDiv.style.webkitUserSelect = "none");
            }),
            (e.prototype.onDragStop = function (t, e) {
              t.onResizeEnd(this.resizeAmount), this.resetIcons();
            }),
            (e.prototype.resetIcons = function () {
              (this.eGridDiv.style.cursor = this.oldBodyCursor),
                (this.eGridDiv.style.userSelect = this.oldUserSelect),
                (this.eGridDiv.style.webkitUserSelect =
                  this.oldWebkitUserSelect);
            }),
            (e.prototype.onDragging = function (t, e) {
              (this.resizeAmount = e.clientX - this.dragStartX),
                t.onResizing(this.resizeAmount);
            }),
            Ml([ut("dragService")], e.prototype, "dragService", void 0),
            Ml([ut("eGridDiv")], e.prototype, "eGridDiv", void 0),
            Ml([lt("horizontalResizeService")], e)
          );
        })(Ht),
        Ll = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Gl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        kl = (function (t) {
          function o() {
            return t.call(this, void 0, !0) || this;
          }
          return (
            Ll(o, t),
            (o.prototype.postConstruct = function () {
              var o = this;
              this.logger = this.loggerFactory.create("GridCore");
              var n = this.createTemplate();
              if (
                (this.setTemplate(n),
                [
                  this.gridApi,
                  this.rowRenderer,
                  this.popupService,
                  this.focusController,
                ].forEach(function (t) {
                  return t.registerGridCore(o);
                }),
                Ct.isRegistered(e.ModuleNames.ClipboardModule) &&
                  this.clipboardService.registerGridCore(this),
                this.gridOptionsWrapper.addLayoutElement(this.getGui()),
                this.eGridDiv.appendChild(this.getGui()),
                this.addDestroyFunc(function () {
                  o.eGridDiv.removeChild(o.getGui());
                }),
                this.$scope)
              ) {
                var r = this.$scope.$watch(
                  this.quickFilterOnScope,
                  function (t) {
                    return o.filterManager.setQuickFilter(t);
                  }
                );
                this.addDestroyFunc(r);
              }
              this.addRtlSupport(),
                this.logger.log("ready"),
                this.gridOptionsWrapper.addLayoutElement(this.eRootWrapperBody);
              var i = this.resizeObserverService.observeResize(
                this.eGridDiv,
                this.onGridSizeChanged.bind(this)
              );
              this.addDestroyFunc(function () {
                return i();
              });
              var s = this.getGui();
              this.addManagedListener(
                this,
                zt.EVENT_KEYBOARD_FOCUS,
                function () {
                  He(s, El.AG_KEYBOARD_FOCUS);
                }
              ),
                this.addManagedListener(
                  this,
                  zt.EVENT_MOUSE_FOCUS,
                  function () {
                    Be(s, El.AG_KEYBOARD_FOCUS);
                  }
                ),
                t.prototype.postConstruct.call(this);
            }),
            (o.prototype.getFocusableElement = function () {
              return this.eRootWrapperBody;
            }),
            (o.prototype.createTemplate = function () {
              var t = Ct.isRegistered(e.ModuleNames.SideBarModule),
                o = Ct.isRegistered(e.ModuleNames.StatusBarModule);
              return (
                '<div ref="eRootWrapper" class="ag-root-wrapper">\n                ' +
                (Ct.isRegistered(e.ModuleNames.RowGroupingModule)
                  ? "<ag-grid-header-drop-zones></ag-grid-header-drop-zones>"
                  : "") +
                '\n                <div class="ag-root-wrapper-body" ref="rootWrapperBody">\n                    <ag-grid-comp ref="gridPanel"></ag-grid-comp>\n                    ' +
                (t ? '<ag-side-bar ref="sideBar"></ag-side-bar>' : "") +
                "\n                </div>\n                " +
                (o ? '<ag-status-bar ref="statusBar"></ag-status-bar>' : "") +
                "\n                <ag-pagination></ag-pagination>\n                " +
                (Ct.isRegistered(e.ModuleNames.EnterpriseCoreModule)
                  ? "<ag-watermark></ag-watermark>"
                  : "") +
                "\n            </div>"
              );
            }),
            (o.prototype.getFocusableContainers = function () {
              var t = [this.gridPanel.getGui()];
              return (
                this.sideBarComp && t.push(this.sideBarComp.getGui()),
                t.filter(function (t) {
                  return so(t);
                })
              );
            }),
            (o.prototype.focusNextInnerContainer = function (t) {
              var e = this.getFocusableContainers(),
                o =
                  _(e, function (t) {
                    return t.contains(document.activeElement);
                  }) + (t ? -1 : 1);
              return (
                !(o < 0 || o >= e.length) &&
                (0 === o
                  ? this.focusGridHeader()
                  : this.focusController.focusInto(e[o]))
              );
            }),
            (o.prototype.focusInnerElement = function (t) {
              var e = this.getFocusableContainers();
              if (t) {
                if (e.length > 1) return this.focusController.focusInto(y(e));
                var o = y(this.columnController.getAllDisplayedColumns());
                if (this.focusController.focusGridView(o, !0)) return !0;
              }
              return this.focusGridHeader();
            }),
            (o.prototype.focusGridHeader = function () {
              var t = this.columnController.getAllDisplayedColumns()[0];
              return (
                !!t &&
                (t.getParent() &&
                  (t = this.columnController.getColumnGroupAtLevel(t, 0)),
                this.focusController.focusHeaderPosition({
                  headerRowIndex: 0,
                  column: t,
                }),
                !0)
              );
            }),
            (o.prototype.onGridSizeChanged = function () {
              this.eventService.dispatchEvent({
                type: zt.EVENT_GRID_SIZE_CHANGED,
                api: this.gridApi,
                columnApi: this.columnApi,
                clientWidth: this.eGridDiv.clientWidth,
                clientHeight: this.eGridDiv.clientHeight,
              });
            }),
            (o.prototype.addRtlSupport = function () {
              var t = this.gridOptionsWrapper.isEnableRtl()
                ? "ag-rtl"
                : "ag-ltr";
              He(this.getGui(), t);
            }),
            (o.prototype.getRootGui = function () {
              return this.getGui();
            }),
            (o.prototype.isSideBarVisible = function () {
              return !!this.sideBarComp && this.sideBarComp.isDisplayed();
            }),
            (o.prototype.setSideBarVisible = function (t) {
              this.sideBarComp
                ? this.sideBarComp.setDisplayed(t)
                : t && console.warn("AG Grid: sideBar is not loaded");
            }),
            (o.prototype.setSideBarPosition = function (t) {
              this.sideBarComp
                ? this.sideBarComp.setSideBarPosition(t)
                : console.warn("AG Grid: sideBar is not loaded");
            }),
            (o.prototype.closeToolPanel = function () {
              this.sideBarComp
                ? this.sideBarComp.close()
                : console.warn(
                    "AG Grid: toolPanel is only available in AG Grid Enterprise"
                  );
            }),
            (o.prototype.getSideBar = function () {
              return this.gridOptions.sideBar;
            }),
            (o.prototype.getToolPanelInstance = function (t) {
              if (this.sideBarComp)
                return this.sideBarComp.getToolPanelInstance(t);
              console.warn(
                "AG Grid: toolPanel is only available in AG Grid Enterprise"
              );
            }),
            (o.prototype.refreshSideBar = function () {
              this.sideBarComp && this.sideBarComp.refresh();
            }),
            (o.prototype.setSideBar = function (t) {
              this.sideBarComp &&
                (this.eRootWrapperBody.removeChild(this.sideBarComp.getGui()),
                (this.gridOptions.sideBar = ji.parse(t)),
                this.sideBarComp.reset(),
                this.eRootWrapperBody.appendChild(this.sideBarComp.getGui()));
            }),
            (o.prototype.getOpenedToolPanel = function () {
              return this.sideBarComp ? this.sideBarComp.openedItem() : null;
            }),
            (o.prototype.openToolPanel = function (t) {
              this.sideBarComp
                ? this.sideBarComp.openToolPanel(t)
                : console.warn(
                    "AG Grid: toolPanel is only available in AG Grid Enterprise"
                  );
            }),
            (o.prototype.isToolPanelShowing = function () {
              return this.sideBarComp.isToolPanelShowing();
            }),
            (o.prototype.destroy = function () {
              this.logger.log("Grid DOM removed"),
                t.prototype.destroy.call(this);
            }),
            (o.prototype.ensureNodeVisible = function (t, e) {
              if ((void 0 === e && (e = null), this.doingVirtualPaging))
                throw new Error(
                  "Cannot use ensureNodeVisible when doing virtual paging, as we cannot check rows that are not in memory"
                );
              for (
                var o = this.rowModel.getRowCount(),
                  n = "function" == typeof t,
                  r = -1,
                  i = 0;
                i < o;
                i++
              ) {
                var s = this.rowModel.getRow(i);
                if (n) {
                  if (t(s)) {
                    r = i;
                    break;
                  }
                } else if (t === s || t === s.data) {
                  r = i;
                  break;
                }
              }
              r >= 0 && this.gridPanel.ensureIndexVisible(r, e);
            }),
            (o.prototype.onTabKeyDown = function () {}),
            Gl([ut("gridOptions")], o.prototype, "gridOptions", void 0),
            Gl([ut("rowModel")], o.prototype, "rowModel", void 0),
            Gl(
              [ut("resizeObserverService")],
              o.prototype,
              "resizeObserverService",
              void 0
            ),
            Gl([ut("rowRenderer")], o.prototype, "rowRenderer", void 0),
            Gl([ut("filterManager")], o.prototype, "filterManager", void 0),
            Gl([ut("eGridDiv")], o.prototype, "eGridDiv", void 0),
            Gl([ut("$scope")], o.prototype, "$scope", void 0),
            Gl(
              [ut("quickFilterOnScope")],
              o.prototype,
              "quickFilterOnScope",
              void 0
            ),
            Gl([ut("popupService")], o.prototype, "popupService", void 0),
            Gl(
              [ut("columnController")],
              o.prototype,
              "columnController",
              void 0
            ),
            Gl([ut("loggerFactory")], o.prototype, "loggerFactory", void 0),
            Gl([ut("columnApi")], o.prototype, "columnApi", void 0),
            Gl([ut("gridApi")], o.prototype, "gridApi", void 0),
            Gl(
              [pt("clipboardService")],
              o.prototype,
              "clipboardService",
              void 0
            ),
            Gl([Kn("gridPanel")], o.prototype, "gridPanel", void 0),
            Gl([Kn("sideBar")], o.prototype, "sideBarComp", void 0),
            Gl(
              [Kn("rootWrapperBody")],
              o.prototype,
              "eRootWrapperBody",
              void 0
            ),
            o
          );
        })(sr),
        Vl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Wl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Hl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Vl(e, t),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.hideActiveMenu = function () {
              this.hidePopup && this.hidePopup();
            }),
            (e.prototype.showMenuAfterMouseEvent = function (t, e) {
              var o = this;
              this.showPopup(
                t,
                function (n) {
                  o.popupService.positionPopupUnderMouseEvent({
                    column: t,
                    type: "columnMenu",
                    mouseEvent: e,
                    ePopup: n,
                  });
                },
                e.target
              );
            }),
            (e.prototype.showMenuAfterButtonClick = function (t, e) {
              var o = this;
              this.showPopup(
                t,
                function (n) {
                  o.popupService.positionPopupUnderComponent({
                    type: "columnMenu",
                    eventSource: e,
                    ePopup: n,
                    keepWithinBounds: !0,
                    column: t,
                  });
                },
                e
              );
            }),
            (e.prototype.showPopup = function (t, e, o) {
              var n,
                r = this,
                i = this.filterManager.getOrCreateFilterWrapper(
                  t,
                  "COLUMN_MENU"
                ),
                s = document.createElement("div");
              s.setAttribute("role", "presentation"),
                He(s, "ag-menu"),
                (this.tabListener = this.addManagedListener(
                  s,
                  "keydown",
                  function (t) {
                    return r.trapFocusWithin(t, s);
                  }
                )),
                i.guiPromise.then(function (t) {
                  return s.appendChild(t);
                });
              var a = o || this.gridPanel.getGui(),
                l = this.popupService.addPopup({
                  modal: !0,
                  eChild: s,
                  closeOnEsc: !0,
                  closedCallback: function (e) {
                    t.setMenuVisible(!1, "contextMenu");
                    var n = e instanceof KeyboardEvent;
                    if (
                      (r.tabListener && (r.tabListener = r.tabListener()),
                      n && o && so(o))
                    ) {
                      var i = r.focusController.findTabbableParent(o);
                      i && i.focus();
                    }
                  },
                  positionCallback: function () {
                    return e(s);
                  },
                  anchorToElement: a,
                });
              l && (this.hidePopup = n = l.hideFunc),
                i.filterPromise.then(function (t) {
                  e(s),
                    t.afterGuiAttached &&
                      t.afterGuiAttached({
                        container: "columnMenu",
                        hidePopup: n,
                      });
                }),
                t.setMenuVisible(!0, "contextMenu");
            }),
            (e.prototype.trapFocusWithin = function (t, e) {
              t.keyCode !== $n.TAB ||
                t.defaultPrevented ||
                this.focusController.findNextFocusableElement(
                  e,
                  !1,
                  t.shiftKey
                ) ||
                (t.preventDefault(),
                this.focusController.focusInto(e, t.shiftKey));
            }),
            (e.prototype.isMenuEnabled = function (t) {
              return t.isFilterAllowed();
            }),
            Wl([ut("filterManager")], e.prototype, "filterManager", void 0),
            Wl([ut("popupService")], e.prototype, "popupService", void 0),
            Wl([ut("focusController")], e.prototype, "focusController", void 0),
            Wl([lt("menuFactory")], e)
          );
        })(Ht),
        Bl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        jl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ul = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.dragEndFunctions = []), (e.dragSources = []), e;
          }
          return (
            Bl(e, t),
            (e.prototype.init = function () {
              this.logger = this.loggerFactory.create("DragService");
            }),
            (e.prototype.removeAllListeners = function () {
              this.dragSources.forEach(this.removeListener.bind(this)),
                (this.dragSources.length = 0);
            }),
            (e.prototype.removeListener = function (t) {
              var e = t.dragSource.eElement;
              e.removeEventListener("mousedown", t.mouseDownListener),
                t.touchEnabled &&
                  e.removeEventListener("touchstart", t.touchStartListener, {
                    passive: !0,
                  });
            }),
            (e.prototype.removeDragSource = function (t) {
              var e = c(this.dragSources, function (e) {
                return e.dragSource === t;
              });
              e && (this.removeListener(e), C(this.dragSources, e));
            }),
            (e.prototype.setNoSelectToBody = function (t) {
              var e = this.gridOptionsWrapper
                .getDocument()
                .querySelector("body");
              r(e) && je(e, "ag-unselectable", t);
            }),
            (e.prototype.isDragging = function () {
              return this.dragging;
            }),
            (e.prototype.addDragSource = function (t, e) {
              void 0 === e && (e = !1);
              var o = this.onMouseDown.bind(this, t);
              t.eElement.addEventListener("mousedown", o);
              var n = null,
                r = this.gridOptionsWrapper.isSuppressTouch();
              e &&
                !r &&
                ((n = this.onTouchStart.bind(this, t)),
                t.eElement.addEventListener("touchstart", n, { passive: !0 })),
                this.dragSources.push({
                  dragSource: t,
                  mouseDownListener: o,
                  touchStartListener: n,
                  touchEnabled: e,
                });
            }),
            (e.prototype.onTouchStart = function (t, e) {
              var o = this;
              (this.currentDragParams = t), (this.dragging = !1);
              var n = e.touches[0];
              (this.touchLastTime = n), (this.touchStart = n);
              var r = function (e) {
                  return o.onTouchUp(e, t.eElement);
                },
                i = t.eElement,
                s = [
                  {
                    target: document,
                    type: "touchmove",
                    listener: function (t) {
                      t.cancelable && t.preventDefault();
                    },
                    options: { passive: !1 },
                  },
                  {
                    target: i,
                    type: "touchmove",
                    listener: function (e) {
                      return o.onTouchMove(e, t.eElement);
                    },
                    options: { passive: !0 },
                  },
                  {
                    target: i,
                    type: "touchend",
                    listener: r,
                    options: { passive: !0 },
                  },
                  {
                    target: i,
                    type: "touchcancel",
                    listener: r,
                    options: { passive: !0 },
                  },
                ];
              this.addTemporaryEvents(s),
                0 === t.dragStartPixels &&
                  this.onCommonMove(n, this.touchStart, t.eElement);
            }),
            (e.prototype.onMouseDown = function (t, e) {
              var o = this,
                n = e;
              if (
                !(
                  (t.skipMouseEvent && t.skipMouseEvent(e)) ||
                  n._alreadyProcessedByDragService ||
                  ((n._alreadyProcessedByDragService = !0), 0 !== e.button)
                )
              ) {
                (this.currentDragParams = t),
                  (this.dragging = !1),
                  (this.mouseStartEvent = e);
                var r = this.gridOptionsWrapper.getDocument();
                this.setNoSelectToBody(!0),
                  this.addTemporaryEvents([
                    {
                      target: r,
                      type: "mousemove",
                      listener: function (e) {
                        return o.onMouseMove(e, t.eElement);
                      },
                    },
                    {
                      target: r,
                      type: "mouseup",
                      listener: function (e) {
                        return o.onMouseUp(e, t.eElement);
                      },
                    },
                    {
                      target: r,
                      type: "contextmenu",
                      listener: function (t) {
                        return t.preventDefault();
                      },
                    },
                  ]),
                  0 === t.dragStartPixels && this.onMouseMove(e, t.eElement);
              }
            }),
            (e.prototype.addTemporaryEvents = function (t) {
              t.forEach(function (t) {
                t.target.addEventListener(t.type, t.listener, t.options);
              }),
                this.dragEndFunctions.push(function () {
                  t.forEach(function (t) {
                    t.target.removeEventListener(t.type, t.listener, t.options);
                  });
                });
            }),
            (e.prototype.isEventNearStartEvent = function (t, e) {
              var o = this.currentDragParams.dragStartPixels;
              return On(t, e, r(o) ? o : 4);
            }),
            (e.prototype.getFirstActiveTouch = function (t) {
              for (var e = 0; e < t.length; e++)
                if (t[e].identifier === this.touchStart.identifier) return t[e];
              return null;
            }),
            (e.prototype.onCommonMove = function (t, e, o) {
              if (!this.dragging) {
                if (!this.dragging && this.isEventNearStartEvent(t, e)) return;
                (this.dragging = !0),
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_DRAG_STARTED,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                    target: o,
                  }),
                  this.currentDragParams.onDragStart(e),
                  this.currentDragParams.onDragging(e);
              }
              this.currentDragParams.onDragging(t);
            }),
            (e.prototype.onTouchMove = function (t, e) {
              var o = this.getFirstActiveTouch(t.touches);
              o && this.onCommonMove(o, this.touchStart, e);
            }),
            (e.prototype.onMouseMove = function (t, e) {
              this.onCommonMove(t, this.mouseStartEvent, e);
            }),
            (e.prototype.onTouchUp = function (t, e) {
              var o = this.getFirstActiveTouch(t.changedTouches);
              o || (o = this.touchLastTime), this.onUpCommon(o, e);
            }),
            (e.prototype.onMouseUp = function (t, e) {
              this.onUpCommon(t, e);
            }),
            (e.prototype.onUpCommon = function (t, e) {
              this.dragging &&
                ((this.dragging = !1),
                this.currentDragParams.onDragStop(t),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_DRAG_STOPPED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  target: e,
                })),
                this.setNoSelectToBody(!1),
                (this.mouseStartEvent = null),
                (this.touchStart = null),
                (this.touchLastTime = null),
                (this.currentDragParams = null),
                this.dragEndFunctions.forEach(function (t) {
                  return t();
                }),
                (this.dragEndFunctions.length = 0);
            }),
            jl([ut("loggerFactory")], e.prototype, "loggerFactory", void 0),
            jl([ut("columnApi")], e.prototype, "columnApi", void 0),
            jl([ut("gridApi")], e.prototype, "gridApi", void 0),
            jl([st], e.prototype, "init", null),
            jl([at], e.prototype, "removeAllListeners", null),
            jl([lt("dragService")], e)
          );
        })(Ht),
        zl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Kl = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Yl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          var o;
          return (
            zl(e, t),
            (o = e),
            (e.prototype.progressSort = function (t, e, o) {
              void 0 === o && (o = "api");
              var n = this.getNextSortDirection(t);
              this.setSortForColumn(t, n, e, o);
            }),
            (e.prototype.setSortForColumn = function (t, e, o, n) {
              void 0 === n && (n = "api"),
                e !== vt.SORT_ASC && e !== vt.SORT_DESC && (e = null),
                t.setSort(e, n),
                (o && !this.gridOptionsWrapper.isSuppressMultiSort()) ||
                  this.clearSortBarThisColumn(t, n),
                this.updateSortIndex(t),
                this.dispatchSortChangedEvents();
            }),
            (e.prototype.updateSortIndex = function (t) {
              var e = this.getColumnsWithSortingOrdered(),
                o = 0;
              e.forEach(function (e) {
                e !== t && (e.setSortIndex(o), o++);
              }),
                t.getSort() && t.setSortIndex(o),
                this.columnController
                  .getPrimaryAndSecondaryAndAutoColumns()
                  .filter(function (t) {
                    return null == t.getSort();
                  })
                  .forEach(function (t) {
                    return t.setSortIndex();
                  });
            }),
            (e.prototype.onSortChanged = function () {
              this.dispatchSortChangedEvents();
            }),
            (e.prototype.isSortActive = function () {
              var t = this.columnController
                .getPrimaryAndSecondaryAndAutoColumns()
                .filter(function (t) {
                  return !!t.getSort();
                });
              return t && t.length > 0;
            }),
            (e.prototype.dispatchSortChangedEvents = function () {
              this.eventService.dispatchEvent({
                type: zt.EVENT_SORT_CHANGED,
                api: this.gridApi,
                columnApi: this.columnApi,
              });
            }),
            (e.prototype.clearSortBarThisColumn = function (t, e) {
              this.columnController
                .getPrimaryAndSecondaryAndAutoColumns()
                .forEach(function (o) {
                  o !== t && o.setSort(void 0, e);
                });
            }),
            (e.prototype.getNextSortDirection = function (t) {
              var e;
              if (
                ((e = t.getColDef().sortingOrder
                  ? t.getColDef().sortingOrder
                  : this.gridOptionsWrapper.getSortingOrder()
                  ? this.gridOptionsWrapper.getSortingOrder()
                  : o.DEFAULT_SORTING_ORDER),
                !Array.isArray(e) || e.length <= 0)
              )
                return (
                  console.warn(
                    "ag-grid: sortingOrder must be an array with at least one element, currently it's " +
                      e
                  ),
                  null
                );
              var n,
                r = e.indexOf(t.getSort());
              return o.DEFAULT_SORTING_ORDER.indexOf(
                (n = r < 0 || r == e.length - 1 ? e[0] : e[r + 1])
              ) < 0
                ? (console.warn("ag-grid: invalid sort type " + n), null)
                : n;
            }),
            (e.prototype.getColumnsWithSortingOrdered = function () {
              var t =
                  this.columnController.getPrimaryAndSecondaryAndAutoColumns(),
                e = t.filter(function (t) {
                  return !!t.getSort();
                }),
                o = {};
              return (
                t.forEach(function (t, e) {
                  return (o[t.getId()] = e);
                }),
                e.sort(function (t, e) {
                  var n = t.getSortIndex(),
                    r = e.getSortIndex();
                  return null != n && null != r
                    ? n - r
                    : null == n && null == r
                    ? o[t.getId()] > o[e.getId()]
                      ? 1
                      : -1
                    : null == r
                    ? -1
                    : 1;
                }),
                e
              );
            }),
            (e.prototype.getSortModel = function () {
              return this.getColumnsWithSortingOrdered().map(function (t) {
                return { sort: t.getSort(), colId: t.getId() };
              });
            }),
            (e.prototype.getSortOptions = function () {
              return this.getColumnsWithSortingOrdered().map(function (t) {
                return { sort: t.getSort(), column: t };
              });
            }),
            (e.DEFAULT_SORTING_ORDER = [vt.SORT_ASC, vt.SORT_DESC, null]),
            Kl(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Kl([ut("columnApi")], e.prototype, "columnApi", void 0),
            Kl([ut("gridApi")], e.prototype, "gridApi", void 0),
            (o = Kl([lt("sortController")], e))
          );
        })(Ht),
        Xl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ql = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ql = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.gridInstanceId = o.gridInstanceSequence.next()), e;
          }
          var o;
          return (
            Xl(e, t),
            (o = e),
            (e.prototype.init = function () {
              this.stampDomElementWithGridInstance();
            }),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.stampDomElementWithGridInstance = function () {
              this.eGridDiv[o.GRID_DOM_KEY] = this.gridInstanceId;
            }),
            (e.prototype.getRenderedCellForEvent = function (t) {
              return Ft(this.gridOptionsWrapper, t, "cellComp");
            }),
            (e.prototype.isEventFromThisGrid = function (t) {
              for (var e = Lt(t), n = 0; n < e.length; n++) {
                var i = e[n][o.GRID_DOM_KEY];
                if (r(i)) return i === this.gridInstanceId;
              }
              return !1;
            }),
            (e.prototype.getCellPositionForEvent = function (t) {
              var e = this.getRenderedCellForEvent(t);
              return e ? e.getCellPosition() : null;
            }),
            (e.prototype.getNormalisedPosition = function (t) {
              var e,
                o,
                n =
                  this.gridOptionsWrapper.getDomLayout() ===
                  vt.DOM_LAYOUT_NORMAL;
              if (
                (null != t.clientX || null != t.clientY
                  ? ((e = t.clientX), (o = t.clientY))
                  : ((e = t.x), (o = t.y)),
                n)
              ) {
                var r = this.gridPanel.getVScrollPosition();
                (e += this.gridPanel.getHScrollPosition().left), (o += r.top);
              }
              return { x: e, y: o };
            }),
            (e.gridInstanceSequence = new Fn()),
            (e.GRID_DOM_KEY = "__ag_grid_instance"),
            ql([ut("eGridDiv")], e.prototype, "eGridDiv", void 0),
            ql([st], e.prototype, "init", null),
            (o = ql([lt("mouseEventService")], e))
          );
        })(Ht),
        Zl = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        $l = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Jl = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Zl(e, t),
            (e.prototype.getNextCellToFocus = function (t, e) {
              for (var o = e, n = !1; !n; ) {
                switch (t) {
                  case $n.UP:
                    o = this.getCellAbove(o);
                    break;
                  case $n.DOWN:
                    o = this.getCellBelow(o);
                    break;
                  case $n.RIGHT:
                    o = this.gridOptionsWrapper.isEnableRtl()
                      ? this.getCellToLeft(o)
                      : this.getCellToRight(o);
                    break;
                  case $n.LEFT:
                    o = this.gridOptionsWrapper.isEnableRtl()
                      ? this.getCellToRight(o)
                      : this.getCellToLeft(o);
                    break;
                  default:
                    (o = null),
                      console.warn("AG Grid: unknown key for navigation " + t);
                }
                n = !o || this.isCellGoodToFocusOn(o);
              }
              return o;
            }),
            (e.prototype.isCellGoodToFocusOn = function (t) {
              var e,
                o = t.column;
              switch (t.rowPinned) {
                case vt.PINNED_TOP:
                  e = this.pinnedRowModel.getPinnedTopRow(t.rowIndex);
                  break;
                case vt.PINNED_BOTTOM:
                  e = this.pinnedRowModel.getPinnedBottomRow(t.rowIndex);
                  break;
                default:
                  e = this.rowModel.getRow(t.rowIndex);
              }
              return !!e && !o.isSuppressNavigable(e);
            }),
            (e.prototype.getCellToLeft = function (t) {
              if (!t) return null;
              var e = this.columnController.getDisplayedColBefore(t.column);
              return e
                ? { rowIndex: t.rowIndex, column: e, rowPinned: t.rowPinned }
                : null;
            }),
            (e.prototype.getCellToRight = function (t) {
              if (!t) return null;
              var e = this.columnController.getDisplayedColAfter(t.column);
              return e
                ? { rowIndex: t.rowIndex, column: e, rowPinned: t.rowPinned }
                : null;
            }),
            (e.prototype.getRowBelow = function (t) {
              var e = t.rowIndex,
                o = t.rowPinned;
              if (this.isLastRowInContainer(t))
                switch (o) {
                  case vt.PINNED_BOTTOM:
                    return null;
                  case vt.PINNED_TOP:
                    return this.rowModel.isRowsToRender()
                      ? {
                          rowIndex: this.paginationProxy.getPageFirstRow(),
                          rowPinned: null,
                        }
                      : this.pinnedRowModel.isRowsToRender(vt.PINNED_BOTTOM)
                      ? { rowIndex: 0, rowPinned: vt.PINNED_BOTTOM }
                      : null;
                  default:
                    return this.pinnedRowModel.isRowsToRender(vt.PINNED_BOTTOM)
                      ? { rowIndex: 0, rowPinned: vt.PINNED_BOTTOM }
                      : null;
                }
              return { rowIndex: e + 1, rowPinned: o };
            }),
            (e.prototype.getCellBelow = function (t) {
              if (!t) return null;
              var e = this.getRowBelow(t);
              return e
                ? {
                    rowIndex: e.rowIndex,
                    column: t.column,
                    rowPinned: e.rowPinned,
                  }
                : null;
            }),
            (e.prototype.isLastRowInContainer = function (t) {
              var e = t.rowPinned,
                o = t.rowIndex;
              return e === vt.PINNED_TOP
                ? this.pinnedRowModel.getPinnedTopRowData().length - 1 <= o
                : e === vt.PINNED_BOTTOM
                ? this.pinnedRowModel.getPinnedBottomRowData().length - 1 <= o
                : this.paginationProxy.getPageLastRow() <= o;
            }),
            (e.prototype.getRowAbove = function (t) {
              var e = t.rowIndex,
                o = t.rowPinned;
              return (
                o ? 0 === e : e === this.paginationProxy.getPageFirstRow()
              )
                ? o === vt.PINNED_TOP
                  ? null
                  : o && this.rowModel.isRowsToRender()
                  ? this.getLastBodyCell()
                  : this.pinnedRowModel.isRowsToRender(vt.PINNED_TOP)
                  ? this.getLastFloatingTopRow()
                  : null
                : { rowIndex: e - 1, rowPinned: o };
            }),
            (e.prototype.getCellAbove = function (t) {
              if (!t) return null;
              var e = this.getRowAbove({
                rowIndex: t.rowIndex,
                rowPinned: t.rowPinned,
              });
              return e
                ? {
                    rowIndex: e.rowIndex,
                    column: t.column,
                    rowPinned: e.rowPinned,
                  }
                : null;
            }),
            (e.prototype.getLastBodyCell = function () {
              return {
                rowIndex: this.paginationProxy.getPageLastRow(),
                rowPinned: null,
              };
            }),
            (e.prototype.getLastFloatingTopRow = function () {
              return {
                rowIndex: this.pinnedRowModel.getPinnedTopRowData().length - 1,
                rowPinned: vt.PINNED_TOP,
              };
            }),
            (e.prototype.getNextTabbedCell = function (t, e) {
              return e
                ? this.getNextTabbedCellBackwards(t)
                : this.getNextTabbedCellForwards(t);
            }),
            (e.prototype.getNextTabbedCellForwards = function (t) {
              var e = this.columnController.getAllDisplayedColumns(),
                o = t.rowIndex,
                n = t.rowPinned,
                r = this.columnController.getDisplayedColAfter(t.column);
              if (!r) {
                r = e[0];
                var s = this.getRowBelow(t);
                if (i(s)) return null;
                if (!s.rowPinned && !this.paginationProxy.isRowInPage(s))
                  return null;
                (o = s ? s.rowIndex : null), (n = s ? s.rowPinned : null);
              }
              return { rowIndex: o, column: r, rowPinned: n };
            }),
            (e.prototype.getNextTabbedCellBackwards = function (t) {
              var e = this.columnController.getAllDisplayedColumns(),
                o = t.rowIndex,
                n = t.rowPinned,
                r = this.columnController.getDisplayedColBefore(t.column);
              if (!r) {
                r = y(e);
                var s = this.getRowAbove({
                  rowIndex: t.rowIndex,
                  rowPinned: t.rowPinned,
                });
                if (i(s)) return null;
                if (!s.rowPinned && !this.paginationProxy.isRowInPage(s))
                  return null;
                (o = s ? s.rowIndex : null), (n = s ? s.rowPinned : null);
              }
              return { rowIndex: o, column: r, rowPinned: n };
            }),
            $l(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            $l([ut("rowModel")], e.prototype, "rowModel", void 0),
            $l([ut("pinnedRowModel")], e.prototype, "pinnedRowModel", void 0),
            $l([ut("paginationProxy")], e.prototype, "paginationProxy", void 0),
            $l([lt("cellNavigationService")], e)
          );
        })(Ht),
        tu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        eu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ou = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            tu(e, t),
            (e.prototype.formatValue = function (t, e, o, n, r, i) {
              void 0 === i && (i = !0);
              var s,
                a = null,
                l = t.getColDef();
              if (
                (r
                  ? (s = r)
                  : i &&
                    (s =
                      e && e.rowPinned && l.pinnedRowValueFormatter
                        ? l.pinnedRowValueFormatter
                        : l.valueFormatter),
                s)
              ) {
                var u = {
                  value: n,
                  node: e,
                  data: e ? e.data : null,
                  colDef: l,
                  column: t,
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                  context: this.gridOptionsWrapper.getContext(),
                };
                (u.$scope = o), (a = this.expressionService.evaluate(s, u));
              } else if (l.refData) return l.refData[n] || "";
              return null == a && Array.isArray(n) && (a = n.join(", ")), a;
            }),
            eu(
              [ut("expressionService")],
              e.prototype,
              "expressionService",
              void 0
            ),
            eu([lt("valueFormatterService")], e)
          );
        })(Ht),
        nu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ru = (function (t) {
          function e(e) {
            return t.call(this, e, "ag-radio-button", "radio") || this;
          }
          return (
            nu(e, t),
            (e.prototype.isSelected = function () {
              return this.eInput.checked;
            }),
            (e.prototype.toggle = function () {
              this.isSelected() || this.setValue(!0);
            }),
            (e.prototype.addInputListeners = function () {
              t.prototype.addInputListeners.call(this),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_CHECKBOX_CHANGED,
                  this.onChange.bind(this)
                );
            }),
            (e.prototype.onChange = function (t) {
              t.selected &&
                t.name &&
                this.eInput.name &&
                this.eInput.name === t.name &&
                t.id &&
                this.eInput.id !== t.id &&
                this.setValue(!1, !0);
            }),
            e
          );
        })(sa),
        iu = ["mouseover", "mouseout", "mouseenter", "mouseleave"],
        su = (function () {
          function t() {
            this.isOutsideAngular = function (t) {
              return S(iu, t);
            };
          }
          return (
            (t.prototype.setTimeout = function (t, e) {
              window.setTimeout(t, e);
            }),
            (t.prototype.addEventListener = function (t, e, o, n) {
              t.addEventListener(e, o, n);
            }),
            (t.prototype.dispatchEvent = function (t, e) {
              e();
            }),
            t
          );
        })(),
        au = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        lu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        uu = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            au(e, t),
            (e.prototype.setScrollsVisible = function (t) {
              (this.horizontalScrollShowing === t.horizontalScrollShowing &&
                this.verticalScrollShowing === t.verticalScrollShowing) ||
                ((this.horizontalScrollShowing = t.horizontalScrollShowing),
                (this.verticalScrollShowing = t.verticalScrollShowing),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_SCROLL_VISIBILITY_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                }));
            }),
            (e.prototype.isHorizontalScrollShowing = function () {
              return this.horizontalScrollShowing;
            }),
            (e.prototype.isVerticalScrollShowing = function () {
              return this.verticalScrollShowing;
            }),
            lu([ut("columnApi")], e.prototype, "columnApi", void 0),
            lu([ut("gridApi")], e.prototype, "gridApi", void 0),
            lu([lt("scrollVisibleService")], e)
          );
        })(Ht),
        pu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        cu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        du = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            pu(e, t),
            (e.prototype.processAllCellClasses = function (t, e, o, n) {
              this.processClassRules(t.cellClassRules, e, o, n),
                this.processStaticCellClasses(t, e, o);
            }),
            (e.prototype.processClassRules = function (t, e, o, n) {
              if (U(t))
                for (var r = Object.keys(t), i = 0; i < r.length; i++) {
                  var s = r[i],
                    a = t[s],
                    l = void 0;
                  "string" == typeof a
                    ? (l = this.expressionService.evaluate(a, e))
                    : "function" == typeof a && (l = a(e)),
                    l ? o(s) : n && n(s);
                }
            }),
            (e.prototype.processStaticCellClasses = function (t, e, o) {
              if (t.cellClass) {
                var n = void 0;
                "string" ==
                typeof (n =
                  "function" == typeof t.cellClass
                    ? (0, t.cellClass)(e)
                    : t.cellClass)
                  ? o(n)
                  : Array.isArray(n) &&
                    n.forEach(function (t) {
                      o(t);
                    });
              }
            }),
            cu(
              [ut("expressionService")],
              e.prototype,
              "expressionService",
              void 0
            ),
            cu([lt("stylingService")], e)
          );
        })(Ht),
        hu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        fu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        gu = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            hu(e, t),
            (e.prototype.setMouseOver = function (t) {
              (this.selectedColumns = t),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_COLUMN_HOVER_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.clearMouseOver = function () {
              (this.selectedColumns = null),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_COLUMN_HOVER_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.isHovered = function (t) {
              return (
                !!this.selectedColumns && this.selectedColumns.indexOf(t) >= 0
              );
            }),
            fu([ut("columnApi")], e.prototype, "columnApi", void 0),
            fu([ut("gridApi")], e.prototype, "gridApi", void 0),
            fu([lt("columnHoverService")], e)
          );
        })(Ht),
        yu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        mu = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.executeNextFuncs = []),
              (e.executeLaterFuncs = []),
              (e.active = !1),
              (e.animationThreadCount = 0),
              e
            );
          }
          return (
            yu(e, t),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.isActive = function () {
              return this.active;
            }),
            (e.prototype.start = function () {
              this.active ||
                this.gridOptionsWrapper.isSuppressColumnMoveAnimation() ||
                this.gridOptionsWrapper.isEnableRtl() ||
                (this.ensureAnimationCssClassPresent(), (this.active = !0));
            }),
            (e.prototype.finish = function () {
              this.active && (this.flush(), (this.active = !1));
            }),
            (e.prototype.executeNextVMTurn = function (t) {
              this.active ? this.executeNextFuncs.push(t) : t();
            }),
            (e.prototype.executeLaterVMTurn = function (t) {
              this.active ? this.executeLaterFuncs.push(t) : t();
            }),
            (e.prototype.ensureAnimationCssClassPresent = function () {
              var t = this;
              this.animationThreadCount++;
              var e = this.animationThreadCount;
              this.gridPanel.setColumnMovingCss(!0),
                this.executeLaterFuncs.push(function () {
                  t.animationThreadCount === e &&
                    t.gridPanel.setColumnMovingCss(!1);
                });
            }),
            (e.prototype.flush = function () {
              var t = this.executeNextFuncs;
              this.executeNextFuncs = [];
              var e = this.executeLaterFuncs;
              (this.executeLaterFuncs = []),
                (0 === t.length && 0 === e.length) ||
                  (window.setTimeout(function () {
                    return t.forEach(function (t) {
                      return t();
                    });
                  }, 0),
                  window.setTimeout(function () {
                    return e.forEach(function (t) {
                      return t();
                    });
                  }, 300));
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("columnAnimationService")], e)
          );
        })(Ht),
        vu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Cu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        wu = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          var o;
          return (
            vu(e, t),
            (o = e),
            (e.prototype.createAutoGroupColumns = function (t) {
              var e = this,
                o = [],
                n = this.gridOptionsWrapper.isTreeData(),
                r = this.gridOptionsWrapper.isGroupMultiAutoColumn();
              return (
                n &&
                  r &&
                  (console.warn(
                    "AG Grid: you cannot mix groupMultiAutoColumn with treeData, only one column can be used to display groups when doing tree data"
                  ),
                  (r = !1)),
                r
                  ? t.forEach(function (t, n) {
                      o.push(e.createOneAutoGroupColumn(t, n));
                    })
                  : o.push(this.createOneAutoGroupColumn()),
                o
              );
            }),
            (e.prototype.createOneAutoGroupColumn = function (t, e) {
              var n,
                r = this.generateDefaultColDef(t);
              (n = t
                ? vt.GROUP_AUTO_COLUMN_ID + "-" + t.getId()
                : o.GROUP_AUTO_COLUMN_BUNDLE_ID),
                V(r, this.gridOptionsWrapper.getAutoGroupColumnDef()),
                ((r = this.columnFactory.mergeColDefs(r)).colId = n),
                this.gridOptionsWrapper.isTreeData() ||
                  (i(r.field) &&
                    i(r.valueGetter) &&
                    i(r.filterValueGetter) &&
                    (r.filter = !1)),
                e && e > 0 && (r.headerCheckboxSelection = !1);
              var s = new bt(r, null, n, !0);
              return this.context.createBean(s), s;
            }),
            (e.prototype.generateDefaultColDef = function (t) {
              var e = this.gridOptionsWrapper.getAutoGroupColumnDef(),
                o = {
                  headerName: this.gridOptionsWrapper.getLocaleTextFunc()(
                    "group",
                    "Group"
                  ),
                };
              if (
                ((e && (e.cellRenderer || e.cellRendererFramework)) ||
                  (o.cellRenderer = "agGroupCellRenderer"),
                t)
              ) {
                var n = t.getColDef();
                W(o, {
                  headerName: this.columnController.getDisplayNameForColumn(
                    t,
                    "header"
                  ),
                  headerValueGetter: n.headerValueGetter,
                }),
                  n.cellRenderer &&
                    W(o, {
                      cellRendererParams: {
                        innerRenderer: n.cellRenderer,
                        innerRendererParams: n.cellRendererParams,
                      },
                    }),
                  (o.showRowGroup = t.getColId());
              } else o.showRowGroup = !0;
              return o;
            }),
            (e.GROUP_AUTO_COLUMN_BUNDLE_ID = vt.GROUP_AUTO_COLUMN_ID),
            Cu(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Cu([ut("columnFactory")], e.prototype, "columnFactory", void 0),
            (o = Cu([lt("autoGroupColService")], e))
          );
        })(Ht),
        bu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Eu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Su = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.currentPage = 0),
              (e.topDisplayedRowIndex = 0),
              (e.bottomDisplayedRowIndex = 0),
              (e.pixelOffset = 0),
              (e.masterRowCount = 0),
              e
            );
          }
          return (
            bu(e, t),
            (e.prototype.postConstruct = function () {
              (this.active = this.gridOptionsWrapper.isPagination()),
                (this.paginateChildRows =
                  this.gridOptionsWrapper.isPaginateChildRows()),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_MODEL_UPDATED,
                  this.onModelUpdated.bind(this)
                ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  "paginationPageSize",
                  this.onPaginationPageSizeChanged.bind(this)
                ),
                this.onModelUpdated();
            }),
            (e.prototype.ensureRowHeightsValid = function (t, e, o, n) {
              var r = this.rowModel.ensureRowHeightsValid(
                t,
                e,
                this.getPageFirstRow(),
                this.getPageLastRow()
              );
              return r && this.calculatePages(), r;
            }),
            (e.prototype.onModelUpdated = function (t) {
              this.calculatePages(),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_PAGINATION_CHANGED,
                  animate: !!t && t.animate,
                  newData: !!t && t.newData,
                  newPage: !!t && t.newPage,
                  keepRenderedRows: !!t && t.keepRenderedRows,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.onPaginationPageSizeChanged = function () {
              this.calculatePages(),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_PAGINATION_CHANGED,
                  animate: !1,
                  newData: !1,
                  newPage: !1,
                  keepRenderedRows: !0,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.goToPage = function (t) {
              this.active &&
                this.currentPage !== t &&
                ((this.currentPage = t),
                this.onModelUpdated({
                  type: zt.EVENT_MODEL_UPDATED,
                  animate: !1,
                  keepRenderedRows: !1,
                  newData: !1,
                  newPage: !0,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                }));
            }),
            (e.prototype.getPixelOffset = function () {
              return this.pixelOffset;
            }),
            (e.prototype.getRow = function (t) {
              return this.rowModel.getRow(t);
            }),
            (e.prototype.getRowNode = function (t) {
              return this.rowModel.getRowNode(t);
            }),
            (e.prototype.getRowIndexAtPixel = function (t) {
              return this.rowModel.getRowIndexAtPixel(t);
            }),
            (e.prototype.getCurrentPageHeight = function () {
              return i(this.topRowBounds) || i(this.bottomRowBounds)
                ? 0
                : Math.max(
                    this.bottomRowBounds.rowTop +
                      this.bottomRowBounds.rowHeight -
                      this.topRowBounds.rowTop,
                    0
                  );
            }),
            (e.prototype.getCurrentPagePixelRange = function () {
              return {
                pageFirstPixel: this.topRowBounds
                  ? this.topRowBounds.rowTop
                  : 0,
                pageLastPixel: this.bottomRowBounds
                  ? this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight
                  : 0,
              };
            }),
            (e.prototype.isRowPresent = function (t) {
              return (
                !!this.rowModel.isRowPresent(t) &&
                t.rowIndex >= this.topDisplayedRowIndex &&
                t.rowIndex <= this.bottomDisplayedRowIndex
              );
            }),
            (e.prototype.isEmpty = function () {
              return this.rowModel.isEmpty();
            }),
            (e.prototype.isRowsToRender = function () {
              return this.rowModel.isRowsToRender();
            }),
            (e.prototype.getNodesInRangeForSelection = function (t, e) {
              return this.rowModel.getNodesInRangeForSelection(t, e);
            }),
            (e.prototype.forEachNode = function (t) {
              return this.rowModel.forEachNode(t);
            }),
            (e.prototype.getType = function () {
              return this.rowModel.getType();
            }),
            (e.prototype.getRowBounds = function (t) {
              var e = this.rowModel.getRowBounds(t);
              return (e.rowIndex = t), e;
            }),
            (e.prototype.getPageFirstRow = function () {
              return this.topRowBounds ? this.topRowBounds.rowIndex : -1;
            }),
            (e.prototype.getPageLastRow = function () {
              return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;
            }),
            (e.prototype.getRowCount = function () {
              return this.rowModel.getRowCount();
            }),
            (e.prototype.getPageForIndex = function (t) {
              return Math.floor(t / this.pageSize);
            }),
            (e.prototype.goToPageWithIndex = function (t) {
              if (this.active) {
                var e = this.getPageForIndex(t);
                this.goToPage(e);
              }
            }),
            (e.prototype.isRowInPage = function (t) {
              return (
                !this.active ||
                this.getPageForIndex(t.rowIndex) === this.currentPage
              );
            }),
            (e.prototype.isLastPageFound = function () {
              return this.rowModel.isLastRowIndexKnown();
            }),
            (e.prototype.getCurrentPage = function () {
              return this.currentPage;
            }),
            (e.prototype.goToNextPage = function () {
              this.goToPage(this.currentPage + 1);
            }),
            (e.prototype.goToPreviousPage = function () {
              this.goToPage(this.currentPage - 1);
            }),
            (e.prototype.goToFirstPage = function () {
              this.goToPage(0);
            }),
            (e.prototype.goToLastPage = function () {
              var t = this.rowModel.getRowCount(),
                e = Math.floor(t / this.pageSize);
              this.goToPage(e);
            }),
            (e.prototype.getPageSize = function () {
              return this.pageSize;
            }),
            (e.prototype.getTotalPages = function () {
              return this.totalPages;
            }),
            (e.prototype.setPageSize = function () {
              (this.pageSize = this.gridOptionsWrapper.getPaginationPageSize()),
                (null == this.pageSize || this.pageSize < 1) &&
                  (this.pageSize = 100);
            }),
            (e.prototype.calculatePages = function () {
              this.active
                ? (this.setPageSize(),
                  this.paginateChildRows
                    ? this.calculatePagesAllRows()
                    : this.calculatePagesMasterRowsOnly())
                : this.calculatedPagesNotActive(),
                (this.topRowBounds = this.rowModel.getRowBounds(
                  this.topDisplayedRowIndex
                )),
                this.topRowBounds &&
                  (this.topRowBounds.rowIndex = this.topDisplayedRowIndex),
                (this.bottomRowBounds = this.rowModel.getRowBounds(
                  this.bottomDisplayedRowIndex
                )),
                this.bottomRowBounds &&
                  (this.bottomRowBounds.rowIndex =
                    this.bottomDisplayedRowIndex),
                this.setPixelOffset(
                  r(this.topRowBounds) ? this.topRowBounds.rowTop : 0
                );
            }),
            (e.prototype.setPixelOffset = function (t) {
              this.pixelOffset !== t &&
                ((this.pixelOffset = t),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED,
                }));
            }),
            (e.prototype.setZeroRows = function () {
              (this.masterRowCount = 0),
                (this.topDisplayedRowIndex = 0),
                (this.bottomDisplayedRowIndex = -1),
                (this.currentPage = 0),
                (this.totalPages = 0);
            }),
            (e.prototype.calculatePagesMasterRowsOnly = function () {
              if (
                ((this.masterRowCount = this.rowModel.getTopLevelRowCount()),
                this.masterRowCount <= 0)
              )
                this.setZeroRows();
              else {
                var t = this.masterRowCount - 1;
                (this.totalPages = Math.floor(t / this.pageSize) + 1),
                  this.currentPage >= this.totalPages &&
                    (this.currentPage = this.totalPages - 1),
                  (!se(this.currentPage) || this.currentPage < 0) &&
                    (this.currentPage = 0);
                var e = this.pageSize * (this.currentPage + 1) - 1;
                if (
                  (e > t && (e = t),
                  (this.topDisplayedRowIndex =
                    this.rowModel.getTopLevelRowDisplayedIndex(
                      this.pageSize * this.currentPage
                    )),
                  e === t)
                )
                  this.bottomDisplayedRowIndex =
                    this.rowModel.getRowCount() - 1;
                else {
                  var o = this.rowModel.getTopLevelRowDisplayedIndex(e + 1);
                  this.bottomDisplayedRowIndex = o - 1;
                }
              }
            }),
            (e.prototype.getMasterRowCount = function () {
              return this.masterRowCount;
            }),
            (e.prototype.calculatePagesAllRows = function () {
              if (
                ((this.masterRowCount = this.rowModel.getRowCount()),
                0 !== this.masterRowCount)
              ) {
                var t = this.masterRowCount - 1;
                (this.totalPages = Math.floor(t / this.pageSize) + 1),
                  this.currentPage >= this.totalPages &&
                    (this.currentPage = this.totalPages - 1),
                  (!se(this.currentPage) || this.currentPage < 0) &&
                    (this.currentPage = 0),
                  (this.topDisplayedRowIndex =
                    this.pageSize * this.currentPage),
                  (this.bottomDisplayedRowIndex =
                    this.pageSize * (this.currentPage + 1) - 1),
                  this.bottomDisplayedRowIndex > t &&
                    (this.bottomDisplayedRowIndex = t);
              } else this.setZeroRows();
            }),
            (e.prototype.calculatedPagesNotActive = function () {
              (this.pageSize = this.rowModel.getRowCount()),
                (this.totalPages = 1),
                (this.currentPage = 0),
                (this.topDisplayedRowIndex = 0),
                (this.bottomDisplayedRowIndex =
                  this.rowModel.getRowCount() - 1);
            }),
            Eu([ut("rowModel")], e.prototype, "rowModel", void 0),
            Eu([ut("columnApi")], e.prototype, "columnApi", void 0),
            Eu([ut("gridApi")], e.prototype, "gridApi", void 0),
            Eu([st], e.prototype, "postConstruct", null),
            Eu([lt("paginationProxy")], e)
          );
        })(Ht),
        Ou = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        _u = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Ou(e, t),
            (e.prototype.registerGridComp = function (t) {
              (this.gridPanel = t),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_BODY_HEIGHT_CHANGED,
                  this.onBodyHeightChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_SCROLL_VISIBILITY_CHANGED,
                  this.onScrollVisibilityChanged.bind(this)
                ),
                this.checkPageSize();
            }),
            (e.prototype.notActive = function () {
              return !this.gridOptionsWrapper.isPaginationAutoPageSize();
            }),
            (e.prototype.onScrollVisibilityChanged = function () {
              this.checkPageSize();
            }),
            (e.prototype.onBodyHeightChanged = function () {
              this.checkPageSize();
            }),
            (e.prototype.checkPageSize = function () {
              if (!this.notActive()) {
                var t = this.gridOptionsWrapper.getRowHeightAsNumber(),
                  e = this.gridPanel.getBodyHeight();
                if (e > 0) {
                  var o = Math.floor(e / t);
                  this.gridOptionsWrapper.setProperty("paginationPageSize", o);
                }
              }
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("paginationAutoPageSizeService")], e)
          );
        })(Ht),
        Ru = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Pu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Tu = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.cacheVersion = 0), e;
          }
          return (
            Ru(e, t),
            (e.prototype.init = function () {
              (this.active = this.gridOptionsWrapper.isValueCache()),
                (this.neverExpires =
                  this.gridOptionsWrapper.isValueCacheNeverExpires());
            }),
            (e.prototype.onDataChanged = function () {
              this.neverExpires || this.expire();
            }),
            (e.prototype.expire = function () {
              this.cacheVersion++;
            }),
            (e.prototype.setValue = function (t, e, o) {
              this.active &&
                (t.__cacheVersion !== this.cacheVersion &&
                  ((t.__cacheVersion = this.cacheVersion),
                  (t.__cacheData = {})),
                (t.__cacheData[e] = o));
            }),
            (e.prototype.getValue = function (t, e) {
              if (this.active && t.__cacheVersion === this.cacheVersion)
                return t.__cacheData[e];
            }),
            Pu([st], e.prototype, "init", null),
            Pu([lt("valueCache")], e)
          );
        })(Ht),
        Au = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Du = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        xu = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Au(e, t),
            (e.prototype.init = function () {
              this.rowModel.getType() === vt.ROW_MODEL_TYPE_CLIENT_SIDE &&
                (this.clientSideRowModel = this.rowModel),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_CELL_VALUE_CHANGED,
                  this.onCellValueChanged.bind(this)
                );
            }),
            (e.prototype.onCellValueChanged = function (t) {
              t.source !== vt.SOURCE_PASTE &&
                this.doChangeDetection(t.node, t.column);
            }),
            (e.prototype.doChangeDetection = function (t, e) {
              if (!this.gridOptionsWrapper.isSuppressChangeDetection()) {
                if (this.clientSideRowModel && !t.isRowPinned()) {
                  var o =
                      this.gridOptionsWrapper.isAggregateOnlyChangedColumns(),
                    n = new $i(o, this.clientSideRowModel.getRootNode());
                  n.addParentNode(t.parent, [e]),
                    this.clientSideRowModel.doAggregate(n);
                }
                this.rowRenderer.refreshCells();
              }
            }),
            Du([ut("rowModel")], e.prototype, "rowModel", void 0),
            Du([ut("rowRenderer")], e.prototype, "rowRenderer", void 0),
            Du([st], e.prototype, "init", null),
            Du([lt("changeDetectionService")], e)
          );
        })(Ht),
        Fu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Nu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Mu = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.consuming = !1), e;
          }
          return (
            Fu(e, t),
            (e.prototype.setBeans = function (t) {
              this.logger = t.create("AlignedGridsService");
            }),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.init = function () {
              this.addManagedListener(
                this.eventService,
                zt.EVENT_COLUMN_MOVED,
                this.fireColumnEvent.bind(this)
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_VISIBLE,
                  this.fireColumnEvent.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_PINNED,
                  this.fireColumnEvent.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_GROUP_OPENED,
                  this.fireColumnEvent.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_RESIZED,
                  this.fireColumnEvent.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_BODY_SCROLL,
                  this.fireScrollEvent.bind(this)
                );
            }),
            (e.prototype.fireEvent = function (t) {
              if (!this.consuming) {
                var e = this.gridOptionsWrapper.getAlignedGrids();
                e &&
                  e.forEach(function (e) {
                    if (e.api) {
                      var o = e.api.__getAlignedGridService();
                      t(o);
                    }
                  });
              }
            }),
            (e.prototype.onEvent = function (t) {
              (this.consuming = !0), t(), (this.consuming = !1);
            }),
            (e.prototype.fireColumnEvent = function (t) {
              this.fireEvent(function (e) {
                e.onColumnEvent(t);
              });
            }),
            (e.prototype.fireScrollEvent = function (t) {
              "horizontal" === t.direction &&
                this.fireEvent(function (e) {
                  e.onScrollEvent(t);
                });
            }),
            (e.prototype.onScrollEvent = function (t) {
              var e = this;
              this.onEvent(function () {
                e.gridPanel.setHorizontalScrollPosition(t.left);
              });
            }),
            (e.prototype.getMasterColumns = function (t) {
              var e = [];
              return (
                t.columns
                  ? t.columns.forEach(function (t) {
                      e.push(t);
                    })
                  : t.column && e.push(t.column),
                e
              );
            }),
            (e.prototype.getColumnIds = function (t) {
              var e = [];
              return (
                t.columns
                  ? t.columns.forEach(function (t) {
                      e.push(t.getColId());
                    })
                  : t.column && e.push(t.column.getColId()),
                e
              );
            }),
            (e.prototype.onColumnEvent = function (t) {
              var e = this;
              this.onEvent(function () {
                switch (t.type) {
                  case zt.EVENT_COLUMN_MOVED:
                  case zt.EVENT_COLUMN_VISIBLE:
                  case zt.EVENT_COLUMN_PINNED:
                  case zt.EVENT_COLUMN_RESIZED:
                    e.processColumnEvent(t);
                    break;
                  case zt.EVENT_COLUMN_GROUP_OPENED:
                    e.processGroupOpenedEvent(t);
                    break;
                  case zt.EVENT_COLUMN_PIVOT_CHANGED:
                    console.warn(
                      "AG Grid: pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid."
                    );
                }
              });
            }),
            (e.prototype.processGroupOpenedEvent = function (t) {
              var e = t.columnGroup,
                o = null;
              if (e) {
                var n = e.getGroupId();
                o = this.columnController.getOriginalColumnGroup(n);
              }
              (e && !o) ||
                (this.logger.log(
                  "onColumnEvent-> processing " +
                    t +
                    " expanded = " +
                    e.isExpanded()
                ),
                this.columnController.setColumnGroupOpened(
                  o,
                  e.isExpanded(),
                  "alignedGridChanged"
                ));
            }),
            (e.prototype.processColumnEvent = function (t) {
              var e = this,
                o = t.column,
                n = null;
              if (
                (o &&
                  (n = this.columnController.getPrimaryColumn(o.getColId())),
                !o || n)
              ) {
                var r = this.getMasterColumns(t);
                switch (t.type) {
                  case zt.EVENT_COLUMN_MOVED:
                    var i = t,
                      s = t.columnApi.getColumnState().map(function (t) {
                        return { colId: t.colId };
                      });
                    this.columnController.applyColumnState(
                      { state: s, applyOrder: !0 },
                      "alignedGridChanged"
                    ),
                      this.logger.log(
                        "onColumnEvent-> processing " +
                          t.type +
                          " toIndex = " +
                          i.toIndex
                      );
                    break;
                  case zt.EVENT_COLUMN_VISIBLE:
                    var a = t;
                    (s = t.columnApi.getColumnState().map(function (t) {
                      return { colId: t.colId, hide: t.hide };
                    })),
                      this.columnController.applyColumnState(
                        { state: s },
                        "alignedGridChanged"
                      ),
                      this.logger.log(
                        "onColumnEvent-> processing " +
                          t.type +
                          " visible = " +
                          a.visible
                      );
                    break;
                  case zt.EVENT_COLUMN_PINNED:
                    var l = t;
                    (s = t.columnApi.getColumnState().map(function (t) {
                      return { colId: t.colId, pinned: t.pinned };
                    })),
                      this.columnController.applyColumnState(
                        { state: s },
                        "alignedGridChanged"
                      ),
                      this.logger.log(
                        "onColumnEvent-> processing " +
                          t.type +
                          " pinned = " +
                          l.pinned
                      );
                    break;
                  case zt.EVENT_COLUMN_RESIZED:
                    var u = t;
                    r.forEach(function (o) {
                      e.logger.log(
                        "onColumnEvent-> processing " +
                          t.type +
                          " actualWidth = " +
                          o.getActualWidth()
                      );
                      var n = [
                        { key: o.getColId(), newWidth: o.getActualWidth() },
                      ];
                      e.columnController.setColumnWidths(
                        n,
                        !1,
                        u.finished,
                        "alignedGridChanged"
                      );
                    });
                }
                var p = this.gridPanel.isVerticalScrollShowing(),
                  c = this.gridOptionsWrapper.getAlignedGrids();
                c &&
                  c.forEach(function (t) {
                    t.api && t.api.setAlwaysShowVerticalScroll(p);
                  });
              }
            }),
            Nu(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Nu(
              [
                (0,
                (o = dt("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            Nu([st], e.prototype, "init", null),
            Nu([lt("alignedGridsService")], e)
          );
          var o;
        })(Ht),
        Iu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Lu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Gu = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Iu(e, t),
            (e.prototype.adaptFunction = function (t, e, o, n) {
              if (null == e)
                return {
                  component: null,
                  componentFromFramework: o,
                  source: n,
                  paramsFromSelector: null,
                };
              var r = this.componentMetadataProvider.retrieve(t);
              return r && r.functionAdapter
                ? {
                    componentFromFramework: o,
                    component: r.functionAdapter(e),
                    source: n,
                    paramsFromSelector: null,
                  }
                : null;
            }),
            (e.prototype.adaptCellRendererFunction = function (t) {
              return (function () {
                function e() {}
                return (
                  (e.prototype.refresh = function (t) {
                    return !1;
                  }),
                  (e.prototype.getGui = function () {
                    var e = t(this.params),
                      o = typeof e;
                    return "string" === o || "number" === o || "boolean" === o
                      ? ao("<span>" + e + "</span>")
                      : e;
                  }),
                  (e.prototype.init = function (t) {
                    this.params = t;
                  }),
                  e
                );
              })();
            }),
            (e.prototype.doesImplementIComponent = function (t) {
              return !!t && t.prototype && "getGui" in t.prototype;
            }),
            Lu(
              [ut("componentMetadataProvider")],
              e.prototype,
              "componentMetadataProvider",
              void 0
            ),
            Lu([lt("agComponentUtils")], e)
          );
        })(Ht),
        ku = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Vu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Wu = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            ku(e, t),
            (e.prototype.postConstruct = function () {
              this.componentMetaData = {
                dateComponent: {
                  mandatoryMethodList: ["getDate", "setDate"],
                  optionalMethodList: [
                    "afterGuiAttached",
                    "setInputPlaceholder",
                    "setInputAriaLabel",
                  ],
                },
                detailCellRenderer: {
                  mandatoryMethodList: [],
                  optionalMethodList: ["refresh"],
                },
                headerComponent: {
                  mandatoryMethodList: [],
                  optionalMethodList: ["refresh"],
                },
                headerGroupComponent: {
                  mandatoryMethodList: [],
                  optionalMethodList: [],
                },
                loadingCellRenderer: {
                  mandatoryMethodList: [],
                  optionalMethodList: [],
                },
                loadingOverlayComponent: {
                  mandatoryMethodList: [],
                  optionalMethodList: [],
                },
                noRowsOverlayComponent: {
                  mandatoryMethodList: [],
                  optionalMethodList: [],
                },
                floatingFilterComponent: {
                  mandatoryMethodList: ["onParentModelChanged"],
                  optionalMethodList: ["afterGuiAttached"],
                },
                floatingFilterWrapperComponent: {
                  mandatoryMethodList: [],
                  optionalMethodList: [],
                },
                cellRenderer: {
                  mandatoryMethodList: [],
                  optionalMethodList: ["refresh", "afterGuiAttached"],
                  functionAdapter:
                    this.agComponentUtils.adaptCellRendererFunction.bind(
                      this.agComponentUtils
                    ),
                },
                cellEditor: {
                  mandatoryMethodList: ["getValue"],
                  optionalMethodList: [
                    "isPopup",
                    "isCancelBeforeStart",
                    "isCancelAfterEnd",
                    "getPopupPosition",
                    "focusIn",
                    "focusOut",
                    "afterGuiAttached",
                  ],
                },
                innerRenderer: {
                  mandatoryMethodList: [],
                  optionalMethodList: ["afterGuiAttached"],
                  functionAdapter:
                    this.agComponentUtils.adaptCellRendererFunction.bind(
                      this.agComponentUtils
                    ),
                },
                fullWidthCellRenderer: {
                  mandatoryMethodList: [],
                  optionalMethodList: ["refresh", "afterGuiAttached"],
                  functionAdapter:
                    this.agComponentUtils.adaptCellRendererFunction.bind(
                      this.agComponentUtils
                    ),
                },
                pinnedRowCellRenderer: {
                  mandatoryMethodList: [],
                  optionalMethodList: ["refresh", "afterGuiAttached"],
                  functionAdapter:
                    this.agComponentUtils.adaptCellRendererFunction.bind(
                      this.agComponentUtils
                    ),
                },
                groupRowRenderer: {
                  mandatoryMethodList: [],
                  optionalMethodList: ["afterGuiAttached"],
                  functionAdapter:
                    this.agComponentUtils.adaptCellRendererFunction.bind(
                      this.agComponentUtils
                    ),
                },
                filter: {
                  mandatoryMethodList: [
                    "isFilterActive",
                    "doesFilterPass",
                    "getModel",
                    "setModel",
                  ],
                  optionalMethodList: [
                    "afterGuiAttached",
                    "onNewRowsLoaded",
                    "getModelAsString",
                    "onFloatingFilterChanged",
                  ],
                },
                filterComponent: {
                  mandatoryMethodList: [
                    "isFilterActive",
                    "doesFilterPass",
                    "getModel",
                    "setModel",
                  ],
                  optionalMethodList: [
                    "afterGuiAttached",
                    "onNewRowsLoaded",
                    "getModelAsString",
                    "onFloatingFilterChanged",
                  ],
                },
                statusPanel: {
                  mandatoryMethodList: [],
                  optionalMethodList: ["afterGuiAttached"],
                },
                toolPanel: {
                  mandatoryMethodList: [],
                  optionalMethodList: ["refresh", "afterGuiAttached"],
                },
                tooltipComponent: {
                  mandatoryMethodList: [],
                  optionalMethodList: [],
                },
              };
            }),
            (e.prototype.retrieve = function (t) {
              return this.componentMetaData[t];
            }),
            Vu(
              [ut("agComponentUtils")],
              e.prototype,
              "agComponentUtils",
              void 0
            ),
            Vu([st], e.prototype, "postConstruct", null),
            Vu([lt("componentMetadataProvider")], e)
          );
        })(Ht),
        Hu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Bu = (function () {
          function t() {}
          return (
            (t.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (t.prototype.postConstruct = function () {
              (this.doingMasterDetail =
                this.gridOptionsWrapper.isMasterDetail()),
                this.gridOptionsWrapper.isRowModelDefault() &&
                  (this.clientSideRowModel = this.rowModel),
                this.gridOptionsWrapper.isRowModelServerSide() &&
                  (this.serverSideRowModel = this.rowModel);
            }),
            Hu(
              [ut("resizeObserverService")],
              t.prototype,
              "resizeObserverService",
              void 0
            ),
            Hu([ut("paginationProxy")], t.prototype, "paginationProxy", void 0),
            Hu([ut("context")], t.prototype, "context", void 0),
            Hu([ut("columnApi")], t.prototype, "columnApi", void 0),
            Hu([ut("gridApi")], t.prototype, "gridApi", void 0),
            Hu(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            Hu(
              [ut("expressionService")],
              t.prototype,
              "expressionService",
              void 0
            ),
            Hu([ut("rowRenderer")], t.prototype, "rowRenderer", void 0),
            Hu([ut("$compile")], t.prototype, "$compile", void 0),
            Hu([ut("templateService")], t.prototype, "templateService", void 0),
            Hu([ut("valueService")], t.prototype, "valueService", void 0),
            Hu([ut("eventService")], t.prototype, "eventService", void 0),
            Hu(
              [ut("columnController")],
              t.prototype,
              "columnController",
              void 0
            ),
            Hu(
              [ut("headerNavigationService")],
              t.prototype,
              "headerNavigationService",
              void 0
            ),
            Hu(
              [ut("columnAnimationService")],
              t.prototype,
              "columnAnimationService",
              void 0
            ),
            Hu([pt("rangeController")], t.prototype, "rangeController", void 0),
            Hu([ut("focusController")], t.prototype, "focusController", void 0),
            Hu(
              [pt("contextMenuFactory")],
              t.prototype,
              "contextMenuFactory",
              void 0
            ),
            Hu([ut("popupService")], t.prototype, "popupService", void 0),
            Hu(
              [ut("valueFormatterService")],
              t.prototype,
              "valueFormatterService",
              void 0
            ),
            Hu([ut("stylingService")], t.prototype, "stylingService", void 0),
            Hu(
              [ut("columnHoverService")],
              t.prototype,
              "columnHoverService",
              void 0
            ),
            Hu(
              [ut("userComponentFactory")],
              t.prototype,
              "userComponentFactory",
              void 0
            ),
            Hu([ut("animationFrameService")], t.prototype, "taskQueue", void 0),
            Hu(
              [ut("dragAndDropService")],
              t.prototype,
              "dragAndDropService",
              void 0
            ),
            Hu([ut("sortController")], t.prototype, "sortController", void 0),
            Hu([ut("filterManager")], t.prototype, "filterManager", void 0),
            Hu(
              [ut("maxDivHeightScaler")],
              t.prototype,
              "maxDivHeightScaler",
              void 0
            ),
            Hu(
              [ut("frameworkOverrides")],
              t.prototype,
              "frameworkOverrides",
              void 0
            ),
            Hu(
              [ut("detailRowCompCache")],
              t.prototype,
              "detailRowCompCache",
              void 0
            ),
            Hu(
              [ut("cellPositionUtils")],
              t.prototype,
              "cellPositionUtils",
              void 0
            ),
            Hu(
              [ut("rowPositionUtils")],
              t.prototype,
              "rowPositionUtils",
              void 0
            ),
            Hu(
              [ut("selectionController")],
              t.prototype,
              "selectionController",
              void 0
            ),
            Hu(
              [pt("selectionHandleFactory")],
              t.prototype,
              "selectionHandleFactory",
              void 0
            ),
            Hu(
              [ut("rowCssClassCalculator")],
              t.prototype,
              "rowCssClassCalculator",
              void 0
            ),
            Hu([ut("rowModel")], t.prototype, "rowModel", void 0),
            Hu([st], t.prototype, "postConstruct", null),
            Hu([lt("beans")], t)
          );
        })(),
        ju = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Uu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        zu = {
          "ag-theme-custom": {
            headerHeight: 25,
            headerCellMinWidth: 24,
            listItemHeight: 20,
            rowHeight: 25,
            chartMenuPanelWidth: 220,
          },
          "ag-theme-material": {
            headerHeight: 56,
            headerCellMinWidth: 48,
            listItemHeight: 32,
            rowHeight: 48,
            chartMenuPanelWidth: 240,
          },
          "ag-theme-balham": {
            headerHeight: 32,
            headerCellMinWidth: 24,
            listItemHeight: 24,
            rowHeight: 28,
            chartMenuPanelWidth: 220,
          },
          "ag-theme-alpine": {
            headerHeight: 48,
            headerCellMinWidth: 36,
            listItemHeight: 24,
            rowHeight: 42,
            chartMenuPanelWidth: 240,
          },
        },
        Ku = {
          headerHeight: ["ag-header-row"],
          headerCellMinWidth: ["ag-header-cell"],
          listItemHeight: ["ag-virtual-list-item"],
          rowHeight: ["ag-row"],
          chartMenuPanelWidth: ["ag-chart-docked-container"],
        },
        Yu = {},
        Xu = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            ju(e, t),
            (e.prototype.getSassVariable = function (t, e) {
              var o =
                  "ag-theme-" +
                  (t.match("material")
                    ? "material"
                    : t.match("balham")
                    ? "balham"
                    : t.match("alpine")
                    ? "alpine"
                    : "custom"),
                n = zu[o][e],
                r = 0;
              Yu[t] || (Yu[t] = {});
              var i = Yu[t][e];
              if (null != i) return i;
              if (Ku[e]) {
                var s = Ku[e],
                  a = document.createElement("div");
                He(a, t), (a.style.position = "absolute");
                var l = s.reduce(function (t, e) {
                  var o = document.createElement("div");
                  return (
                    (o.style.position = "static"), He(o, e), t.appendChild(o), o
                  );
                }, a);
                if (document.body) {
                  document.body.appendChild(a);
                  var u =
                    -1 !== e.toLowerCase().indexOf("height")
                      ? "height"
                      : "width";
                  (r = parseInt(window.getComputedStyle(l)[u], 10)),
                    document.body.removeChild(a);
                }
              }
              return (Yu[t][e] = r || n), Yu[t][e];
            }),
            (e.prototype.isThemeDark = function () {
              var t = this.getTheme().theme;
              return !!t && t.indexOf("dark") >= 0;
            }),
            (e.prototype.chartMenuPanelWidth = function () {
              var t = this.getTheme().themeFamily;
              return this.getSassVariable(t, "chartMenuPanelWidth");
            }),
            (e.prototype.getTheme = function () {
              for (
                var t = /\bag-(material|(?:theme-([\w\-]*)))\b/,
                  e = this.eGridDiv,
                  o = null;
                e && !(o = t.exec(e.className));

              )
                e = e.parentElement || void 0;
              if (!o) return {};
              var n = o[0];
              if (void 0 === o[2]) {
                var r = n.replace("ag-", "ag-theme-");
                q(function () {
                  return console.warn(
                    "AG Grid: As of v19 old theme are no longer provided. Please replace " +
                      n +
                      " with " +
                      r +
                      "."
                  );
                }, "using-old-theme");
              }
              return { theme: n, el: e, themeFamily: n.replace(/-dark$/, "") };
            }),
            Uu([ut("eGridDiv")], e.prototype, "eGridDiv", void 0),
            Uu([lt("environment")], e)
          );
        })(Ht),
        qu = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Qu = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Zu = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.createTasksP1 = { list: [], sorted: !1 }),
              (e.createTasksP2 = { list: [], sorted: !1 }),
              (e.destroyTasks = []),
              (e.ticking = !1),
              (e.scrollGoingDown = !0),
              (e.lastScrollTop = 0),
              (e.taskCount = 0),
              (e.cancelledTasks = new Set()),
              e
            );
          }
          return (
            qu(e, t),
            (e.prototype.setScrollTop = function (t) {
              (this.scrollGoingDown = t > this.lastScrollTop),
                (this.lastScrollTop = t);
            }),
            (e.prototype.init = function () {
              this.useAnimationFrame =
                !this.gridOptionsWrapper.isSuppressAnimationFrame();
            }),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.verifyAnimationFrameOn = function (t) {
              !1 === this.useAnimationFrame &&
                console.warn(
                  "AG Grid: AnimationFrameService." +
                    t +
                    " called but animation frames are off"
                );
            }),
            (e.prototype.createTask = function (t, e, o) {
              this.verifyAnimationFrameOn(o);
              var n = { task: t, index: e, createOrder: ++this.taskCount };
              this.addTaskToList(this[o], n), this.schedule();
            }),
            (e.prototype.cancelTask = function (t) {
              this.cancelledTasks.add(t);
            }),
            (e.prototype.addTaskToList = function (t, e) {
              t.list.push(e), (t.sorted = !1);
            }),
            (e.prototype.sortTaskList = function (t) {
              if (!t.sorted) {
                var e = this.scrollGoingDown ? 1 : -1;
                t.list.sort(function (t, o) {
                  return t.index !== o.index
                    ? e * (o.index - t.index)
                    : o.createOrder - t.createOrder;
                }),
                  (t.sorted = !0);
              }
            }),
            (e.prototype.addDestroyTask = function (t) {
              this.verifyAnimationFrameOn("createTasksP3"),
                this.destroyTasks.push(t),
                this.schedule();
            }),
            (e.prototype.executeFrame = function (t) {
              this.verifyAnimationFrameOn("executeFrame");
              for (
                var e = this.createTasksP1,
                  o = e.list,
                  n = this.createTasksP2,
                  r = n.list,
                  i = this.destroyTasks,
                  s = new Date().getTime(),
                  a = new Date().getTime() - s,
                  l = t <= 0;
                l || a < t;

              ) {
                if (!this.gridPanel.executeAnimationFrameScroll()) {
                  var u = void 0;
                  if (o.length) this.sortTaskList(e), (u = o.pop().task);
                  else if (r.length) this.sortTaskList(n), (u = r.pop().task);
                  else {
                    if (!i.length) {
                      this.cancelledTasks.clear();
                      break;
                    }
                    u = i.pop();
                  }
                  this.cancelledTasks.has(u) || u();
                }
                a = new Date().getTime() - s;
              }
              o.length || r.length || i.length
                ? this.requestFrame()
                : this.stopTicking();
            }),
            (e.prototype.stopTicking = function () {
              this.ticking = !1;
              var t = {
                type: zt.EVENT_ANIMATION_QUEUE_EMPTY,
                columnApi: this.gridOptionsWrapper.getColumnApi(),
                api: this.gridOptionsWrapper.getApi(),
              };
              this.eventService.dispatchEvent(t);
            }),
            (e.prototype.flushAllFrames = function () {
              this.useAnimationFrame && this.executeFrame(-1);
            }),
            (e.prototype.schedule = function () {
              this.useAnimationFrame &&
                (this.ticking || ((this.ticking = !0), this.requestFrame()));
            }),
            (e.prototype.requestFrame = function () {
              var t = this.executeFrame.bind(this, 60);
              window.requestAnimationFrame
                ? window.requestAnimationFrame(t)
                : window.webkitRequestAnimationFrame
                ? window.webkitRequestAnimationFrame(t)
                : window.setTimeout(t, 0);
            }),
            (e.prototype.isQueueEmpty = function () {
              return !this.ticking;
            }),
            Qu([st], e.prototype, "init", null),
            Qu([lt("animationFrameService")], e)
          );
        })(Ht),
        $u = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ju = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        tp = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.timeLastPageEventProcessed = 0), e;
          }
          return (
            $u(e, t),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.handlePageScrollingKey = function (t) {
              var e = t.which || t.keyCode,
                o = t.altKey,
                n = t.ctrlKey || t.metaKey,
                r = this.mouseEventService.getCellPositionForEvent(t);
              if (!r) return !1;
              var i = !1;
              switch (e) {
                case $n.PAGE_HOME:
                case $n.PAGE_END:
                  n || o || (this.onHomeOrEndKey(e), (i = !0));
                  break;
                case $n.LEFT:
                case $n.RIGHT:
                  n && !o && (this.onCtrlLeftOrRight(e, r), (i = !0));
                  break;
                case $n.UP:
                case $n.DOWN:
                  n && !o && (this.onCtrlUpOrDown(e, r), (i = !0));
                  break;
                case $n.PAGE_DOWN:
                  n || o || (this.onPageDown(r), (i = !0));
                  break;
                case $n.PAGE_UP:
                  n || o || (this.onPageUp(r), (i = !0));
              }
              return i && t.preventDefault(), i;
            }),
            (e.prototype.isTimeSinceLastPageEventToRecent = function () {
              return (
                new Date().getTime() - this.timeLastPageEventProcessed < 100
              );
            }),
            (e.prototype.setTimeLastPageEventProcessed = function () {
              this.timeLastPageEventProcessed = new Date().getTime();
            }),
            (e.prototype.navigateTo = function (t) {
              var e = t.scrollIndex,
                o = t.scrollType,
                n = t.scrollColumn,
                i = t.focusIndex,
                s = t.focusColumn;
              r(n) && this.gridPanel.ensureColumnVisible(n),
                r(e) && this.gridPanel.ensureIndexVisible(e, o),
                this.animationFrameService.flushAllFrames(),
                this.focusController.setFocusedCell(i, s, null, !0),
                this.rangeController &&
                  this.rangeController.setRangeToCell({
                    rowIndex: i,
                    rowPinned: null,
                    column: s,
                  });
            }),
            (e.prototype.onPageDown = function (t) {
              if (!this.isTimeSinceLastPageEventToRecent()) {
                var e = this.gridPanel.getVScrollPosition(),
                  o = this.gridOptionsWrapper.getScrollbarWidth(),
                  n = e.bottom - e.top;
                this.gridPanel.isHorizontalScrollShowing() && (n -= o);
                var r = this.paginationProxy.getPixelOffset(),
                  i = this.paginationProxy.getRowIndexAtPixel(e.top + n + r),
                  s = this.paginationProxy.getRow(t.rowIndex).rowTop,
                  a = this.paginationProxy.getRowIndexAtPixel(s + n - r + r),
                  l = this.paginationProxy.getPageLastRow();
                a > l && (a = l),
                  i > l && (i = l),
                  this.navigateTo({
                    scrollIndex: i,
                    scrollType: "top",
                    scrollColumn: null,
                    focusIndex: a,
                    focusColumn: t.column,
                  }),
                  this.setTimeLastPageEventProcessed();
              }
            }),
            (e.prototype.onPageUp = function (t) {
              if (!this.isTimeSinceLastPageEventToRecent()) {
                var e = this.gridPanel.getVScrollPosition(),
                  o = this.gridOptionsWrapper.getScrollbarWidth(),
                  n = e.bottom - e.top;
                this.gridPanel.isHorizontalScrollShowing() && (n -= o);
                var r = this.paginationProxy.getPixelOffset(),
                  i = this.paginationProxy.getRowIndexAtPixel(e.top + r),
                  s = this.paginationProxy.getRow(t.rowIndex),
                  a = this.paginationProxy.getRowIndexAtPixel(
                    s.rowTop + s.rowHeight - n - r + r
                  ),
                  l = this.paginationProxy.getPageFirstRow();
                a < l && (a = l),
                  i < l && (i = l),
                  this.navigateTo({
                    scrollIndex: i,
                    scrollType: "bottom",
                    scrollColumn: null,
                    focusIndex: a,
                    focusColumn: t.column,
                  }),
                  this.setTimeLastPageEventProcessed();
              }
            }),
            (e.prototype.getIndexToFocus = function (t, e) {
              var o = t;
              if (e) {
                var n = this.paginationProxy.getRow(t);
                n && n.stub && (o -= 1);
              }
              return o;
            }),
            (e.prototype.onCtrlUpOrDown = function (t, e) {
              var o = t === $n.UP,
                n = o
                  ? this.paginationProxy.getPageFirstRow()
                  : this.paginationProxy.getPageLastRow();
              this.navigateTo({
                scrollIndex: n,
                scrollType: null,
                scrollColumn: e.column,
                focusIndex: this.getIndexToFocus(n, !o),
                focusColumn: e.column,
              });
            }),
            (e.prototype.onCtrlLeftOrRight = function (t, e) {
              var o = t === $n.LEFT,
                n = this.columnController.getAllDisplayedColumns(),
                r = o ? n[0] : y(n);
              this.navigateTo({
                scrollIndex: e.rowIndex,
                scrollType: null,
                scrollColumn: r,
                focusIndex: e.rowIndex,
                focusColumn: r,
              });
            }),
            (e.prototype.onHomeOrEndKey = function (t) {
              var e = t === $n.PAGE_HOME,
                o = this.columnController.getAllDisplayedColumns(),
                n = e ? o[0] : y(o),
                r = e
                  ? this.paginationProxy.getPageFirstRow()
                  : this.paginationProxy.getPageLastRow();
              this.navigateTo({
                scrollIndex: r,
                scrollType: null,
                scrollColumn: n,
                focusIndex: this.getIndexToFocus(r, !e),
                focusColumn: n,
              });
            }),
            Ju(
              [ut("mouseEventService")],
              e.prototype,
              "mouseEventService",
              void 0
            ),
            Ju([ut("paginationProxy")], e.prototype, "paginationProxy", void 0),
            Ju([ut("focusController")], e.prototype, "focusController", void 0),
            Ju(
              [ut("animationFrameService")],
              e.prototype,
              "animationFrameService",
              void 0
            ),
            Ju([pt("rangeController")], e.prototype, "rangeController", void 0),
            Ju(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Ju([lt("navigationService")], e)
          );
        })(Ht),
        ep = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        op = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        np = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.scrollY = 0), (e.uiBodyHeight = 0), e;
          }
          return (
            ep(e, t),
            (e.prototype.postConstruct = function () {
              this.addManagedListener(
                this.eventService,
                zt.EVENT_BODY_HEIGHT_CHANGED,
                this.updateOffset.bind(this)
              ),
                (this.maxDivHeight = Ie());
            }),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.isScaling = function () {
              return this.scaling;
            }),
            (e.prototype.getOffset = function () {
              return this.offset;
            }),
            (e.prototype.updateOffset = function () {
              if (this.scaling) {
                var t = this.gridPanel.getVScrollPosition().top,
                  e = this.getUiBodyHeight();
                (t !== this.scrollY || e !== this.uiBodyHeight) &&
                  ((this.scrollY = t),
                  (this.uiBodyHeight = e),
                  this.calculateOffset());
              }
            }),
            (e.prototype.calculateOffset = function () {
              (this.uiContainerHeight = this.maxDivHeight),
                (this.pixelsToShave =
                  this.modelHeight - this.uiContainerHeight),
                (this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight),
                this.setOffset(
                  (this.scrollY / this.maxScrollY) * this.pixelsToShave
                );
            }),
            (e.prototype.clearOffset = function () {
              (this.uiContainerHeight = this.modelHeight),
                (this.pixelsToShave = 0),
                this.setOffset(0);
            }),
            (e.prototype.setOffset = function (t) {
              var e = "number" == typeof t ? Math.floor(t) : null;
              this.offset !== e &&
                ((this.offset = e),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_HEIGHT_SCALE_CHANGED,
                }));
            }),
            (e.prototype.setModelHeight = function (t) {
              (this.modelHeight = t),
                (this.scaling = this.maxDivHeight > 0 && t > this.maxDivHeight),
                this.scaling ? this.calculateOffset() : this.clearOffset();
            }),
            (e.prototype.getUiContainerHeight = function () {
              return this.uiContainerHeight;
            }),
            (e.prototype.getRealPixelPosition = function (t) {
              return t - this.offset;
            }),
            (e.prototype.getUiBodyHeight = function () {
              var t = this.gridPanel.getVScrollPosition();
              return t.bottom - t.top;
            }),
            (e.prototype.getScrollPositionForPixel = function (t) {
              if (this.pixelsToShave <= 0) return t;
              var e = this.modelHeight - this.getUiBodyHeight();
              return this.maxScrollY * (t / e);
            }),
            op([st], e.prototype, "postConstruct", null),
            op([lt("maxDivHeightScaler")], e)
          );
        })(Ht),
        rp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ip = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        sp = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            rp(e, t),
            (e.prototype.init = function () {
              (this.groupSelectsChildren =
                this.gridOptionsWrapper.isGroupSelectsChildren()),
                (this.isRowSelectableFunc =
                  this.gridOptionsWrapper.getIsRowSelectableFunc());
            }),
            (e.prototype.updateSelectableAfterGrouping = function (t) {
              this.isRowSelectableFunc &&
                this.recurseDown(t.childrenAfterGroup, function (t) {
                  return t.childrenAfterGroup;
                });
            }),
            (e.prototype.updateSelectableAfterFiltering = function (t) {
              this.isRowSelectableFunc &&
                this.recurseDown(t.childrenAfterGroup, function (t) {
                  return t.childrenAfterFilter;
                });
            }),
            (e.prototype.recurseDown = function (t, e) {
              var o = this;
              t &&
                t.forEach(function (t) {
                  var n;
                  t.group &&
                    (t.hasChildren() && o.recurseDown(e(t), e),
                    (n = o.groupSelectsChildren
                      ? r(c(e(t), "selectable", !0))
                      : !!o.isRowSelectableFunc && o.isRowSelectableFunc(t)),
                    t.setRowSelectable(n));
                });
            }),
            ip([st], e.prototype, "init", null),
            ip([lt("selectableService")], e)
          );
        })(Ht),
        ap = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        lp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        up = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            ap(e, t),
            (e.prototype.registerGridComp = function (t) {
              this.gridPanel = t;
            }),
            (e.prototype.getPreferredHeightForRow = function (t) {
              var e = this,
                o = document.createElement("div");
              this.addInRowCssClasses(t, o);
              var n = this.gridPanel.getCenterContainer();
              n.appendChild(o);
              var r = Vs.createChildScopeOrNull(
                  t,
                  this.$scope,
                  this.beans.gridOptionsWrapper
                ),
                i = r ? r.scope : void 0,
                s = r ? r.scopeDestroyFunc : void 0,
                a = [],
                l = this.columnController.getAllAutoRowHeightCols(),
                u = this.columnController.getAllDisplayedColumns();
              l.filter(function (t) {
                return u.indexOf(t) >= 0;
              }).forEach(function (n) {
                var r = new Gs(i, e.beans, n, t, null, !0, !1);
                r.setParentRow(o), a.push(r);
              });
              var p = a
                .map(function (t) {
                  return t.getCreateTemplate();
                })
                .join(" ");
              (o.innerHTML = p),
                a.forEach(function (t) {
                  return t.afterAttached();
                }),
                i && this.$compile(o)(i);
              for (var c = 0, d = 0; d < o.children.length; d++) {
                var h = o.children[d];
                h.offsetHeight > c && (c = h.offsetHeight);
              }
              return (
                n.removeChild(o),
                a.forEach(function (t) {
                  t.detach(), t.destroy();
                }),
                s && s(),
                c
              );
            }),
            (e.prototype.addInRowCssClasses = function (t, e) {
              var o = t.rowIndex,
                n = {
                  rowNode: t,
                  rowIsEven: o % 2 == 0,
                  rowLevel: this.rowCssClassCalculator.calculateRowLevel(t),
                  firstRowOnPage:
                    o === this.beans.paginationProxy.getPageFirstRow(),
                  lastRowOnPage:
                    o === this.beans.paginationProxy.getPageLastRow(),
                  printLayout: !1,
                  expandable: t.isExpandable(),
                };
              He(
                e,
                this.rowCssClassCalculator.getInitialRowClasses(n).join(" ")
              );
            }),
            lp([ut("beans")], e.prototype, "beans", void 0),
            lp([ut("$scope")], e.prototype, "$scope", void 0),
            lp(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            lp(
              [ut("rowCssClassCalculator")],
              e.prototype,
              "rowCssClassCalculator",
              void 0
            ),
            lp([ut("$compile")], e.prototype, "$compile", void 0),
            lp([lt("autoHeightCalculator")], e)
          );
        })(Ht),
        pp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        cp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        dp = (function (t) {
          function e() {
            var e = t.call(this) || this;
            return (
              (e.previousAndFirstButtonsDisabled = !1),
              (e.nextButtonDisabled = !1),
              (e.lastButtonDisabled = !1),
              e
            );
          }
          return (
            pp(e, t),
            (e.prototype.postConstruct = function () {
              var t = this,
                e = this.gridOptionsWrapper.isEnableRtl();
              this.setTemplate(this.getTemplate()),
                this.btFirst.insertAdjacentElement(
                  "afterbegin",
                  yn(e ? "last" : "first", this.gridOptionsWrapper)
                ),
                this.btPrevious.insertAdjacentElement(
                  "afterbegin",
                  yn(e ? "next" : "previous", this.gridOptionsWrapper)
                ),
                this.btNext.insertAdjacentElement(
                  "afterbegin",
                  yn(e ? "previous" : "next", this.gridOptionsWrapper)
                ),
                this.btLast.insertAdjacentElement(
                  "afterbegin",
                  yn(e ? "first" : "last", this.gridOptionsWrapper)
                ),
                this.gridOptionsWrapper.isPagination() &&
                !this.gridOptionsWrapper.isSuppressPaginationPanel()
                  ? (this.addManagedListener(
                      this.eventService,
                      zt.EVENT_PAGINATION_CHANGED,
                      this.onPaginationChanged.bind(this)
                    ),
                    [
                      { el: this.btFirst, fn: this.onBtFirst.bind(this) },
                      { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },
                      { el: this.btNext, fn: this.onBtNext.bind(this) },
                      { el: this.btLast, fn: this.onBtLast.bind(this) },
                    ].forEach(function (e) {
                      var o = e.el,
                        n = e.fn;
                      t.addManagedListener(o, "click", n),
                        t.addManagedListener(o, "keydown", function (t) {
                          (t.keyCode !== $n.ENTER && t.keyCode !== $n.SPACE) ||
                            (t.preventDefault(), n());
                        });
                    }),
                    this.onPaginationChanged())
                  : this.setDisplayed(!1);
            }),
            (e.prototype.onPaginationChanged = function () {
              this.enableOrDisableButtons(),
                this.updateRowLabels(),
                this.setCurrentPageLabel(),
                this.setTotalLabels();
            }),
            (e.prototype.onBtFirst = function () {
              this.previousAndFirstButtonsDisabled ||
                this.paginationProxy.goToFirstPage();
            }),
            (e.prototype.setCurrentPageLabel = function () {
              var t = this.paginationProxy.getTotalPages() > 0,
                e = this.paginationProxy.getCurrentPage();
              this.lbCurrent.innerHTML = this.formatNumber(t ? e + 1 : 0);
            }),
            (e.prototype.formatNumber = function (t) {
              var e =
                this.gridOptionsWrapper.getPaginationNumberFormatterFunc();
              return e ? e({ value: t }) : le(t);
            }),
            (e.prototype.getTemplate = function () {
              var t = this.gridOptionsWrapper.getLocaleTextFunc(),
                e = t("page", "Page"),
                o = t("to", "to"),
                n = t("of", "of"),
                r = t("firstPage", "First Page"),
                i = t("previousPage", "Previous Page"),
                s = t("nextPage", "Next Page"),
                a = t("lastPage", "Last Page"),
                l = this.getCompId();
              return (
                '<div class="ag-paging-panel ag-unselectable" id="ag-' +
                l +
                '" aria-live="polite" aria-describedby="ag-' +
                l +
                "-start-page ag-" +
                l +
                "-start-page-number ag-" +
                l +
                "-of-page ag-" +
                l +
                "-of-page-number ag-" +
                l +
                "-first-row ag-" +
                l +
                "-to ag-" +
                l +
                "-last-row ag-" +
                l +
                "-of ag-" +
                l +
                '-row-count">\n                <span class="ag-paging-row-summary-panel" aria-hidden="true">\n                    <span id="ag-' +
                l +
                '-first-row" ref="lbFirstRowOnPage" class="ag-paging-row-summary-panel-number"></span>\n                    <span id="ag-' +
                l +
                '-to">' +
                o +
                '</span>\n                    <span id="ag-' +
                l +
                '-last-row" ref="lbLastRowOnPage" class="ag-paging-row-summary-panel-number"></span>\n                    <span id="ag-' +
                l +
                '-of">' +
                n +
                '</span>\n                    <span id="ag-' +
                l +
                '-row-count" ref="lbRecordCount" class="ag-paging-row-summary-panel-number"></span>\n                </span>\n                <span class="ag-paging-page-summary-panel" role="presentation">\n                    <div ref="btFirst" class="ag-paging-button" role="button" aria-label="' +
                r +
                '" tabindex="0"></div>\n                    <div ref="btPrevious" class="ag-paging-button" role="button" aria-label="' +
                i +
                '" tabindex="0"></div>\n                    <span class="ag-paging-description" aria-hidden="true">\n                        <span id="ag-' +
                l +
                '-start-page">' +
                e +
                '</span>\n                        <span id="ag-' +
                l +
                '-start-page-number" ref="lbCurrent" class="ag-paging-number"></span>\n                        <span id="ag-' +
                l +
                '-of-page">' +
                n +
                '</span>\n                        <span id="ag-' +
                l +
                '-of-page-number" ref="lbTotal" class="ag-paging-number"></span>\n                    </span>\n                    <div ref="btNext" class="ag-paging-button" role="button" aria-label="' +
                s +
                '" tabindex="0"></div>\n                    <div ref="btLast" class="ag-paging-button" role="button" aria-label="' +
                a +
                '" tabindex="0"></div>\n                </span>\n            </div>'
              );
            }),
            (e.prototype.onBtNext = function () {
              this.nextButtonDisabled || this.paginationProxy.goToNextPage();
            }),
            (e.prototype.onBtPrevious = function () {
              this.previousAndFirstButtonsDisabled ||
                this.paginationProxy.goToPreviousPage();
            }),
            (e.prototype.onBtLast = function () {
              this.lastButtonDisabled || this.paginationProxy.goToLastPage();
            }),
            (e.prototype.enableOrDisableButtons = function () {
              var t = this.paginationProxy.getCurrentPage(),
                e = this.paginationProxy.isLastPageFound(),
                o = this.paginationProxy.getTotalPages();
              (this.previousAndFirstButtonsDisabled = 0 === t),
                je(
                  this.btFirst,
                  "ag-disabled",
                  this.previousAndFirstButtonsDisabled
                ),
                Bo(this.btFirst, this.previousAndFirstButtonsDisabled),
                je(
                  this.btPrevious,
                  "ag-disabled",
                  this.previousAndFirstButtonsDisabled
                ),
                Bo(this.btPrevious, this.previousAndFirstButtonsDisabled);
              var n = this.isZeroPagesToDisplay();
              (this.nextButtonDisabled = (e && t === o - 1) || n),
                je(this.btNext, "ag-disabled", this.nextButtonDisabled),
                Bo(this.btNext, this.nextButtonDisabled),
                (this.lastButtonDisabled = !e || n || t === o - 1),
                je(this.btLast, "ag-disabled", this.lastButtonDisabled),
                Bo(this.btLast, this.lastButtonDisabled);
            }),
            (e.prototype.updateRowLabels = function () {
              var t,
                e,
                o = this.paginationProxy.getCurrentPage(),
                n = this.paginationProxy.getPageSize(),
                r = this.paginationProxy.isLastPageFound(),
                i = this.paginationProxy.isLastPageFound()
                  ? this.paginationProxy.getMasterRowCount()
                  : null;
              this.isZeroPagesToDisplay()
                ? (t = e = 0)
                : ((e = (t = n * o + 1) + n - 1), r && e > i && (e = i)),
                (this.lbFirstRowOnPage.innerHTML = this.formatNumber(t)),
                (this.lbLastRowOnPage.innerHTML =
                  this.rowNodeBlockLoader.isLoading()
                    ? "?"
                    : this.formatNumber(e));
            }),
            (e.prototype.isZeroPagesToDisplay = function () {
              var t = this.paginationProxy.isLastPageFound(),
                e = this.paginationProxy.getTotalPages();
              return t && 0 === e;
            }),
            (e.prototype.setTotalLabels = function () {
              var t = this.paginationProxy.isLastPageFound(),
                e = this.paginationProxy.getTotalPages(),
                o = t ? this.paginationProxy.getMasterRowCount() : null;
              if (t)
                (this.lbTotal.innerHTML = this.formatNumber(e)),
                  (this.lbRecordCount.innerHTML = this.formatNumber(o));
              else {
                var n = this.gridOptionsWrapper.getLocaleTextFunc()(
                  "more",
                  "more"
                );
                (this.lbTotal.innerHTML = n),
                  (this.lbRecordCount.innerHTML = n);
              }
            }),
            cp([ut("paginationProxy")], e.prototype, "paginationProxy", void 0),
            cp([ut("rowModel")], e.prototype, "rowModel", void 0),
            cp(
              [ut("rowNodeBlockLoader")],
              e.prototype,
              "rowNodeBlockLoader",
              void 0
            ),
            cp([Kn("btFirst")], e.prototype, "btFirst", void 0),
            cp([Kn("btPrevious")], e.prototype, "btPrevious", void 0),
            cp([Kn("btNext")], e.prototype, "btNext", void 0),
            cp([Kn("btLast")], e.prototype, "btLast", void 0),
            cp([Kn("lbRecordCount")], e.prototype, "lbRecordCount", void 0),
            cp(
              [Kn("lbFirstRowOnPage")],
              e.prototype,
              "lbFirstRowOnPage",
              void 0
            ),
            cp([Kn("lbLastRowOnPage")], e.prototype, "lbLastRowOnPage", void 0),
            cp([Kn("lbCurrent")], e.prototype, "lbCurrent", void 0),
            cp([Kn("lbTotal")], e.prototype, "lbTotal", void 0),
            cp([st], e.prototype, "postConstruct", null),
            e
          );
        })(jn),
        hp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        fp = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            hp(e, t),
            (e.prototype.observeResize = function (t, e, o) {
              void 0 === o && (o = 50);
              var n,
                r,
                i,
                s,
                a,
                l = this.getFrameworkOverrides(),
                u = et(e, o),
                p = this.gridOptionsWrapper.isSuppressBrowserResizeObserver();
              return window.ResizeObserver && !p
                ? ((a = new window.ResizeObserver(u)).observe(t),
                  function () {
                    return a.disconnect();
                  })
                : ((n = po(t)),
                  (r = uo(t)),
                  (i = !0),
                  (s = function () {
                    if (i) {
                      var a = po(t),
                        u = uo(t);
                      (a !== n || u !== r) && ((n = a), (r = u), e()),
                        l.setTimeout(s, o);
                    }
                  })(),
                  function () {
                    return (i = !1);
                  });
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("resizeObserverService")], e)
          );
        })(Ht),
        gp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        yp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.Loading = 0)] = "Loading"), (t[(t.NoRows = 1)] = "NoRows");
      })(cl || (cl = {}));
      var mp = (function (t) {
          function e() {
            var o = t.call(this, e.TEMPLATE) || this;
            return (o.inProgress = !1), (o.destroyRequested = !1), o;
          }
          return (
            gp(e, t),
            (e.prototype.postConstruct = function () {
              this.gridOptionsWrapper.addLayoutElement(this.eOverlayWrapper),
                this.setDisplayed(!1);
            }),
            (e.prototype.setWrapperTypeClass = function (t) {
              je(
                this.eOverlayWrapper,
                "ag-overlay-loading-wrapper",
                t === cl.Loading
              ),
                je(
                  this.eOverlayWrapper,
                  "ag-overlay-no-rows-wrapper",
                  t === cl.NoRows
                );
            }),
            (e.prototype.showLoadingOverlay = function () {
              var t = this.userComponentFactory.newLoadingOverlayComponent({
                api: this.gridOptionsWrapper.getApi(),
              });
              this.showOverlay(t, cl.Loading);
            }),
            (e.prototype.showNoRowsOverlay = function () {
              var t = this.userComponentFactory.newNoRowsOverlayComponent({
                api: this.gridOptionsWrapper.getApi(),
              });
              this.showOverlay(t, cl.NoRows);
            }),
            (e.prototype.showOverlay = function (t, e) {
              var o = this;
              this.inProgress ||
                (this.setWrapperTypeClass(e),
                this.destroyActiveOverlay(),
                (this.inProgress = !0),
                t &&
                  t.then(function (t) {
                    (o.inProgress = !1),
                      o.eOverlayWrapper.appendChild(t.getGui()),
                      (o.activeOverlay = t),
                      o.destroyRequested &&
                        ((o.destroyRequested = !1), o.destroyActiveOverlay());
                  }),
                this.setDisplayed(!0));
            }),
            (e.prototype.destroyActiveOverlay = function () {
              this.inProgress
                ? (this.destroyRequested = !0)
                : this.activeOverlay &&
                  ((this.activeOverlay = this.getContext().destroyBean(
                    this.activeOverlay
                  )),
                  ro(this.eOverlayWrapper));
            }),
            (e.prototype.hideOverlay = function () {
              this.destroyActiveOverlay(), this.setDisplayed(!1);
            }),
            (e.prototype.destroy = function () {
              this.destroyActiveOverlay(), t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '\n        <div class="ag-overlay" aria-hidden="true">\n            <div class="ag-overlay-panel">\n                <div class="ag-overlay-wrapper" ref="eOverlayWrapper"></div>\n            </div>\n        </div>'),
            yp(
              [ut("userComponentFactory")],
              e.prototype,
              "userComponentFactory",
              void 0
            ),
            yp([Kn("eOverlayWrapper")], e.prototype, "eOverlayWrapper", void 0),
            yp([st], e.prototype, "postConstruct", null),
            e
          );
        })(jn),
        vp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Cp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        wp = (function (t) {
          function e(o) {
            void 0 === o && (o = {});
            var n = t.call(this, e.getTemplate(o)) || this;
            (n.suppressEnabledCheckbox = !0), (n.suppressOpenCloseIcons = !1);
            var r = o.enabled,
              i = o.items,
              s = o.suppressEnabledCheckbox,
              a = o.suppressOpenCloseIcons;
            return (
              (n.title = o.title),
              (n.cssIdentifier = o.cssIdentifier || "default"),
              (n.enabled = null == r || r),
              (n.items = i || []),
              (n.alignItems = o.alignItems || "center"),
              null != s && (n.suppressEnabledCheckbox = s),
              null != a && (n.suppressOpenCloseIcons = a),
              n
            );
          }
          return (
            vp(e, t),
            (e.getTemplate = function (t) {
              var e = t.cssIdentifier || "default";
              return (
                '<div class="ag-group ag-' +
                e +
                '-group">\n            <div class="ag-group-title-bar ag-' +
                e +
                '-group-title-bar ag-unselectable" ref="eTitleBar">\n                <span class="ag-group-title-bar-icon ag-' +
                e +
                '-group-title-bar-icon" ref="eGroupOpenedIcon"></span>\n                <span class="ag-group-title-bar-icon ag-' +
                e +
                '-group-title-bar-icon" ref="eGroupClosedIcon"></span>\n                <span ref="eTitle" class="ag-group-title ag-' +
                e +
                '-group-title"></span>\n            </div>\n            <div ref="eToolbar" class="ag-group-toolbar ag-' +
                e +
                '-group-toolbar">\n                <ag-checkbox ref="cbGroupEnabled"></ag-checkbox>\n            </div>\n            <div ref="eContainer" class="ag-group-container ag-group-container-' +
                (t.direction || "vertical") +
                " ag-" +
                e +
                '-group-container"></div>\n        </div>'
              );
            }),
            (e.prototype.postConstruct = function () {
              if (this.items.length) {
                var t = this.items;
                (this.items = []), this.addItems(t);
              }
              var e = this.gridOptionsWrapper.getLocaleTextFunc();
              this.cbGroupEnabled.setLabel(e("enabled", "Enabled")),
                this.title && this.setTitle(this.title),
                this.enabled && this.setEnabled(this.enabled),
                this.setAlignItems(this.alignItems),
                this.hideEnabledCheckbox(this.suppressEnabledCheckbox),
                this.hideOpenCloseIcons(this.suppressOpenCloseIcons),
                this.setupExpandContract(),
                this.refreshChildDisplay();
            }),
            (e.prototype.setupExpandContract = function () {
              var t = this;
              this.eGroupClosedIcon.appendChild(
                gn("columnSelectClosed", this.gridOptionsWrapper, null)
              ),
                this.eGroupOpenedIcon.appendChild(
                  gn("columnSelectOpen", this.gridOptionsWrapper, null)
                ),
                this.addManagedListener(this.eTitleBar, "click", function () {
                  return t.toggleGroupExpand();
                }),
                this.addManagedListener(
                  this.eTitleBar,
                  "keydown",
                  function (e) {
                    switch (e.keyCode) {
                      case $n.ENTER:
                        t.toggleGroupExpand();
                        break;
                      case $n.RIGHT:
                        t.toggleGroupExpand(!0);
                        break;
                      case $n.LEFT:
                        t.toggleGroupExpand(!1);
                    }
                  }
                );
            }),
            (e.prototype.refreshChildDisplay = function () {
              var t = !this.suppressOpenCloseIcons;
              Ke(this.eToolbar, this.expanded && !this.suppressEnabledCheckbox),
                Ke(this.eGroupOpenedIcon, t && this.expanded),
                Ke(this.eGroupClosedIcon, t && !this.expanded);
            }),
            (e.prototype.isExpanded = function () {
              return this.expanded;
            }),
            (e.prototype.setAlignItems = function (t) {
              var e = this.getGui();
              return (
                this.alignItems !== t &&
                  Be(e, "ag-group-item-alignment-" + this.alignItems),
                (this.alignItems = t),
                He(e, "ag-group-item-alignment-" + this.alignItems),
                this
              );
            }),
            (e.prototype.toggleGroupExpand = function (t) {
              return this.suppressOpenCloseIcons
                ? ((this.expanded = !0),
                  this.refreshChildDisplay(),
                  Ke(this.eContainer, !0),
                  this)
                : (this.expanded === (t = null != t ? t : !this.expanded) ||
                    ((this.expanded = t),
                    this.refreshChildDisplay(),
                    Ke(this.eContainer, t),
                    this.dispatchEvent({
                      type: this.expanded
                        ? e.EVENT_EXPANDED
                        : e.EVENT_COLLAPSED,
                    })),
                  this);
            }),
            (e.prototype.addItems = function (t) {
              var e = this;
              t.forEach(function (t) {
                return e.addItem(t);
              });
            }),
            (e.prototype.addItem = function (t) {
              var e = this.eContainer,
                o = t instanceof jn ? t.getGui() : t;
              He(o, "ag-group-item"),
                He(o, "ag-" + this.cssIdentifier + "-group-item"),
                e.appendChild(o),
                this.items.push(o);
            }),
            (e.prototype.hideItem = function (t, e) {
              je(this.items[e], "ag-hidden", t);
            }),
            (e.prototype.setTitle = function (t) {
              return (this.eTitle.innerText = t), this;
            }),
            (e.prototype.addCssClassToTitleBar = function (t) {
              He(this.eTitleBar, t);
            }),
            (e.prototype.setEnabled = function (t, e) {
              return (
                (this.enabled = t),
                this.refreshDisabledStyles(),
                this.toggleGroupExpand(t),
                e || this.cbGroupEnabled.setValue(t),
                this
              );
            }),
            (e.prototype.isEnabled = function () {
              return this.enabled;
            }),
            (e.prototype.onEnableChange = function (t) {
              var e = this;
              return (
                this.cbGroupEnabled.onValueChange(function (o) {
                  e.setEnabled(o, !0), t(o);
                }),
                this
              );
            }),
            (e.prototype.hideEnabledCheckbox = function (t) {
              return (
                (this.suppressEnabledCheckbox = t),
                this.refreshChildDisplay(),
                this.refreshDisabledStyles(),
                this
              );
            }),
            (e.prototype.hideOpenCloseIcons = function (t) {
              return (
                (this.suppressOpenCloseIcons = t),
                t && this.toggleGroupExpand(!0),
                this
              );
            }),
            (e.prototype.refreshDisabledStyles = function () {
              je(this.getGui(), "ag-disabled", !this.enabled),
                this.suppressEnabledCheckbox && !this.enabled
                  ? (He(this.eTitleBar, "ag-disabled-group-title-bar"),
                    this.eTitleBar.removeAttribute("tabindex"))
                  : (Be(this.eTitleBar, "ag-disabled-group-title-bar"),
                    this.eTitleBar.setAttribute("tabindex", "0")),
                je(
                  this.eContainer,
                  "ag-disabled-group-container",
                  !this.enabled
                );
            }),
            (e.EVENT_EXPANDED = "expanded"),
            (e.EVENT_COLLAPSED = "collapsed"),
            Cp([Kn("eTitleBar")], e.prototype, "eTitleBar", void 0),
            Cp(
              [Kn("eGroupOpenedIcon")],
              e.prototype,
              "eGroupOpenedIcon",
              void 0
            ),
            Cp(
              [Kn("eGroupClosedIcon")],
              e.prototype,
              "eGroupClosedIcon",
              void 0
            ),
            Cp([Kn("eToolbar")], e.prototype, "eToolbar", void 0),
            Cp([Kn("cbGroupEnabled")], e.prototype, "cbGroupEnabled", void 0),
            Cp([Kn("eTitle")], e.prototype, "eTitle", void 0),
            Cp([Kn("eContainer")], e.prototype, "eContainer", void 0),
            Cp([st], e.prototype, "postConstruct", null),
            e
          );
        })(jn),
        bp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ep = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Sp = (function (t) {
          function e(o) {
            var n = t.call(this, e.getTemplate(o)) || this;
            return (
              (n.closable = !0),
              (n.positioned = !1),
              (n.dragStartPosition = { x: 0, y: 0 }),
              (n.position = { x: 0, y: 0 }),
              (n.size = { width: void 0, height: void 0 }),
              (n.config = o),
              n
            );
          }
          return (
            bp(e, t),
            (e.getTemplate = function (t) {
              var e = (t && t.cssIdentifier) || "default";
              return (
                '<div class="ag-panel ag-' +
                e +
                '-panel" tabindex="-1">\n            <div ref="eTitleBar" class="ag-panel-title-bar ag-' +
                e +
                '-panel-title-bar ag-unselectable">\n                <span ref="eTitle" class="ag-panel-title-bar-title ag-' +
                e +
                '-panel-title-bar-title"></span>\n                <div ref="eTitleBarButtons" class="ag-panel-title-bar-buttons ag-' +
                e +
                '-panel-title-bar-buttons"></div>\n            </div>\n            <div ref="eContentWrapper" class="ag-panel-content-wrapper ag-' +
                e +
                '-panel-content-wrapper"></div>\n        </div>'
              );
            }),
            (e.prototype.postConstruct = function () {
              var t = this,
                e = this.config,
                o = e.component,
                n = e.closable,
                r = e.hideTitleBar,
                i = e.title,
                s = e.minWidth,
                a = e.width,
                l = e.minHeight,
                u = e.height,
                p = e.centered,
                c = e.x,
                d = e.y,
                h = this.getGui();
              o && this.setBodyComponent(o),
                r
                  ? He(this.eTitleBar, "ag-hidden")
                  : (i && this.setTitle(i),
                    this.setClosable(null != n ? n : this.closable)),
                this.addManagedListener(
                  this.eTitleBar,
                  "mousedown",
                  function (e) {
                    if (
                      h.contains(e.relatedTarget) ||
                      h.contains(document.activeElement) ||
                      t.eTitleBarButtons.contains(e.target)
                    )
                      e.preventDefault();
                    else {
                      var o = t.eContentWrapper.querySelector(
                        "button, [href], input, select, textarea, [tabindex]"
                      );
                      o && o.focus();
                    }
                  }
                ),
                this.positioned ||
                  ((this.minHeight = null != l ? l : 250),
                  (this.minWidth = null != s ? s : 250),
                  (this.popupParent = this.popupService.getPopupParent()),
                  a && this.setWidth(a),
                  u && this.setHeight(u),
                  this.renderComponent && this.renderComponent(),
                  (a && u) || this.refreshSize(),
                  p ? this.center() : (c || d) && this.offsetElement(c, d),
                  (this.positioned = !0),
                  (this.eContentWrapper.style.height = "0"));
            }),
            (e.prototype.renderComponent = function () {
              var t = this,
                e = this.getGui();
              e.focus(),
                (this.close = function () {
                  e.parentElement.removeChild(e), t.destroy();
                });
            }),
            (e.prototype.updateDragStartPosition = function (t, e) {
              this.dragStartPosition = { x: t, y: e };
            }),
            (e.prototype.calculateMouseMovement = function (t) {
              var e = this.popupParent.getBoundingClientRect(),
                o = t.e,
                n = t.isLeft,
                r = t.isTop,
                i = t.anywhereWithin,
                s = t.topBuffer,
                a = o.clientX - this.dragStartPosition.x,
                l = o.clientY - this.dragStartPosition.y,
                u = this.getWidth(),
                p = this.getHeight(),
                c =
                  (e.left >= o.clientX && this.position.x <= 0) ||
                  (e.right <= o.clientX &&
                    e.right <= this.position.x + e.left + u);
              return (
                c ||
                  (c = n
                    ? (a < 0 && o.clientX > this.position.x + e.left) ||
                      (a > 0 && o.clientX < this.position.x + e.left)
                    : i
                    ? (a < 0 && o.clientX > this.position.x + e.left + u) ||
                      (a > 0 && o.clientX < this.position.x + e.left)
                    : (a < 0 && o.clientX > this.position.x + e.left + u) ||
                      (a > 0 && o.clientX < this.position.x + e.left + u)),
                {
                  movementX: (a = c ? 0 : a),
                  movementY: (l =
                    (e.top >= o.clientY && this.position.y <= 0) ||
                    (e.bottom <= o.clientY &&
                      e.bottom <= this.position.y + e.top + p) ||
                    (r &&
                      ((l < 0 &&
                        o.clientY > this.position.y + e.top + (s || 0)) ||
                        (l > 0 && o.clientY < this.position.y + e.top))) ||
                    (!r &&
                      ((l < 0 && o.clientY > this.position.y + e.top + p) ||
                        (l > 0 && o.clientY < this.position.y + e.top + p)))
                      ? 0
                      : l),
                }
              );
            }),
            (e.prototype.refreshSize = function () {
              var t = this.size,
                e = t.height;
              t.width || this.setWidth(this.getGui().offsetWidth),
                e || this.setHeight(this.getGui().offsetHeight);
            }),
            (e.prototype.offsetElement = function (t, e) {
              void 0 === t && (t = 0), void 0 === e && (e = 0);
              var o = this.getGui();
              this.popupService.positionPopup({
                ePopup: o,
                x: t,
                y: e,
                minWidth: this.minWidth,
                minHeight: this.minHeight,
                keepWithinBounds: !0,
              }),
                (this.position.x = parseInt(o.style.left, 10)),
                (this.position.y = parseInt(o.style.top, 10));
            }),
            (e.prototype.getHeight = function () {
              return this.size.height;
            }),
            (e.prototype.setHeight = function (t) {
              var e = this.getGui(),
                o = !1;
              if ("string" == typeof t && -1 !== t.indexOf("%"))
                wo(e, t), (t = Je(e)), (o = !0);
              else {
                t = Math.max(this.minHeight, t);
                var n = e.offsetParent;
                n &&
                  n.clientHeight &&
                  t + this.position.y > n.clientHeight &&
                  (t = n.clientHeight - this.position.y);
              }
              this.size.height !== t &&
                ((this.size.height = t),
                o
                  ? ((e.style.maxHeight = "unset"),
                    (e.style.minHeight = "unset"))
                  : wo(e, t));
            }),
            (e.prototype.getWidth = function () {
              return this.size.width;
            }),
            (e.prototype.setWidth = function (t) {
              var e = this.getGui(),
                o = !1;
              if ("string" == typeof t && -1 !== t.indexOf("%"))
                Co(e, t), (t = to(e)), (o = !0);
              else {
                t = Math.max(this.minWidth, t);
                var n = e.offsetParent;
                n &&
                  n.clientWidth &&
                  t + this.position.x > n.clientWidth &&
                  (t = n.clientWidth - this.position.x);
              }
              this.size.width !== t &&
                ((this.size.width = t),
                o
                  ? ((e.style.maxWidth = "unset"), (e.style.minWidth = "unset"))
                  : Co(e, t));
            }),
            (e.prototype.center = function () {
              var t = this.getGui(),
                e = t.offsetParent.clientWidth / 2 - this.getWidth() / 2,
                o = t.offsetParent.clientHeight / 2 - this.getHeight() / 2;
              this.offsetElement(e, o);
            }),
            (e.prototype.setClosable = function (t) {
              if ((t !== this.closable && (this.closable = t), t)) {
                var o = (this.closeButtonComp = new jn(e.CLOSE_BTN_TEMPLATE));
                this.getContext().createBean(o),
                  (n = o.getGui()).appendChild(
                    He(
                      yn("close", this.gridOptionsWrapper),
                      "ag-panel-title-bar-button-icon"
                    )
                  ),
                  this.addTitleBarButton(o),
                  o.addManagedListener(n, "click", this.onBtClose.bind(this));
              } else if (this.closeButtonComp) {
                var n;
                (n = this.closeButtonComp.getGui()).parentElement.removeChild(
                  n
                ),
                  (this.closeButtonComp = this.destroyBean(
                    this.closeButtonComp
                  ));
              }
            }),
            (e.prototype.setBodyComponent = function (t) {
              t.setParentComponent(this),
                this.eContentWrapper.appendChild(t.getGui());
            }),
            (e.prototype.addTitleBarButton = function (t, e) {
              var o = this.eTitleBarButtons,
                n = o.children,
                r = n.length;
              null == e && (e = r), (e = Math.max(0, Math.min(e, r)));
              var i = t.getGui();
              He(i, "ag-panel-title-bar-button"),
                0 === e
                  ? o.insertAdjacentElement("afterbegin", i)
                  : e === r
                  ? o.insertAdjacentElement("beforeend", i)
                  : n[e - 1].insertAdjacentElement("afterend", i),
                t.setParentComponent(this);
            }),
            (e.prototype.getBodyHeight = function () {
              return Ze(this.eContentWrapper);
            }),
            (e.prototype.getBodyWidth = function () {
              return $e(this.eContentWrapper);
            }),
            (e.prototype.setTitle = function (t) {
              this.eTitle.innerText = t;
            }),
            (e.prototype.onBtClose = function () {
              this.close();
            }),
            (e.prototype.destroy = function () {
              this.closeButtonComp &&
                (this.closeButtonComp = this.destroyBean(this.closeButtonComp));
              var e = this.getGui();
              e && e.offsetParent && this.close(),
                t.prototype.destroy.call(this);
            }),
            (e.CLOSE_BTN_TEMPLATE = '<div class="ag-button"></div>'),
            Ep([ut("popupService")], e.prototype, "popupService", void 0),
            Ep([Kn("eContentWrapper")], e.prototype, "eContentWrapper", void 0),
            Ep([Kn("eTitleBar")], e.prototype, "eTitleBar", void 0),
            Ep(
              [Kn("eTitleBarButtons")],
              e.prototype,
              "eTitleBarButtons",
              void 0
            ),
            Ep([Kn("eTitle")], e.prototype, "eTitle", void 0),
            Ep([st], e.prototype, "postConstruct", null),
            e
          );
        })(jn),
        Op = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        _p = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            return (
              (o.RESIZE_TEMPLATE =
                '<div class="ag-resizer-wrapper">\n            <div ref="eTopLeftResizer" class="ag-resizer ag-resizer-topLeft"></div>\n            <div ref="eTopResizer" class="ag-resizer ag-resizer-top"></div>\n            <div ref="eTopRightResizer" class="ag-resizer ag-resizer-topRight"></div>\n            <div ref="eRightResizer" class="ag-resizer ag-resizer-right"></div>\n            <div ref="eBottomRightResizer" class="ag-resizer ag-resizer-bottomRight"></div>\n            <div ref="eBottomResizer" class="ag-resizer ag-resizer-bottom"></div>\n            <div ref="eBottomLeftResizer" class="ag-resizer ag-resizer-bottomLeft"></div>\n            <div ref="eLeftResizer" class="ag-resizer ag-resizer-left"></div>\n        </div>'),
              (o.resizable = {}),
              (o.movable = !1),
              (o.isMoving = !1),
              (o.isMaximizable = !1),
              (o.isMaximized = !1),
              (o.maximizeListeners = []),
              (o.resizeListenerDestroy = null),
              (o.isResizing = !1),
              (o.lastPosition = { x: 0, y: 0, width: 0, height: 0 }),
              o
            );
          }
          return (
            Op(e, t),
            (e.prototype.postConstruct = function () {
              var e = this,
                o = this.getGui(),
                n = this.config,
                r = n.movable,
                i = n.resizable,
                s = n.maximizable;
              He(o, "ag-dialog"),
                (this.moveElement = this.eTitleBar),
                t.prototype.postConstruct.call(this),
                this.addManagedListener(o, "focusin", function (t) {
                  o.contains(t.relatedTarget) ||
                    e.popupService.bringPopupToFront(o);
                }),
                r && this.setMovable(r),
                s && this.setMaximizable(s),
                this.addResizers(),
                i && this.setResizable(i);
            }),
            (e.prototype.renderComponent = function () {
              var t = this.getGui(),
                e = this.config,
                o = e.alwaysOnTop,
                n = this.popupService.addPopup({
                  modal: e.modal,
                  eChild: t,
                  closeOnEsc: !0,
                  closedCallback: this.destroy.bind(this),
                  alwaysOnTop: o,
                });
              n && (this.close = n.hideFunc);
            }),
            (e.prototype.addResizers = function () {
              var t = this.getGui();
              if (t) {
                var e = new DOMParser().parseFromString(
                  this.RESIZE_TEMPLATE,
                  "text/html"
                ).body;
                t.appendChild(e.firstChild), this.createMap();
              }
            }),
            (e.prototype.createMap = function () {
              var t = this.getGui();
              this.resizerMap = {
                topLeft: { element: t.querySelector("[ref=eTopLeftResizer]") },
                top: { element: t.querySelector("[ref=eTopResizer]") },
                topRight: {
                  element: t.querySelector("[ref=eTopRightResizer]"),
                },
                right: { element: t.querySelector("[ref=eRightResizer]") },
                bottomRight: {
                  element: t.querySelector("[ref=eBottomRightResizer]"),
                },
                bottom: { element: t.querySelector("[ref=eBottomResizer]") },
                bottomLeft: {
                  element: t.querySelector("[ref=eBottomLeftResizer]"),
                },
                left: { element: t.querySelector("[ref=eLeftResizer]") },
              };
            }),
            (e.prototype.getResizerElement = function (t) {
              return this.resizerMap[t].element;
            }),
            (e.prototype.onResizeStart = function (t) {
              (this.isResizing = !0),
                this.updateDragStartPosition(t.clientX, t.clientY);
            }),
            (e.prototype.onResize = function (t, e) {
              if (this.isResizing) {
                var o = !!e.match(/left/i),
                  n = !!e.match(/right/i),
                  r = !!e.match(/top/i),
                  i = !!e.match(/bottom/i),
                  s = o || n,
                  a = r || i,
                  l = this.calculateMouseMovement({
                    e: t,
                    isLeft: o,
                    isTop: r,
                  }),
                  u = l.movementX,
                  p = l.movementY,
                  c = 0,
                  d = 0;
                if (s && u) {
                  var h = o ? -1 : 1,
                    f = this.getWidth(),
                    g = f + u * h,
                    y = !1;
                  o &&
                    (this.position.x + (c = f - g) <= 0 ||
                      g <= this.minWidth) &&
                    ((y = !0), (c = 0)),
                    y || this.setWidth(g);
                }
                if (a && p) {
                  h = r ? -1 : 1;
                  var m = this.getHeight(),
                    v = m + p * h,
                    C = !1;
                  r &&
                    (this.position.y + (d = m - v) <= 0 ||
                      v <= this.minHeight) &&
                    ((C = !0), (d = 0)),
                    C || this.setHeight(v);
                }
                this.updateDragStartPosition(t.clientX, t.clientY),
                  (c || d) &&
                    this.offsetElement(
                      this.position.x + c,
                      this.position.y + d
                    );
              }
            }),
            (e.prototype.onResizeEnd = function () {
              this.isResizing = !1;
              var t = {
                type: "resize",
                api: this.gridOptionsWrapper.getApi(),
                columnApi: this.gridOptionsWrapper.getColumnApi(),
              };
              this.dispatchEvent(t);
            }),
            (e.prototype.onMoveStart = function (t) {
              (this.isMoving = !0),
                this.updateDragStartPosition(t.clientX, t.clientY);
            }),
            (e.prototype.onMove = function (t) {
              if (this.isMoving) {
                var e = this.position,
                  o = e.x,
                  n = e.y,
                  r = this.calculateMouseMovement({
                    e: t,
                    isTop: !0,
                    anywhereWithin: !0,
                    topBuffer: this.getHeight() - this.getBodyHeight(),
                  });
                this.offsetElement(o + r.movementX, n + r.movementY),
                  this.updateDragStartPosition(t.clientX, t.clientY);
              }
            }),
            (e.prototype.onMoveEnd = function () {
              this.isMoving = !1;
            }),
            (e.prototype.toggleMaximize = function () {
              if (this.isMaximized) {
                var t = this.lastPosition,
                  e = t.x,
                  o = t.y,
                  n = t.height;
                this.setWidth(t.width),
                  this.setHeight(n),
                  this.offsetElement(e, o);
              } else
                (this.lastPosition.width = this.getWidth()),
                  (this.lastPosition.height = this.getHeight()),
                  (this.lastPosition.x = this.position.x),
                  (this.lastPosition.y = this.position.y),
                  this.offsetElement(0, 0),
                  this.setHeight("100%"),
                  this.setWidth("100%");
              (this.isMaximized = !this.isMaximized),
                this.refreshMaximizeIcon();
            }),
            (e.prototype.refreshMaximizeIcon = function () {
              Ke(this.maximizeIcon, !this.isMaximized),
                Ke(this.minimizeIcon, this.isMaximized);
            }),
            (e.prototype.clearMaximizebleListeners = function () {
              this.maximizeListeners.length &&
                (this.maximizeListeners.forEach(function (t) {
                  return t();
                }),
                (this.maximizeListeners.length = 0)),
                this.resizeListenerDestroy &&
                  (this.resizeListenerDestroy(),
                  (this.resizeListenerDestroy = null));
            }),
            (e.prototype.destroy = function () {
              this.setResizable(!1),
                this.setMovable(!1),
                (this.maximizeButtonComp = this.destroyBean(
                  this.maximizeButtonComp
                )),
                this.clearMaximizebleListeners(),
                t.prototype.destroy.call(this);
            }),
            (e.prototype.setResizable = function (t) {
              var e = this;
              "boolean" == typeof t &&
                (t = {
                  topLeft: t,
                  top: t,
                  topRight: t,
                  right: t,
                  bottomRight: t,
                  bottom: t,
                  bottomLeft: t,
                  left: t,
                }),
                Object.keys(t).forEach(function (o) {
                  var n = o,
                    r = !!t[n],
                    i = e.getResizerElement(n),
                    s = e.resizerMap[n].dragSource || {
                      eElement: i,
                      onDragStart: e.onResizeStart.bind(e),
                      onDragging: function (t) {
                        return e.onResize(t, n);
                      },
                      onDragStop: e.onResizeEnd.bind(e),
                    };
                  (!!e.resizable[n] === r && (e.isAlive() || r)) ||
                    (r
                      ? (e.dragService.addDragSource(s),
                        (i.style.pointerEvents = "all"))
                      : (e.dragService.removeDragSource(s),
                        (i.style.pointerEvents = "none")),
                    (e.resizerMap[n].dragSource = r ? s : void 0));
                });
            }),
            (e.prototype.setMovable = function (t) {
              if (t !== this.movable) {
                this.movable = t;
                var e = this.moveElementDragListener || {
                  eElement: this.moveElement,
                  onDragStart: this.onMoveStart.bind(this),
                  onDragging: this.onMove.bind(this),
                  onDragStop: this.onMoveEnd.bind(this),
                };
                t
                  ? (this.dragService.addDragSource(e),
                    (this.moveElementDragListener = e))
                  : (this.dragService.removeDragSource(e),
                    (this.moveElementDragListener = void 0));
              }
            }),
            (e.prototype.setMaximizable = function (t) {
              var e = this;
              if (!t)
                return (
                  this.clearMaximizebleListeners(),
                  void (
                    this.maximizeButtonComp &&
                    (this.destroyBean(this.maximizeButtonComp),
                    (this.maximizeButtonComp =
                      this.maximizeIcon =
                      this.minimizeIcon =
                        void 0))
                  )
                );
              var o = this.eTitleBar;
              if (o && t !== this.isMaximizable) {
                var n = (this.maximizeButtonComp = this.createBean(
                    new jn('<div class="ag-dialog-button"></span>')
                  )),
                  r = n.getGui();
                r.appendChild(
                  (this.maximizeIcon = yn("maximize", this.gridOptionsWrapper))
                ),
                  He(this.maximizeIcon, "ag-panel-title-bar-button-icon"),
                  r.appendChild(
                    (this.minimizeIcon = yn(
                      "minimize",
                      this.gridOptionsWrapper
                    ))
                  ),
                  He(this.minimizeIcon, "ag-panel-title-bar-button-icon"),
                  He(this.minimizeIcon, "ag-hidden"),
                  n.addManagedListener(
                    r,
                    "click",
                    this.toggleMaximize.bind(this)
                  ),
                  this.addTitleBarButton(n, 0),
                  this.maximizeListeners.push(
                    this.addManagedListener(
                      o,
                      "dblclick",
                      this.toggleMaximize.bind(this)
                    )
                  ),
                  (this.resizeListenerDestroy = this.addManagedListener(
                    this,
                    "resize",
                    function () {
                      (e.isMaximized = !1), e.refreshMaximizeIcon();
                    }
                  ));
              }
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([ut("dragService")], e.prototype, "dragService", void 0),
            e
          );
        })(Sp),
        Rp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Pp = (function (t) {
          function e(e, o, n) {
            return (
              void 0 === o && (o = "ag-text-field"),
              void 0 === n && (n = "text"),
              t.call(this, e, o, n) || this
            );
          }
          return (
            Rp(e, t),
            (e.prototype.postConstruct = function () {
              t.prototype.postConstruct.call(this),
                this.config.allowedCharPattern &&
                  this.preventDisallowedCharacters();
            }),
            (e.prototype.setValue = function (e, o) {
              var n = t.prototype.setValue.call(this, e, o);
              return (
                this.eInput.value !== e && (this.eInput.value = r(e) ? e : ""),
                n
              );
            }),
            (e.prototype.preventDisallowedCharacters = function () {
              var t = new RegExp("[" + this.config.allowedCharPattern + "]");
              this.addManagedListener(this.eInput, "keypress", function (e) {
                e.key && !t.test(e.key) && e.preventDefault();
              }),
                this.addManagedListener(this.eInput, "paste", function (e) {
                  P(e.clipboardData.getData("text"), function (e) {
                    return !t.test(e);
                  }) && e.preventDefault();
                });
            }),
            e
          );
        })(ra),
        Tp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ap = (function (t) {
          function e(e) {
            return t.call(this, e, "ag-text-area", null, "textarea") || this;
          }
          return (
            Tp(e, t),
            (e.prototype.setValue = function (e, o) {
              var n = t.prototype.setValue.call(this, e, o);
              return (this.eInput.value = e), n;
            }),
            (e.prototype.setCols = function (t) {
              return (this.eInput.cols = t), this;
            }),
            (e.prototype.setRows = function (t) {
              return (this.eInput.rows = t), this;
            }),
            e
          );
        })(ra),
        Dp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        xp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Fp = (function (t) {
          function e(o) {
            var n = t.call(this, o, e.TEMPLATE) || this;
            return (n.labelAlignment = "top"), n;
          }
          return (
            Dp(e, t),
            (e.prototype.init = function () {
              He(this.eSlider.getGui(), "ag-slider-field");
            }),
            (e.prototype.onValueChange = function (t) {
              var e = this,
                o = ea.EVENT_CHANGED;
              return (
                this.addManagedListener(this.eText, o, function () {
                  var o = parseFloat(e.eText.getValue());
                  e.eSlider.setValue(o.toString(), !0), t(o || 0);
                }),
                this.addManagedListener(this.eSlider, o, function () {
                  var o = e.eSlider.getValue();
                  e.eText.setValue(o, !0), t(parseFloat(o));
                }),
                this
              );
            }),
            (e.prototype.setSliderWidth = function (t) {
              return this.eSlider.setWidth(t), this;
            }),
            (e.prototype.setTextFieldWidth = function (t) {
              return this.eText.setWidth(t), this;
            }),
            (e.prototype.setMinValue = function (t) {
              return this.eSlider.setMinValue(t), this.eText.setMin(t), this;
            }),
            (e.prototype.setMaxValue = function (t) {
              return this.eSlider.setMaxValue(t), this.eText.setMax(t), this;
            }),
            (e.prototype.getValue = function () {
              return this.eText.getValue();
            }),
            (e.prototype.setValue = function (t) {
              return (
                this.getValue() === t ||
                  (this.eText.setValue(t, !0),
                  this.eSlider.setValue(t, !0),
                  this.dispatchEvent({ type: ea.EVENT_CHANGED })),
                this
              );
            }),
            (e.prototype.setStep = function (t) {
              return this.eSlider.setStep(t), this.eText.setStep(t), this;
            }),
            (e.TEMPLATE =
              '<div class="ag-slider">\n            <label ref="eLabel"></label>\n            <div class="ag-wrapper ag-slider-wrapper">\n                <ag-input-range ref="eSlider"></ag-input-range>\n                <ag-input-number-field ref="eText"></ag-input-number-field>\n            </div>\n        </div>'),
            xp([Kn("eLabel")], e.prototype, "eLabel", void 0),
            xp([Kn("eSlider")], e.prototype, "eSlider", void 0),
            xp([Kn("eText")], e.prototype, "eText", void 0),
            xp([st], e.prototype, "init", null),
            e
          );
        })(Js),
        Np = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Mp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ip = (function (t) {
          function e(o) {
            var n = t.call(this, e.TEMPLATE) || this;
            return (
              (n.H = 1),
              (n.S = 1),
              (n.B = 1),
              (n.A = 1),
              (n.isSpectrumDragging = !1),
              (n.isSpectrumHueDragging = !1),
              (n.isSpectrumAlphaDragging = !1),
              (n.colorChanged = !1),
              (n.picker = o.picker),
              n
            );
          }
          return (
            Np(e, t),
            (e.prototype.postConstruct = function () {
              var t = this.getGui();
              this.initRecentColors(),
                this.addManagedListener(
                  this.spectrumVal,
                  "mousedown",
                  this.onSpectrumDraggerDown.bind(this)
                ),
                this.addManagedListener(
                  t,
                  "mousemove",
                  this.onSpectrumDraggerMove.bind(this)
                ),
                this.addManagedListener(
                  this.spectrumHue,
                  "mousedown",
                  this.onSpectrumHueDown.bind(this)
                ),
                this.addManagedListener(
                  t,
                  "mousemove",
                  this.onSpectrumHueMove.bind(this)
                ),
                this.addManagedListener(
                  this.spectrumAlpha,
                  "mousedown",
                  this.onSpectrumAlphaDown.bind(this)
                ),
                this.addManagedListener(
                  t,
                  "mousemove",
                  this.onSpectrumAlphaMove.bind(this)
                ),
                this.addManagedListener(
                  document,
                  "mouseup",
                  this.onMouseUp.bind(this)
                ),
                this.addManagedListener(
                  this.recentColors,
                  "click",
                  this.onRecentColorClick.bind(this)
                );
            }),
            (e.prototype.refreshSpectrumRect = function () {
              return (this.spectrumValRect =
                this.spectrumVal.getBoundingClientRect());
            }),
            (e.prototype.refreshHueRect = function () {
              return (this.spectrumHueRect =
                this.spectrumHue.getBoundingClientRect());
            }),
            (e.prototype.refreshAlphaRect = function () {
              return (this.spectrumAlphaRect =
                this.spectrumAlpha.getBoundingClientRect());
            }),
            (e.prototype.onSpectrumDraggerDown = function (t) {
              this.refreshSpectrumRect(),
                (this.isSpectrumDragging = !0),
                this.moveDragger(t);
            }),
            (e.prototype.onSpectrumDraggerMove = function (t) {
              this.isSpectrumDragging && this.moveDragger(t);
            }),
            (e.prototype.onSpectrumHueDown = function (t) {
              this.refreshHueRect(),
                (this.isSpectrumHueDragging = !0),
                this.moveHueSlider(t);
            }),
            (e.prototype.onSpectrumHueMove = function (t) {
              this.isSpectrumHueDragging && this.moveHueSlider(t);
            }),
            (e.prototype.onSpectrumAlphaDown = function (t) {
              this.refreshAlphaRect(),
                (this.isSpectrumAlphaDragging = !0),
                this.moveAlphaSlider(t);
            }),
            (e.prototype.onSpectrumAlphaMove = function (t) {
              this.isSpectrumAlphaDragging && this.moveAlphaSlider(t);
            }),
            (e.prototype.onMouseUp = function () {
              (this.isSpectrumDragging = !1),
                (this.isSpectrumHueDragging = !1),
                (this.isSpectrumAlphaDragging = !1);
            }),
            (e.prototype.moveDragger = function (t) {
              var e = this.spectrumValRect;
              if (e) {
                var o = t.clientX - e.left,
                  n = t.clientY - e.top;
                (o = Math.max(o, 0)),
                  (o = Math.min(o, e.width)),
                  (n = Math.max(n, 0)),
                  (n = Math.min(n, e.height)),
                  this.setSpectrumValue(o / e.width, 1 - n / e.height);
              }
            }),
            (e.prototype.moveHueSlider = function (t) {
              var e = this.spectrumHueRect;
              if (e) {
                var o = this.spectrumHueSlider,
                  n = o.getBoundingClientRect(),
                  r = t.clientX - e.left;
                (r = Math.max(r, 0)),
                  (r = Math.min(r, e.width)),
                  (this.H = 1 - r / e.width),
                  (o.style.left = r + n.width / 2 + "px"),
                  this.update();
              }
            }),
            (e.prototype.moveAlphaSlider = function (t) {
              var e = this.spectrumAlphaRect;
              if (e) {
                var o = this.spectrumAlphaSlider,
                  n = o.getBoundingClientRect(),
                  r = t.clientX - e.left;
                (r = Math.max(r, 0)),
                  (r = Math.min(r, e.width)),
                  (this.A = r / e.width),
                  (o.style.left = r + n.width / 2 + "px"),
                  this.update();
              }
            }),
            (e.prototype.update = function () {
              var t = Ce.fromHSB(360 * this.H, this.S, this.B, this.A),
                e = Ce.fromHSB(360 * this.H, 1, 1),
                o = t.toRgbaString(),
                n = this.picker;
              Ce.fromString(n.getValue()).toRgbaString() !== o &&
                (this.colorChanged = !0),
                n.setValue(o),
                (this.spectrumColor.style.backgroundColor = e.toRgbaString()),
                (this.spectrumDragger.style.backgroundColor = o);
            }),
            (e.prototype.setSpectrumValue = function (t, e) {
              var o = this.spectrumValRect || this.refreshSpectrumRect();
              if (o) {
                var n = this.spectrumDragger,
                  r = n.getBoundingClientRect();
                (t = Math.max(0, t)),
                  (t = Math.min(1, t)),
                  (e = Math.max(0, e)),
                  (e = Math.min(1, e)),
                  (this.S = t),
                  (this.B = e),
                  (n.style.left = t * o.width - r.width / 2 + "px"),
                  (n.style.top = (1 - e) * o.height - r.height / 2 + "px"),
                  this.update();
              }
            }),
            (e.prototype.initRecentColors = function () {
              var t = e.recentColors.map(function (t, e) {
                return (
                  '<div class="ag-recent-color" id=' +
                  e +
                  ' style="background-color: ' +
                  t +
                  '; width: 15px; height: 15px;" recent-color="' +
                  t +
                  '"></div>'
                );
              });
              this.recentColors.innerHTML = t.join("");
            }),
            (e.prototype.setValue = function (t) {
              var e = Ce.fromString(t),
                o = e.toHSB(),
                n = o[0],
                r = o[1],
                i = o[2];
              (this.H = (isNaN(n) ? 0 : n) / 360), (this.A = e.a);
              var s = this.spectrumHueRect || this.refreshHueRect(),
                a = this.spectrumAlphaRect || this.refreshAlphaRect();
              (this.spectrumHueSlider.style.left =
                (this.H - 1) * -s.width + "px"),
                (this.spectrumAlphaSlider.style.left = this.A * a.width + "px"),
                this.setSpectrumValue(r, i);
            }),
            (e.prototype.onRecentColorClick = function (t) {
              var o = t.target;
              if (r(o.id)) {
                var n = parseInt(o.id, 10);
                this.setValue(e.recentColors[n]), this.destroy();
              }
            }),
            (e.prototype.addRecentColor = function () {
              var t = Ce.fromHSB(
                  360 * this.H,
                  this.S,
                  this.B,
                  this.A
                ).toRgbaString(),
                o = e.recentColors;
              this.colorChanged &&
                o[0] !== t &&
                ((o = o.filter(function (e) {
                  return e != t;
                })),
                (o = [t].concat(o)).length > e.maxRecentColors &&
                  (o = o.slice(0, e.maxRecentColors)),
                (e.recentColors = o));
            }),
            (e.prototype.destroy = function () {
              this.addRecentColor(), t.prototype.destroy.call(this);
            }),
            (e.maxRecentColors = 8),
            (e.recentColors = []),
            (e.TEMPLATE =
              '<div class="ag-color-panel">\n            <div ref="spectrumColor" class="ag-spectrum-color">\n                <div class="ag-spectrum-sat ag-spectrum-fill">\n                    <div ref="spectrumVal" class="ag-spectrum-val ag-spectrum-fill">\n                        <div ref="spectrumDragger" class="ag-spectrum-dragger"></div>\n                    </div>\n                </div>\n            </div>\n            <div class="ag-spectrum-tools">\n                <div ref="spectrumHue" class="ag-spectrum-hue ag-spectrum-tool">\n                    <div class="ag-spectrum-hue-background"></div>\n                    <div ref="spectrumHueSlider" class="ag-spectrum-slider"></div>\n                </div>\n                <div ref="spectrumAlpha" class="ag-spectrum-alpha ag-spectrum-tool">\n                    <div class="ag-spectrum-alpha-background"></div>\n                    <div ref="spectrumAlphaSlider" class="ag-spectrum-slider"></div>\n                </div>\n                <div ref="recentColors" class="ag-recent-colors"></div>\n            </div>\n        </div>'),
            Mp([Kn("spectrumColor")], e.prototype, "spectrumColor", void 0),
            Mp([Kn("spectrumVal")], e.prototype, "spectrumVal", void 0),
            Mp([Kn("spectrumDragger")], e.prototype, "spectrumDragger", void 0),
            Mp([Kn("spectrumHue")], e.prototype, "spectrumHue", void 0),
            Mp(
              [Kn("spectrumHueSlider")],
              e.prototype,
              "spectrumHueSlider",
              void 0
            ),
            Mp([Kn("spectrumAlpha")], e.prototype, "spectrumAlpha", void 0),
            Mp(
              [Kn("spectrumAlphaSlider")],
              e.prototype,
              "spectrumAlphaSlider",
              void 0
            ),
            Mp([Kn("recentColors")], e.prototype, "recentColors", void 0),
            Mp([st], e.prototype, "postConstruct", null),
            e
          );
        })(jn),
        Lp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Gp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        kp = (function (t) {
          function e(e, o, n, r) {
            var i =
              t.call(
                this,
                e,
                '<div class="ag-picker-field" role="presentation">\n                <div ref="eLabel"></div>\n                <div ref="eWrapper"\n                    class="ag-wrapper ag-picker-field-wrapper"\n                    tabIndex="-1"\n                    ' +
                  (r ? 'aria-haspopup="' + r + '"' : "") +
                  '\n                >\n                    <div ref="eDisplayField" class="ag-picker-field-display"></div>\n                    <div ref="eIcon" class="ag-picker-field-icon" aria-hidden="true"></div>\n                </div>\n            </div>',
                o
              ) || this;
            return (
              (i.pickerIcon = n),
              (i.isPickerDisplayed = !1),
              (i.isDestroyingPicker = !1),
              (i.skipClick = !1),
              i
            );
          }
          return (
            Lp(e, t),
            (e.prototype.postConstruct = function () {
              var e = this;
              t.prototype.postConstruct.call(this);
              var o = this.getCompId() + "-display";
              this.eDisplayField.setAttribute("id", o), Ho(this.eWrapper, o);
              var n = function () {
                  e.skipClick
                    ? (e.skipClick = !1)
                    : e.isDisabled() || (e.pickerComponent = e.showPicker());
                },
                r = this.getGui();
              if (
                (this.addManagedListener(r, "mousedown", function (t) {
                  !e.skipClick &&
                    e.pickerComponent &&
                    e.pickerComponent.isAlive() &&
                    so(e.pickerComponent.getGui()) &&
                    r.contains(t.target) &&
                    (e.skipClick = !0);
                }),
                this.addManagedListener(r, "keydown", function (t) {
                  switch (t.keyCode) {
                    case $n.UP:
                    case $n.DOWN:
                    case $n.ENTER:
                    case $n.SPACE:
                      n();
                    case $n.ESCAPE:
                      e.isPickerDisplayed && t.preventDefault();
                  }
                }),
                this.addManagedListener(this.eWrapper, "click", n),
                this.addManagedListener(this.eLabel, "click", n),
                this.pickerIcon)
              ) {
                var i = yn(this.pickerIcon, this.gridOptionsWrapper);
                i && this.eIcon.appendChild(i);
              }
            }),
            (e.prototype.refreshLabel = function () {
              r(this.getLabel())
                ? Wo(this.eWrapper, this.getLabelId())
                : this.eWrapper.removeAttribute("aria-labelledby"),
                t.prototype.refreshLabel.call(this);
            }),
            (e.prototype.setAriaLabel = function (t) {
              return Vo(this.eWrapper, t), this;
            }),
            (e.prototype.setInputWidth = function (t) {
              return vo(this.eWrapper, t), this;
            }),
            (e.prototype.getFocusableElement = function () {
              return this.eWrapper;
            }),
            Gp([Kn("eLabel")], e.prototype, "eLabel", void 0),
            Gp([Kn("eWrapper")], e.prototype, "eWrapper", void 0),
            Gp([Kn("eDisplayField")], e.prototype, "eDisplayField", void 0),
            Gp([Kn("eIcon")], e.prototype, "eIcon", void 0),
            e
          );
        })(ea),
        Vp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Wp = (function (t) {
          function e(e) {
            var o = t.call(this, e, "ag-color-picker", "colorPicker") || this;
            return e && e.color && (o.value = e.color), o;
          }
          return (
            Vp(e, t),
            (e.prototype.postConstruct = function () {
              t.prototype.postConstruct.call(this),
                this.value && this.setValue(this.value);
            }),
            (e.prototype.showPicker = function () {
              var t = this,
                e = this.getGui().getBoundingClientRect(),
                o = this.createBean(
                  new _p({
                    closable: !1,
                    modal: !0,
                    hideTitleBar: !0,
                    minWidth: 190,
                    width: 190,
                    height: 250,
                    x: e.right - 190,
                    y: e.top - 250,
                  })
                );
              (this.isPickerDisplayed = !0), He(o.getGui(), "ag-color-dialog");
              var n = this.createBean(new Ip({ picker: this }));
              return (
                n.addDestroyFunc(function () {
                  o.isAlive() && t.destroyBean(o);
                }),
                o.setParentComponent(this),
                o.setBodyComponent(n),
                n.setValue(this.getValue()),
                o.addDestroyFunc(function () {
                  t.isDestroyingPicker
                    ? (t.isDestroyingPicker = !1)
                    : ((t.isDestroyingPicker = !0),
                      n.isAlive() && t.destroyBean(n)),
                    t.isAlive() && t.getFocusableElement().focus(),
                    (t.isPickerDisplayed = !1);
                }),
                o
              );
            }),
            (e.prototype.setValue = function (e) {
              return this.value === e
                ? this
                : ((this.eDisplayField.style.backgroundColor = e),
                  t.prototype.setValue.call(this, e));
            }),
            (e.prototype.getValue = function () {
              return this.value;
            }),
            e
          );
        })(kp),
        Hp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Bp = (function (t) {
          function e(e) {
            return t.call(this, e, "ag-number-field", "number") || this;
          }
          return (
            Hp(e, t),
            (e.prototype.postConstruct = function () {
              var e = this;
              t.prototype.postConstruct.call(this),
                this.addManagedListener(this.eInput, "blur", function () {
                  var t = parseFloat(e.eInput.value),
                    o = isNaN(t) ? "" : e.normalizeValue(t.toString());
                  e.value !== o && e.setValue(o);
                });
            }),
            (e.prototype.normalizeValue = function (t) {
              if ("" === t) return "";
              this.precision && (t = this.adjustPrecision(t));
              var e = parseFloat(t);
              return (
                null != this.min && e < this.min
                  ? (t = this.min.toString())
                  : null != this.max &&
                    e > this.max &&
                    (t = this.max.toString()),
                t
              );
            }),
            (e.prototype.adjustPrecision = function (t) {
              if (this.precision) {
                var e = parseFloat(t).toFixed(this.precision);
                t = parseFloat(e).toString();
              }
              return t;
            }),
            (e.prototype.setMin = function (t) {
              return (
                this.min === t || ((this.min = t), Po(this.eInput, "min", t)),
                this
              );
            }),
            (e.prototype.setMax = function (t) {
              return (
                this.max === t || ((this.max = t), Po(this.eInput, "max", t)),
                this
              );
            }),
            (e.prototype.setPrecision = function (t) {
              return (this.precision = t), this;
            }),
            (e.prototype.setStep = function (t) {
              return (
                this.step === t ||
                  ((this.step = t), Po(this.eInput, "step", t)),
                this
              );
            }),
            (e.prototype.setValue = function (e, o) {
              return (e = this.adjustPrecision(e)) != this.normalizeValue(e)
                ? this
                : t.prototype.setValue.call(this, e, o);
            }),
            e
          );
        })(Pp),
        jp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Up = (function (t) {
          function e(e) {
            return t.call(this, e, "ag-range-field", "range") || this;
          }
          return (
            jp(e, t),
            (e.prototype.postConstruct = function () {
              t.prototype.postConstruct.call(this);
              var e = this.config,
                o = e.min,
                n = e.max,
                r = e.step;
              null != o && this.setMinValue(o),
                null != n && this.setMaxValue(n),
                this.setStep(r || 1);
            }),
            (e.prototype.addInputListeners = function () {
              var t = this,
                e = Te();
              this.addManagedListener(
                this.eInput,
                e ? "change" : "input",
                function (e) {
                  t.setValue(e.target.value);
                }
              );
            }),
            (e.prototype.setMinValue = function (t) {
              return (
                (this.min = t),
                this.eInput.setAttribute("min", t.toString()),
                this
              );
            }),
            (e.prototype.setMaxValue = function (t) {
              return (
                (this.max = t),
                this.eInput.setAttribute("max", t.toString()),
                this
              );
            }),
            (e.prototype.setStep = function (t) {
              return this.eInput.setAttribute("step", t.toString()), this;
            }),
            (e.prototype.setValue = function (e, o) {
              null != this.min &&
                (e = Math.max(parseFloat(e), this.min).toString()),
                null != this.max &&
                  (e = Math.min(parseFloat(e), this.max).toString());
              var n = t.prototype.setValue.call(this, e, o);
              return (this.eInput.value = e), n;
            }),
            e
          );
        })(ra),
        zp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Kp = (function (t) {
          function e(e) {
            void 0 === e && (e = "default");
            var o =
              t.call(
                this,
                '<div class="ag-list ag-' + e + '-list" role="listbox"></div>'
              ) || this;
            return (o.cssIdentifier = e), (o.options = []), (o.itemEls = []), o;
          }
          return (
            zp(e, t),
            (e.prototype.init = function () {
              this.addManagedListener(
                this.getGui(),
                "keydown",
                this.handleKeyDown.bind(this)
              );
            }),
            (e.prototype.handleKeyDown = function (t) {
              var e = t.keyCode;
              switch (e) {
                case $n.ENTER:
                  if (this.highlightedEl) {
                    var o = this.itemEls.indexOf(this.highlightedEl);
                    this.setValueByIndex(o);
                  } else this.setValue(this.getValue());
                  break;
                case $n.DOWN:
                case $n.UP:
                  var n = e === $n.DOWN,
                    r = void 0;
                  if ((t.preventDefault(), this.highlightedEl)) {
                    var i =
                      this.itemEls.indexOf(this.highlightedEl) + (n ? 1 : -1);
                    (i = Math.min(Math.max(i, 0), this.itemEls.length - 1)),
                      (r = this.itemEls[i]);
                  } else r = this.itemEls[n ? 0 : this.itemEls.length - 1];
                  this.highlightItem(r);
              }
            }),
            (e.prototype.addOptions = function (t) {
              var e = this;
              return (
                t.forEach(function (t) {
                  return e.addOption(t);
                }),
                this
              );
            }),
            (e.prototype.addOption = function (t) {
              var e = t.value,
                o = Zt(t.text || e);
              return (
                this.options.push({ value: e, text: o }),
                this.renderOption(e, o),
                this
              );
            }),
            (e.prototype.renderOption = function (t, e) {
              var o = this,
                n = document.createElement("div");
              n.setAttribute("role", "option"),
                He(n, "ag-list-item"),
                He(n, "ag-" + this.cssIdentifier + "-list-item"),
                (n.innerHTML = "<span>" + e + "</span>"),
                (n.tabIndex = -1),
                this.itemEls.push(n),
                this.addManagedListener(n, "mouseover", function () {
                  return o.highlightItem(n);
                }),
                this.addManagedListener(n, "mouseleave", function () {
                  return o.clearHighlighted();
                }),
                this.addManagedListener(n, "click", function () {
                  return o.setValue(t);
                }),
                this.getGui().appendChild(n);
            }),
            (e.prototype.setValue = function (t, e) {
              if (this.value === t) return this.fireItemSelected(), this;
              if (null == t) return this.reset(), this;
              var o = _(this.options, function (e) {
                return e.value === t;
              });
              if (-1 !== o) {
                var n = this.options[o];
                (this.value = n.value),
                  (this.displayValue = null != n.text ? n.text : n.value),
                  this.highlightItem(this.itemEls[o]),
                  e || this.fireChangeEvent();
              }
              return this;
            }),
            (e.prototype.setValueByIndex = function (t) {
              return this.setValue(this.options[t].value);
            }),
            (e.prototype.getValue = function () {
              return this.value;
            }),
            (e.prototype.getDisplayValue = function () {
              return this.displayValue;
            }),
            (e.prototype.refreshHighlighted = function () {
              var t = this;
              this.clearHighlighted();
              var e = _(this.options, function (e) {
                return e.value === t.value;
              });
              -1 !== e && this.highlightItem(this.itemEls[e]);
            }),
            (e.prototype.reset = function () {
              (this.value = null),
                (this.displayValue = null),
                this.clearHighlighted(),
                this.fireChangeEvent();
            }),
            (e.prototype.highlightItem = function (t) {
              t.offsetParent &&
                (this.clearHighlighted(),
                (this.highlightedEl = t),
                He(this.highlightedEl, e.ACTIVE_CLASS),
                en(this.highlightedEl, !0),
                this.highlightedEl.focus());
            }),
            (e.prototype.clearHighlighted = function () {
              this.highlightedEl &&
                this.highlightedEl.offsetParent &&
                (Be(this.highlightedEl, e.ACTIVE_CLASS),
                en(this.highlightedEl, !1),
                (this.highlightedEl = null));
            }),
            (e.prototype.fireChangeEvent = function () {
              this.dispatchEvent({ type: ea.EVENT_CHANGED }),
                this.fireItemSelected();
            }),
            (e.prototype.fireItemSelected = function () {
              this.dispatchEvent({ type: e.EVENT_ITEM_SELECTED });
            }),
            (e.EVENT_ITEM_SELECTED = "selectedItem"),
            (e.ACTIVE_CLASS = "ag-active-item"),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              i > 3 && s && Object.defineProperty(e, o, s);
            })([st], e.prototype, "init", null),
            e
          );
        })(jn),
        Yp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Xp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        qp = (function (t) {
          function e(e) {
            return t.call(this, e, "ag-select", "smallDown", "listbox") || this;
          }
          return (
            Yp(e, t),
            (e.prototype.init = function () {
              var t = this;
              (this.listComponent = this.createBean(new Kp("select"))),
                this.listComponent.setParentComponent(this),
                (this.eWrapper.tabIndex = 0),
                this.listComponent.addManagedListener(
                  this.listComponent,
                  Kp.EVENT_ITEM_SELECTED,
                  function () {
                    t.hideList && t.hideList();
                  }
                ),
                this.listComponent.addManagedListener(
                  this.listComponent,
                  ea.EVENT_CHANGED,
                  function () {
                    t.setValue(t.listComponent.getValue(), !1, !0),
                      t.hideList && t.hideList();
                  }
                );
            }),
            (e.prototype.showPicker = function () {
              var t = this,
                e = this.listComponent.getGui(),
                o = this.addManagedListener(
                  document.body,
                  "wheel",
                  function (o) {
                    !e.contains(o.target) && t.hideList && t.hideList();
                  }
                ),
                n = this.addManagedListener(e, "focusout", function (o) {
                  !e.contains(o.relatedTarget) && t.hideList && t.hideList();
                }),
                r = this.popupService.addPopup({
                  modal: !0,
                  eChild: e,
                  closeOnEsc: !0,
                  closedCallback: function () {
                    (t.hideList = null),
                      (t.isPickerDisplayed = !1),
                      n(),
                      o(),
                      t.isAlive() && t.getFocusableElement().focus();
                  },
                });
              return (
                r && (this.hideList = r.hideFunc),
                (this.isPickerDisplayed = !0),
                vo(e, to(this.eWrapper)),
                (e.style.maxHeight =
                  Ze(this.popupService.getPopupParent()) + "px"),
                (e.style.position = "absolute"),
                this.popupService.positionPopupUnderComponent({
                  type: "ag-list",
                  eventSource: this.eWrapper,
                  ePopup: e,
                  keepWithinBounds: !0,
                }),
                this.listComponent.refreshHighlighted(),
                this.listComponent
              );
            }),
            (e.prototype.addOptions = function (t) {
              var e = this;
              return (
                t.forEach(function (t) {
                  return e.addOption(t);
                }),
                this
              );
            }),
            (e.prototype.addOption = function (t) {
              return this.listComponent.addOption(t), this;
            }),
            (e.prototype.setValue = function (e, o, n) {
              return this.value === e
                ? this
                : (n || this.listComponent.setValue(e, !0),
                  this.listComponent.getValue() === this.getValue()
                    ? this
                    : ((this.eDisplayField.innerHTML =
                        this.listComponent.getDisplayValue()),
                      t.prototype.setValue.call(this, e, o)));
            }),
            (e.prototype.destroy = function () {
              this.hideList && this.hideList(),
                this.destroyBean(this.listComponent),
                t.prototype.destroy.call(this);
            }),
            Xp([ut("popupService")], e.prototype, "popupService", void 0),
            Xp([st], e.prototype, "init", null),
            e
          );
        })(kp),
        Qp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Zp = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        $p = (function (t) {
          function e(o) {
            var n = t.call(this, o, e.TEMPLATE) || this;
            return (n.radius = 0), (n.offsetX = 0), (n.offsetY = 0), n;
          }
          return (
            Qp(e, t),
            (e.prototype.postConstruct = function () {
              var e = this;
              t.prototype.postConstruct.call(this),
                (this.dragListener = {
                  eElement: this.eParentCircle,
                  dragStartPixels: 0,
                  onDragStart: function (t) {
                    e.parentCircleRect =
                      e.eParentCircle.getBoundingClientRect();
                  },
                  onDragging: function (t) {
                    return e.calculateAngleDrag(t);
                  },
                  onDragStop: function () {},
                }),
                this.dragService.addDragSource(this.dragListener),
                this.eAngleValue
                  .setLabel("")
                  .setLabelWidth(5)
                  .setInputWidth(45)
                  .setMin(0)
                  .setMax(360)
                  .setValue("" + this.degrees)
                  .onValueChange(function (t) {
                    (null != t && "" !== t) || (t = "0"),
                      (t = e.eAngleValue.normalizeValue(t));
                    var o = parseFloat(t);
                    o > 180 && (o -= 360), e.setValue(o);
                  }),
                this.updateNumberInput(),
                r(this.getValue()) &&
                  this.eAngleValue.setValue(
                    this.normalizeNegativeValue(this.getValue()).toString()
                  ),
                this.addManagedListener(this, ea.EVENT_CHANGED, function () {
                  e.eAngleValue
                    .getInputElement()
                    .contains(document.activeElement) || e.updateNumberInput();
                });
            }),
            (e.prototype.updateNumberInput = function () {
              var t = this.normalizeNegativeValue(this.getValue());
              this.eAngleValue.setValue(t.toString());
            }),
            (e.prototype.positionChildCircle = function (t) {
              var e = this.parentCircleRect || { width: 24, height: 24 },
                o = this.eChildCircle,
                n = e.height / 2;
              (o.style.left = e.width / 2 + 8 * Math.cos(t) + "px"),
                (o.style.top = n + 8 * Math.sin(t) + "px");
            }),
            (e.prototype.calculatePolar = function () {
              var t = this.offsetX,
                e = this.offsetY,
                o = Math.atan2(e, t);
              (this.degrees = this.toDegrees(o)),
                (this.radius = Math.sqrt(t * t + e * e)),
                this.positionChildCircle(o);
            }),
            (e.prototype.calculateCartesian = function () {
              var t = this.toRadians(this.getValue()),
                e = this.getRadius();
              this.setOffsetX(Math.cos(t) * e).setOffsetY(Math.sin(t) * e);
            }),
            (e.prototype.setOffsetX = function (t) {
              return (
                this.offsetX !== t &&
                  ((this.offsetX = t), this.calculatePolar()),
                this
              );
            }),
            (e.prototype.setOffsetY = function (t) {
              return (
                this.offsetY !== t &&
                  ((this.offsetY = t), this.calculatePolar()),
                this
              );
            }),
            (e.prototype.calculateAngleDrag = function (t) {
              var e = this.parentCircleRect,
                o = Math.atan2(
                  t.clientY - e.top - e.height / 2,
                  t.clientX - e.left - e.width / 2
                );
              this.setValue(o, !0);
            }),
            (e.prototype.toDegrees = function (t) {
              return (t / Math.PI) * 180;
            }),
            (e.prototype.toRadians = function (t) {
              return (t / 180) * Math.PI;
            }),
            (e.prototype.normalizeNegativeValue = function (t) {
              return t < 0 ? 360 + t : t;
            }),
            (e.prototype.normalizeAngle180 = function (t) {
              return (
                (t %= 2 * Math.PI) < -Math.PI
                  ? (t += 2 * Math.PI)
                  : t >= Math.PI && (t -= 2 * Math.PI),
                t
              );
            }),
            (e.prototype.getRadius = function () {
              return this.radius;
            }),
            (e.prototype.setRadius = function (t) {
              return (
                this.radius === t ||
                  ((this.radius = t), this.calculateCartesian()),
                this
              );
            }),
            (e.prototype.onValueChange = function (t) {
              var e = this;
              return (
                this.addManagedListener(this, ea.EVENT_CHANGED, function () {
                  t(e.degrees);
                }),
                this
              );
            }),
            (e.prototype.getValue = function (t) {
              return t ? this.toRadians(this.degrees) : this.degrees;
            }),
            (e.prototype.setValue = function (t, e) {
              var o;
              return (
                (o = e ? t : this.normalizeAngle180(this.toRadians(t))),
                (t = this.toDegrees(o)),
                this.degrees !== t &&
                  ((this.degrees = Math.floor(t)),
                  this.calculateCartesian(),
                  this.positionChildCircle(o),
                  this.dispatchEvent({ type: ea.EVENT_CHANGED })),
                this
              );
            }),
            (e.prototype.setWidth = function (t) {
              return Co(this.getGui(), t), this;
            }),
            (e.prototype.destroy = function () {
              this.dragService.removeDragSource(this.dragListener),
                t.prototype.destroy.call(this);
            }),
            (e.TEMPLATE =
              '<div class="ag-angle-select">\n            <div ref="eLabel"></div>\n            <div class="ag-wrapper ag-angle-select-wrapper">\n                <div ref="eAngleSelectField" class="ag-angle-select-field">\n                    <div ref="eParentCircle" class="ag-angle-select-parent-circle">\n                        <div ref="eChildCircle" class="ag-angle-select-child-circle"></div>\n                    </div>\n                </div>\n                <ag-input-number-field ref="eAngleValue"></ag-input-number-field>\n            </div>\n        </div>'),
            Zp([Kn("eLabel")], e.prototype, "eLabel", void 0),
            Zp([Kn("eParentCircle")], e.prototype, "eParentCircle", void 0),
            Zp([Kn("eChildCircle")], e.prototype, "eChildCircle", void 0),
            Zp([Kn("eAngleValue")], e.prototype, "eAngleValue", void 0),
            Zp([ut("dragService")], e.prototype, "dragService", void 0),
            e
          );
        })(Js),
        Jp = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        tc = (function (t) {
          function e(e) {
            return t.call(this, e, "ag-toggle-button") || this;
          }
          return (
            Jp(e, t),
            (e.prototype.setValue = function (e, o) {
              return (
                t.prototype.setValue.call(this, e, o),
                je(this.getGui(), "ag-selected", this.getValue()),
                this
              );
            }),
            e
          );
        })(sa),
        ec = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        oc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        nc = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.cacheItems = []), e;
          }
          return (
            ec(e, t),
            (e.prototype.postConstruct = function () {
              (this.active = this.gridOptionsWrapper.isKeepDetailRows()),
                (this.maxCacheSize =
                  this.gridOptionsWrapper.getKeepDetailRowsCount());
            }),
            (e.prototype.addOrDestroy = function (t, e, o) {
              if (this.active && t.detail) {
                var n = this.getCacheItem(t, !0);
                switch (e) {
                  case vt.PINNED_LEFT:
                    this.destroyFullWidthRow(n.left), (n.left = o);
                    break;
                  case vt.PINNED_RIGHT:
                    this.destroyFullWidthRow(n.right), (n.right = o);
                    break;
                  default:
                    this.destroyFullWidthRow(n.center), (n.center = o);
                }
                this.cacheItems.sort(function (t, e) {
                  return e.lastAccessedTime - t.lastAccessedTime;
                }),
                  this.purgeCache(this.maxCacheSize);
              } else this.destroyFullWidthRow(o);
            }),
            (e.prototype.getCacheItem = function (t, e) {
              void 0 === e && (e = !1);
              for (var o = null, n = 0; n < this.cacheItems.length; n++) {
                var r = this.cacheItems[n];
                if (r.rowNode === t) {
                  o = r;
                  break;
                }
              }
              return (
                !o && e && this.cacheItems.push((o = { rowNode: t })),
                o && this.stampCacheItem(o),
                o
              );
            }),
            (e.prototype.stampCacheItem = function (t) {
              t.lastAccessedTime = new Date().getTime();
            }),
            (e.prototype.destroyFullWidthRow = function (t) {
              this.getContext().destroyBean(t);
            }),
            (e.prototype.purgeCache = function (t) {
              for (var e = t; e < this.cacheItems.length; e++) {
                var o = this.cacheItems[e];
                this.destroyFullWidthRow(o.center),
                  this.destroyFullWidthRow(o.left),
                  this.destroyFullWidthRow(o.right);
              }
              this.cacheItems.length > t && (this.cacheItems.length = t);
            }),
            (e.prototype.get = function (t, e) {
              if (t.detail) {
                var o,
                  n = this.getCacheItem(t);
                if (n)
                  switch (e) {
                    case vt.PINNED_LEFT:
                      n.left && ((o = n.left), (n.left = void 0));
                      break;
                    case vt.PINNED_RIGHT:
                      n.right && ((o = n.right), (n.right = void 0));
                      break;
                    default:
                      n.center && ((o = n.center), (n.center = void 0));
                  }
                return o;
              }
            }),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this), this.purgeCache(0);
            }),
            oc([st], e.prototype, "postConstruct", null),
            oc([at], e.prototype, "destroy", null),
            oc([lt("detailRowCompCache")], e)
          );
        })(Ht),
        rc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ic = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        sc = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            rc(e, t),
            (e.prototype.getFirstRow = function () {
              var t,
                e = 0;
              return (
                this.pinnedRowModel.getPinnedTopRowCount()
                  ? (t = vt.PINNED_TOP)
                  : this.rowModel.getRowCount()
                  ? ((t = null), (e = this.paginationProxy.getPageFirstRow()))
                  : this.pinnedRowModel.getPinnedBottomRowCount() &&
                    (t = vt.PINNED_BOTTOM),
                void 0 === t ? null : { rowIndex: e, rowPinned: t }
              );
            }),
            (e.prototype.getLastRow = function () {
              var t,
                e,
                o = this.pinnedRowModel.getPinnedBottomRowCount(),
                n = this.pinnedRowModel.getPinnedTopRowCount();
              return (
                o
                  ? ((e = vt.PINNED_BOTTOM), (t = o - 1))
                  : this.rowModel.getRowCount()
                  ? ((e = null), (t = this.paginationProxy.getPageLastRow()))
                  : n && ((e = vt.PINNED_TOP), (t = n - 1)),
                void 0 === t ? null : { rowIndex: t, rowPinned: e }
              );
            }),
            (e.prototype.getRowNode = function (t) {
              switch (t.rowPinned) {
                case vt.PINNED_TOP:
                  return this.pinnedRowModel.getPinnedTopRowData()[t.rowIndex];
                case vt.PINNED_BOTTOM:
                  return this.pinnedRowModel.getPinnedBottomRowData()[
                    t.rowIndex
                  ];
                default:
                  return this.rowModel.getRow(t.rowIndex);
              }
            }),
            (e.prototype.sameRow = function (t, e) {
              return (
                (!t && !e) ||
                (!((t && !e) || (!t && e)) &&
                  t.rowIndex === e.rowIndex &&
                  t.rowPinned == e.rowPinned)
              );
            }),
            (e.prototype.before = function (t, e) {
              switch (t.rowPinned) {
                case vt.PINNED_TOP:
                  if (e.rowPinned !== vt.PINNED_TOP) return !0;
                  break;
                case vt.PINNED_BOTTOM:
                  if (e.rowPinned !== vt.PINNED_BOTTOM) return !1;
                  break;
                default:
                  if (r(e.rowPinned)) return e.rowPinned !== vt.PINNED_TOP;
              }
              return t.rowIndex < e.rowIndex;
            }),
            ic([ut("rowModel")], e.prototype, "rowModel", void 0),
            ic([ut("pinnedRowModel")], e.prototype, "pinnedRowModel", void 0),
            ic([ut("paginationProxy")], e.prototype, "paginationProxy", void 0),
            ic([lt("rowPositionUtils")], e)
          );
        })(Ht),
        ac = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        lc = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            ac(e, t),
            (e.prototype.createId = function (t) {
              return this.createIdFromValues(t.rowIndex, t.column, t.rowPinned);
            }),
            (e.prototype.createIdFromValues = function (t, e, o) {
              return t + "." + (null == o ? "null" : o) + "." + e.getId();
            }),
            (e.prototype.equals = function (t, e) {
              return (
                t.column === e.column &&
                t.rowPinned === e.rowPinned &&
                t.rowIndex === e.rowIndex
              );
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("cellPositionUtils")], e)
          );
        })(Ht),
        uc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        pc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        cc = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            uc(e, t),
            (e.prototype.init = function () {
              this.setPinnedTopRowData(
                this.gridOptionsWrapper.getPinnedTopRowData()
              ),
                this.setPinnedBottomRowData(
                  this.gridOptionsWrapper.getPinnedBottomRowData()
                );
            }),
            (e.prototype.isEmpty = function (t) {
              return s(
                t === vt.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows
              );
            }),
            (e.prototype.isRowsToRender = function (t) {
              return !this.isEmpty(t);
            }),
            (e.prototype.getRowAtPixel = function (t, e) {
              var o =
                e === vt.PINNED_TOP
                  ? this.pinnedTopRows
                  : this.pinnedBottomRows;
              if (s(o)) return 0;
              for (var n = 0; n < o.length; n++) {
                var r = o[n];
                if (r.rowTop + r.rowHeight - 1 >= t) return n;
              }
              return o.length - 1;
            }),
            (e.prototype.setPinnedTopRowData = function (t) {
              (this.pinnedTopRows = this.createNodesFromData(t, !0)),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_PINNED_ROW_DATA_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.setPinnedBottomRowData = function (t) {
              (this.pinnedBottomRows = this.createNodesFromData(t, !1)),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_PINNED_ROW_DATA_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (e.prototype.createNodesFromData = function (t, e) {
              var o = this,
                n = [];
              if (t) {
                var r = 0;
                t.forEach(function (t, i) {
                  var s = new Pr();
                  o.context.createBean(s),
                    (s.data = t),
                    (s.id =
                      (e
                        ? Pr.ID_PREFIX_TOP_PINNED
                        : Pr.ID_PREFIX_BOTTOM_PINNED) + i),
                    (s.rowPinned = e ? vt.PINNED_TOP : vt.PINNED_BOTTOM),
                    s.setRowTop(r),
                    s.setRowHeight(
                      o.gridOptionsWrapper.getRowHeightForNode(s).height
                    ),
                    s.setRowIndex(i),
                    (r += s.rowHeight),
                    n.push(s);
                });
              }
              return n;
            }),
            (e.prototype.getPinnedTopRowData = function () {
              return this.pinnedTopRows;
            }),
            (e.prototype.getPinnedBottomRowData = function () {
              return this.pinnedBottomRows;
            }),
            (e.prototype.getPinnedTopTotalHeight = function () {
              return this.getTotalHeight(this.pinnedTopRows);
            }),
            (e.prototype.getPinnedTopRowCount = function () {
              return this.pinnedTopRows ? this.pinnedTopRows.length : 0;
            }),
            (e.prototype.getPinnedBottomRowCount = function () {
              return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;
            }),
            (e.prototype.getPinnedTopRow = function (t) {
              return this.pinnedTopRows[t];
            }),
            (e.prototype.getPinnedBottomRow = function (t) {
              return this.pinnedBottomRows[t];
            }),
            (e.prototype.forEachPinnedTopRow = function (t) {
              s(this.pinnedTopRows) || this.pinnedTopRows.forEach(t);
            }),
            (e.prototype.forEachPinnedBottomRow = function (t) {
              s(this.pinnedBottomRows) || this.pinnedBottomRows.forEach(t);
            }),
            (e.prototype.getPinnedBottomTotalHeight = function () {
              return this.getTotalHeight(this.pinnedBottomRows);
            }),
            (e.prototype.getTotalHeight = function (t) {
              if (!t || 0 === t.length) return 0;
              var e = y(t);
              return e.rowTop + e.rowHeight;
            }),
            pc([ut("columnApi")], e.prototype, "columnApi", void 0),
            pc([ut("gridApi")], e.prototype, "gridApi", void 0),
            pc([st], e.prototype, "init", null),
            pc([lt("pinnedRowModel")], e)
          );
        })(Ht),
        dc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        hc = function (t) {
          this.cellValueChanges = t;
        },
        fc = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, e) || this;
            return (r.initialRange = o), (r.finalRange = n), r;
          }
          return dc(e, t), e;
        })(hc),
        gc = (function () {
          function t(e) {
            (this.actionStack = []),
              (this.maxStackSize = e || t.DEFAULT_STACK_SIZE),
              (this.actionStack = new Array(this.maxStackSize));
          }
          return (
            (t.prototype.pop = function () {
              return this.actionStack.pop();
            }),
            (t.prototype.push = function (t) {
              t.cellValueChanges &&
                t.cellValueChanges.length > 0 &&
                (this.actionStack.length === this.maxStackSize &&
                  this.actionStack.shift(),
                this.actionStack.push(t));
            }),
            (t.prototype.clear = function () {
              this.actionStack = [];
            }),
            (t.prototype.getCurrentStackSize = function () {
              return this.actionStack.length;
            }),
            (t.DEFAULT_STACK_SIZE = 10),
            t
          );
        })(),
        yc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        mc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        vc = (function (t) {
          function o() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.cellValueChanges = []),
              (e.isCellEditing = !1),
              (e.isRowEditing = !1),
              (e.isPasting = !1),
              (e.isFilling = !1),
              (e.onCellValueChanged = function (t) {
                if (
                  e.isCellEditing ||
                  e.isRowEditing ||
                  e.isPasting ||
                  e.isFilling
                ) {
                  var o = t.oldValue,
                    n = t.value,
                    r = {
                      rowPinned: t.rowPinned,
                      rowIndex: t.rowIndex,
                      columnId: t.column.getColId(),
                      newValue: n,
                      oldValue: o,
                    };
                  e.cellValueChanges.push(r);
                }
              }),
              (e.clearStacks = function () {
                e.undoStack.clear(), e.redoStack.clear();
              }),
              e
            );
          }
          return (
            yc(o, t),
            (o.prototype.init = function () {
              if (this.gridOptionsWrapper.isUndoRedoCellEditing()) {
                var t = this.gridOptionsWrapper.getUndoRedoCellEditingLimit();
                t <= 0 ||
                  ((this.undoStack = new gc(t)),
                  (this.redoStack = new gc(t)),
                  this.addRowEditingListeners(),
                  this.addCellEditingListeners(),
                  this.addPasteListeners(),
                  this.addFillListeners(),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_CELL_VALUE_CHANGED,
                    this.onCellValueChanged
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_MODEL_UPDATED,
                    this.clearStacks
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                    this.clearStacks
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_NEW_COLUMNS_LOADED,
                    this.clearStacks
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_COLUMN_GROUP_OPENED,
                    this.clearStacks
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                    this.clearStacks
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_COLUMN_MOVED,
                    this.clearStacks
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_COLUMN_PINNED,
                    this.clearStacks
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_COLUMN_VISIBLE,
                    this.clearStacks
                  ),
                  this.addManagedListener(
                    this.eventService,
                    zt.EVENT_ROW_DRAG_END,
                    this.clearStacks
                  ));
              }
            }),
            (o.prototype.getCurrentUndoStackSize = function () {
              return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;
            }),
            (o.prototype.getCurrentRedoStackSize = function () {
              return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;
            }),
            (o.prototype.undo = function () {
              if (this.undoStack) {
                var t = this.undoStack.pop();
                t &&
                  t.cellValueChanges &&
                  (this.processAction(t, function (t) {
                    return t.oldValue;
                  }),
                  t instanceof fc
                    ? this.processRangeAndCellFocus(
                        t.cellValueChanges,
                        t.initialRange
                      )
                    : this.processRangeAndCellFocus(t.cellValueChanges),
                  this.redoStack.push(t));
              }
            }),
            (o.prototype.redo = function () {
              if (this.redoStack) {
                var t = this.redoStack.pop();
                t &&
                  t.cellValueChanges &&
                  (this.processAction(t, function (t) {
                    return t.newValue;
                  }),
                  t instanceof fc
                    ? this.processRangeAndCellFocus(
                        t.cellValueChanges,
                        t.finalRange
                      )
                    : this.processRangeAndCellFocus(t.cellValueChanges),
                  this.undoStack.push(t));
              }
            }),
            (o.prototype.processAction = function (t, e) {
              var o = this;
              t.cellValueChanges.forEach(function (t) {
                var n = t.columnId,
                  r = o.getRowNode({
                    rowIndex: t.rowIndex,
                    rowPinned: t.rowPinned,
                  });
                r.displayed && r.setDataValue(n, e(t));
              });
            }),
            (o.prototype.processRangeAndCellFocus = function (t, e) {
              var o;
              if (e) {
                var n = e.startRow,
                  r = e.endRow;
                return (
                  (o = {
                    rowPinned: n.rowPinned,
                    rowIndex: n.rowIndex,
                    columnId: e.startColumn.getColId(),
                  }),
                  this.setLastFocusedCell(o),
                  void this.gridApi.addCellRange({
                    rowStartIndex: n.rowIndex,
                    rowStartPinned: n.rowPinned,
                    rowEndIndex: r.rowIndex,
                    rowEndPinned: r.rowPinned,
                    columnStart: e.startColumn,
                    columns: e.columns,
                  })
                );
              }
              var i = t[0],
                s = this.getRowNode({
                  rowIndex: i.rowIndex,
                  rowPinned: i.rowPinned,
                });
              this.setLastFocusedCell(
                (o = {
                  rowPinned: i.rowPinned,
                  rowIndex: s.rowIndex,
                  columnId: i.columnId,
                })
              );
            }),
            (o.prototype.setLastFocusedCell = function (t) {
              var o = t.rowIndex,
                n = t.columnId,
                r = t.rowPinned;
              this.gridApi.ensureIndexVisible(o),
                this.gridApi.ensureColumnVisible(n),
                Ct.isRegistered(e.ModuleNames.RangeSelectionModule) &&
                  this.gridApi.clearRangeSelection(),
                this.focusController.setFocusedCell(o, n, r, !0);
            }),
            (o.prototype.addRowEditingListeners = function () {
              var t = this;
              this.addManagedListener(
                this.eventService,
                zt.EVENT_ROW_EDITING_STARTED,
                function () {
                  t.isRowEditing = !0;
                }
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_ROW_EDITING_STOPPED,
                  function () {
                    var e = new hc(t.cellValueChanges);
                    t.pushActionsToUndoStack(e), (t.isRowEditing = !1);
                  }
                );
            }),
            (o.prototype.addCellEditingListeners = function () {
              var t = this;
              this.addManagedListener(
                this.eventService,
                zt.EVENT_CELL_EDITING_STARTED,
                function () {
                  t.isCellEditing = !0;
                }
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_CELL_EDITING_STOPPED,
                  function () {
                    if (
                      ((t.isCellEditing = !1),
                      !t.isRowEditing && !t.isPasting && !t.isFilling)
                    ) {
                      var e = new hc(t.cellValueChanges);
                      t.pushActionsToUndoStack(e);
                    }
                  }
                );
            }),
            (o.prototype.addPasteListeners = function () {
              var t = this;
              this.addManagedListener(
                this.eventService,
                zt.EVENT_PASTE_START,
                function () {
                  t.isPasting = !0;
                }
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_PASTE_END,
                  function () {
                    var e = new hc(t.cellValueChanges);
                    t.pushActionsToUndoStack(e), (t.isPasting = !1);
                  }
                );
            }),
            (o.prototype.addFillListeners = function () {
              var t = this;
              this.addManagedListener(
                this.eventService,
                zt.EVENT_FILL_START,
                function () {
                  t.isFilling = !0;
                }
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_FILL_END,
                  function (e) {
                    var o = new fc(
                      t.cellValueChanges,
                      e.initialRange,
                      e.finalRange
                    );
                    t.pushActionsToUndoStack(o), (t.isFilling = !1);
                  }
                );
            }),
            (o.prototype.pushActionsToUndoStack = function (t) {
              this.undoStack.push(t),
                (this.cellValueChanges = []),
                this.redoStack.clear();
            }),
            (o.prototype.getRowNode = function (t) {
              switch (t.rowPinned) {
                case vt.PINNED_TOP:
                  return this.pinnedRowModel.getPinnedTopRowData()[t.rowIndex];
                case vt.PINNED_BOTTOM:
                  return this.pinnedRowModel.getPinnedBottomRowData()[
                    t.rowIndex
                  ];
                default:
                  return this.rowModel.getRow(t.rowIndex);
              }
            }),
            mc([ut("focusController")], o.prototype, "focusController", void 0),
            mc([ut("gridApi")], o.prototype, "gridApi", void 0),
            mc([ut("rowModel")], o.prototype, "rowModel", void 0),
            mc([ut("pinnedRowModel")], o.prototype, "pinnedRowModel", void 0),
            mc([st], o.prototype, "init", null),
            mc([lt("undoRedoService")], o)
          );
        })(Ht),
        Cc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        wc = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.componentsMappedByName = {}), e;
          }
          return (
            Cc(e, t),
            (e.prototype.setupComponents = function (t) {
              var e = this;
              t &&
                t.forEach(function (t) {
                  return e.addComponent(t);
                });
            }),
            (e.prototype.addComponent = function (t) {
              var e = t.componentName
                .replace(/([a-z])([A-Z])/g, "$1-$2")
                .toLowerCase()
                .toUpperCase();
              this.componentsMappedByName[e] = t.componentClass;
            }),
            (e.prototype.getComponentClass = function (t) {
              return this.componentsMappedByName[t];
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("agStackComponentsRegistry")], e)
          );
        })(Ht),
        bc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Ec = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Sc = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            bc(e, t),
            (e.prototype.findHeader = function (t, e) {
              var o;
              if (
                (o =
                  t.column instanceof Et
                    ? this.columnController["getDisplayedGroup" + e](t.column)
                    : this.columnController["getDisplayedCol" + e](t.column))
              )
                return { column: o, headerRowIndex: t.headerRowIndex };
            }),
            (e.prototype.findColAtEdgeForHeaderRow = function (t, e) {
              var o = this.columnController.getAllDisplayedColumns(),
                n = o["start" === e ? 0 : o.length - 1];
              if (n) {
                var r = this.headerNavigationService
                  .getHeaderContainer(n.getPinned())
                  .getRowComps()[t];
                return (r && r.getType()) == us.COLUMN_GROUP
                  ? {
                      headerRowIndex: t,
                      column: this.columnController.getColumnGroupAtLevel(n, t),
                    }
                  : { headerRowIndex: r ? t : -1, column: n };
              }
            }),
            Ec(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Ec(
              [ut("headerNavigationService")],
              e.prototype,
              "headerNavigationService",
              void 0
            ),
            Ec([lt("headerPositionUtils")], e)
          );
        })(Ht),
        Oc = (function () {
          function t() {}
          return (
            (t.prototype.buildColumnDefs = function (t, e, o) {
              var n = this,
                r = [],
                i = {};
              return (
                t.forEach(function (t) {
                  for (
                    var s = !0, a = n.createDefFromColumn(t, e, o), l = t;
                    l.getParent();

                  ) {
                    var u = l.getParent(),
                      p = null;
                    if (u.isPadding()) l = u;
                    else {
                      var c = i[u.getGroupId()];
                      if (c) {
                        c.children.push(a), (s = !1);
                        break;
                      }
                      (p = n.createDefFromGroup(u)) &&
                        ((p.children = [a]),
                        (i[p.groupId] = p),
                        (a = p),
                        (l = u));
                    }
                  }
                  s && r.push(a);
                }),
                r
              );
            }),
            (t.prototype.createDefFromGroup = function (t) {
              var e = M(t.getColGroupDef(), ["children"]);
              return e && (e.groupId = t.getGroupId()), e;
            }),
            (t.prototype.createDefFromColumn = function (t, e, o) {
              var n = M(t.getColDef());
              return (
                (n.colId = t.getColId()),
                (n.width = t.getActualWidth()),
                (n.rowGroup = t.isRowGroupActive()),
                (n.rowGroupIndex = t.isRowGroupActive() ? e.indexOf(t) : null),
                (n.pivot = t.isPivotActive()),
                (n.pivotIndex = t.isPivotActive() ? o.indexOf(t) : null),
                (n.aggFunc = t.isValueActive() ? t.getAggFunc() : null),
                (n.hide = !t.isVisible() || void 0),
                (n.pinned = t.isPinned() ? t.getPinned() : null),
                (n.sort = t.getSort() ? t.getSort() : null),
                (n.sortIndex =
                  null != t.getSortIndex() ? t.getSortIndex() : null),
                n
              );
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("columnDefFactory")], t)
          );
        })(),
        _c = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Rc = (function () {
          function t() {}
          return (
            (t.prototype.getInitialRowClasses = function (t) {
              var e = [];
              return (
                r(t.extraCssClass) && e.push(t.extraCssClass),
                e.push("ag-row"),
                e.push(t.rowFocused ? "ag-row-focus" : "ag-row-no-focus"),
                t.fadeRowIn && e.push("ag-opacity-zero"),
                e.push(t.rowIsEven ? "ag-row-even" : "ag-row-odd"),
                t.rowNode.isRowPinned() && e.push("ag-row-pinned"),
                t.rowNode.isSelected() && e.push("ag-row-selected"),
                t.rowNode.footer && e.push("ag-row-footer"),
                e.push("ag-row-level-" + t.rowLevel),
                t.rowNode.stub && e.push("ag-row-loading"),
                t.fullWidthRow && e.push("ag-full-width-row"),
                t.expandable &&
                  (e.push("ag-row-group"),
                  e.push(
                    t.rowNode.expanded
                      ? "ag-row-group-expanded"
                      : "ag-row-group-contracted"
                  )),
                t.rowNode.dragging && e.push("ag-row-dragging"),
                O(e, this.processClassesFromGridOptions(t.rowNode, t.scope)),
                O(e, this.preProcessRowClassRules(t.rowNode, t.scope)),
                e.push(
                  t.printLayout
                    ? "ag-row-position-relative"
                    : "ag-row-position-absolute"
                ),
                t.firstRowOnPage && e.push("ag-row-first"),
                t.lastRowOnPage && e.push("ag-row-last"),
                e
              );
            }),
            (t.prototype.processClassesFromGridOptions = function (t, e) {
              var o = [],
                n = function (t) {
                  "string" == typeof t
                    ? o.push(t)
                    : Array.isArray(t) &&
                      t.forEach(function (t) {
                        return o.push(t);
                      });
                },
                r = this.gridOptionsWrapper.getRowClass();
              if (r) {
                if ("function" == typeof r)
                  return (
                    console.warn(
                      "AG Grid: rowClass should not be a function, please use getRowClass instead"
                    ),
                    []
                  );
                n(r);
              }
              var i = this.gridOptionsWrapper.getRowClassFunc();
              return (
                i &&
                  n(
                    i({
                      data: t.data,
                      node: t,
                      rowIndex: t.rowIndex,
                      $scope: e,
                      api: this.gridOptionsWrapper.getApi(),
                      columnApi: this.gridOptionsWrapper.getColumnApi(),
                      context: this.gridOptionsWrapper.getContext(),
                    })
                  ),
                o
              );
            }),
            (t.prototype.preProcessRowClassRules = function (t, e) {
              var o = [];
              return (
                this.processRowClassRules(
                  t,
                  e,
                  function (t) {
                    o.push(t);
                  },
                  function (t) {}
                ),
                o
              );
            }),
            (t.prototype.processRowClassRules = function (t, e, o, n) {
              var r = {
                data: t.data,
                node: t,
                rowIndex: t.rowIndex,
                api: this.gridOptionsWrapper.getApi(),
                columnApi: this.gridOptionsWrapper.getColumnApi(),
                $scope: e,
                context: this.gridOptionsWrapper.getContext(),
              };
              this.stylingService.processClassRules(
                this.gridOptionsWrapper.rowClassRules(),
                r,
                o,
                n
              );
            }),
            (t.prototype.calculateRowLevel = function (t) {
              return t.group ? t.level : t.parent ? t.parent.level + 1 : 0;
            }),
            _c([ut("stylingService")], t.prototype, "stylingService", void 0),
            _c(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            _c([lt("rowCssClassCalculator")], t)
          );
        })(),
        Pc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Tc = (function (t) {
          function e(o) {
            var n = t.call(this) || this;
            return (
              (n.state = e.STATE_WAITING_TO_LOAD),
              (n.version = 0),
              (n.id = o),
              n
            );
          }
          return (
            Pc(e, t),
            (e.prototype.getId = function () {
              return this.id;
            }),
            (e.prototype.load = function () {
              (this.state = e.STATE_LOADING), this.loadFromDatasource();
            }),
            (e.prototype.getVersion = function () {
              return this.version;
            }),
            (e.prototype.setStateWaitingToLoad = function () {
              this.version++, (this.state = e.STATE_WAITING_TO_LOAD);
            }),
            (e.prototype.getState = function () {
              return this.state;
            }),
            (e.prototype.pageLoadFailed = function (t) {
              this.isRequestMostRecentAndLive(t) &&
                ((this.state = e.STATE_FAILED), this.processServerFail()),
                this.dispatchLoadCompleted(!1);
            }),
            (e.prototype.success = function (t, e) {
              this.successCommon(t, e);
            }),
            (e.prototype.pageLoaded = function (t, e, o) {
              this.successCommon(t, { rowData: e, rowCount: o });
            }),
            (e.prototype.isRequestMostRecentAndLive = function (t) {
              var e = t === this.version,
                o = this.isAlive();
              return e && o;
            }),
            (e.prototype.successCommon = function (t, o) {
              this.dispatchLoadCompleted(),
                this.isRequestMostRecentAndLive(t) &&
                  ((this.state = e.STATE_LOADED), this.processServerResult(o));
            }),
            (e.prototype.dispatchLoadCompleted = function (t) {
              void 0 === t && (t = !0),
                this.dispatchEvent({
                  type: e.EVENT_LOAD_COMPLETE,
                  success: t,
                  block: this,
                });
            }),
            (e.EVENT_LOAD_COMPLETE = "loadComplete"),
            (e.STATE_WAITING_TO_LOAD = "needsLoading"),
            (e.STATE_LOADING = "loading"),
            (e.STATE_LOADED = "loaded"),
            (e.STATE_FAILED = "failed"),
            e
          );
        })(Ht),
        Ac = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Dc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        xc = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.activeBlockLoadsCount = 0), (e.blocks = []), (e.active = !0), e
            );
          }
          var o, n;
          return (
            Ac(e, t),
            (o = e),
            (e.prototype.postConstruct = function () {
              this.maxConcurrentRequests =
                this.gridOptionsWrapper.getMaxConcurrentDatasourceRequests();
              var t = this.gridOptionsWrapper.getBlockLoadDebounceMillis();
              t &&
                t > 0 &&
                (this.checkBlockToLoadDebounce = xn.debounce(
                  this.performCheckBlocksToLoad.bind(this),
                  t
                ));
            }),
            (e.prototype.setBeans = function (t) {
              this.logger = t.create("RowNodeBlockLoader");
            }),
            (e.prototype.addBlock = function (t) {
              this.blocks.push(t),
                t.addEventListener(
                  Tc.EVENT_LOAD_COMPLETE,
                  this.loadComplete.bind(this)
                ),
                this.checkBlockToLoad();
            }),
            (e.prototype.removeBlock = function (t) {
              xn.removeFromArray(this.blocks, t);
            }),
            (e.prototype.destroy = function () {
              t.prototype.destroy.call(this), (this.active = !1);
            }),
            (e.prototype.loadComplete = function () {
              this.activeBlockLoadsCount--,
                this.checkBlockToLoad(),
                0 == this.activeBlockLoadsCount &&
                  this.dispatchEvent({ type: o.BLOCK_LOADER_FINISHED_EVENT });
            }),
            (e.prototype.checkBlockToLoad = function () {
              this.checkBlockToLoadDebounce
                ? this.checkBlockToLoadDebounce()
                : this.performCheckBlocksToLoad();
            }),
            (e.prototype.performCheckBlocksToLoad = function () {
              if (this.active)
                if (
                  (this.printCacheStatus(),
                  null != this.maxConcurrentRequests &&
                    this.activeBlockLoadsCount >= this.maxConcurrentRequests)
                )
                  this.logger.log("checkBlockToLoad: max loads exceeded");
                else {
                  var t = null;
                  this.blocks.forEach(function (e) {
                    e.getState() === Tc.STATE_WAITING_TO_LOAD && (t = e);
                  }),
                    t &&
                      (t.load(),
                      this.activeBlockLoadsCount++,
                      this.printCacheStatus());
                }
            }),
            (e.prototype.getBlockState = function () {
              var t = {};
              return (
                this.blocks.forEach(function (e) {
                  var o = e.getBlockStateJson();
                  t[o.id] = o.state;
                }),
                t
              );
            }),
            (e.prototype.printCacheStatus = function () {
              this.logger.isLogging() &&
                this.logger.log(
                  "printCacheStatus: activePageLoadsCount = " +
                    this.activeBlockLoadsCount +
                    ", blocks = " +
                    JSON.stringify(this.getBlockState())
                );
            }),
            (e.prototype.isLoading = function () {
              return this.activeBlockLoadsCount > 0;
            }),
            (e.BLOCK_LOADER_FINISHED_EVENT = "blockLoaderFinished"),
            Dc([st], e.prototype, "postConstruct", null),
            Dc(
              [
                (0,
                (n = dt("loggerFactory")),
                function (t, e) {
                  n(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            (o = Dc([lt("rowNodeBlockLoader")], e))
          );
        })(Ht),
        Fc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Nc = (function () {
          function t() {}
          return (
            (t.prototype.doFullSort = function (t, e) {
              var o = t.map(function (t, e) {
                return { currentPos: e, rowNode: t };
              });
              return (
                o.sort(this.compareRowNodes.bind(this, e)),
                o.map(function (t) {
                  return t.rowNode;
                })
              );
            }),
            (t.prototype.compareRowNodes = function (t, e, o) {
              for (
                var n = e.rowNode, r = o.rowNode, i = 0, s = t.length;
                i < s;
                i++
              ) {
                var a,
                  l = t[i],
                  u = l.sort === vt.SORT_DESC,
                  p = this.getValue(n, l.column),
                  c = this.getValue(r, l.column),
                  d = l.column.getColDef().comparator;
                if (
                  0 !==
                  (a = d
                    ? d(p, c, n, r, u)
                    : xn.defaultComparator(
                        p,
                        c,
                        this.gridOptionsWrapper.isAccentedSort()
                      ))
                )
                  return l.sort === vt.SORT_ASC ? a : -1 * a;
              }
              return e.currentPos - o.currentPos;
            }),
            (t.prototype.getValue = function (t, e) {
              return this.valueService.getValue(e, t);
            }),
            Fc(
              [ut("gridOptionsWrapper")],
              t.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            Fc([ut("valueService")], t.prototype, "valueService", void 0),
            Fc([lt("rowNodeSorter")], t)
          );
        })(),
        Mc = (function () {
          function t(t, o, n) {
            if (t)
              if (o) {
                var r = !!o.debug;
                this.gridOptions = o;
                var i = this.getRegisteredModules(n),
                  s = this.createBeansList(i),
                  a = this.createProvidedBeans(t, n);
                if (s) {
                  var l = {
                    providedBeanInstances: a,
                    beanClasses: s,
                    debug: r,
                  };
                  this.logger = new Al("AG Grid", function () {
                    return o.debug;
                  });
                  var u = new Al("Context", function () {
                    return l.debug;
                  });
                  (this.context = new rt(l, u)),
                    this.registerModuleUserComponents(i),
                    this.registerStackComponents(i);
                  var p = new ((n && n.rootComponent) || kl)();
                  this.context.createBean(p),
                    this.setColumnsAndData(),
                    this.dispatchGridReadyEvent(o);
                  var c = Ct.isRegistered(e.ModuleNames.EnterpriseCoreModule);
                  this.logger.log(
                    "initialised successfully, enterprise = " + c
                  );
                }
              } else
                console.error("AG Grid: no gridOptions provided to the grid");
            else console.error("AG Grid: no div element provided to the grid");
          }
          return (
            (t.prototype.registerStackComponents = function (t) {
              var e = this.createAgStackComponentsList(t);
              this.context
                .getBean("agStackComponentsRegistry")
                .setupComponents(e);
            }),
            (t.prototype.getRegisteredModules = function (t) {
              var e = t ? t.modules : null,
                o = Ct.getRegisteredModules(),
                n = [],
                r = {};
              function i(t, e) {
                var o;
                r[(o = e).moduleName] ||
                  ((r[o.moduleName] = !0), n.push(o), Ct.register(o, t)),
                  e.dependantModules &&
                    e.dependantModules.forEach(i.bind(null, t));
              }
              return (
                e && e.forEach(i.bind(null, !0)),
                o && o.forEach(i.bind(null, !Ct.isPackageBased())),
                n
              );
            }),
            (t.prototype.registerModuleUserComponents = function (t) {
              var e = this.context.getBean("userComponentRegistry");
              this.extractModuleEntity(t, function (t) {
                return t.userComponents ? t.userComponents : [];
              }).forEach(function (t) {
                e.registerDefaultComponent(t.componentName, t.componentClass);
              });
            }),
            (t.prototype.createProvidedBeans = function (t, e) {
              var o = e ? e.frameworkOverrides : null;
              i(o) && (o = new su());
              var n = {
                gridOptions: this.gridOptions,
                eGridDiv: t,
                $scope: e ? e.$scope : null,
                $compile: e ? e.$compile : null,
                quickFilterOnScope: e ? e.quickFilterOnScope : null,
                globalEventListener: e ? e.globalEventListener : null,
                frameworkOverrides: o,
              };
              return (
                e && e.providedBeanInstances && W(n, e.providedBeanInstances), n
              );
            }),
            (t.prototype.createAgStackComponentsList = function (t) {
              var e = [
                  { componentName: "AgCheckbox", componentClass: sa },
                  { componentName: "AgRadioButton", componentClass: ru },
                  { componentName: "AgToggleButton", componentClass: tc },
                  { componentName: "AgInputTextField", componentClass: Pp },
                  { componentName: "AgInputTextArea", componentClass: Ap },
                  { componentName: "AgInputNumberField", componentClass: Bp },
                  { componentName: "AgInputRange", componentClass: Up },
                  { componentName: "AgSelect", componentClass: qp },
                  { componentName: "AgSlider", componentClass: Fp },
                  { componentName: "AgAngleSelect", componentClass: $p },
                  { componentName: "AgColorPicker", componentClass: Wp },
                  { componentName: "AgGridComp", componentClass: pl },
                  { componentName: "AgHeaderRoot", componentClass: Ya },
                  { componentName: "AgPagination", componentClass: dp },
                  { componentName: "AgOverlayWrapper", componentClass: mp },
                  { componentName: "AgGroupComponent", componentClass: wp },
                  { componentName: "AgPanel", componentClass: Sp },
                  { componentName: "AgDialog", componentClass: _p },
                ],
                o = this.extractModuleEntity(t, function (t) {
                  return t.agStackComponents ? t.agStackComponents : [];
                });
              return e.concat(o);
            }),
            (t.prototype.createBeansList = function (t) {
              var e = this.getRowModelClass(t);
              if (e) {
                var o = [
                    e,
                    Bu,
                    sc,
                    lc,
                    Sc,
                    _u,
                    hl,
                    Bi,
                    Gu,
                    Wu,
                    fp,
                    Xr,
                    np,
                    up,
                    Il,
                    cc,
                    Ul,
                    fe,
                    mt,
                    Zi,
                    _l,
                    es,
                    Za,
                    ne,
                    ja,
                    Su,
                    zs,
                    yl,
                    Ut,
                    Cl,
                    Mu,
                    tp,
                    Tu,
                    tl,
                    Tl,
                    ce,
                    Fl,
                    Hl,
                    ps,
                    ns,
                    El,
                    Ql,
                    Xu,
                    Jl,
                    ou,
                    du,
                    uu,
                    Yl,
                    gu,
                    mu,
                    sp,
                    wu,
                    xu,
                    Zu,
                    nc,
                    vc,
                    wc,
                    Oc,
                    Rc,
                    xc,
                    Nc,
                  ],
                  n = this.extractModuleEntity(t, function (t) {
                    return t.beans ? t.beans : [];
                  });
                o.push.apply(o, n);
                var r = [];
                return (
                  o.forEach(function (t) {
                    r.indexOf(t) < 0 && r.push(t);
                  }),
                  r
                );
              }
            }),
            (t.prototype.extractModuleEntity = function (t, e) {
              return [].concat.apply([], t.map(e));
            }),
            (t.prototype.setColumnsAndData = function () {
              var t = this.context.getBean("gridOptionsWrapper"),
                e = this.context.getBean("columnController"),
                o = t.getColumnDefs();
              e.setColumnDefs(o || [], "gridInitializing"),
                this.context.getBean("rowModel").start();
            }),
            (t.prototype.dispatchGridReadyEvent = function (t) {
              this.context
                .getBean("eventService")
                .dispatchEvent({
                  type: zt.EVENT_GRID_READY,
                  api: t.api,
                  columnApi: t.columnApi,
                });
            }),
            (t.prototype.getRowModelClass = function (t) {
              var o = this.gridOptions.rowModelType;
              o || (o = vt.ROW_MODEL_TYPE_CLIENT_SIDE);
              var n = {};
              t.forEach(function (t) {
                F(t.rowModels, function (t, e) {
                  n[t] = e;
                });
              });
              var i = n[o];
              if (r(i)) return i;
              o === vt.ROW_MODEL_TYPE_INFINITE &&
                console.error(
                  'AG Grid: Row Model "Infinite" not found. Please ensure the ' +
                    e.ModuleNames.InfiniteRowModelModule +
                    " is registered.';"
                ),
                console.error(
                  "AG Grid: could not find matching row model for rowModelType " +
                    o
                ),
                o === vt.ROW_MODEL_TYPE_VIEWPORT &&
                  console.error(
                    'AG Grid: Row Model "Viewport" not found. Please ensure the AG Grid Enterprise Module ' +
                      e.ModuleNames.ViewportRowModelModule +
                      " is registered.';"
                  ),
                o === vt.ROW_MODEL_TYPE_SERVER_SIDE &&
                  console.error(
                    'AG Grid: Row Model "Server Side" not found. Please ensure the AG Grid Enterprise Module ' +
                      e.ModuleNames.ServerSideRowModelModule +
                      " is registered.';"
                  ),
                o === vt.ROW_MODEL_TYPE_CLIENT_SIDE &&
                  console.error(
                    'AG Grid: Row Model "Client Side" not found. Please ensure the ' +
                      e.ModuleNames.ClientSideRowModelModule +
                      " is registered.';"
                  );
            }),
            (t.prototype.destroy = function () {
              this.gridOptions.api.destroy();
            }),
            t
          );
        })();
      function Ic(t, e, o, n) {
        var r,
          i,
          s = n.agGrid;
        if (((i = s + ".quickFilterText"), (r = e.$eval(s)))) {
          var a = new Mc(t[0], r, {
            $scope: e,
            $compile: o,
            quickFilterOnScope: i,
          });
          e.$on("$destroy", function () {
            a && a.destroy(), (a = null);
          });
        } else
          console.warn(
            "WARNING - grid options for AG Grid not found. Please ensure the attribute ag-grid points to a valid object on the scope"
          );
      }
      var Lc,
        Gc = !1,
        kc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Vc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Wc = (function (t) {
          function e(o) {
            var n = t.call(this, e.getTemplate(o.cssClass)) || this;
            return (
              (n.items = []),
              (n.params = o),
              o.items &&
                o.items.forEach(function (t) {
                  return n.addItem(t);
                }),
              n
            );
          }
          return (
            kc(e, t),
            (e.getTemplate = function (t) {
              return (
                '<div class="ag-tabs ' +
                t +
                '">\n            <div ref="eHeader" role="menu" class="ag-tabs-header ' +
                (t ? t + "-header" : "") +
                '"></div>\n            <div ref="eBody" role="presentation" class="ag-tabs-body ' +
                (t ? t + "-body" : "") +
                '"></div>\n        </div>'
              );
            }),
            (e.prototype.handleKeyDown = function (t) {
              switch (t.keyCode) {
                case $n.RIGHT:
                case $n.LEFT:
                  if (!this.eHeader.contains(document.activeElement)) return;
                  var e = this.items.indexOf(this.activeItem),
                    o =
                      t.keyCode === $n.RIGHT
                        ? Math.min(e + 1, this.items.length - 1)
                        : Math.max(e - 1, 0);
                  if (e === o) return;
                  t.preventDefault();
                  var n = this.items[o];
                  this.showItemWrapper(n), n.eHeaderButton.focus();
                  break;
                case $n.UP:
                case $n.DOWN:
                  t.stopPropagation();
              }
            }),
            (e.prototype.onTabKeyDown = function (t) {
              if (!t.defaultPrevented) {
                var e = this,
                  o = e.focusController,
                  n = e.eHeader,
                  r = e.eBody,
                  i = e.activeItem,
                  s = document.activeElement;
                if ((t.preventDefault(), n.contains(s)))
                  o.focusInto(r, t.shiftKey);
                else if (o.isFocusUnderManagedComponent(r))
                  i.eHeaderButton.focus();
                else {
                  var a = o.findNextFocusableElement(r, !1, t.shiftKey);
                  a ? a.focus() : i.eHeaderButton.focus();
                }
              }
            }),
            (e.prototype.setAfterAttachedParams = function (t) {
              this.afterAttachedParams = t;
            }),
            (e.prototype.getMinDimensions = function () {
              var t = this.getGui().cloneNode(!0),
                e = t.querySelector('[ref="eBody"]');
              (t.style.position = "fixed"), this.getGui().appendChild(t);
              var o = 0,
                n = 0;
              return (
                this.items.forEach(function (r) {
                  ro(e);
                  var i = r.tabbedItem.bodyPromise.resolveNow(
                    null,
                    function (t) {
                      return t.cloneNode(!0);
                    }
                  );
                  null != i &&
                    (e.appendChild(i),
                    o < t.offsetWidth && (o = t.offsetWidth),
                    n < t.offsetHeight && (n = t.offsetHeight));
                }),
                this.getGui().removeChild(t),
                { height: n, width: o }
              );
            }),
            (e.prototype.showFirstItem = function () {
              this.items.length > 0 && this.showItemWrapper(this.items[0]);
            }),
            (e.prototype.addItem = function (t) {
              var e = document.createElement("span");
              e.setAttribute("tabIndex", "-1"),
                e.setAttribute("role", "menuitem"),
                e.appendChild(t.title),
                He(e, "ag-tab"),
                this.eHeader.appendChild(e),
                Vo(e, t.titleLabel);
              var o = { tabbedItem: t, eHeaderButton: e };
              this.items.push(o),
                e.addEventListener("click", this.showItemWrapper.bind(this, o));
            }),
            (e.prototype.showItem = function (t) {
              var e = c(this.items, function (e) {
                return e.tabbedItem === t;
              });
              e && this.showItemWrapper(e);
            }),
            (e.prototype.showItemWrapper = function (t) {
              var e = this;
              this.params.onItemClicked &&
                this.params.onItemClicked({ item: t.tabbedItem }),
                this.activeItem !== t
                  ? (ro(this.eBody),
                    t.tabbedItem.bodyPromise.then(function (o) {
                      e.eBody.appendChild(o);
                      var n = !e.focusController.isKeyboardMode();
                      e.focusController.focusInto(e.eBody, !1, n),
                        t.tabbedItem.afterAttachedCallback &&
                          t.tabbedItem.afterAttachedCallback(
                            e.afterAttachedParams
                          );
                    }),
                    this.activeItem &&
                      Be(this.activeItem.eHeaderButton, "ag-tab-selected"),
                    He(t.eHeaderButton, "ag-tab-selected"),
                    (this.activeItem = t))
                  : ot(this.params.onActiveItemClicked);
            }),
            Vc([Kn("eHeader")], e.prototype, "eHeader", void 0),
            Vc([Kn("eBody")], e.prototype, "eBody", void 0),
            e
          );
        })(sr);
      ((Lc =
        e.ServerSideTransactionResultStatus ||
        (e.ServerSideTransactionResultStatus = {})).StoreNotFound =
        "StoreNotFound"),
        (Lc.StoreLoading = "StoreLoading"),
        (Lc.StoreWaitingToLoad = "StoreWaitingToLoad"),
        (Lc.StoreLoadingFailed = "StoreLoadingFailed"),
        (Lc.StoreWrongType = "StoreWrongType"),
        (Lc.Applied = "Applied"),
        (Lc.Cancelled = "Cancelled");
      var Hc,
        Bc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        jc = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Uc = (function (t) {
          function e(o, n) {
            void 0 === o && (o = "default"), void 0 === n && (n = "listbox");
            var r = t.call(this, e.getTemplate(o), !0) || this;
            return (
              (r.cssIdentifier = o),
              (r.ariaRole = n),
              (r.renderedRows = new Map()),
              (r.rowHeight = 20),
              (r.isDestroyed = !1),
              r
            );
          }
          return (
            Bc(e, t),
            (e.prototype.postConstruct = function () {
              this.addScrollListener(),
                (this.rowHeight = this.getItemHeight()),
                this.addResizeObserver(),
                t.prototype.postConstruct.call(this);
            }),
            (e.prototype.addResizeObserver = function () {
              var t = this.drawVirtualRows.bind(this),
                e = this.resizeObserverService.observeResize(this.getGui(), t);
              this.addDestroyFunc(e);
            }),
            (e.prototype.focusInnerElement = function (t) {
              this.focusRow(t ? this.model.getRowCount() - 1 : 0);
            }),
            (e.prototype.onFocusIn = function (e) {
              t.prototype.onFocusIn.call(this, e);
              var o = e.target;
              Ue(o, "ag-virtual-list-item") &&
                (this.lastFocusedRowIndex = Go(o) - 1);
            }),
            (e.prototype.onFocusOut = function (e) {
              t.prototype.onFocusOut.call(this, e),
                this.getFocusableElement().contains(e.relatedTarget) ||
                  (this.lastFocusedRowIndex = null);
            }),
            (e.prototype.handleKeyDown = function (t) {
              switch (t.keyCode) {
                case $n.UP:
                case $n.DOWN:
                  this.navigate(t.keyCode === $n.UP) && t.preventDefault();
              }
            }),
            (e.prototype.onTabKeyDown = function (t) {
              this.navigate(t.shiftKey)
                ? t.preventDefault()
                : this.focusController.focusInto(this.getGui(), !t.shiftKey);
            }),
            (e.prototype.navigate = function (t) {
              if (null == this.lastFocusedRowIndex) return !1;
              var e = this.lastFocusedRowIndex + (t ? -1 : 1);
              return !(
                e < 0 ||
                e >= this.model.getRowCount() ||
                (this.focusRow(e), 0)
              );
            }),
            (e.prototype.getLastFocusedRow = function () {
              return this.lastFocusedRowIndex;
            }),
            (e.prototype.focusRow = function (t) {
              var e = this;
              this.ensureIndexVisible(t),
                window.setTimeout(function () {
                  var o = e.renderedRows.get(t);
                  o && o.eDiv.focus();
                }, 10);
            }),
            (e.prototype.getComponentAt = function (t) {
              var e = this.renderedRows.get(t);
              return e && e.rowComponent;
            }),
            (e.getTemplate = function (t) {
              return (
                '\n            <div class="ag-virtual-list-viewport ag-' +
                t +
                '-virtual-list-viewport" role="listbox">\n                <div class="ag-virtual-list-container ag-' +
                t +
                '-virtual-list-container" ref="eContainer"></div>\n            </div>'
              );
            }),
            (e.prototype.getItemHeight = function () {
              return this.gridOptionsWrapper.getListItemHeight();
            }),
            (e.prototype.ensureIndexVisible = function (t) {
              var e = this.model.getRowCount();
              if ("number" != typeof t || t < 0 || t >= e)
                console.warn("invalid row index for ensureIndexVisible: " + t);
              else {
                var o = t * this.rowHeight,
                  n = o + this.rowHeight,
                  r = this.getGui(),
                  i = r.scrollTop,
                  s = r.offsetHeight,
                  a = i + s < n;
                i > o ? (r.scrollTop = o) : a && (r.scrollTop = n - s);
              }
            }),
            (e.prototype.setComponentCreator = function (t) {
              this.componentCreator = t;
            }),
            (e.prototype.getRowHeight = function () {
              return this.rowHeight;
            }),
            (e.prototype.getScrollTop = function () {
              return this.getGui().scrollTop;
            }),
            (e.prototype.setRowHeight = function (t) {
              (this.rowHeight = t), this.refresh();
            }),
            (e.prototype.refresh = function () {
              var t = this;
              if (null != this.model && !this.isDestroyed) {
                var e = this.model.getRowCount();
                (this.eContainer.style.height = e * this.rowHeight + "px"),
                  setTimeout(function () {
                    t.isDestroyed ||
                      (t.clearVirtualRows(), t.drawVirtualRows());
                  }, 0);
              }
            }),
            (e.prototype.clearVirtualRows = function () {
              var t = this;
              this.renderedRows.forEach(function (e, o) {
                return t.removeRow(o);
              });
            }),
            (e.prototype.drawVirtualRows = function () {
              var t = this.getGui(),
                e = t.scrollTop,
                o = e + t.offsetHeight,
                n = Math.floor(e / this.rowHeight),
                r = Math.floor(o / this.rowHeight);
              this.ensureRowsRendered(n, r);
            }),
            (e.prototype.ensureRowsRendered = function (t, e) {
              var o = this;
              this.renderedRows.forEach(function (n, r) {
                (r < t || r > e) &&
                  r !== o.lastFocusedRowIndex &&
                  o.removeRow(r);
              });
              for (var n = t; n <= e; n++)
                this.renderedRows.has(n) ||
                  (n < this.model.getRowCount() && this.insertRow(n));
            }),
            (e.prototype.insertRow = function (t) {
              var e = this,
                o = this.model.getRow(t),
                n = document.createElement("div");
              if (
                (He(n, "ag-virtual-list-item"),
                He(n, "ag-" + this.cssIdentifier + "-virtual-list-item"),
                n.setAttribute(
                  "role",
                  "tree" === this.ariaRole ? "treeitem" : "option"
                ),
                zo(n, this.model.getRowCount()),
                Ko(n, t + 1),
                n.setAttribute("tabindex", "-1"),
                "function" == typeof this.model.isRowSelected)
              ) {
                var r = this.model.isRowSelected(t);
                en(n, !!r), on(n, r);
              }
              (n.style.height = this.rowHeight + "px"),
                (n.style.top = this.rowHeight * t + "px");
              var i = this.componentCreator(o, n);
              i.addGuiEventListener("focusin", function () {
                return (e.lastFocusedRowIndex = t);
              }),
                n.appendChild(i.getGui()),
                this.renderedRows.has(t - 1)
                  ? this.renderedRows
                      .get(t - 1)
                      .eDiv.insertAdjacentElement("afterend", n)
                  : this.renderedRows.has(t + 1)
                  ? this.renderedRows
                      .get(t + 1)
                      .eDiv.insertAdjacentElement("beforebegin", n)
                  : this.eContainer.appendChild(n),
                this.renderedRows.set(t, { rowComponent: i, eDiv: n });
            }),
            (e.prototype.removeRow = function (t) {
              var e = this.renderedRows.get(t);
              this.eContainer.removeChild(e.eDiv),
                this.destroyBean(e.rowComponent),
                this.renderedRows.delete(t);
            }),
            (e.prototype.addScrollListener = function () {
              var t = this;
              this.addGuiEventListener("scroll", function () {
                return t.drawVirtualRows();
              });
            }),
            (e.prototype.setModel = function (t) {
              this.model = t;
            }),
            (e.prototype.destroy = function () {
              this.isDestroyed ||
                (this.clearVirtualRows(),
                (this.isDestroyed = !0),
                t.prototype.destroy.call(this));
            }),
            jc(
              [ut("resizeObserverService")],
              e.prototype,
              "resizeObserverService",
              void 0
            ),
            jc([Kn("eContainer")], e.prototype, "eContainer", void 0),
            e
          );
        })(sr);
      ((Hc = e.ServerSideStoreType || (e.ServerSideStoreType = {})).Full =
        "full"),
        (Hc.Partial = "partial");
      var zc,
        Kc,
        Yc = (function () {
          function t() {}
          return (
            (t.prototype.wrap = function (t, e, o, n, r) {
              var i = this;
              void 0 === o && (o = []);
              var s = this.createWrapper(t, n, r);
              return (
                e.forEach(function (t) {
                  i.createMethod(s, t, !0);
                }),
                o.forEach(function (t) {
                  i.createMethod(s, t, !1);
                }),
                s
              );
            }),
            (t.prototype.createMethod = function (t, e, o) {
              t.addMethod(e, this.createMethodProxy(t, e, o));
            }),
            (t.prototype.createMethodProxy = function (t, e, o) {
              return function () {
                return t.hasMethod(e)
                  ? t.callMethod(e, arguments)
                  : (o &&
                      console.warn(
                        "AG Grid: Framework component is missing the method " +
                          e +
                          "()"
                      ),
                    null);
              };
            }),
            t
          );
        })();
      ((zc = e.ChartType || (e.ChartType = {})).Column = "column"),
        (zc.GroupedColumn = "groupedColumn"),
        (zc.StackedColumn = "stackedColumn"),
        (zc.NormalizedColumn = "normalizedColumn"),
        (zc.Bar = "bar"),
        (zc.GroupedBar = "groupedBar"),
        (zc.StackedBar = "stackedBar"),
        (zc.NormalizedBar = "normalizedBar"),
        (zc.Line = "line"),
        (zc.Scatter = "scatter"),
        (zc.Bubble = "bubble"),
        (zc.Pie = "pie"),
        (zc.Doughnut = "doughnut"),
        (zc.Area = "area"),
        (zc.StackedArea = "stackedArea"),
        (zc.NormalizedArea = "normalizedArea"),
        (zc.Histogram = "histogram"),
        ((Kc = e.LegendPosition || (e.LegendPosition = {})).Top = "top"),
        (Kc.Right = "right"),
        (Kc.Bottom = "bottom"),
        (Kc.Left = "left");
      var Xc = "undefined" == typeof global ? {} : global;
      (Xc.HTMLElement = "undefined" == typeof HTMLElement ? {} : HTMLElement),
        (Xc.HTMLButtonElement =
          "undefined" == typeof HTMLButtonElement ? {} : HTMLButtonElement),
        (Xc.HTMLSelectElement =
          "undefined" == typeof HTMLSelectElement ? {} : HTMLSelectElement),
        (Xc.HTMLInputElement =
          "undefined" == typeof HTMLInputElement ? {} : HTMLInputElement),
        (Xc.Node = "undefined" == typeof Node ? {} : Node),
        (Xc.MouseEvent = "undefined" == typeof MouseEvent ? {} : MouseEvent);
      var qc,
        Qc = (function () {
          function t(e, o, n, r, i, s, a, l) {
            (this.nextId = 0),
              (this.allNodesMap = {}),
              (this.rootNode = e),
              (this.gridOptionsWrapper = o),
              (this.context = n),
              (this.eventService = r),
              (this.columnController = i),
              (this.gridApi = s),
              (this.columnApi = a),
              (this.selectionController = l),
              (this.rootNode.group = !0),
              (this.rootNode.level = -1),
              (this.rootNode.id = t.ROOT_NODE_ID),
              (this.rootNode.allLeafChildren = []),
              (this.rootNode.childrenAfterGroup = []),
              (this.rootNode.childrenAfterSort = []),
              (this.rootNode.childrenAfterFilter = []),
              this.postConstruct();
          }
          return (
            (t.prototype.postConstruct = function () {
              (this.suppressParentsInRowNodes =
                this.gridOptionsWrapper.isSuppressParentsInRowNodes()),
                (this.isRowMasterFunc =
                  this.gridOptionsWrapper.getIsRowMasterFunc()),
                (this.doingTreeData = this.gridOptionsWrapper.isTreeData()),
                (this.doingMasterDetail =
                  this.gridOptionsWrapper.isMasterDetail());
            }),
            (t.prototype.getCopyOfNodesMap = function () {
              return xn.cloneObject(this.allNodesMap);
            }),
            (t.prototype.getRowNode = function (t) {
              return this.allNodesMap[t];
            }),
            (t.prototype.setRowData = function (e) {
              if (
                ((this.rootNode.childrenAfterFilter = null),
                (this.rootNode.childrenAfterGroup = null),
                (this.rootNode.childrenAfterSort = null),
                (this.rootNode.childrenMapped = null),
                this.rootNode.updateHasChildren(),
                (this.nextId = 0),
                (this.allNodesMap = {}),
                !e)
              )
                return (
                  (this.rootNode.allLeafChildren = []),
                  void (this.rootNode.childrenAfterGroup = [])
                );
              this.rootNode.allLeafChildren = this.recursiveFunction(
                e,
                this.rootNode,
                t.TOP_LEVEL
              );
            }),
            (t.prototype.updateRowData = function (t, e) {
              var o = { remove: [], update: [], add: [] },
                n = [];
              return (
                this.executeRemove(t, o, n),
                this.executeUpdate(t, o, n),
                this.executeAdd(t, o),
                this.updateSelection(n),
                e && xn.sortRowNodesByOrder(this.rootNode.allLeafChildren, e),
                o
              );
            }),
            (t.prototype.updateSelection = function (t) {
              var e = t.length > 0;
              e &&
                t.forEach(function (t) {
                  t.setSelected(!1, !1, !0);
                }),
                this.selectionController.updateGroupsFromChildrenSelections(),
                e &&
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_SELECTION_CHANGED,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                  });
            }),
            (t.prototype.executeAdd = function (t, e) {
              var o = this,
                n = t.add,
                r = t.addIndex;
              xn.missingOrEmpty(n) ||
                ("number" == typeof r && r >= 0
                  ? n.reverse().forEach(function (t) {
                      var n = o.addRowNode(t, r);
                      e.add.push(n);
                    })
                  : n.forEach(function (t) {
                      var n = o.addRowNode(t);
                      e.add.push(n);
                    }));
            }),
            (t.prototype.executeRemove = function (t, e, o) {
              var n = this,
                r = t.remove;
              if (!xn.missingOrEmpty(r)) {
                var i = {};
                r.forEach(function (t) {
                  var r = n.lookupRowNode(t);
                  r &&
                    (r.isSelected() && o.push(r),
                    r.clearRowTopAndRowIndex(),
                    (i[r.id] = !0),
                    delete n.allNodesMap[r.id],
                    e.remove.push(r));
                }),
                  (this.rootNode.allLeafChildren =
                    this.rootNode.allLeafChildren.filter(function (t) {
                      return !i[t.id];
                    }));
              }
            }),
            (t.prototype.executeUpdate = function (e, o, n) {
              var r = this,
                i = e.update;
              xn.missingOrEmpty(i) ||
                i.forEach(function (e) {
                  var i = r.lookupRowNode(e);
                  i &&
                    (i.updateData(e),
                    !i.selectable && i.isSelected() && n.push(i),
                    r.setMasterForRow(i, e, t.TOP_LEVEL, !1),
                    o.update.push(i));
                });
            }),
            (t.prototype.addRowNode = function (e, o) {
              var n = this.createNode(e, this.rootNode, t.TOP_LEVEL);
              return (
                xn.exists(o)
                  ? xn.insertIntoArray(this.rootNode.allLeafChildren, n, o)
                  : this.rootNode.allLeafChildren.push(n),
                n
              );
            }),
            (t.prototype.lookupRowNode = function (t) {
              var e,
                o = this.gridOptionsWrapper.getRowNodeIdFunc();
              if (xn.exists(o)) {
                var n = o(t);
                if (!(e = this.allNodesMap[n]))
                  return (
                    console.error(
                      "AG Grid: could not find row id=" +
                        n +
                        ", data item was not found for this id"
                    ),
                    null
                  );
              } else if (
                !(e = xn.find(this.rootNode.allLeafChildren, function (e) {
                  return e.data === t;
                }))
              )
                return (
                  console.error(
                    "AG Grid: could not find data item as object was not found",
                    t
                  ),
                  null
                );
              return e;
            }),
            (t.prototype.recursiveFunction = function (t, e, o) {
              var n = this;
              if ("string" != typeof t) {
                var r = [];
                return (
                  t.forEach(function (t) {
                    var i = n.createNode(t, e, o);
                    r.push(i);
                  }),
                  r
                );
              }
              console.warn(
                "AG Grid: rowData must be an array, however you passed in a string. If you are loading JSON, make sure you convert the JSON string to JavaScript objects first"
              );
            }),
            (t.prototype.createNode = function (t, e, o) {
              var n = new Pr();
              return (
                this.context.createBean(n),
                (n.group = !1),
                this.setMasterForRow(n, t, o, !0),
                e && !this.suppressParentsInRowNodes && (n.parent = e),
                (n.level = o),
                n.setDataAndId(t, this.nextId.toString()),
                this.allNodesMap[n.id] &&
                  console.warn(
                    "ag-grid: duplicate node id '" +
                      n.id +
                      "' detected from getRowNodeId callback, this could cause issues in your grid."
                  ),
                (this.allNodesMap[n.id] = n),
                this.nextId++,
                n
              );
            }),
            (t.prototype.setMasterForRow = function (t, e, o, n) {
              if (this.doingTreeData) t.setMaster(!1), n && (t.expanded = !1);
              else if (
                (t.setMaster(
                  !!this.doingMasterDetail &&
                    (!this.isRowMasterFunc || this.isRowMasterFunc(e))
                ),
                n)
              ) {
                var r = this.columnController.getRowGroupColumns();
                t.expanded =
                  !!t.master && this.isExpanded(o + (r ? r.length : 0));
              }
            }),
            (t.prototype.isExpanded = function (t) {
              var e = this.gridOptionsWrapper.getGroupDefaultExpanded();
              return -1 === e || t < e;
            }),
            (t.prototype.setLeafChildren = function (t) {
              (t.allLeafChildren = []),
                t.childrenAfterGroup &&
                  t.childrenAfterGroup.forEach(function (e) {
                    e.group
                      ? e.allLeafChildren &&
                        e.allLeafChildren.forEach(function (e) {
                          return t.allLeafChildren.push(e);
                        })
                      : t.allLeafChildren.push(e);
                  });
            }),
            (t.TOP_LEVEL = 0),
            (t.ROOT_NODE_ID = "ROOT_NODE_ID"),
            t
          );
        })(),
        Zc = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        $c = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        };
      !(function (t) {
        (t[(t.Normal = 0)] = "Normal"),
          (t[(t.AfterFilter = 1)] = "AfterFilter"),
          (t[(t.AfterFilterAndSort = 2)] = "AfterFilterAndSort"),
          (t[(t.PivotNodes = 3)] = "PivotNodes");
      })(qc || (qc = {}));
      var Jc,
        td = (function (t) {
          function o() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.onRowGroupOpenedPending = !1), e;
          }
          return (
            Zc(o, t),
            (o.prototype.init = function () {
              var t = this.refreshModel.bind(this, {
                  step: e.ClientSideRowModelSteps.EVERYTHING,
                }),
                o = this.refreshModel.bind(this, {
                  step: e.ClientSideRowModelSteps.EVERYTHING,
                  afterColumnsChanged: !0,
                  keepRenderedRows: !0,
                  animate: !0,
                });
              this.addManagedListener(
                this.eventService,
                zt.EVENT_NEW_COLUMNS_LOADED,
                o
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_ROW_GROUP_CHANGED,
                  t
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_VALUE_CHANGED,
                  this.onValueChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_PIVOT_CHANGED,
                  this.refreshModel.bind(this, {
                    step: e.ClientSideRowModelSteps.PIVOT,
                  })
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_ROW_GROUP_OPENED,
                  this.onRowGroupOpened.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_FILTER_CHANGED,
                  this.onFilterChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_SORT_CHANGED,
                  this.onSortChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                  t
                );
              var n = this.refreshModel.bind(this, {
                step: e.ClientSideRowModelSteps.MAP,
                keepRenderedRows: !0,
                animate: !0,
              });
              this.addManagedListener(
                this.gridOptionsWrapper,
                Zi.PROP_GROUP_REMOVE_SINGLE_CHILDREN,
                n
              ),
                this.addManagedListener(
                  this.gridOptionsWrapper,
                  Zi.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN,
                  n
                ),
                (this.rootNode = new Pr()),
                (this.nodeManager = new Qc(
                  this.rootNode,
                  this.gridOptionsWrapper,
                  this.getContext(),
                  this.eventService,
                  this.columnController,
                  this.gridApi,
                  this.columnApi,
                  this.selectionController
                )),
                this.createBean(this.rootNode);
            }),
            (o.prototype.start = function () {
              var t = this.gridOptionsWrapper.getRowData();
              t && this.setRowData(t);
            }),
            (o.prototype.ensureRowHeightsValid = function (t, e, o, n) {
              var r,
                i = !1;
              do {
                r = !1;
                for (
                  var s = this.getRowIndexAtPixel(t),
                    a = this.getRowIndexAtPixel(e),
                    l = Math.max(s, o),
                    u = Math.min(a, n),
                    p = l;
                  p <= u;
                  p++
                ) {
                  var c = this.getRow(p);
                  if (c.rowHeightEstimated) {
                    var d = this.gridOptionsWrapper.getRowHeightForNode(c);
                    c.setRowHeight(d.height), (r = !0), (i = !0);
                  }
                }
                r && this.setRowTops();
              } while (r);
              return i;
            }),
            (o.prototype.setRowTops = function () {
              for (var t = 0, e = 0; e < this.rowsToDisplay.length; e++) {
                var o =
                    this.gridOptionsWrapper.getDomLayout() ===
                    vt.DOM_LAYOUT_NORMAL,
                  n = this.rowsToDisplay[e];
                if (xn.missing(n.rowHeight)) {
                  var r = this.gridOptionsWrapper.getRowHeightForNode(n, o);
                  n.setRowHeight(r.height, r.estimated);
                }
                n.setRowTop(t), n.setRowIndex(e), (t += n.rowHeight);
              }
            }),
            (o.prototype.resetRowTops = function (t, e) {
              if ((t.clearRowTopAndRowIndex(), t.hasChildren())) {
                if (t.childrenAfterGroup && (!e.isActive() || t.expanded))
                  for (var o = 0; o < t.childrenAfterGroup.length; o++)
                    this.resetRowTops(t.childrenAfterGroup[o], e);
                t.sibling && t.sibling.clearRowTopAndRowIndex();
              }
              t.detailNode && t.detailNode.clearRowTopAndRowIndex();
            }),
            (o.prototype.ensureRowsAtPixel = function (t, o, n) {
              var r = this;
              void 0 === n && (n = 0);
              var i = this.getRowIndexAtPixel(o);
              return (
                this.getRow(i) !== t[0] &&
                (t.forEach(function (t) {
                  xn.removeFromArray(r.rootNode.allLeafChildren, t);
                }),
                t.forEach(function (t, e) {
                  xn.insertIntoArray(
                    r.rootNode.allLeafChildren,
                    t,
                    Math.max(i + n, 0) + e
                  );
                }),
                this.refreshModel({
                  step: e.ClientSideRowModelSteps.EVERYTHING,
                  keepRenderedRows: !0,
                  animate: !0,
                  keepEditingRows: !0,
                }),
                !0)
              );
            }),
            (o.prototype.highlightRowAtPixel = function (t, e) {
              var o = null != e ? this.getRowIndexAtPixel(e) : null,
                n = null != o ? this.getRow(o) : null;
              if (n && t && n !== t && null != e) {
                var r = this.getHighlightPosition(e, n);
                this.lastHighlightedRow &&
                  this.lastHighlightedRow !== n &&
                  (this.lastHighlightedRow.setHighlighted(null),
                  (this.lastHighlightedRow = null)),
                  n.setHighlighted(r),
                  (this.lastHighlightedRow = n);
              } else
                this.lastHighlightedRow &&
                  (this.lastHighlightedRow.setHighlighted(null),
                  (this.lastHighlightedRow = null));
            }),
            (o.prototype.getHighlightPosition = function (t, e) {
              if (!e) {
                var o = this.getRowIndexAtPixel(t);
                if (!(e = this.getRow(o || 0))) return "below";
              }
              return t - e.rowTop < e.rowHeight / 2 ? "above" : "below";
            }),
            (o.prototype.getLastHighlightedRowNode = function () {
              return this.lastHighlightedRow;
            }),
            (o.prototype.isLastRowIndexKnown = function () {
              return !0;
            }),
            (o.prototype.getRowCount = function () {
              return this.rowsToDisplay ? this.rowsToDisplay.length : 0;
            }),
            (o.prototype.getTopLevelRowCount = function () {
              return this.rowsToDisplay &&
                this.rowsToDisplay[0] === this.rootNode
                ? 1
                : this.rootNode.childrenAfterFilter
                ? this.rootNode.childrenAfterFilter.length
                : 0;
            }),
            (o.prototype.getTopLevelRowDisplayedIndex = function (t) {
              if (this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode)
                return t;
              var e = this.rootNode.childrenAfterSort[t];
              if (this.gridOptionsWrapper.isGroupHideOpenParents())
                for (
                  ;
                  e.expanded &&
                  e.childrenAfterSort &&
                  e.childrenAfterSort.length > 0;

                )
                  e = e.childrenAfterSort[0];
              return e.rowIndex;
            }),
            (o.prototype.getRowBounds = function (t) {
              if (xn.missing(this.rowsToDisplay)) return null;
              var e = this.rowsToDisplay[t];
              return e ? { rowTop: e.rowTop, rowHeight: e.rowHeight } : null;
            }),
            (o.prototype.onRowGroupOpened = function () {
              var t = this;
              if (!this.onRowGroupOpenedPending) {
                this.onRowGroupOpenedPending = !0;
                var o = function () {
                  t.onRowGroupOpenedPending = !1;
                  var o = t.gridOptionsWrapper.isAnimateRows();
                  t.refreshModel({
                    step: e.ClientSideRowModelSteps.MAP,
                    keepRenderedRows: !0,
                    animate: o,
                  });
                };
                this.gridOptionsWrapper.isSuppressAnimationFrame()
                  ? o()
                  : this.animationFrameService.addDestroyTask(o);
              }
            }),
            (o.prototype.onFilterChanged = function (t) {
              if (!t.afterDataChange) {
                var o = this.gridOptionsWrapper.isAnimateRows();
                this.refreshModel({
                  step: e.ClientSideRowModelSteps.FILTER,
                  keepRenderedRows: !0,
                  animate: o,
                });
              }
            }),
            (o.prototype.onSortChanged = function () {
              var t = this.gridOptionsWrapper.isAnimateRows();
              this.refreshModel({
                step: e.ClientSideRowModelSteps.SORT,
                keepRenderedRows: !0,
                animate: t,
                keepEditingRows: !0,
              });
            }),
            (o.prototype.getType = function () {
              return vt.ROW_MODEL_TYPE_CLIENT_SIDE;
            }),
            (o.prototype.onValueChanged = function () {
              this.columnController.isPivotActive()
                ? this.refreshModel({ step: e.ClientSideRowModelSteps.PIVOT })
                : this.refreshModel({
                    step: e.ClientSideRowModelSteps.AGGREGATE,
                  });
            }),
            (o.prototype.createChangePath = function (t) {
              var e = xn.missingOrEmpty(t),
                o = new $i(!1, this.rootNode);
              return (
                (e || this.gridOptionsWrapper.isTreeData()) && o.setInactive(),
                o
              );
            }),
            (o.prototype.isSuppressModelUpdateAfterUpdateTransaction =
              function (t) {
                if (
                  !this.gridOptionsWrapper.isSuppressModelUpdateAfterUpdateTransaction()
                )
                  return !1;
                if (null == t.rowNodeTransactions) return !1;
                var e = xn.filter(t.rowNodeTransactions, function (t) {
                  return (
                    (null != t.add && t.add.length > 0) ||
                    (null != t.remove && t.remove.length > 0)
                  );
                });
                return null == e || 0 == e.length;
              }),
            (o.prototype.refreshModel = function (t) {
              var o = this;
              if (!this.isSuppressModelUpdateAfterUpdateTransaction(t)) {
                var n = this.createChangePath(t.rowNodeTransactions);
                switch (t.step) {
                  case e.ClientSideRowModelSteps.EVERYTHING:
                    this.doRowGrouping(
                      t.groupState,
                      t.rowNodeTransactions,
                      t.rowNodeOrder,
                      n,
                      !!t.afterColumnsChanged
                    );
                  case e.ClientSideRowModelSteps.FILTER:
                    this.doFilter(n);
                  case e.ClientSideRowModelSteps.PIVOT:
                    this.doPivot(n);
                  case e.ClientSideRowModelSteps.AGGREGATE:
                    this.doAggregate(n);
                  case e.ClientSideRowModelSteps.SORT:
                    this.doSort(t.rowNodeTransactions, n);
                  case e.ClientSideRowModelSteps.MAP:
                    this.doRowsToDisplay();
                }
                this.resetRowTops(this.rootNode, n),
                  this.setRowTops(),
                  this.eventService.dispatchEvent({
                    type: zt.EVENT_MODEL_UPDATED,
                    api: this.gridApi,
                    columnApi: this.columnApi,
                    animate: t.animate,
                    keepRenderedRows: t.keepRenderedRows,
                    newData: t.newData,
                    newPage: !1,
                  }),
                  this.$scope &&
                    window.setTimeout(function () {
                      o.$scope.$apply();
                    }, 0);
              }
            }),
            (o.prototype.isEmpty = function () {
              var t =
                xn.missing(this.rootNode.allLeafChildren) ||
                0 === this.rootNode.allLeafChildren.length;
              return (
                xn.missing(this.rootNode) ||
                t ||
                !this.columnController.isReady()
              );
            }),
            (o.prototype.isRowsToRender = function () {
              return (
                xn.exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0
              );
            }),
            (o.prototype.getNodesInRangeForSelection = function (t, e) {
              var o,
                n = !e,
                r = !1,
                i = [],
                s = this.gridOptionsWrapper.isGroupSelectsChildren();
              return (
                this.forEachNodeAfterFilterAndSort(function (a) {
                  var l = n && !r;
                  if ((n || (a !== e && a !== t) || (n = !0), !a.group || !s)) {
                    var u = n && !r,
                      p = a.isParentOfNode(o);
                    (u || p) && i.push(a);
                  }
                  l &&
                    ((a !== e && a !== t) || ((r = !0), (o = a === e ? e : t)));
                }),
                i
              );
            }),
            (o.prototype.setDatasource = function (t) {
              console.error(
                "AG Grid: should never call setDatasource on clientSideRowController"
              );
            }),
            (o.prototype.getTopLevelNodes = function () {
              return this.rootNode ? this.rootNode.childrenAfterGroup : null;
            }),
            (o.prototype.getRootNode = function () {
              return this.rootNode;
            }),
            (o.prototype.getRow = function (t) {
              return this.rowsToDisplay[t];
            }),
            (o.prototype.isRowPresent = function (t) {
              return this.rowsToDisplay.indexOf(t) >= 0;
            }),
            (o.prototype.getRowIndexAtPixel = function (t) {
              if (this.isEmpty()) return -1;
              var e = 0,
                o = this.rowsToDisplay.length - 1;
              if (t <= 0) return 0;
              if (xn.last(this.rowsToDisplay).rowTop <= t)
                return this.rowsToDisplay.length - 1;
              for (;;) {
                var n = Math.floor((e + o) / 2),
                  r = this.rowsToDisplay[n];
                if (this.isRowInPixel(r, t)) return n;
                r.rowTop < t ? (e = n + 1) : r.rowTop > t && (o = n - 1);
              }
            }),
            (o.prototype.isRowInPixel = function (t, e) {
              return t.rowTop <= e && t.rowTop + t.rowHeight > e;
            }),
            (o.prototype.forEachLeafNode = function (t) {
              this.rootNode.allLeafChildren &&
                this.rootNode.allLeafChildren.forEach(function (e, o) {
                  return t(e, o);
                });
            }),
            (o.prototype.forEachNode = function (t) {
              this.recursivelyWalkNodesAndCallback(
                this.rootNode.childrenAfterGroup,
                t,
                qc.Normal,
                0
              );
            }),
            (o.prototype.forEachNodeAfterFilter = function (t) {
              this.recursivelyWalkNodesAndCallback(
                this.rootNode.childrenAfterFilter,
                t,
                qc.AfterFilter,
                0
              );
            }),
            (o.prototype.forEachNodeAfterFilterAndSort = function (t) {
              this.recursivelyWalkNodesAndCallback(
                this.rootNode.childrenAfterSort,
                t,
                qc.AfterFilterAndSort,
                0
              );
            }),
            (o.prototype.forEachPivotNode = function (t) {
              this.recursivelyWalkNodesAndCallback(
                [this.rootNode],
                t,
                qc.PivotNodes,
                0
              );
            }),
            (o.prototype.recursivelyWalkNodesAndCallback = function (
              t,
              e,
              o,
              n
            ) {
              if (!t) return n;
              for (var r = 0; r < t.length; r++) {
                var i = t[r];
                if ((e(i, n++), i.hasChildren())) {
                  var s = null;
                  switch (o) {
                    case qc.Normal:
                      s = i.childrenAfterGroup;
                      break;
                    case qc.AfterFilter:
                      s = i.childrenAfterFilter;
                      break;
                    case qc.AfterFilterAndSort:
                      s = i.childrenAfterSort;
                      break;
                    case qc.PivotNodes:
                      s = i.leafGroup ? null : i.childrenAfterSort;
                  }
                  s && (n = this.recursivelyWalkNodesAndCallback(s, e, o, n));
                }
              }
              return n;
            }),
            (o.prototype.doAggregate = function (t) {
              this.aggregationStage &&
                this.aggregationStage.execute({
                  rowNode: this.rootNode,
                  changedPath: t,
                });
            }),
            (o.prototype.expandOrCollapseAll = function (t) {
              var o = this.gridOptionsWrapper.isTreeData();
              this.rootNode &&
                (function e(n) {
                  n &&
                    n.forEach(function (n) {
                      (o ? xn.exists(n.childrenAfterGroup) : n.group) &&
                        ((n.expanded = t), e(n.childrenAfterGroup));
                    });
                })(this.rootNode.childrenAfterGroup),
                this.refreshModel({ step: e.ClientSideRowModelSteps.MAP }),
                this.eventService.dispatchEvent({
                  api: this.gridApi,
                  columnApi: this.columnApi,
                  type: zt.EVENT_EXPAND_COLLAPSE_ALL,
                  source: t ? "expandAll" : "collapseAll",
                });
            }),
            (o.prototype.doSort = function (t, e) {
              this.sortStage.execute({
                rowNode: this.rootNode,
                rowNodeTransactions: t,
                changedPath: e,
              });
            }),
            (o.prototype.doRowGrouping = function (t, e, o, n, r) {
              this.groupStage
                ? (e
                    ? this.groupStage.execute({
                        rowNode: this.rootNode,
                        rowNodeTransactions: e,
                        rowNodeOrder: o,
                        changedPath: n,
                      })
                    : (this.selectionController.removeGroupsFromSelection(),
                      this.groupStage.execute({
                        rowNode: this.rootNode,
                        changedPath: n,
                        afterColumnsChanged: r,
                      }),
                      this.restoreGroupState(t)),
                  this.gridOptionsWrapper.isGroupSelectsChildren() &&
                    this.selectionController.updateGroupsFromChildrenSelections(
                      n
                    ))
                : ((this.rootNode.childrenAfterGroup =
                    this.rootNode.allLeafChildren),
                  this.rootNode.updateHasChildren());
            }),
            (o.prototype.restoreGroupState = function (t) {
              t &&
                xn.traverseNodesWithKey(
                  this.rootNode.childrenAfterGroup,
                  function (e, o) {
                    "boolean" == typeof t[o] && (e.expanded = t[o]);
                  }
                );
            }),
            (o.prototype.doFilter = function (t) {
              this.filterStage.execute({
                rowNode: this.rootNode,
                changedPath: t,
              });
            }),
            (o.prototype.doPivot = function (t) {
              this.pivotStage &&
                this.pivotStage.execute({
                  rowNode: this.rootNode,
                  changedPath: t,
                });
            }),
            (o.prototype.getGroupState = function () {
              if (
                !this.rootNode.childrenAfterGroup ||
                !this.gridOptionsWrapper.isRememberGroupStateWhenNewData()
              )
                return null;
              var t = {};
              return (
                xn.traverseNodesWithKey(
                  this.rootNode.childrenAfterGroup,
                  function (e, o) {
                    return (t[o] = e.expanded);
                  }
                ),
                t
              );
            }),
            (o.prototype.getCopyOfNodesMap = function () {
              return this.nodeManager.getCopyOfNodesMap();
            }),
            (o.prototype.getRowNode = function (t) {
              return this.nodeManager.getRowNode(t);
            }),
            (o.prototype.setRowData = function (t) {
              var o = this.getGroupState();
              this.nodeManager.setRowData(t),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_ROW_DATA_CHANGED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                }),
                this.refreshModel({
                  step: e.ClientSideRowModelSteps.EVERYTHING,
                  groupState: o,
                  newData: !0,
                });
            }),
            (o.prototype.batchUpdateRowData = function (t, e) {
              var o = this;
              if (null == this.applyAsyncTransactionsTimeout) {
                this.rowDataTransactionBatch = [];
                var n = this.gridOptionsWrapper.getAsyncTransactionWaitMillis();
                this.applyAsyncTransactionsTimeout = window.setTimeout(
                  function () {
                    o.executeBatchUpdateRowData();
                  },
                  n
                );
              }
              this.rowDataTransactionBatch.push({
                rowDataTransaction: t,
                callback: e,
              });
            }),
            (o.prototype.flushAsyncTransactions = function () {
              null != this.applyAsyncTransactionsTimeout &&
                (clearTimeout(this.applyAsyncTransactionsTimeout),
                this.executeBatchUpdateRowData());
            }),
            (o.prototype.executeBatchUpdateRowData = function () {
              var t = this;
              this.valueCache.onDataChanged();
              var e = [],
                o = [],
                n = !1;
              if (
                (this.rowDataTransactionBatch &&
                  this.rowDataTransactionBatch.forEach(function (r) {
                    var i = t.nodeManager.updateRowData(
                      r.rowDataTransaction,
                      void 0
                    );
                    o.push(i),
                      r.callback && e.push(r.callback.bind(null, i)),
                      "number" == typeof r.rowDataTransaction.addIndex &&
                        (n = !0);
                  }),
                this.commonUpdateRowData(o, void 0, n),
                e.length > 0 &&
                  window.setTimeout(function () {
                    e.forEach(function (t) {
                      return t();
                    });
                  }, 0),
                o.length > 0)
              ) {
                var r = {
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                  type: zt.EVENT_ASYNC_TRANSACTIONS_FLUSHED,
                  results: o,
                };
                this.eventService.dispatchEvent(r);
              }
              (this.rowDataTransactionBatch = null),
                (this.applyAsyncTransactionsTimeout = void 0);
            }),
            (o.prototype.updateRowData = function (t, e) {
              this.valueCache.onDataChanged();
              var o = this.nodeManager.updateRowData(t, e);
              return (
                this.commonUpdateRowData([o], e, "number" == typeof t.addIndex),
                o
              );
            }),
            (o.prototype.createRowNodeOrder = function () {
              if (!this.gridOptionsWrapper.isSuppressMaintainUnsortedOrder()) {
                var t = {};
                if (this.rootNode && this.rootNode.allLeafChildren)
                  for (var e = 0; e < this.rootNode.allLeafChildren.length; e++)
                    t[this.rootNode.allLeafChildren[e].id] = e;
                return t;
              }
            }),
            (o.prototype.commonUpdateRowData = function (t, o, n) {
              n && (o = this.createRowNodeOrder()),
                this.refreshModel({
                  step: e.ClientSideRowModelSteps.EVERYTHING,
                  rowNodeTransactions: t,
                  rowNodeOrder: o,
                  keepRenderedRows: !0,
                  animate: !0,
                  keepEditingRows: !0,
                }),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_ROW_DATA_UPDATED,
                  api: this.gridApi,
                  columnApi: this.columnApi,
                });
            }),
            (o.prototype.doRowsToDisplay = function () {
              this.rowsToDisplay = this.flattenStage.execute({
                rowNode: this.rootNode,
              });
            }),
            (o.prototype.onRowHeightChanged = function () {
              this.refreshModel({
                step: e.ClientSideRowModelSteps.MAP,
                keepRenderedRows: !0,
                keepEditingRows: !0,
              });
            }),
            (o.prototype.resetRowHeights = function () {
              var t = !1;
              this.forEachNode(function (e) {
                e.setRowHeight(e.rowHeight, !0);
                var o = e.detailNode;
                o && o.setRowHeight(o.rowHeight, !0), (t = !0);
              }),
                t && this.onRowHeightChanged();
            }),
            $c(
              [ut("columnController")],
              o.prototype,
              "columnController",
              void 0
            ),
            $c([ut("filterManager")], o.prototype, "filterManager", void 0),
            $c([ut("$scope")], o.prototype, "$scope", void 0),
            $c(
              [ut("selectionController")],
              o.prototype,
              "selectionController",
              void 0
            ),
            $c([ut("valueService")], o.prototype, "valueService", void 0),
            $c([ut("valueCache")], o.prototype, "valueCache", void 0),
            $c([ut("columnApi")], o.prototype, "columnApi", void 0),
            $c([ut("gridApi")], o.prototype, "gridApi", void 0),
            $c(
              [ut("animationFrameService")],
              o.prototype,
              "animationFrameService",
              void 0
            ),
            $c([ut("filterStage")], o.prototype, "filterStage", void 0),
            $c([ut("sortStage")], o.prototype, "sortStage", void 0),
            $c([ut("flattenStage")], o.prototype, "flattenStage", void 0),
            $c([pt("groupStage")], o.prototype, "groupStage", void 0),
            $c(
              [pt("aggregationStage")],
              o.prototype,
              "aggregationStage",
              void 0
            ),
            $c([pt("pivotStage")], o.prototype, "pivotStage", void 0),
            $c([st], o.prototype, "init", null),
            $c([lt("rowModel")], o)
          );
        })(Ht),
        ed = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        od = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        nd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            ed(e, t),
            (e.prototype.execute = function (t) {
              var e = t.rowNode;
              this.filterService.filter(t.changedPath),
                this.selectableService.updateSelectableAfterFiltering(e);
            }),
            od(
              [ut("selectableService")],
              e.prototype,
              "selectableService",
              void 0
            ),
            od([ut("filterService")], e.prototype, "filterService", void 0),
            od([lt("filterStage")], e)
          );
        })(Ht),
        rd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        id = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        sd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            rd(e, t),
            (e.prototype.execute = function (t) {
              var e = this.sortController.getSortOptions(),
                o = xn.exists(e) && e.length > 0,
                n =
                  o &&
                  xn.exists(t.rowNodeTransactions) &&
                  this.gridOptionsWrapper.isDeltaSort(),
                r = n ? this.calculateDirtyNodes(t.rowNodeTransactions) : null,
                i = this.columnController.getValueColumns(),
                s = xn.missingOrEmpty(i);
              this.sortService.sort(e, o, n, r, t.changedPath, s);
            }),
            (e.prototype.calculateDirtyNodes = function (t) {
              var e = {},
                o = function (t) {
                  t &&
                    t.forEach(function (t) {
                      return (e[t.id] = !0);
                    });
                };
              return (
                t &&
                  t.forEach(function (t) {
                    o(t.add), o(t.update), o(t.remove);
                  }),
                e
              );
            }),
            id([ut("sortService")], e.prototype, "sortService", void 0),
            id([ut("sortController")], e.prototype, "sortController", void 0),
            id(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            id([lt("sortStage")], e)
          );
        })(Ht),
        ad = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        ld = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        ud = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            ad(e, t),
            (e.prototype.execute = function (t) {
              var e = t.rowNode,
                o = [],
                n = { value: 0 },
                r = this.columnController.isPivotMode(),
                i = r && e.leafGroup;
              return (
                this.recursivelyAddToRowsToDisplay(
                  i ? [e] : e.childrenAfterSort,
                  o,
                  n,
                  r,
                  0
                ),
                !i &&
                  o.length > 0 &&
                  this.gridOptionsWrapper.isGroupIncludeTotalFooter() &&
                  (this.ensureFooterNodeExists(e),
                  this.addRowNodeToRowsToDisplay(e.sibling, o, n, 0)),
                o
              );
            }),
            (e.prototype.recursivelyAddToRowsToDisplay = function (
              t,
              e,
              o,
              n,
              r
            ) {
              if (!xn.missingOrEmpty(t))
                for (
                  var i = this.gridOptionsWrapper.isGroupHideOpenParents(),
                    s = this.gridOptionsWrapper.isGroupRemoveSingleChildren(),
                    a =
                      !s &&
                      this.gridOptionsWrapper.isGroupRemoveLowestSingleChildren(),
                    l = 0;
                  l < t.length;
                  l++
                ) {
                  var u = t[l],
                    p = u.hasChildren(),
                    c = s && p && 1 === u.childrenAfterGroup.length,
                    d =
                      a &&
                      p &&
                      u.leafGroup &&
                      1 === u.childrenAfterGroup.length;
                  if (
                    (!(
                      (n && !p) ||
                      (i && u.expanded && (!n || !u.leafGroup)) ||
                      c ||
                      d
                    ) && this.addRowNodeToRowsToDisplay(u, e, o, r),
                    !n || !u.leafGroup)
                  )
                    if (p) {
                      var h = c || d;
                      (u.expanded || h) &&
                        (this.recursivelyAddToRowsToDisplay(
                          u.childrenAfterSort,
                          e,
                          o,
                          n,
                          h ? r : r + 1
                        ),
                        this.gridOptionsWrapper.isGroupIncludeFooter() &&
                          (this.ensureFooterNodeExists(u),
                          this.addRowNodeToRowsToDisplay(u.sibling, e, o, r)));
                    } else if (u.master && u.expanded) {
                      var f = this.createDetailNode(u);
                      this.addRowNodeToRowsToDisplay(f, e, o, r);
                    }
                }
            }),
            (e.prototype.addRowNodeToRowsToDisplay = function (t, e, o, n) {
              var r = this.gridOptionsWrapper.isGroupMultiAutoColumn();
              e.push(t), t.setUiLevel(r ? 0 : n);
            }),
            (e.prototype.ensureFooterNodeExists = function (t) {
              if (!xn.exists(t.sibling)) {
                var e = new Pr();
                this.context.createBean(e),
                  Object.keys(t).forEach(function (o) {
                    e[o] = t[o];
                  }),
                  (e.footer = !0),
                  e.setRowTop(null),
                  e.setRowIndex(null),
                  (e.oldRowTop = null),
                  xn.exists(e.id) && (e.id = "rowGroupFooter_" + e.id),
                  (e.sibling = t),
                  (t.sibling = e);
              }
            }),
            (e.prototype.createDetailNode = function (t) {
              if (xn.exists(t.detailNode)) return t.detailNode;
              var e = new Pr();
              return (
                this.context.createBean(e),
                (e.detail = !0),
                (e.selectable = !1),
                (e.parent = t),
                xn.exists(t.id) && (e.id = "detail_" + t.id),
                (e.data = t.data),
                (e.level = t.level + 1),
                (t.detailNode = e),
                e
              );
            }),
            ld(
              [ut("selectionController")],
              e.prototype,
              "selectionController",
              void 0
            ),
            ld(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            ld([lt("flattenStage")], e)
          );
        })(Ht),
        pd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        cd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        dd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            pd(e, t),
            (e.prototype.init = function () {
              this.postSortFunc = this.gridOptionsWrapper.getPostSortFunc();
            }),
            (e.prototype.sort = function (t, e, o, n, r, i) {
              var s = this;
              r &&
                r.forEachChangedNodeDepthFirst(function (a) {
                  s.pullDownGroupDataForHideOpenParents(
                    a.childrenAfterFilter,
                    !0
                  ),
                    (a.childrenAfterSort = e
                      ? o
                        ? s.doDeltaSort(a, t, n, r, i)
                        : s.rowNodeSorter.doFullSort(a.childrenAfterFilter, t)
                      : a.childrenAfterFilter.slice(0)),
                    s.updateChildIndexes(a),
                    s.postSortFunc && s.postSortFunc(a.childrenAfterSort);
                }),
                this.updateGroupDataForHiddenOpenParents(r);
            }),
            (e.prototype.mapNodeToSortedNode = function (t, e) {
              return { currentPos: e, rowNode: t };
            }),
            (e.prototype.doDeltaSort = function (t, e, o, n, r) {
              var i = t.childrenAfterSort
                  .filter(function (t) {
                    var e = !o[t.id],
                      i = r || (n && n.canSkip(t));
                    return e && i;
                  })
                  .map(this.mapNodeToSortedNode.bind(this)),
                s = {};
              i.forEach(function (t) {
                return (s[t.rowNode.id] = t.rowNode);
              });
              var a = t.childrenAfterFilter
                .filter(function (t) {
                  return !s[t.id];
                })
                .map(this.mapNodeToSortedNode.bind(this));
              return (
                a.sort(this.rowNodeSorter.compareRowNodes.bind(this, e)),
                (0 === a.length
                  ? i
                  : 0 === i.length
                  ? a
                  : this.mergeSortedArrays(e, i, a)
                ).map(function (t) {
                  return t.rowNode;
                })
              );
            }),
            (e.prototype.mergeSortedArrays = function (t, e, o) {
              for (var n = [], r = 0, i = 0; r < e.length && i < o.length; ) {
                var s = this.rowNodeSorter.compareRowNodes(t, e[r], o[i]);
                n.push(s < 0 ? e[r++] : o[i++]);
              }
              for (; r < e.length; ) n.push(e[r++]);
              for (; i < o.length; ) n.push(o[i++]);
              return n;
            }),
            (e.prototype.updateChildIndexes = function (t) {
              if (!xn.missing(t.childrenAfterSort))
                for (var e = t.childrenAfterSort, o = 0; o < e.length; o++) {
                  var n = e[o],
                    r = o === t.childrenAfterSort.length - 1;
                  n.setFirstChild(0 === o),
                    n.setLastChild(r),
                    n.setChildIndex(o);
                }
            }),
            (e.prototype.updateGroupDataForHiddenOpenParents = function (t) {
              var e = this;
              if (this.gridOptionsWrapper.isGroupHideOpenParents()) {
                var o = function (t) {
                  e.pullDownGroupDataForHideOpenParents(
                    t.childrenAfterSort,
                    !1
                  ),
                    t.childrenAfterSort.forEach(function (t) {
                      t.hasChildren() && o(t);
                    });
                };
                t &&
                  t.executeFromRootNode(function (t) {
                    return o(t);
                  });
              }
            }),
            (e.prototype.pullDownGroupDataForHideOpenParents = function (t, e) {
              var o = this;
              this.gridOptionsWrapper.isGroupHideOpenParents() &&
                !xn.missing(t) &&
                t.forEach(function (t) {
                  o.columnController
                    .getGroupDisplayColumns()
                    .forEach(function (n) {
                      var r = n.getColDef().showRowGroup;
                      if ("string" == typeof r) {
                        var i = o.columnController.getPrimaryColumn(r);
                        if (i !== t.rowGroupColumn)
                          if (e) t.setGroupValue(n.getId(), null);
                          else {
                            var s = t.getFirstChildOfFirstChild(i);
                            s && t.setGroupValue(n.getId(), s.key);
                          }
                      } else console.error("AG Grid: groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup");
                    });
                });
            }),
            cd(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            cd([ut("rowNodeSorter")], e.prototype, "rowNodeSorter", void 0),
            cd([st], e.prototype, "init", null),
            cd([lt("sortService")], e)
          );
        })(Ht),
        hd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        fd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        gd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            hd(e, t),
            (e.prototype.postConstruct = function () {
              this.doingTreeData = this.gridOptionsWrapper.isTreeData();
            }),
            (e.prototype.filter = function (t) {
              var e = this.filterManager.isAnyFilterPresent();
              this.filterNodes(e, t);
            }),
            (e.prototype.filterNodes = function (t, e) {
              var o = this,
                n = function (e, n) {
                  e.hasChildren()
                    ? ((e.childrenAfterFilter =
                        t && !n
                          ? e.childrenAfterGroup.filter(function (t) {
                              var e =
                                  t.childrenAfterFilter &&
                                  t.childrenAfterFilter.length > 0,
                                n =
                                  t.data &&
                                  o.filterManager.doesRowPassFilter({
                                    rowNode: t,
                                  });
                              return e || n;
                            })
                          : e.childrenAfterGroup),
                      o.setAllChildrenCount(e))
                    : ((e.childrenAfterFilter = e.childrenAfterGroup),
                      e.setAllChildrenCount(null));
                };
              if (this.doingTreeDataFiltering()) {
                var r = function (t, e) {
                  if (t.childrenAfterGroup)
                    for (var i = 0; i < t.childrenAfterGroup.length; i++) {
                      var s = t.childrenAfterGroup[i],
                        a =
                          e ||
                          o.filterManager.doesRowPassFilter({ rowNode: s });
                      s.childrenAfterGroup
                        ? r(t.childrenAfterGroup[i], a)
                        : n(s, a);
                    }
                  n(t, e);
                };
                e.executeFromRootNode(function (t) {
                  return r(t, !1);
                });
              } else
                e.forEachChangedNodeDepthFirst(function (t) {
                  return n(t, !1);
                }, !0);
            }),
            (e.prototype.setAllChildrenCountTreeData = function (t) {
              var e = 0;
              t.childrenAfterFilter.forEach(function (t) {
                e++, (e += t.allChildrenCount);
              }),
                t.setAllChildrenCount(e);
            }),
            (e.prototype.setAllChildrenCountGridGrouping = function (t) {
              var e = 0;
              t.childrenAfterFilter.forEach(function (t) {
                t.group ? (e += t.allChildrenCount) : e++;
              }),
                t.setAllChildrenCount(e);
            }),
            (e.prototype.setAllChildrenCount = function (t) {
              this.doingTreeData
                ? this.setAllChildrenCountTreeData(t)
                : this.setAllChildrenCountGridGrouping(t);
            }),
            (e.prototype.doingTreeDataFiltering = function () {
              return (
                this.gridOptionsWrapper.isTreeData() &&
                !this.gridOptionsWrapper.isExcludeChildrenWhenTreeDataFiltering()
              );
            }),
            fd([ut("filterManager")], e.prototype, "filterManager", void 0),
            fd([st], e.prototype, "postConstruct", null),
            fd([lt("filterService")], e)
          );
        })(Ht),
        yd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        md = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        vd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            yd(e, t),
            (e.prototype.postConstruct = function () {
              this.rowModel.getType() === vt.ROW_MODEL_TYPE_CLIENT_SIDE &&
                (this.clientSideRowModel = this.rowModel);
            }),
            (e.prototype.createTransactionForRowData = function (t) {
              if (xn.missing(this.clientSideRowModel))
                console.error(
                  "AG Grid: ImmutableService only works with ClientSideRowModel"
                );
              else {
                var e = this.gridOptionsWrapper.getRowNodeIdFunc();
                if (e && !xn.missing(e)) {
                  var o = { remove: [], update: [], add: [] },
                    n = this.clientSideRowModel.getCopyOfNodesMap(),
                    r =
                      this.gridOptionsWrapper.isSuppressMaintainUnsortedOrder()
                        ? null
                        : {};
                  return (
                    xn.exists(t) &&
                      t.forEach(function (t, i) {
                        var s = e(t),
                          a = n[s];
                        r && (r[s] = i),
                          a
                            ? (a.data !== t && o.update.push(t),
                              (n[s] = void 0))
                            : o.add.push(t);
                      }),
                    xn.iterateObject(n, function (t, e) {
                      e && o.remove.push(e.data);
                    }),
                    [o, r]
                  );
                }
                console.error(
                  "AG Grid: ImmutableService requires getRowNodeId() callback to be implemented, your row data need IDs!"
                );
              }
            }),
            md([ut("rowModel")], e.prototype, "rowModel", void 0),
            md([st], e.prototype, "postConstruct", null),
            md([lt("immutableService")], e)
          );
        })(Ht),
        Cd = {
          moduleName: e.ModuleNames.ClientSideRowModelModule,
          beans: [nd, sd, ud, dd, gd, vd],
          rowModels: { clientSide: td },
        },
        wd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        bd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ed = (function (t) {
          function e(e, o, n) {
            var r = t.call(this, e) || this;
            return (
              (r.parentCache = o),
              (r.params = n),
              (r.startRow = e * n.blockSize),
              (r.endRow = r.startRow + n.blockSize),
              r
            );
          }
          return (
            wd(e, t),
            (e.prototype.postConstruct = function () {
              this.createRowNodes();
            }),
            (e.prototype.getBlockStateJson = function () {
              return {
                id: "" + this.getId(),
                state: {
                  blockNumber: this.getId(),
                  startRow: this.getStartRow(),
                  endRow: this.getEndRow(),
                  pageStatus: this.getState(),
                },
              };
            }),
            (e.prototype.setDataAndId = function (t, e, o) {
              xn.exists(e)
                ? t.setDataAndId(e, o.toString())
                : t.setDataAndId(void 0, void 0);
            }),
            (e.prototype.loadFromDatasource = function () {
              var t = this,
                e = this.createLoadParams();
              xn.missing(this.params.datasource.getRows)
                ? console.warn("AG Grid: datasource is missing getRows method")
                : window.setTimeout(function () {
                    t.params.datasource.getRows(e);
                  }, 0);
            }),
            (e.prototype.processServerFail = function () {}),
            (e.prototype.createLoadParams = function () {
              return {
                startRow: this.getStartRow(),
                endRow: this.getEndRow(),
                successCallback: this.pageLoaded.bind(this, this.getVersion()),
                failCallback: this.pageLoadFailed.bind(this, this.getVersion()),
                sortModel: this.params.sortModel,
                filterModel: this.params.filterModel,
                context: this.gridOptionsWrapper.getContext(),
              };
            }),
            (e.prototype.forEachNode = function (t, e, o) {
              var n = this;
              this.rowNodes.forEach(function (r, i) {
                n.startRow + i < o && t(r, e.next());
              });
            }),
            (e.prototype.getLastAccessed = function () {
              return this.lastAccessed;
            }),
            (e.prototype.getRow = function (t, e) {
              return (
                void 0 === e && (e = !1),
                e ||
                  (this.lastAccessed = this.params.lastAccessedSequence.next()),
                this.rowNodes[t - this.startRow]
              );
            }),
            (e.prototype.getStartRow = function () {
              return this.startRow;
            }),
            (e.prototype.getEndRow = function () {
              return this.endRow;
            }),
            (e.prototype.createRowNodes = function () {
              this.rowNodes = [];
              for (var t = 0; t < this.params.blockSize; t++) {
                var e = this.startRow + t,
                  o = this.getContext().createBean(new Pr());
                o.setRowHeight(this.params.rowHeight),
                  (o.uiLevel = 0),
                  o.setRowIndex(e),
                  o.setRowTop(this.params.rowHeight * e),
                  this.rowNodes.push(o);
              }
            }),
            (e.prototype.processServerResult = function (t) {
              var e = this,
                o = [];
              this.rowNodes.forEach(function (n, r) {
                var i = t.rowData ? t.rowData[r] : void 0;
                n.stub && o.push(n), e.setDataAndId(n, i, e.startRow + r);
              }),
                o.length > 0 && this.rowRenderer.redrawRows(o),
                this.parentCache.pageLoaded(
                  this,
                  null != t.rowCount && t.rowCount >= 0 ? t.rowCount : void 0
                );
            }),
            (e.prototype.destroyRowNodes = function () {
              this.rowNodes.forEach(function (t) {
                t.clearRowTopAndRowIndex();
              });
            }),
            bd([ut("rowRenderer")], e.prototype, "rowRenderer", void 0),
            bd([st], e.prototype, "postConstruct", null),
            bd([at], e.prototype, "destroyRowNodes", null),
            e
          );
        })(Tc),
        Sd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Od = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        _d = (function (t) {
          function e(e) {
            var o = t.call(this) || this;
            return (
              (o.lastRowIndexKnown = !1),
              (o.blocks = {}),
              (o.blockCount = 0),
              (o.rowCount = e.initialRowCount),
              (o.params = e),
              o
            );
          }
          return (
            Sd(e, t),
            (e.prototype.setBeans = function (t) {
              this.logger = t.create("InfiniteCache");
            }),
            (e.prototype.getRow = function (t, e) {
              void 0 === e && (e = !1);
              var o = Math.floor(t / this.params.blockSize),
                n = this.blocks[o];
              if (!n) {
                if (e) return null;
                n = this.createBlock(o);
              }
              return n.getRow(t);
            }),
            (e.prototype.createBlock = function (t) {
              var e = this.createBean(new Ed(t, this, this.params));
              return (
                (this.blocks[e.getId()] = e),
                this.blockCount++,
                this.purgeBlocksIfNeeded(e),
                this.params.rowNodeBlockLoader.addBlock(e),
                e
              );
            }),
            (e.prototype.refreshCache = function () {
              this.getBlocksInOrder().forEach(function (t) {
                return t.setStateWaitingToLoad();
              }),
                this.params.rowNodeBlockLoader.checkBlockToLoad();
            }),
            (e.prototype.destroyAllBlocks = function () {
              var t = this;
              this.getBlocksInOrder().forEach(function (e) {
                return t.destroyBlock(e);
              });
            }),
            (e.prototype.getRowCount = function () {
              return this.rowCount;
            }),
            (e.prototype.isLastRowIndexKnown = function () {
              return this.lastRowIndexKnown;
            }),
            (e.prototype.pageLoaded = function (t, e) {
              this.isAlive() &&
                (this.logger.log(
                  "onPageLoaded: page = " + t.getId() + ", lastRow = " + e
                ),
                (this.checkRowCount(t, e) || this.params.dynamicRowHeight) &&
                  this.onCacheUpdated());
            }),
            (e.prototype.purgeBlocksIfNeeded = function (t) {
              var o = this,
                n = this.getBlocksInOrder().filter(function (e) {
                  return e != t;
                });
              n.sort(function (t, e) {
                return e.getLastAccessed() - t.getLastAccessed();
              });
              var r = this.params.maxBlocksInCache > 0,
                i = r ? this.params.maxBlocksInCache - 1 : null,
                s = e.MAX_EMPTY_BLOCKS_TO_KEEP - 1;
              n.forEach(function (t, e) {
                if (
                  (t.getState() === Ed.STATE_WAITING_TO_LOAD && e >= s) ||
                  (r && e >= i)
                ) {
                  if (o.isBlockCurrentlyDisplayed(t)) return;
                  if (o.isBlockFocused(t)) return;
                  o.removeBlockFromCache(t);
                }
              });
            }),
            (e.prototype.isBlockFocused = function (t) {
              var e = this.focusController.getFocusCellToUseAfterRefresh();
              if (!e) return !1;
              if (null != e.rowPinned) return !1;
              var o = t.getStartRow(),
                n = t.getEndRow();
              return e.rowIndex >= o && e.rowIndex < n;
            }),
            (e.prototype.isBlockCurrentlyDisplayed = function (t) {
              var e = t.getStartRow(),
                o = t.getEndRow() - 1;
              return this.rowRenderer.isRangeInRenderedViewport(e, o);
            }),
            (e.prototype.removeBlockFromCache = function (t) {
              t && this.destroyBlock(t);
            }),
            (e.prototype.checkRowCount = function (t, e) {
              var o = this.rowCount;
              if ("number" == typeof e && e >= 0)
                (this.rowCount = e), (this.lastRowIndexKnown = !0);
              else if (!this.lastRowIndexKnown) {
                var n =
                  (t.getId() + 1) * this.params.blockSize +
                  this.params.overflowSize;
                this.rowCount < n && (this.rowCount = n);
              }
              return o != this.rowCount;
            }),
            (e.prototype.setRowCount = function (t, e) {
              (this.rowCount = t),
                xn.exists(e) && (this.lastRowIndexKnown = e),
                this.lastRowIndexKnown ||
                  (this.rowCount % this.params.blockSize == 0 &&
                    this.rowCount++),
                this.onCacheUpdated();
            }),
            (e.prototype.forEachNodeDeep = function (t) {
              var e = this,
                o = new Fn();
              this.getBlocksInOrder().forEach(function (n) {
                return n.forEachNode(t, o, e.rowCount);
              });
            }),
            (e.prototype.getBlocksInOrder = function () {
              return xn.getAllValuesInObject(this.blocks).sort(function (t, e) {
                return t.getId() - e.getId();
              });
            }),
            (e.prototype.destroyBlock = function (t) {
              delete this.blocks[t.getId()],
                this.destroyBean(t),
                this.blockCount--,
                this.params.rowNodeBlockLoader.removeBlock(t);
            }),
            (e.prototype.onCacheUpdated = function () {
              this.isAlive() &&
                (this.destroyAllBlocksPastVirtualRowCount(),
                this.eventService.dispatchEvent({
                  type: zt.EVENT_STORE_UPDATED,
                }));
            }),
            (e.prototype.destroyAllBlocksPastVirtualRowCount = function () {
              var t = this,
                e = [];
              this.getBlocksInOrder().forEach(function (o) {
                o.getId() * t.params.blockSize >= t.rowCount && e.push(o);
              }),
                e.length > 0 &&
                  e.forEach(function (e) {
                    return t.destroyBlock(e);
                  });
            }),
            (e.prototype.purgeCache = function () {
              var t = this;
              this.getBlocksInOrder().forEach(function (e) {
                return t.removeBlockFromCache(e);
              }),
                (this.lastRowIndexKnown = !1),
                0 === this.rowCount &&
                  (this.rowCount = this.params.initialRowCount),
                this.onCacheUpdated();
            }),
            (e.prototype.getRowNodesInRange = function (t, e) {
              var o = this,
                n = [],
                r = -1,
                i = !1,
                s = new Fn();
              xn.missing(t) && (i = !0);
              var a = !1;
              return (
                this.getBlocksInOrder().forEach(function (l) {
                  a ||
                    (i && r + 1 !== l.getId()
                      ? (a = !0)
                      : ((r = l.getId()),
                        l.forEachNode(
                          function (o) {
                            var r = o === t || o === e;
                            (i || r) && n.push(o), r && (i = !i);
                          },
                          s,
                          o.rowCount
                        )));
                }),
                a || i ? [] : n
              );
            }),
            (e.MAX_EMPTY_BLOCKS_TO_KEEP = 2),
            Od([ut("columnApi")], e.prototype, "columnApi", void 0),
            Od([ut("gridApi")], e.prototype, "gridApi", void 0),
            Od([ut("rowRenderer")], e.prototype, "rowRenderer", void 0),
            Od([ut("focusController")], e.prototype, "focusController", void 0),
            Od(
              [
                (0,
                (o = dt("loggerFactory")),
                function (t, e) {
                  o(t, e, 0);
                }),
              ],
              e.prototype,
              "setBeans",
              null
            ),
            Od([at], e.prototype, "destroyAllBlocks", null),
            e
          );
          var o;
        })(Ht),
        Rd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Pd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Td = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Rd(e, t),
            (e.prototype.getRowBounds = function (t) {
              return { rowHeight: this.rowHeight, rowTop: this.rowHeight * t };
            }),
            (e.prototype.ensureRowHeightsValid = function (t, e, o, n) {
              return !1;
            }),
            (e.prototype.init = function () {
              var t = this;
              this.gridOptionsWrapper.isRowModelInfinite() &&
                ((this.rowHeight =
                  this.gridOptionsWrapper.getRowHeightAsNumber()),
                this.addEventListeners(),
                this.addDestroyFunc(function () {
                  return t.destroyCache();
                }));
            }),
            (e.prototype.start = function () {
              this.setDatasource(this.gridOptionsWrapper.getDatasource());
            }),
            (e.prototype.destroyDatasource = function () {
              this.datasource &&
                (this.getContext().destroyBean(this.datasource),
                this.rowRenderer.datasourceChanged(),
                (this.datasource = null));
            }),
            (e.prototype.addEventListeners = function () {
              this.addManagedListener(
                this.eventService,
                zt.EVENT_FILTER_CHANGED,
                this.onFilterChanged.bind(this)
              ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_SORT_CHANGED,
                  this.onSortChanged.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_NEW_COLUMNS_LOADED,
                  this.onColumnEverything.bind(this)
                ),
                this.addManagedListener(
                  this.eventService,
                  zt.EVENT_STORE_UPDATED,
                  this.onCacheUpdated.bind(this)
                );
            }),
            (e.prototype.onFilterChanged = function () {
              this.reset();
            }),
            (e.prototype.onSortChanged = function () {
              this.reset();
            }),
            (e.prototype.onColumnEverything = function () {
              (!this.cacheParams || this.isSortModelDifferent()) &&
                this.reset();
            }),
            (e.prototype.isSortModelDifferent = function () {
              return !xn.jsonEquals(
                this.cacheParams.sortModel,
                this.sortController.getSortModel()
              );
            }),
            (e.prototype.getType = function () {
              return vt.ROW_MODEL_TYPE_INFINITE;
            }),
            (e.prototype.setDatasource = function (t) {
              this.destroyDatasource(),
                (this.datasource = t),
                t && this.reset();
            }),
            (e.prototype.isEmpty = function () {
              return !this.infiniteCache;
            }),
            (e.prototype.isRowsToRender = function () {
              return !!this.infiniteCache;
            }),
            (e.prototype.getNodesInRangeForSelection = function (t, e) {
              return this.infiniteCache
                ? this.infiniteCache.getRowNodesInRange(t, e)
                : [];
            }),
            (e.prototype.reset = function () {
              if (this.datasource) {
                xn.exists(this.gridOptionsWrapper.getRowNodeIdFunc()) ||
                  this.selectionController.reset(),
                  this.resetCache();
                var t = this.createModelUpdatedEvent();
                this.eventService.dispatchEvent(t);
              }
            }),
            (e.prototype.createModelUpdatedEvent = function () {
              return {
                type: zt.EVENT_MODEL_UPDATED,
                api: this.gridApi,
                columnApi: this.columnApi,
                newPage: !1,
                newData: !1,
                keepRenderedRows: !1,
                animate: !1,
              };
            }),
            (e.prototype.resetCache = function () {
              this.destroyCache();
              var t =
                this.gridOptionsWrapper.getMaxConcurrentDatasourceRequests();
              (this.cacheParams = {
                datasource: this.datasource,
                filterModel: this.filterManager.getFilterModel(),
                sortModel: this.sortController.getSortModel(),
                rowNodeBlockLoader: this.rowNodeBlockLoader,
                maxConcurrentRequests: this.defaultIfInvalid(t, 2),
                initialRowCount: this.defaultIfInvalid(
                  this.gridOptionsWrapper.getInfiniteInitialRowCount(),
                  1
                ),
                maxBlocksInCache: this.gridOptionsWrapper.getMaxBlocksInCache(),
                rowHeight: this.gridOptionsWrapper.getRowHeightAsNumber(),
                overflowSize: this.defaultIfInvalid(
                  this.gridOptionsWrapper.getCacheOverflowSize(),
                  1
                ),
                blockSize: this.defaultIfInvalid(
                  this.gridOptionsWrapper.getCacheBlockSize(),
                  100
                ),
                lastAccessedSequence: new Fn(),
              }),
                (this.infiniteCache = this.createBean(
                  new _d(this.cacheParams)
                ));
            }),
            (e.prototype.defaultIfInvalid = function (t, e) {
              return t > 0 ? t : e;
            }),
            (e.prototype.destroyCache = function () {
              this.infiniteCache &&
                (this.infiniteCache = this.destroyBean(this.infiniteCache));
            }),
            (e.prototype.onCacheUpdated = function () {
              var t = this.createModelUpdatedEvent();
              this.eventService.dispatchEvent(t);
            }),
            (e.prototype.getRow = function (t) {
              return this.infiniteCache ? this.infiniteCache.getRow(t) : null;
            }),
            (e.prototype.getRowNode = function (t) {
              var e = null;
              return (
                this.forEachNode(function (o) {
                  o.id === t && (e = o);
                }),
                e
              );
            }),
            (e.prototype.forEachNode = function (t) {
              this.infiniteCache && this.infiniteCache.forEachNodeDeep(t);
            }),
            (e.prototype.getTopLevelRowCount = function () {
              return this.getRowCount();
            }),
            (e.prototype.getTopLevelRowDisplayedIndex = function (t) {
              return t;
            }),
            (e.prototype.getRowIndexAtPixel = function (t) {
              if (0 !== this.rowHeight) {
                var e = Math.floor(t / this.rowHeight),
                  o = this.getRowCount() - 1;
                return e > o ? o : e;
              }
              return 0;
            }),
            (e.prototype.getRowCount = function () {
              return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;
            }),
            (e.prototype.isRowPresent = function (t) {
              return !!this.getRowNode(t.id);
            }),
            (e.prototype.refreshCache = function () {
              this.infiniteCache && this.infiniteCache.refreshCache();
            }),
            (e.prototype.purgeCache = function () {
              this.infiniteCache && this.infiniteCache.purgeCache();
            }),
            (e.prototype.isLastRowIndexKnown = function () {
              return (
                !!this.infiniteCache && this.infiniteCache.isLastRowIndexKnown()
              );
            }),
            (e.prototype.setRowCount = function (t, e) {
              this.infiniteCache && this.infiniteCache.setRowCount(t, e);
            }),
            Pd([ut("filterManager")], e.prototype, "filterManager", void 0),
            Pd([ut("sortController")], e.prototype, "sortController", void 0),
            Pd(
              [ut("selectionController")],
              e.prototype,
              "selectionController",
              void 0
            ),
            Pd([ut("gridApi")], e.prototype, "gridApi", void 0),
            Pd([ut("columnApi")], e.prototype, "columnApi", void 0),
            Pd([ut("rowRenderer")], e.prototype, "rowRenderer", void 0),
            Pd(
              [ut("rowNodeBlockLoader")],
              e.prototype,
              "rowNodeBlockLoader",
              void 0
            ),
            Pd([st], e.prototype, "init", null),
            Pd([at], e.prototype, "destroyDatasource", null),
            Pd([lt("rowModel")], e)
          );
        })(Ht),
        Ad = {
          moduleName: e.ModuleNames.InfiniteRowModelModule,
          rowModels: { infinite: Td },
        },
        Dd = (function () {
          function t() {}
          return (
            (t.prototype.setBeans = function (t) {
              this.beans = t;
            }),
            (t.prototype.export = function (t) {
              if (this.isExportSuppressed())
                return (
                  console.warn(
                    "ag-grid: Export cancelled. Export is not allowed as per your configuration."
                  ),
                  ""
                );
              var e = this.getMergedParamsAndData(t),
                o = e.mergedParams,
                n = e.data,
                r =
                  o && o.fileName && 0 !== o.fileName.length
                    ? o.fileName
                    : this.getDefaultFileName();
              return (
                -1 === r.indexOf(".") &&
                  (r = r + "." + this.getDefaultFileExtension()),
                this.beans.downloader.download(r, this.packageFile(n)),
                n
              );
            }),
            (t.prototype.getData = function (t) {
              return this.getMergedParamsAndData(t).data;
            }),
            (t.prototype.getMergedParamsAndData = function (t) {
              var e = this.mergeDefaultParams(t);
              return {
                mergedParams: e,
                data: this.beans.gridSerializer.serialize(
                  this.createSerializingSession(e),
                  e
                ),
              };
            }),
            (t.prototype.mergeDefaultParams = function (t) {
              var e = this.beans.gridOptionsWrapper.getDefaultExportParams(),
                o = {};
              return xn.assign(o, e), xn.assign(o, t), o;
            }),
            (t.prototype.packageFile = function (t) {
              return new Blob(["\ufeff", t], {
                type: window.navigator.msSaveOrOpenBlob
                  ? this.getMimeType()
                  : "octet/stream",
              });
            }),
            t
          );
        })(),
        xd = (function () {
          function t(t) {
            this.groupColumns = [];
            var e = t.valueService,
              o = t.gridOptionsWrapper,
              n = t.processCellCallback,
              r = t.processHeaderCallback,
              i = t.processGroupHeaderCallback,
              s = t.processRowGroupCallback;
            (this.columnController = t.columnController),
              (this.valueService = e),
              (this.gridOptionsWrapper = o),
              (this.processCellCallback = n),
              (this.processHeaderCallback = r),
              (this.processGroupHeaderCallback = i),
              (this.processRowGroupCallback = s);
          }
          return (
            (t.prototype.prepare = function (t) {
              this.groupColumns = xn.filter(t, function (t) {
                return !!t.getColDef().showRowGroup;
              });
            }),
            (t.prototype.extractHeaderValue = function (t) {
              var e = this.getHeaderName(this.processHeaderCallback, t);
              return null != e ? e : "";
            }),
            (t.prototype.extractRowCellValue = function (t, e, o, n) {
              var r,
                i = this.gridOptionsWrapper.isGroupMultiAutoColumn()
                  ? n.rowGroupIndex
                  : 0;
              r =
                n &&
                n.group &&
                ((e === i && -1 !== this.groupColumns.indexOf(t)) ||
                  (0 === e &&
                    this.gridOptionsWrapper.isGroupUseEntireRow(
                      this.columnController.isPivotMode()
                    )))
                  ? this.createValueForGroupNode(n)
                  : this.valueService.getValue(t, n);
              var s = this.processCell(n, t, r, this.processCellCallback, o);
              return null != s ? s : "";
            }),
            (t.prototype.getHeaderName = function (t, e) {
              return t
                ? t({
                    column: e,
                    api: this.gridOptionsWrapper.getApi(),
                    columnApi: this.gridOptionsWrapper.getColumnApi(),
                    context: this.gridOptionsWrapper.getContext(),
                  })
                : this.columnController.getDisplayNameForColumn(e, "csv", !0);
            }),
            (t.prototype.createValueForGroupNode = function (t) {
              if (this.processRowGroupCallback)
                return this.processRowGroupCallback({
                  node: t,
                  api: this.gridOptionsWrapper.getApi(),
                  columnApi: this.gridOptionsWrapper.getColumnApi(),
                  context: this.gridOptionsWrapper.getContext(),
                });
              var e = [t.key];
              if (!this.gridOptionsWrapper.isGroupMultiAutoColumn())
                for (; t.parent; ) e.push((t = t.parent).key);
              return e.reverse().join(" -> ");
            }),
            (t.prototype.processCell = function (t, e, o, n, r) {
              return n
                ? n({
                    column: e,
                    node: t,
                    value: o,
                    api: this.gridOptionsWrapper.getApi(),
                    columnApi: this.gridOptionsWrapper.getColumnApi(),
                    context: this.gridOptionsWrapper.getContext(),
                    type: r,
                  })
                : o;
            }),
            t
          );
        })(),
        Fd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Nd = (function (t) {
          function e(e) {
            var o = t.call(this, e) || this;
            (o.isFirstLine = !0), (o.result = "");
            var n = e.columnSeparator;
            return (
              (o.suppressQuotes = e.suppressQuotes), (o.columnSeparator = n), o
            );
          }
          return (
            Fd(e, t),
            (e.prototype.addCustomContent = function (t) {
              var e = this;
              t &&
                ("string" == typeof t
                  ? (/^\s*\n/.test(t) || this.beginNewLine(),
                    (t = t.replace(/\r?\n/g, "\r\n")),
                    (this.result += t))
                  : t.forEach(function (t) {
                      e.beginNewLine(),
                        t.forEach(function (t, o) {
                          0 !== o && (e.result += e.columnSeparator),
                            (e.result += e.putInQuotes(t.data.value || "")),
                            t.mergeAcross && e.appendEmptyCells(t.mergeAcross);
                        });
                    }));
            }),
            (e.prototype.onNewHeaderGroupingRow = function () {
              return (
                this.beginNewLine(),
                { onColumn: this.onNewHeaderGroupingRowColumn.bind(this) }
              );
            }),
            (e.prototype.onNewHeaderGroupingRowColumn = function (t, e, o) {
              0 != e && (this.result += this.columnSeparator),
                (this.result += this.putInQuotes(t)),
                this.appendEmptyCells(o);
            }),
            (e.prototype.appendEmptyCells = function (t) {
              for (var e = 1; e <= t; e++)
                this.result += this.columnSeparator + this.putInQuotes("");
            }),
            (e.prototype.onNewHeaderRow = function () {
              return (
                this.beginNewLine(),
                { onColumn: this.onNewHeaderRowColumn.bind(this) }
              );
            }),
            (e.prototype.onNewHeaderRowColumn = function (t, e) {
              0 != e && (this.result += this.columnSeparator),
                (this.result += this.putInQuotes(this.extractHeaderValue(t)));
            }),
            (e.prototype.onNewBodyRow = function () {
              return (
                this.beginNewLine(),
                { onColumn: this.onNewBodyRowColumn.bind(this) }
              );
            }),
            (e.prototype.onNewBodyRowColumn = function (t, e, o) {
              0 != e && (this.result += this.columnSeparator),
                (this.result += this.putInQuotes(
                  this.extractRowCellValue(t, e, vt.EXPORT_TYPE_CSV, o)
                ));
            }),
            (e.prototype.putInQuotes = function (t) {
              return this.suppressQuotes
                ? t
                : null == t
                ? '""'
                : ("string" == typeof t
                    ? (e = t)
                    : "function" == typeof t.toString
                    ? (e = t.toString())
                    : (console.warn("unknown value type during csv conversion"),
                      (e = "")),
                  '"' + e.replace(/"/g, '""') + '"');
              var e;
            }),
            (e.prototype.parse = function () {
              return this.result;
            }),
            (e.prototype.beginNewLine = function () {
              this.isFirstLine || (this.result += "\r\n"),
                (this.isFirstLine = !1);
            }),
            e
          );
        })(xd),
        Md = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Id = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        Ld = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Md(e, t),
            (e.prototype.postConstruct = function () {
              this.setBeans({
                downloader: this.downloader,
                gridSerializer: this.gridSerializer,
                gridOptionsWrapper: this.gridOptionsWrapper,
              });
            }),
            (e.prototype.exportDataAsCsv = function (t) {
              return this.export(t);
            }),
            (e.prototype.getDataAsCsv = function (t) {
              return this.getData(t);
            }),
            (e.prototype.getMimeType = function () {
              return "text/csv;charset=utf-8;";
            }),
            (e.prototype.getDefaultFileName = function () {
              return "export.csv";
            }),
            (e.prototype.getDefaultFileExtension = function () {
              return "csv";
            }),
            (e.prototype.createSerializingSession = function (t) {
              var e = this;
              return new Nd({
                columnController: e.columnController,
                valueService: e.valueService,
                gridOptionsWrapper: e.gridOptionsWrapper,
                processCellCallback: t.processCellCallback || void 0,
                processHeaderCallback: t.processHeaderCallback || void 0,
                processGroupHeaderCallback:
                  t.processGroupHeaderCallback || void 0,
                processRowGroupCallback: t.processRowGroupCallback || void 0,
                suppressQuotes: t.suppressQuotes || !1,
                columnSeparator: t.columnSeparator || ",",
              });
            }),
            (e.prototype.isExportSuppressed = function () {
              return this.gridOptionsWrapper.isSuppressCsvExport();
            }),
            Id(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Id([ut("valueService")], e.prototype, "valueService", void 0),
            Id([ut("downloader")], e.prototype, "downloader", void 0),
            Id([ut("gridSerializer")], e.prototype, "gridSerializer", void 0),
            Id(
              [ut("gridOptionsWrapper")],
              e.prototype,
              "gridOptionsWrapper",
              void 0
            ),
            Id([st], e.prototype, "postConstruct", null),
            Id([lt("csvCreator")], e)
          );
        })(Dd),
        Gd = (function () {
          function t() {}
          return (
            (t.prototype.download = function (t, e) {
              if (window.navigator.msSaveOrOpenBlob)
                window.navigator.msSaveOrOpenBlob(e, t);
              else {
                var o = document.createElement("a"),
                  n = window.URL.createObjectURL(e);
                o.setAttribute("href", n),
                  o.setAttribute("download", t),
                  (o.style.display = "none"),
                  document.body.appendChild(o),
                  o.dispatchEvent(
                    new MouseEvent("click", {
                      bubbles: !1,
                      cancelable: !0,
                      view: window,
                    })
                  ),
                  document.body.removeChild(o),
                  window.setTimeout(function () {
                    window.URL.revokeObjectURL(n);
                  }, 0);
              }
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("downloader")], t)
          );
        })(),
        kd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Vd = "\r\n",
        Wd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            kd(e, t),
            (e.prototype.createHeader = function (t) {
              void 0 === t && (t = {});
              var e = ["version"];
              return (
                t.version || (t.version = "1.0"),
                t.encoding && e.push("encoding"),
                t.standalone && e.push("standalone"),
                "<?xml " +
                  e
                    .map(function (e) {
                      return e + '="' + t[e] + '"';
                    })
                    .join(" ") +
                  " ?>"
              );
            }),
            (e.prototype.createXml = function (t, e) {
              var o = this,
                n = "";
              t.properties &&
                (t.properties.prefixedAttributes &&
                  t.properties.prefixedAttributes.forEach(function (t) {
                    Object.keys(t.map).forEach(function (r) {
                      n += o.returnAttributeIfPopulated(
                        t.prefix + r,
                        t.map[r],
                        e
                      );
                    });
                  }),
                t.properties.rawMap &&
                  Object.keys(t.properties.rawMap).forEach(function (r) {
                    n += o.returnAttributeIfPopulated(
                      r,
                      t.properties.rawMap[r],
                      e
                    );
                  }));
              var r = "<" + t.name + n;
              return t.children || null != t.textNode
                ? null != t.textNode
                  ? r + ">" + t.textNode + "</" + t.name + ">" + Vd
                  : ((r += ">\r\n"),
                    t.children &&
                      t.children.forEach(function (t) {
                        r += o.createXml(t, e);
                      }),
                    r + "</" + t.name + ">" + Vd)
                : r + "/>" + Vd;
            }),
            (e.prototype.returnAttributeIfPopulated = function (t, e, o) {
              if (!e && "" !== e && 0 !== e) return "";
              var n = e;
              return (
                "boolean" == typeof e && o && (n = o(e)),
                " " + t + '="' + n + '"'
              );
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("xmlFactory")], e)
          );
        })(Ht),
        Hd = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        Bd = function (t, e, o, n) {
          var r,
            i = arguments.length,
            s =
              i < 3
                ? e
                : null === n
                ? (n = Object.getOwnPropertyDescriptor(e, o))
                : n;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, e, o, n);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (r = t[a]) &&
                (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
          return i > 3 && s && Object.defineProperty(e, o, s), s;
        },
        jd = (function (t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            Hd(e, t),
            (e.prototype.serialize = function (t, e) {
              void 0 === e && (e = {});
              var o =
                  e.shouldRowBeSkipped ||
                  function () {
                    return !1;
                  },
                n = this.gridOptionsWrapper,
                r = n.getApi(),
                i = n.getColumnApi(),
                s = n.isGroupRemoveSingleChildren(),
                a = n.isGroupRemoveLowestSingleChildren(),
                l = n.isGroupHideOpenParents(),
                u = n.getContext(),
                p = this.columnController.isPivotMode(),
                c = this.rowModel.getType() === vt.ROW_MODEL_TYPE_CLIENT_SIDE,
                d = !c && e.onlySelected,
                h = [];
              if (
                ((h = xn.existsAndNotEmpty(e.columnKeys)
                  ? this.columnController.getGridColumns(e.columnKeys)
                  : e.allColumns && !p
                  ? (h = n.isTreeData()
                      ? this.columnController.getGridColumns([
                          vt.GROUP_AUTO_COLUMN_ID,
                        ])
                      : []).concat(
                      this.columnController.getAllPrimaryColumns() || []
                    )
                  : this.columnController.getAllDisplayedColumns()),
                e.customHeader && t.addCustomContent(e.customHeader),
                t.prepare(h),
                e.columnGroups)
              ) {
                var f = new Kt(),
                  g = this.displayedGroupCreator.createDisplayedGroups(
                    h,
                    this.columnController.getGridBalancedTree(),
                    f,
                    null
                  );
                this.recursivelyAddHeaderGroups(
                  g,
                  t,
                  e.processGroupHeaderCallback
                );
              }
              if (!e.skipHeader) {
                var y = t.onNewHeaderRow();
                h.forEach(function (t, e) {
                  y.onColumn(t, e, void 0);
                });
              }
              this.pinnedRowModel.forEachPinnedTopRow(C);
              var m = this.rowModel,
                v = this.rowModel;
              function C(n) {
                if (
                  (!n.group ||
                    !(
                      e.skipGroups ||
                      (1 === n.allChildrenCount && (s || (a && n.leafGroup))) ||
                      l
                    )) &&
                  (!e.skipFooters || !n.footer) &&
                  (!e.onlySelected || n.isSelected()) &&
                  (!e.skipPinnedTop || "top" !== n.rowPinned) &&
                  (!e.skipPinnedBottom || "bottom" !== n.rowPinned) &&
                  (-1 !== n.level || n.leafGroup) &&
                  !o({ node: n, api: r, context: u })
                ) {
                  var p = t.onNewBodyRow();
                  if (
                    (h.forEach(function (t, e) {
                      p.onColumn(t, e, n);
                    }),
                    e.getCustomContentBelowRow)
                  ) {
                    var c = e.getCustomContentBelowRow({
                      node: n,
                      api: r,
                      columnApi: i,
                      context: u,
                    });
                    c && t.addCustomContent(c);
                  }
                }
              }
              return (
                p
                  ? v.forEachPivotNode
                    ? v.forEachPivotNode(C)
                    : m.forEachNode(C)
                  : e.onlySelectedAllPages || d
                  ? this.selectionController
                      .getSelectedNodes()
                      .forEach(function (t) {
                        C(t);
                      })
                  : c
                  ? v.forEachNodeAfterFilterAndSort(C)
                  : m.forEachNode(C),
                this.pinnedRowModel.forEachPinnedBottomRow(C),
                e.customFooter && t.addCustomContent(e.customFooter),
                t.parse()
              );
            }),
            (e.prototype.recursivelyAddHeaderGroups = function (t, e, o) {
              var n = [];
              t.forEach(function (t) {
                t.getChildren &&
                  t.getChildren().forEach(function (t) {
                    return n.push(t);
                  });
              }),
                t.length > 0 &&
                  t[0] instanceof Et &&
                  this.doAddHeaderHeader(e, t, o),
                n && n.length > 0 && this.recursivelyAddHeaderGroups(n, e, o);
            }),
            (e.prototype.doAddHeaderHeader = function (t, e, o) {
              var n = this,
                r = t.onNewHeaderGroupingRow(),
                i = 0;
              e.forEach(function (t) {
                var e,
                  s = t;
                (e = o
                  ? o({
                      columnGroup: s,
                      api: n.gridOptionsWrapper.getApi(),
                      columnApi: n.gridOptionsWrapper.getColumnApi(),
                      context: n.gridOptionsWrapper.getContext(),
                    })
                  : n.columnController.getDisplayNameForColumnGroup(
                      s,
                      "header"
                    )),
                  r.onColumn(e || "", i++, s.getLeafColumns().length - 1);
              });
            }),
            Bd(
              [ut("displayedGroupCreator")],
              e.prototype,
              "displayedGroupCreator",
              void 0
            ),
            Bd(
              [ut("columnController")],
              e.prototype,
              "columnController",
              void 0
            ),
            Bd([ut("rowModel")], e.prototype, "rowModel", void 0),
            Bd([ut("pinnedRowModel")], e.prototype, "pinnedRowModel", void 0),
            Bd(
              [ut("selectionController")],
              e.prototype,
              "selectionController",
              void 0
            ),
            Bd([lt("gridSerializer")], e)
          );
        })(Ht);
      !(function (t) {
        (t[(t.HEADER_GROUPING = 0)] = "HEADER_GROUPING"),
          (t[(t.HEADER = 1)] = "HEADER"),
          (t[(t.BODY = 2)] = "BODY");
      })(Jc || (Jc = {}));
      var Ud = (function () {
          var t = function (e, o) {
            return (t =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]);
              })(e, o);
          };
          return function (e, o) {
            function n() {
              this.constructor = e;
            }
            t(e, o),
              (e.prototype =
                null === o
                  ? Object.create(o)
                  : ((n.prototype = o.prototype), new n()));
          };
        })(),
        zd = [
          0, 1996959894, -301047508, -1727442502, 124634137, 1886057615,
          -379345611, -1637575261, 249268274, 2044508324, -522852066,
          -1747789432, 162941995, 2125561021, -407360249, -1866523247,
          498536548, 1789927666, -205950648, -2067906082, 450548861, 1843258603,
          -187386543, -2083289657, 325883990, 1684777152, -43845254,
          -1973040660, 335633487, 1661365465, -99664541, -1928851979, 997073096,
          1281953886, -715111964, -1570279054, 1006888145, 1258607687,
          -770865667, -1526024853, 901097722, 1119000684, -608450090,
          -1396901568, 853044451, 1172266101, -589951537, -1412350631,
          651767980, 1373503546, -925412992, -1076862698, 565507253, 1454621731,
          -809855591, -1195530993, 671266974, 1594198024, -972236366,
          -1324619484, 795835527, 1483230225, -1050600021, -1234817731,
          1994146192, 31158534, -1731059524, -271249366, 1907459465, 112637215,
          -1614814043, -390540237, 2013776290, 251722036, -1777751922,
          -519137256, 2137656763, 141376813, -1855689577, -429695999,
          1802195444, 476864866, -2056965928, -228458418, 1812370925, 453092731,
          -2113342271, -183516073, 1706088902, 314042704, -1950435094,
          -54949764, 1658658271, 366619977, -1932296973, -69972891, 1303535960,
          984961486, -1547960204, -725929758, 1256170817, 1037604311,
          -1529756563, -740887301, 1131014506, 879679996, -1385723834,
          -631195440, 1141124467, 855842277, -1442165665, -586318647,
          1342533948, 654459306, -1106571248, -921952122, 1466479909, 544179635,
          -1184443383, -832445281, 1591671054, 702138776, -1328506846,
          -942167884, 1504918807, 783551873, -1212326853, -1061524307,
          -306674912, -1698712650, 62317068, 1957810842, -355121351,
          -1647151185, 81470997, 1943803523, -480048366, -1805370492, 225274430,
          2053790376, -468791541, -1828061283, 167816743, 2097651377,
          -267414716, -2029476910, 503444072, 1762050814, -144550051,
          -2140837941, 426522225, 1852507879, -19653770, -1982649376, 282753626,
          1742555852, -105259153, -1900089351, 397917763, 1622183637,
          -690576408, -1580100738, 953729732, 1340076626, -776247311,
          -1497606297, 1068828381, 1219638859, -670225446, -1358292148,
          906185462, 1090812512, -547295293, -1469587627, 829329135, 1181335161,
          -882789492, -1134132454, 628085408, 1382605366, -871598187,
          -1156888829, 570562233, 1426400815, -977650754, -1296233688,
          733239954, 1555261956, -1026031705, -1244606671, 752459403,
          1541320221, -1687895376, -328994266, 1969922972, 40735498,
          -1677130071, -351390145, 1913087877, 83908371, -1782625662,
          -491226604, 2075208622, 213261112, -1831694693, -438977011,
          2094854071, 198958881, -2032938284, -237706686, 1759359992, 534414190,
          -2118248755, -155638181, 1873836001, 414664567, -2012718362,
          -15766928, 1711684554, 285281116, -1889165569, -127750551, 1634467795,
          376229701, -1609899400, -686959890, 1308918612, 956543938,
          -1486412191, -799009033, 1231636301, 1047427035, -1362007478,
          -640263460, 1088359270, 936918e3, -1447252397, -558129467, 1202900863,
          817233897, -1111625188, -893730166, 1404277552, 615818150,
          -1160759803, -841546093, 1423857449, 601450431, -1285129682,
          -1000256840, 1567103746, 711928724, -1274298825, -1022587231,
          1510334235, 755167117,
        ],
        Kd = (function (t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (
              (e.folders = []),
              (e.files = []),
              (e.addFolder = function (t) {
                e.folders.push({ path: t, created: new Date() });
              }),
              e
            );
          }
          return (
            Ud(e, t),
            (e.prototype.addFolders = function (t) {
              t.forEach(this.addFolder);
            }),
            (e.prototype.addFile = function (t, e) {
              this.files.push({ path: t, created: new Date(), content: e });
            }),
            (e.prototype.clearStream = function () {
              (this.folders = []), (this.files = []);
            }),
            (e.prototype.getContent = function (t) {
              void 0 === t && (t = "application/zip");
              var e = this.buildFileStream(),
                o = this.buildUint8Array(e);
              return this.clearStream(), new Blob([o], { type: t });
            }),
            (e.prototype.buildFileStream = function (t) {
              void 0 === t && (t = "");
              for (
                var e = this.folders.concat(this.files),
                  o = e.length,
                  n = "",
                  r = 0,
                  i = 0,
                  s = 0,
                  a = e;
                s < a.length;
                s++
              ) {
                var l = this.getHeader(a[s], r),
                  u = l.fileHeader,
                  p = l.folderHeader,
                  c = l.content;
                (r += u.length + c.length),
                  (i += p.length),
                  (t += u + c),
                  (n += p);
              }
              return t + n + this.buildFolderEnd(o, i, r);
            }),
            (e.prototype.getHeader = function (t, e) {
              var o = t.content,
                n = t.path,
                r = t.created,
                i = xn.decToHex,
                s = (0, xn.utf8_encode)(n),
                a = s !== n,
                l = this.convertTime(r),
                u = this.convertDate(r),
                p = "";
              if (a) {
                var c = i(1, 1) + i(this.getFromCrc32Table(s), 4) + s;
                p = "up" + i(c.length, 2) + c;
              }
              var d =
                "\n\0" +
                (a ? "\0\b" : "\0\0") +
                "\0\0" +
                i(l, 2) +
                i(u, 2) +
                i(o ? this.getFromCrc32Table(o) : 0, 4) +
                i(o ? o.length : 0, 4) +
                i(o ? o.length : 0, 4) +
                i(s.length, 2) +
                i(p.length, 2);
              return {
                fileHeader: "PK\x03\x04" + d + s + p,
                folderHeader:
                  "PK\x01\x02\x14\0" +
                  d +
                  "\0\0\0\0\0\0" +
                  (o ? "\0\0\0\0" : "\x10\0\0\0") +
                  i(e, 4) +
                  s +
                  p,
                content: o || "",
              };
            }),
            (e.prototype.buildFolderEnd = function (t, e, o) {
              var n = xn.decToHex;
              return (
                "PK\x05\x06\0\0\0\0" +
                n(t, 2) +
                n(t, 2) +
                n(e, 4) +
                n(o, 4) +
                "\0\0"
              );
            }),
            (e.prototype.buildUint8Array = function (t) {
              for (var e = new Uint8Array(t.length), o = 0; o < e.length; o++)
                e[o] = t.charCodeAt(o);
              return e;
            }),
            (e.prototype.getFromCrc32Table = function (t, e) {
              if ((void 0 === e && (e = 0), !t.length)) return 0;
              e ^= -1;
              for (var o = 0, n = 0; n < t.length; n++)
                (o = t.charCodeAt(n)), (e = (e >>> 8) ^ zd[255 & (e ^ o)]);
              return -1 ^ e;
            }),
            (e.prototype.convertTime = function (t) {
              var e = t.getHours();
              return (
                (e <<= 6),
                (e |= t.getMinutes()),
                (e <<= 5) | (t.getSeconds() / 2)
              );
            }),
            (e.prototype.convertDate = function (t) {
              var e = t.getFullYear() - 1980;
              return (
                (e <<= 4), (e |= t.getMonth() + 1), (e <<= 5) | t.getDate()
              );
            }),
            (function (t, e, o, n) {
              var r,
                i = arguments.length,
                s =
                  i < 3
                    ? e
                    : null === n
                    ? (n = Object.getOwnPropertyDescriptor(e, o))
                    : n;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(t, e, o, n);
              else
                for (var a = t.length - 1; a >= 0; a--)
                  (r = t[a]) &&
                    (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
              return i > 3 && s && Object.defineProperty(e, o, s), s;
            })([lt("zipContainer")], e)
          );
        })(Ht),
        Yd = {
          moduleName: e.ModuleNames.CsvExportModule,
          beans: [Ld, Gd, Wd, jd, Kd],
        };
      Ct.register(Cd, !1),
        Ct.register(Ad, !1),
        Ct.register(Yd, !1),
        (e.AgAbstractField = ea),
        (e.AgAngleSelect = $p),
        (e.AgCheckbox = sa),
        (e.AgColorPicker = Wp),
        (e.AgDialog = _p),
        (e.AgGroupComponent = wp),
        (e.AgInputNumberField = Bp),
        (e.AgInputRange = Up),
        (e.AgInputTextArea = Ap),
        (e.AgInputTextField = Pp),
        (e.AgPanel = Sp),
        (e.AgPromise = Mn),
        (e.AgRadioButton = ru),
        (e.AgSelect = qp),
        (e.AgSlider = Fp),
        (e.AgToggleButton = tc),
        (e.AlignedGridsService = Mu),
        (e.AnimateShowChangeCellRenderer = Jr),
        (e.AnimateSlideCellRenderer = ei),
        (e.AnimationFrameService = Zu),
        (e.AutoWidthCalculator = Fl),
        (e.Autowired = ut),
        (e.BaseComponentWrapper = Yc),
        (e.Bean = lt),
        (e.BeanStub = Ht),
        (e.BodyDropPivotTarget = Fa),
        (e.BodyDropTarget = La),
        (e.CellComp = Gs),
        (e.CellNavigationService = Jl),
        (e.CellPositionUtils = lc),
        (e.ChangedPath = $i),
        (e.CheckboxSelectionComponent = Dr),
        (e.ColDefUtil = ve),
        (e.Color = Ce),
        (e.Column = bt),
        (e.ColumnApi = ns),
        (e.ColumnController = ne),
        (e.ColumnFactory = Ut),
        (e.ColumnGroup = Et),
        (e.ColumnKeyCreator = f),
        (e.ColumnUtils = ce),
        (e.Component = jn),
        (e.ComponentUtil = me),
        (e.Constants = vt),
        (e.Context = rt),
        (e.CssClassApplier = Ks),
        (e.DateFilter = vr),
        (e.DisplayedGroupCreator = fe),
        (e.DragAndDropService = ps),
        (e.DragService = Ul),
        (e.Environment = Xu),
        (e.EventService = mt),
        (e.Events = zt),
        (e.ExpressionService = yl),
        (e.FilterManager = Za),
        (e.FloatingFilterMapper = ba),
        (e.FloatingFilterWrapper = Oa),
        (e.FocusController = El),
        (e.Grid = Mc),
        (e.GridApi = hl),
        (e.GridCore = kl),
        (e.GridListener = function (t) {
          return Xn.bind(this, t);
        }),
        (e.GridOptionsWrapper = Zi),
        (e.GridPanel = pl),
        (e.GroupCellRenderer = Zr),
        (e.GroupInstanceIdCreator = Kt),
        (e.GuiListener = function (t, e) {
          return qn.bind(this, t, e);
        }),
        (e.HeaderContainer = Va),
        (e.HeaderNavigationService = ja),
        (e.HeaderPositionUtils = Sc),
        (e.HeaderRootComp = Ya),
        (e.HeaderRowComp = Ta),
        (e.HorizontalResizeService = Il),
        (e.KeyCode = $n),
        (e.KeyName = Ua),
        (e.LargeTextCellEditor = hi),
        (e.Logger = Al),
        (e.LoggerFactory = Tl),
        (e.ManagedFocusComponent = sr),
        (e.ModuleRegistry = Ct),
        (e.MouseEventService = Ql),
        (e.MoveColumnController = Da),
        (e.NumberFilter = yi),
        (e.NumberSequence = Fn),
        (e.Optional = pt),
        (e.OriginalColumnGroup = St),
        (e.PaginationProxy = Su),
        (e.PinnedRowModel = cc),
        (e.PopupComponent = zn),
        (e.PopupEditorWrapper = vs),
        (e.PopupSelectCellEditor = ci),
        (e.PopupService = _l),
        (e.PopupTextCellEditor = ui),
        (e.PostConstruct = st),
        (e.PreConstruct = it),
        (e.PreDestroy = at),
        (e.PropertyKeys = ge),
        (e.ProvidedFilter = ur),
        (e.Qualifier = dt),
        (e.QuerySelector = function (t) {
          return Yn.bind(this, t);
        }),
        (e.RefSelector = Kn),
        (e.ResizeObserverService = fp),
        (e.RowComp = Hs),
        (e.RowNode = Pr),
        (e.RowNodeBlock = Tc),
        (e.RowNodeBlockLoader = xc),
        (e.RowNodeSorter = Nc),
        (e.RowPositionUtils = sc),
        (e.RowRenderer = zs),
        (e.ScalarFilter = gr),
        (e.ScrollVisibleService = uu),
        (e.SelectCellEditor = ai),
        (e.SelectableService = sp),
        (e.SelectionController = es),
        (e.SetLeftFeature = Zs),
        (e.SimpleFilter = hr),
        (e.SortController = Yl),
        (e.StandardMenuFactory = Hl),
        (e.StylingService = du),
        (e.TabbedLayout = Wc),
        (e.TemplateService = Cl),
        (e.TextCellEditor = tr),
        (e.TextFilter = Fi),
        (e.TextFloatingFilter = Vi),
        (e.Timer = In),
        (e.TooltipFeature = Vn),
        (e.TouchListener = Cr),
        (e.UserComponentFactory = Xr),
        (e.UserComponentRegistry = Bi),
        (e.ValueCache = Tu),
        (e.ValueFormatterService = ou),
        (e.ValueService = tl),
        (e.VanillaFrameworkOverrides = su),
        (e.VirtualList = Uc),
        (e._ = xn),
        (e.defaultGroupComparator = function (t, e, o, n, i) {
          void 0 === i && (i = !1),
            console.warn(
              "AG Grid: Since ag-grid 11.0.0 defaultGroupComparator is not necessary. You can remove this from your colDef"
            );
          var s = r(o) && o.group,
            a = r(n) && n.group,
            l = !s && !a;
          return s && a ? p(o.key, n.key, i) : l ? p(t, e, i) : s ? 1 : -1;
        }),
        (e.initialiseAgGridWithAngular1 = function (t) {
          t.module("agGrid", []).directive("agGrid", function () {
            return {
              restrict: "A",
              controller: ["$element", "$scope", "$compile", "$attrs", Ic],
              scope: !0,
            };
          });
        }),
        (e.initialiseAgGridWithWebComponents = function () {
          if (
            (console.warn(
              "ag-grid: initialiseAgGridWithWebComponents is deprecated. Please use the ag-grid-webcomponent dependency instead. "
            ),
            !Gc)
          ) {
            (Gc = !0),
              ("undefined" != typeof document && document.registerElement) ||
                console.error(
                  "AG Grid: unable to find document.registerElement() function, unable to initialise AG Grid as a Web Component"
                );
            var t = Object.create(HTMLElement.prototype);
            me.ALL_PROPERTIES.forEach(function (e) {
              Object.defineProperty(t, e, {
                set: function (t) {
                  this.__agGridSetProperty(e, t);
                },
                get: function () {
                  return this.__agGridGetProperty(e);
                },
                enumerable: !0,
                configurable: !0,
              });
            });
            var e = t;
            (e.__agGridSetProperty = function (t, e) {
              this.__attributes || (this.__attributes = {}),
                (this.__attributes[t] = e);
              var o = {};
              (o[t] = { currentValue: e }), this.onChange(o);
            }),
              (e.onChange = function (t) {
                this._initialised &&
                  me.processOnChange(
                    t,
                    this._gridOptions,
                    this.api,
                    this.columnApi
                  );
              }),
              (e.__agGridGetProperty = function (t) {
                return (
                  this.__attributes || (this.__attributes = {}),
                  this.__attributes[t]
                );
              }),
              (e.setGridOptions = function (t) {
                var e = this.globalEventListener.bind(this);
                (this._gridOptions = me.copyAttributesToGridOptions(t, this)),
                  (this._agGrid = new Mc(this, this._gridOptions, {
                    globalEventListener: e,
                  })),
                  (this.api = t.api),
                  (this.columnApi = t.columnApi),
                  (this._initialised = !0);
              }),
              (e.createdCallback = function () {
                for (var t = 0; t < this.attributes.length; t++)
                  this.setPropertyFromAttribute(this.attributes[t]);
              }),
              (e.setPropertyFromAttribute = function (t) {
                var e,
                  o =
                    "string" == typeof (e = t.nodeName)
                      ? e.replace(/-([a-z])/g, function (t) {
                          return t[1].toUpperCase();
                        })
                      : e,
                  n = t.nodeValue;
                me.ALL_PROPERTIES.indexOf(o) >= 0 && (this[o] = n);
              }),
              (e.attachedCallback = function (t) {}),
              (e.detachedCallback = function (t) {}),
              (e.attributeChangedCallback = function (t) {
                this.setPropertyFromAttribute(this.attributes[t]);
              }),
              (e.globalEventListener = function (t, e) {
                var o = t.toLowerCase(),
                  n = new Event(o);
                (n.agGridDetails = e), this.dispatchEvent(n);
                var r = "on" + o;
                "function" == typeof this[r] && this[r](n);
              }),
              document.registerElement("ag-grid", { prototype: t });
          }
        }),
        (e.simpleHttpRequest = function (t) {
          return new Mn(function (e) {
            var o = new XMLHttpRequest();
            o.open("GET", t.url),
              o.send(),
              (o.onreadystatechange = function () {
                4 === o.readyState &&
                  200 === o.status &&
                  e(JSON.parse(o.responseText));
              });
          });
        }),
        (e.stringToArray = we);
    },
    zUnb: function (t, e, o) {
      "use strict";
      function n(t) {
        return "function" == typeof t;
      }
      o.r(e);
      let r = !1;
      const i = {
        Promise: void 0,
        set useDeprecatedSynchronousErrorHandling(t) {
          if (t) {
            const t = new Error();
            console.warn(
              "DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n" +
                t.stack
            );
          } else
            r &&
              console.log(
                "RxJS: Back to a better error behavior. Thank you. <3"
              );
          r = t;
        },
        get useDeprecatedSynchronousErrorHandling() {
          return r;
        },
      };
      function s(t) {
        setTimeout(() => {
          throw t;
        }, 0);
      }
      const a = {
          closed: !0,
          next(t) {},
          error(t) {
            if (i.useDeprecatedSynchronousErrorHandling) throw t;
            s(t);
          },
          complete() {},
        },
        l = (() =>
          Array.isArray || ((t) => t && "number" == typeof t.length))();
      function u(t) {
        return null !== t && "object" == typeof t;
      }
      const p = (() => {
        function t(t) {
          return (
            Error.call(this),
            (this.message = t
              ? `${t.length} errors occurred during unsubscription:\n${t
                  .map((t, e) => `${e + 1}) ${t.toString()}`)
                  .join("\n  ")}`
              : ""),
            (this.name = "UnsubscriptionError"),
            (this.errors = t),
            this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      let c = (() => {
        class t {
          constructor(t) {
            (this.closed = !1),
              (this._parentOrParents = null),
              (this._subscriptions = null),
              t && ((this._ctorUnsubscribe = !0), (this._unsubscribe = t));
          }
          unsubscribe() {
            let e;
            if (this.closed) return;
            let {
              _parentOrParents: o,
              _ctorUnsubscribe: r,
              _unsubscribe: i,
              _subscriptions: s,
            } = this;
            if (
              ((this.closed = !0),
              (this._parentOrParents = null),
              (this._subscriptions = null),
              o instanceof t)
            )
              o.remove(this);
            else if (null !== o)
              for (let t = 0; t < o.length; ++t) o[t].remove(this);
            if (n(i)) {
              r && (this._unsubscribe = void 0);
              try {
                i.call(this);
              } catch (a) {
                e = a instanceof p ? d(a.errors) : [a];
              }
            }
            if (l(s)) {
              let t = -1,
                o = s.length;
              for (; ++t < o; ) {
                const o = s[t];
                if (u(o))
                  try {
                    o.unsubscribe();
                  } catch (a) {
                    (e = e || []),
                      a instanceof p ? (e = e.concat(d(a.errors))) : e.push(a);
                  }
              }
            }
            if (e) throw new p(e);
          }
          add(e) {
            let o = e;
            if (!e) return t.EMPTY;
            switch (typeof e) {
              case "function":
                o = new t(e);
              case "object":
                if (
                  o === this ||
                  o.closed ||
                  "function" != typeof o.unsubscribe
                )
                  return o;
                if (this.closed) return o.unsubscribe(), o;
                if (!(o instanceof t)) {
                  const e = o;
                  (o = new t()), (o._subscriptions = [e]);
                }
                break;
              default:
                throw new Error(
                  "unrecognized teardown " + e + " added to Subscription."
                );
            }
            let { _parentOrParents: n } = o;
            if (null === n) o._parentOrParents = this;
            else if (n instanceof t) {
              if (n === this) return o;
              o._parentOrParents = [n, this];
            } else {
              if (-1 !== n.indexOf(this)) return o;
              n.push(this);
            }
            const r = this._subscriptions;
            return null === r ? (this._subscriptions = [o]) : r.push(o), o;
          }
          remove(t) {
            const e = this._subscriptions;
            if (e) {
              const o = e.indexOf(t);
              -1 !== o && e.splice(o, 1);
            }
          }
        }
        return (
          (t.EMPTY = (function (t) {
            return (t.closed = !0), t;
          })(new t())),
          t
        );
      })();
      function d(t) {
        return t.reduce((t, e) => t.concat(e instanceof p ? e.errors : e), []);
      }
      const h = (() =>
        "function" == typeof Symbol
          ? Symbol("rxSubscriber")
          : "@@rxSubscriber_" + Math.random())();
      class f extends c {
        constructor(t, e, o) {
          switch (
            (super(),
            (this.syncErrorValue = null),
            (this.syncErrorThrown = !1),
            (this.syncErrorThrowable = !1),
            (this.isStopped = !1),
            arguments.length)
          ) {
            case 0:
              this.destination = a;
              break;
            case 1:
              if (!t) {
                this.destination = a;
                break;
              }
              if ("object" == typeof t) {
                t instanceof f
                  ? ((this.syncErrorThrowable = t.syncErrorThrowable),
                    (this.destination = t),
                    t.add(this))
                  : ((this.syncErrorThrowable = !0),
                    (this.destination = new g(this, t)));
                break;
              }
            default:
              (this.syncErrorThrowable = !0),
                (this.destination = new g(this, t, e, o));
          }
        }
        [h]() {
          return this;
        }
        static create(t, e, o) {
          const n = new f(t, e, o);
          return (n.syncErrorThrowable = !1), n;
        }
        next(t) {
          this.isStopped || this._next(t);
        }
        error(t) {
          this.isStopped || ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped || ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe());
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          this.destination.error(t), this.unsubscribe();
        }
        _complete() {
          this.destination.complete(), this.unsubscribe();
        }
        _unsubscribeAndRecycle() {
          const { _parentOrParents: t } = this;
          return (
            (this._parentOrParents = null),
            this.unsubscribe(),
            (this.closed = !1),
            (this.isStopped = !1),
            (this._parentOrParents = t),
            this
          );
        }
      }
      class g extends f {
        constructor(t, e, o, r) {
          let i;
          super(), (this._parentSubscriber = t);
          let s = this;
          n(e)
            ? (i = e)
            : e &&
              ((i = e.next),
              (o = e.error),
              (r = e.complete),
              e !== a &&
                ((s = Object.create(e)),
                n(s.unsubscribe) && this.add(s.unsubscribe.bind(s)),
                (s.unsubscribe = this.unsubscribe.bind(this)))),
            (this._context = s),
            (this._next = i),
            (this._error = o),
            (this._complete = r);
        }
        next(t) {
          if (!this.isStopped && this._next) {
            const { _parentSubscriber: e } = this;
            i.useDeprecatedSynchronousErrorHandling && e.syncErrorThrowable
              ? this.__tryOrSetError(e, this._next, t) && this.unsubscribe()
              : this.__tryOrUnsub(this._next, t);
          }
        }
        error(t) {
          if (!this.isStopped) {
            const { _parentSubscriber: e } = this,
              { useDeprecatedSynchronousErrorHandling: o } = i;
            if (this._error)
              o && e.syncErrorThrowable
                ? (this.__tryOrSetError(e, this._error, t), this.unsubscribe())
                : (this.__tryOrUnsub(this._error, t), this.unsubscribe());
            else if (e.syncErrorThrowable)
              o ? ((e.syncErrorValue = t), (e.syncErrorThrown = !0)) : s(t),
                this.unsubscribe();
            else {
              if ((this.unsubscribe(), o)) throw t;
              s(t);
            }
          }
        }
        complete() {
          if (!this.isStopped) {
            const { _parentSubscriber: t } = this;
            if (this._complete) {
              const e = () => this._complete.call(this._context);
              i.useDeprecatedSynchronousErrorHandling && t.syncErrorThrowable
                ? (this.__tryOrSetError(t, e), this.unsubscribe())
                : (this.__tryOrUnsub(e), this.unsubscribe());
            } else this.unsubscribe();
          }
        }
        __tryOrUnsub(t, e) {
          try {
            t.call(this._context, e);
          } catch (o) {
            if ((this.unsubscribe(), i.useDeprecatedSynchronousErrorHandling))
              throw o;
            s(o);
          }
        }
        __tryOrSetError(t, e, o) {
          if (!i.useDeprecatedSynchronousErrorHandling)
            throw new Error("bad call");
          try {
            e.call(this._context, o);
          } catch (n) {
            return i.useDeprecatedSynchronousErrorHandling
              ? ((t.syncErrorValue = n), (t.syncErrorThrown = !0), !0)
              : (s(n), !0);
          }
          return !1;
        }
        _unsubscribe() {
          const { _parentSubscriber: t } = this;
          (this._context = null),
            (this._parentSubscriber = null),
            t.unsubscribe();
        }
      }
      const y = (() =>
        ("function" == typeof Symbol && Symbol.observable) || "@@observable")();
      function m(t) {
        return t;
      }
      let v = (() => {
        class t {
          constructor(t) {
            (this._isScalar = !1), t && (this._subscribe = t);
          }
          lift(e) {
            const o = new t();
            return (o.source = this), (o.operator = e), o;
          }
          subscribe(t, e, o) {
            const { operator: n } = this,
              r = (function (t, e, o) {
                if (t) {
                  if (t instanceof f) return t;
                  if (t[h]) return t[h]();
                }
                return t || e || o ? new f(t, e, o) : new f(a);
              })(t, e, o);
            if (
              (r.add(
                n
                  ? n.call(r, this.source)
                  : this.source ||
                    (i.useDeprecatedSynchronousErrorHandling &&
                      !r.syncErrorThrowable)
                  ? this._subscribe(r)
                  : this._trySubscribe(r)
              ),
              i.useDeprecatedSynchronousErrorHandling &&
                r.syncErrorThrowable &&
                ((r.syncErrorThrowable = !1), r.syncErrorThrown))
            )
              throw r.syncErrorValue;
            return r;
          }
          _trySubscribe(t) {
            try {
              return this._subscribe(t);
            } catch (e) {
              i.useDeprecatedSynchronousErrorHandling &&
                ((t.syncErrorThrown = !0), (t.syncErrorValue = e)),
                (function (t) {
                  for (; t; ) {
                    const { closed: e, destination: o, isStopped: n } = t;
                    if (e || n) return !1;
                    t = o && o instanceof f ? o : null;
                  }
                  return !0;
                })(t)
                  ? t.error(e)
                  : console.warn(e);
            }
          }
          forEach(t, e) {
            return new (e = C(e))((e, o) => {
              let n;
              n = this.subscribe(
                (e) => {
                  try {
                    t(e);
                  } catch (r) {
                    o(r), n && n.unsubscribe();
                  }
                },
                o,
                e
              );
            });
          }
          _subscribe(t) {
            const { source: e } = this;
            return e && e.subscribe(t);
          }
          [y]() {
            return this;
          }
          pipe(...t) {
            return 0 === t.length
              ? this
              : (0 === (e = t).length
                  ? m
                  : 1 === e.length
                  ? e[0]
                  : function (t) {
                      return e.reduce((t, e) => e(t), t);
                    })(this);
            var e;
          }
          toPromise(t) {
            return new (t = C(t))((t, e) => {
              let o;
              this.subscribe(
                (t) => (o = t),
                (t) => e(t),
                () => t(o)
              );
            });
          }
        }
        return (t.create = (e) => new t(e)), t;
      })();
      function C(t) {
        if ((t || (t = i.Promise || Promise), !t))
          throw new Error("no Promise impl found");
        return t;
      }
      const w = (() => {
        function t() {
          return (
            Error.call(this),
            (this.message = "object unsubscribed"),
            (this.name = "ObjectUnsubscribedError"),
            this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      class b extends c {
        constructor(t, e) {
          super(),
            (this.subject = t),
            (this.subscriber = e),
            (this.closed = !1);
        }
        unsubscribe() {
          if (this.closed) return;
          this.closed = !0;
          const t = this.subject,
            e = t.observers;
          if (
            ((this.subject = null),
            !e || 0 === e.length || t.isStopped || t.closed)
          )
            return;
          const o = e.indexOf(this.subscriber);
          -1 !== o && e.splice(o, 1);
        }
      }
      class E extends f {
        constructor(t) {
          super(t), (this.destination = t);
        }
      }
      let S = (() => {
        class t extends v {
          constructor() {
            super(),
              (this.observers = []),
              (this.closed = !1),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          [h]() {
            return new E(this);
          }
          lift(t) {
            const e = new O(this, this);
            return (e.operator = t), e;
          }
          next(t) {
            if (this.closed) throw new w();
            if (!this.isStopped) {
              const { observers: e } = this,
                o = e.length,
                n = e.slice();
              for (let r = 0; r < o; r++) n[r].next(t);
            }
          }
          error(t) {
            if (this.closed) throw new w();
            (this.hasError = !0), (this.thrownError = t), (this.isStopped = !0);
            const { observers: e } = this,
              o = e.length,
              n = e.slice();
            for (let r = 0; r < o; r++) n[r].error(t);
            this.observers.length = 0;
          }
          complete() {
            if (this.closed) throw new w();
            this.isStopped = !0;
            const { observers: t } = this,
              e = t.length,
              o = t.slice();
            for (let n = 0; n < e; n++) o[n].complete();
            this.observers.length = 0;
          }
          unsubscribe() {
            (this.isStopped = !0), (this.closed = !0), (this.observers = null);
          }
          _trySubscribe(t) {
            if (this.closed) throw new w();
            return super._trySubscribe(t);
          }
          _subscribe(t) {
            if (this.closed) throw new w();
            return this.hasError
              ? (t.error(this.thrownError), c.EMPTY)
              : this.isStopped
              ? (t.complete(), c.EMPTY)
              : (this.observers.push(t), new b(this, t));
          }
          asObservable() {
            const t = new v();
            return (t.source = this), t;
          }
        }
        return (t.create = (t, e) => new O(t, e)), t;
      })();
      class O extends S {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          const { destination: e } = this;
          e && e.next && e.next(t);
        }
        error(t) {
          const { destination: e } = this;
          e && e.error && this.destination.error(t);
        }
        complete() {
          const { destination: t } = this;
          t && t.complete && this.destination.complete();
        }
        _subscribe(t) {
          const { source: e } = this;
          return e ? this.source.subscribe(t) : c.EMPTY;
        }
      }
      class _ {
        constructor(t, e) {
          (this.project = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new R(t, this.project, this.thisArg));
        }
      }
      class R extends f {
        constructor(t, e, o) {
          super(t),
            (this.project = e),
            (this.count = 0),
            (this.thisArg = o || this);
        }
        _next(t) {
          let e;
          try {
            e = this.project.call(this.thisArg, t, this.count++);
          } catch (o) {
            return void this.destination.error(o);
          }
          this.destination.next(e);
        }
      }
      const P = (t) => (e) => {
        for (let o = 0, n = t.length; o < n && !e.closed; o++) e.next(t[o]);
        e.complete();
      };
      function T() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      }
      const A = T();
      const D = (t) => {
        if (t && "function" == typeof t[y])
          return (
            (i = t),
            (t) => {
              const e = i[y]();
              if ("function" != typeof e.subscribe)
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              return e.subscribe(t);
            }
          );
        if ((e = t) && "number" == typeof e.length && "function" != typeof e)
          return P(t);
        var e, o, n, r, i;
        if (
          (o = t) &&
          "function" != typeof o.subscribe &&
          "function" == typeof o.then
        )
          return (
            (r = t),
            (t) => (
              r
                .then(
                  (e) => {
                    t.closed || (t.next(e), t.complete());
                  },
                  (e) => t.error(e)
                )
                .then(null, s),
              t
            )
          );
        if (t && "function" == typeof t[A])
          return (
            (n = t),
            (t) => {
              const e = n[A]();
              for (;;) {
                let n;
                try {
                  n = e.next();
                } catch (o) {
                  return t.error(o), t;
                }
                if (n.done) {
                  t.complete();
                  break;
                }
                if ((t.next(n.value), t.closed)) break;
              }
              return (
                "function" == typeof e.return &&
                  t.add(() => {
                    e.return && e.return();
                  }),
                t
              );
            }
          );
        {
          const e = u(t) ? "an invalid object" : `'${t}'`;
          throw new TypeError(
            `You provided ${e} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`
          );
        }
      };
      class x extends f {
        constructor(t) {
          super(), (this.parent = t);
        }
        _next(t) {
          this.parent.notifyNext(t);
        }
        _error(t) {
          this.parent.notifyError(t), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(), this.unsubscribe();
        }
      }
      class F extends f {
        notifyNext(t) {
          this.destination.next(t);
        }
        notifyError(t) {
          this.destination.error(t);
        }
        notifyComplete() {
          this.destination.complete();
        }
      }
      function N(t, e, o = Number.POSITIVE_INFINITY) {
        return "function" == typeof e
          ? (n) =>
              n.pipe(
                N((o, n) => {
                  return ((r = t(o, n)), r instanceof v ? r : new v(D(r))).pipe(
                    (function (t, e) {
                      return function (e) {
                        return e.lift(new _(t, void 0));
                      };
                    })((t, r) => e(o, t, n, r))
                  );
                  var r;
                }, o)
              )
          : ("number" == typeof e && (o = e), (e) => e.lift(new M(t, o)));
      }
      class M {
        constructor(t, e = Number.POSITIVE_INFINITY) {
          (this.project = t), (this.concurrent = e);
        }
        call(t, e) {
          return e.subscribe(new I(t, this.project, this.concurrent));
        }
      }
      class I extends F {
        constructor(t, e, o = Number.POSITIVE_INFINITY) {
          super(t),
            (this.project = e),
            (this.concurrent = o),
            (this.hasCompleted = !1),
            (this.buffer = []),
            (this.active = 0),
            (this.index = 0);
        }
        _next(t) {
          this.active < this.concurrent
            ? this._tryNext(t)
            : this.buffer.push(t);
        }
        _tryNext(t) {
          let e;
          const o = this.index++;
          try {
            e = this.project(t, o);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.active++, this._innerSub(e);
        }
        _innerSub(t) {
          const e = new x(this),
            o = this.destination;
          o.add(e);
          const n = (function (t, e) {
            if (e.closed) return;
            if (t instanceof v) return t.subscribe(e);
            let o;
            try {
              o = D(t)(e);
            } catch (n) {
              e.error(n);
            }
            return o;
          })(t, e);
          n !== e && o.add(n);
        }
        _complete() {
          (this.hasCompleted = !0),
            0 === this.active &&
              0 === this.buffer.length &&
              this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(t) {
          this.destination.next(t);
        }
        notifyComplete() {
          const t = this.buffer;
          this.active--,
            t.length > 0
              ? this._next(t.shift())
              : 0 === this.active &&
                this.hasCompleted &&
                this.destination.complete();
        }
      }
      function L() {
        return function (t) {
          return t.lift(new G(t));
        };
      }
      class G {
        constructor(t) {
          this.connectable = t;
        }
        call(t, e) {
          const { connectable: o } = this;
          o._refCount++;
          const n = new k(t, o),
            r = e.subscribe(n);
          return n.closed || (n.connection = o.connect()), r;
        }
      }
      class k extends f {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _unsubscribe() {
          const { connectable: t } = this;
          if (!t) return void (this.connection = null);
          this.connectable = null;
          const e = t._refCount;
          if (e <= 0) return void (this.connection = null);
          if (((t._refCount = e - 1), e > 1))
            return void (this.connection = null);
          const { connection: o } = this,
            n = t._connection;
          (this.connection = null), !n || (o && n !== o) || n.unsubscribe();
        }
      }
      class V extends v {
        constructor(t, e) {
          super(),
            (this.source = t),
            (this.subjectFactory = e),
            (this._refCount = 0),
            (this._isComplete = !1);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (
            (t && !t.isStopped) || (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        connect() {
          let t = this._connection;
          return (
            t ||
              ((this._isComplete = !1),
              (t = this._connection = new c()),
              t.add(this.source.subscribe(new H(this.getSubject(), this))),
              t.closed && ((this._connection = null), (t = c.EMPTY))),
            t
          );
        }
        refCount() {
          return L()(this);
        }
      }
      const W = (() => {
        const t = V.prototype;
        return {
          operator: { value: null },
          _refCount: { value: 0, writable: !0 },
          _subject: { value: null, writable: !0 },
          _connection: { value: null, writable: !0 },
          _subscribe: { value: t._subscribe },
          _isComplete: { value: t._isComplete, writable: !0 },
          getSubject: { value: t.getSubject },
          connect: { value: t.connect },
          refCount: { value: t.refCount },
        };
      })();
      class H extends E {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _error(t) {
          this._unsubscribe(), super._error(t);
        }
        _complete() {
          (this.connectable._isComplete = !0),
            this._unsubscribe(),
            super._complete();
        }
        _unsubscribe() {
          const t = this.connectable;
          if (t) {
            this.connectable = null;
            const e = t._connection;
            (t._refCount = 0),
              (t._subject = null),
              (t._connection = null),
              e && e.unsubscribe();
          }
        }
      }
      function B() {
        return new S();
      }
      function j(t) {
        for (let e in t) if (t[e] === j) return e;
        throw Error("Could not find renamed property on target object.");
      }
      function U(t) {
        if ("string" == typeof t) return t;
        if (Array.isArray(t)) return "[" + t.map(U).join(", ") + "]";
        if (null == t) return "" + t;
        if (t.overriddenName) return `${t.overriddenName}`;
        if (t.name) return `${t.name}`;
        const e = t.toString();
        if (null == e) return "" + e;
        const o = e.indexOf("\n");
        return -1 === o ? e : e.substring(0, o);
      }
      function z(t, e) {
        return null == t || "" === t
          ? null === e
            ? ""
            : e
          : null == e || "" === e
          ? t
          : t + " " + e;
      }
      const K = j({ __forward_ref__: j });
      function Y(t) {
        return (
          (t.__forward_ref__ = Y),
          (t.toString = function () {
            return U(this());
          }),
          t
        );
      }
      function X(t) {
        return q(t) ? t() : t;
      }
      function q(t) {
        return (
          "function" == typeof t &&
          t.hasOwnProperty(K) &&
          t.__forward_ref__ === Y
        );
      }
      class Q extends Error {
        constructor(t, e) {
          super(
            (function (t, e) {
              return `${t ? `NG0${t}: ` : ""}${e}`;
            })(t, e)
          ),
            (this.code = t);
        }
      }
      function Z(t) {
        return "function" == typeof t
          ? t.name || t.toString()
          : "object" == typeof t && null != t && "function" == typeof t.type
          ? t.type.name || t.type.toString()
          : (function (t) {
              return "string" == typeof t ? t : null == t ? "" : String(t);
            })(t);
      }
      function $(t, e) {
        const o = e ? ` in ${e}` : "";
        throw new Q("201", `No provider for ${Z(t)} found${o}`);
      }
      function J(t) {
        return {
          token: t.token,
          providedIn: t.providedIn || null,
          factory: t.factory,
          value: void 0,
        };
      }
      function tt(t) {
        return { providers: t.providers || [], imports: t.imports || [] };
      }
      function et(t) {
        return ot(t, rt) || ot(t, st);
      }
      function ot(t, e) {
        return t.hasOwnProperty(e) ? t[e] : null;
      }
      function nt(t) {
        return t && (t.hasOwnProperty(it) || t.hasOwnProperty(at))
          ? t[it]
          : null;
      }
      const rt = j({ "\u0275prov": j }),
        it = j({ "\u0275inj": j }),
        st = j({ ngInjectableDef: j }),
        at = j({ ngInjectorDef: j });
      var lt = (function (t) {
        return (
          (t[(t.Default = 0)] = "Default"),
          (t[(t.Host = 1)] = "Host"),
          (t[(t.Self = 2)] = "Self"),
          (t[(t.SkipSelf = 4)] = "SkipSelf"),
          (t[(t.Optional = 8)] = "Optional"),
          t
        );
      })({});
      let ut;
      function pt(t) {
        const e = ut;
        return (ut = t), e;
      }
      function ct(t, e, o) {
        const n = et(t);
        return n && "root" == n.providedIn
          ? void 0 === n.value
            ? (n.value = n.factory())
            : n.value
          : o & lt.Optional
          ? null
          : void 0 !== e
          ? e
          : void $(U(t), "Injector");
      }
      function dt(t) {
        return { toString: t }.toString();
      }
      var ht = (function (t) {
          return (
            (t[(t.OnPush = 0)] = "OnPush"), (t[(t.Default = 1)] = "Default"), t
          );
        })({}),
        ft = (function (t) {
          return (
            (t[(t.Emulated = 0)] = "Emulated"),
            (t[(t.None = 2)] = "None"),
            (t[(t.ShadowDom = 3)] = "ShadowDom"),
            t
          );
        })({});
      const gt = "undefined" != typeof globalThis && globalThis,
        yt = "undefined" != typeof window && window,
        mt =
          "undefined" != typeof self &&
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        vt = "undefined" != typeof global && global,
        Ct = gt || vt || yt || mt,
        wt = {},
        bt = [],
        Et = j({ "\u0275cmp": j }),
        St = j({ "\u0275dir": j }),
        Ot = j({ "\u0275pipe": j }),
        _t = j({ "\u0275mod": j }),
        Rt = j({ "\u0275loc": j }),
        Pt = j({ "\u0275fac": j }),
        Tt = j({ __NG_ELEMENT_ID__: j });
      let At = 0;
      function Dt(t) {
        return dt(() => {
          const e = {},
            o = {
              type: t.type,
              providersResolver: null,
              decls: t.decls,
              vars: t.vars,
              factory: null,
              template: t.template || null,
              consts: t.consts || null,
              ngContentSelectors: t.ngContentSelectors,
              hostBindings: t.hostBindings || null,
              hostVars: t.hostVars || 0,
              hostAttrs: t.hostAttrs || null,
              contentQueries: t.contentQueries || null,
              declaredInputs: e,
              inputs: null,
              outputs: null,
              exportAs: t.exportAs || null,
              onPush: t.changeDetection === ht.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: t.selectors || bt,
              viewQuery: t.viewQuery || null,
              features: t.features || null,
              data: t.data || {},
              encapsulation: t.encapsulation || ft.Emulated,
              id: "c",
              styles: t.styles || bt,
              _: null,
              setInput: null,
              schemas: t.schemas || null,
              tView: null,
            },
            n = t.directives,
            r = t.features,
            i = t.pipes;
          return (
            (o.id += At++),
            (o.inputs = It(t.inputs, e)),
            (o.outputs = It(t.outputs)),
            r && r.forEach((t) => t(o)),
            (o.directiveDefs = n
              ? () => ("function" == typeof n ? n() : n).map(xt)
              : null),
            (o.pipeDefs = i
              ? () => ("function" == typeof i ? i() : i).map(Ft)
              : null),
            o
          );
        });
      }
      function xt(t) {
        return (
          Lt(t) ||
          (function (t) {
            return t[St] || null;
          })(t)
        );
      }
      function Ft(t) {
        return (function (t) {
          return t[Ot] || null;
        })(t);
      }
      const Nt = {};
      function Mt(t) {
        const e = {
          type: t.type,
          bootstrap: t.bootstrap || bt,
          declarations: t.declarations || bt,
          imports: t.imports || bt,
          exports: t.exports || bt,
          transitiveCompileScopes: null,
          schemas: t.schemas || null,
          id: t.id || null,
        };
        return (
          null != t.id &&
            dt(() => {
              Nt[t.id] = t.type;
            }),
          e
        );
      }
      function It(t, e) {
        if (null == t) return wt;
        const o = {};
        for (const n in t)
          if (t.hasOwnProperty(n)) {
            let r = t[n],
              i = r;
            Array.isArray(r) && ((i = r[1]), (r = r[0])),
              (o[r] = n),
              e && (e[r] = i);
          }
        return o;
      }
      function Lt(t) {
        return t[Et] || null;
      }
      function Gt(t, e) {
        const o = t[_t] || null;
        if (!o && !0 === e)
          throw new Error(`Type ${U(t)} does not have '\u0275mod' property.`);
        return o;
      }
      const kt = 10;
      function Vt(t) {
        return Array.isArray(t) && "object" == typeof t[1];
      }
      function Wt(t) {
        return Array.isArray(t) && !0 === t[1];
      }
      function Ht(t) {
        return 0 != (8 & t.flags);
      }
      function Bt(t) {
        return 2 == (2 & t.flags);
      }
      function jt(t) {
        return 1 == (1 & t.flags);
      }
      function Ut(t) {
        return null !== t.template;
      }
      function zt(t, e) {
        return t.hasOwnProperty(Pt) ? t[Pt] : null;
      }
      class Kt {
        constructor(t, e, o) {
          (this.previousValue = t),
            (this.currentValue = e),
            (this.firstChange = o);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Yt() {
        return Xt;
      }
      function Xt(t) {
        return t.type.prototype.ngOnChanges && (t.setInput = Qt), qt;
      }
      function qt() {
        const t = Zt(this),
          e = null == t ? void 0 : t.current;
        if (e) {
          const o = t.previous;
          if (o === wt) t.previous = e;
          else for (let t in e) o[t] = e[t];
          (t.current = null), this.ngOnChanges(e);
        }
      }
      function Qt(t, e, o, n) {
        const r =
            Zt(t) ||
            (function (t, e) {
              return (t.__ngSimpleChanges__ = e);
            })(t, { previous: wt, current: null }),
          i = r.current || (r.current = {}),
          s = r.previous,
          a = this.declaredInputs[o],
          l = s[a];
        (i[a] = new Kt(l && l.currentValue, e, s === wt)), (t[n] = e);
      }
      function Zt(t) {
        return t.__ngSimpleChanges__ || null;
      }
      let $t;
      function Jt(t) {
        return !!t.listen;
      }
      Yt.ngInherit = !0;
      const te = {
        createRenderer: (t, e) =>
          void 0 !== $t
            ? $t
            : "undefined" != typeof document
            ? document
            : void 0,
      };
      function ee(t) {
        for (; Array.isArray(t); ) t = t[0];
        return t;
      }
      function oe(t, e) {
        return ee(e[t.index]);
      }
      function ne(t, e) {
        return t.data[e];
      }
      function re(t, e) {
        const o = e[t];
        return Vt(o) ? o : o[0];
      }
      function ie(t) {
        const e = (function (t) {
          return t.__ngContext__ || null;
        })(t);
        return e ? (Array.isArray(e) ? e : e.lView) : null;
      }
      function se(t) {
        return 4 == (4 & t[2]);
      }
      function ae(t) {
        return 128 == (128 & t[2]);
      }
      function le(t, e) {
        return null == e ? null : t[e];
      }
      function ue(t) {
        t[18] = 0;
      }
      function pe(t, e) {
        t[5] += e;
        let o = t,
          n = t[3];
        for (
          ;
          null !== n && ((1 === e && 1 === o[5]) || (-1 === e && 0 === o[5]));

        )
          (n[5] += e), (o = n), (n = n[3]);
      }
      const ce = {
        lFrame: Ae(null),
        bindingsEnabled: !0,
        isInCheckNoChangesMode: !1,
      };
      function de() {
        return ce.bindingsEnabled;
      }
      function he() {
        return ce.lFrame.lView;
      }
      function fe() {
        return ce.lFrame.tView;
      }
      function ge() {
        let t = ye();
        for (; null !== t && 64 === t.type; ) t = t.parent;
        return t;
      }
      function ye() {
        return ce.lFrame.currentTNode;
      }
      function me(t, e) {
        const o = ce.lFrame;
        (o.currentTNode = t), (o.isParent = e);
      }
      function ve() {
        return ce.lFrame.isParent;
      }
      function Ce() {
        return ce.isInCheckNoChangesMode;
      }
      function we(t) {
        ce.isInCheckNoChangesMode = t;
      }
      function be(t, e) {
        const o = ce.lFrame;
        (o.bindingIndex = o.bindingRootIndex = t), Ee(e);
      }
      function Ee(t) {
        ce.lFrame.currentDirectiveIndex = t;
      }
      function Se() {
        return ce.lFrame.currentQueryIndex;
      }
      function Oe(t) {
        ce.lFrame.currentQueryIndex = t;
      }
      function _e(t) {
        const e = t[1];
        return 2 === e.type ? e.declTNode : 1 === e.type ? t[6] : null;
      }
      function Re(t, e, o) {
        if (o & lt.SkipSelf) {
          let n = e,
            r = t;
          for (
            ;
            (n = n.parent),
              !(
                null !== n ||
                o & lt.Host ||
                ((n = _e(r)), null === n) ||
                ((r = r[15]), 10 & n.type)
              );

          );
          if (null === n) return !1;
          (e = n), (t = r);
        }
        const n = (ce.lFrame = Te());
        return (n.currentTNode = e), (n.lView = t), !0;
      }
      function Pe(t) {
        const e = Te(),
          o = t[1];
        (ce.lFrame = e),
          (e.currentTNode = o.firstChild),
          (e.lView = t),
          (e.tView = o),
          (e.contextLView = t),
          (e.bindingIndex = o.bindingStartIndex),
          (e.inI18n = !1);
      }
      function Te() {
        const t = ce.lFrame,
          e = null === t ? null : t.child;
        return null === e ? Ae(t) : e;
      }
      function Ae(t) {
        const e = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: t,
          child: null,
          inI18n: !1,
        };
        return null !== t && (t.child = e), e;
      }
      function De() {
        const t = ce.lFrame;
        return (
          (ce.lFrame = t.parent), (t.currentTNode = null), (t.lView = null), t
        );
      }
      const xe = De;
      function Fe() {
        const t = De();
        (t.isParent = !0),
          (t.tView = null),
          (t.selectedIndex = -1),
          (t.contextLView = null),
          (t.elementDepthCount = 0),
          (t.currentDirectiveIndex = -1),
          (t.currentNamespace = null),
          (t.bindingRootIndex = -1),
          (t.bindingIndex = -1),
          (t.currentQueryIndex = 0);
      }
      function Ne(t) {
        ce.lFrame.selectedIndex = t;
      }
      function Me(t, e) {
        for (let o = e.directiveStart, n = e.directiveEnd; o < n; o++) {
          const e = t.data[o].type.prototype,
            {
              ngAfterContentInit: n,
              ngAfterContentChecked: r,
              ngAfterViewInit: i,
              ngAfterViewChecked: s,
              ngOnDestroy: a,
            } = e;
          n && (t.contentHooks || (t.contentHooks = [])).push(-o, n),
            r &&
              ((t.contentHooks || (t.contentHooks = [])).push(o, r),
              (t.contentCheckHooks || (t.contentCheckHooks = [])).push(o, r)),
            i && (t.viewHooks || (t.viewHooks = [])).push(-o, i),
            s &&
              ((t.viewHooks || (t.viewHooks = [])).push(o, s),
              (t.viewCheckHooks || (t.viewCheckHooks = [])).push(o, s)),
            null != a && (t.destroyHooks || (t.destroyHooks = [])).push(o, a);
        }
      }
      function Ie(t, e, o) {
        ke(t, e, 3, o);
      }
      function Le(t, e, o, n) {
        (3 & t[2]) === o && ke(t, e, o, n);
      }
      function Ge(t, e) {
        let o = t[2];
        (3 & o) === e && ((o &= 2047), (o += 1), (t[2] = o));
      }
      function ke(t, e, o, n) {
        const r = null != n ? n : -1,
          i = e.length - 1;
        let s = 0;
        for (let a = void 0 !== n ? 65535 & t[18] : 0; a < i; a++)
          if ("number" == typeof e[a + 1]) {
            if (((s = e[a]), null != n && s >= n)) break;
          } else
            e[a] < 0 && (t[18] += 65536),
              (s < r || -1 == r) &&
                (Ve(t, o, e, a), (t[18] = (4294901760 & t[18]) + a + 2)),
              a++;
      }
      function Ve(t, e, o, n) {
        const r = o[n] < 0,
          i = o[n + 1],
          s = t[r ? -o[n] : o[n]];
        if (r) {
          if (t[2] >> 11 < t[18] >> 16 && (3 & t[2]) === e) {
            t[2] += 2048;
            try {
              i.call(s);
            } finally {
            }
          }
        } else
          try {
            i.call(s);
          } finally {
          }
      }
      const We = -1;
      class He {
        constructor(t, e, o) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = o);
        }
      }
      function Be(t, e, o) {
        const n = Jt(t);
        let r = 0;
        for (; r < o.length; ) {
          const i = o[r];
          if ("number" == typeof i) {
            if (0 !== i) break;
            r++;
            const s = o[r++],
              a = o[r++],
              l = o[r++];
            n ? t.setAttribute(e, a, l, s) : e.setAttributeNS(s, a, l);
          } else {
            const s = i,
              a = o[++r];
            je(s)
              ? n && t.setProperty(e, s, a)
              : n
              ? t.setAttribute(e, s, a)
              : e.setAttribute(s, a),
              r++;
          }
        }
        return r;
      }
      function je(t) {
        return 64 === t.charCodeAt(0);
      }
      function Ue(t, e) {
        if (null === e || 0 === e.length);
        else if (null === t || 0 === t.length) t = e.slice();
        else {
          let o = -1;
          for (let n = 0; n < e.length; n++) {
            const r = e[n];
            "number" == typeof r
              ? (o = r)
              : 0 === o ||
                ze(t, o, r, null, -1 === o || 2 === o ? e[++n] : null);
          }
        }
        return t;
      }
      function ze(t, e, o, n, r) {
        let i = 0,
          s = t.length;
        if (-1 === e) s = -1;
        else
          for (; i < t.length; ) {
            const o = t[i++];
            if ("number" == typeof o) {
              if (o === e) {
                s = -1;
                break;
              }
              if (o > e) {
                s = i - 1;
                break;
              }
            }
          }
        for (; i < t.length; ) {
          const e = t[i];
          if ("number" == typeof e) break;
          if (e === o) {
            if (null === n) return void (null !== r && (t[i + 1] = r));
            if (n === t[i + 1]) return void (t[i + 2] = r);
          }
          i++, null !== n && i++, null !== r && i++;
        }
        -1 !== s && (t.splice(s, 0, e), (i = s + 1)),
          t.splice(i++, 0, o),
          null !== n && t.splice(i++, 0, n),
          null !== r && t.splice(i++, 0, r);
      }
      function Ke(t) {
        return t !== We;
      }
      function Ye(t) {
        return 32767 & t;
      }
      function Xe(t, e) {
        let o = t >> 16,
          n = e;
        for (; o > 0; ) (n = n[15]), o--;
        return n;
      }
      let qe = !0;
      function Qe(t) {
        const e = qe;
        return (qe = t), e;
      }
      let Ze = 0;
      function $e(t, e) {
        const o = to(t, e);
        if (-1 !== o) return o;
        const n = e[1];
        n.firstCreatePass &&
          ((t.injectorIndex = e.length),
          Je(n.data, t),
          Je(e, null),
          Je(n.blueprint, null));
        const r = eo(t, e),
          i = t.injectorIndex;
        if (Ke(r)) {
          const t = Ye(r),
            o = Xe(r, e),
            n = o[1].data;
          for (let r = 0; r < 8; r++) e[i + r] = o[t + r] | n[t + r];
        }
        return (e[i + 8] = r), i;
      }
      function Je(t, e) {
        t.push(0, 0, 0, 0, 0, 0, 0, 0, e);
      }
      function to(t, e) {
        return -1 === t.injectorIndex ||
          (t.parent && t.parent.injectorIndex === t.injectorIndex) ||
          null === e[t.injectorIndex + 8]
          ? -1
          : t.injectorIndex;
      }
      function eo(t, e) {
        if (t.parent && -1 !== t.parent.injectorIndex)
          return t.parent.injectorIndex;
        let o = 0,
          n = null,
          r = e;
        for (; null !== r; ) {
          const t = r[1],
            e = t.type;
          if (((n = 2 === e ? t.declTNode : 1 === e ? r[6] : null), null === n))
            return We;
          if ((o++, (r = r[15]), -1 !== n.injectorIndex))
            return n.injectorIndex | (o << 16);
        }
        return We;
      }
      function oo(t, e, o) {
        !(function (t, e, o) {
          let n;
          "string" == typeof o
            ? (n = o.charCodeAt(0) || 0)
            : o.hasOwnProperty(Tt) && (n = o[Tt]),
            null == n && (n = o[Tt] = Ze++);
          const r = 255 & n;
          e.data[t + (r >> 5)] |= 1 << r;
        })(t, e, o);
      }
      function no(t, e, o) {
        if (o & lt.Optional) return t;
        $(e, "NodeInjector");
      }
      function ro(t, e, o, n) {
        if (
          (o & lt.Optional && void 0 === n && (n = null),
          0 == (o & (lt.Self | lt.Host)))
        ) {
          const r = t[9],
            i = pt(void 0);
          try {
            return r ? r.get(e, n, o & lt.Optional) : ct(e, n, o & lt.Optional);
          } finally {
            pt(i);
          }
        }
        return no(n, e, o);
      }
      function io(t, e, o, n = lt.Default, r) {
        if (null !== t) {
          const i = (function (t) {
            if ("string" == typeof t) return t.charCodeAt(0) || 0;
            const e = t.hasOwnProperty(Tt) ? t[Tt] : void 0;
            return "number" == typeof e ? (e >= 0 ? 255 & e : ao) : e;
          })(o);
          if ("function" == typeof i) {
            if (!Re(e, t, n)) return n & lt.Host ? no(r, o, n) : ro(e, o, n, r);
            try {
              const t = i();
              if (null != t || n & lt.Optional) return t;
              $(o);
            } finally {
              xe();
            }
          } else if ("number" == typeof i) {
            let r = null,
              s = to(t, e),
              a = We,
              l = n & lt.Host ? e[16][6] : null;
            for (
              (-1 === s || n & lt.SkipSelf) &&
              ((a = -1 === s ? eo(t, e) : e[s + 8]),
              a !== We && ho(n, !1)
                ? ((r = e[1]), (s = Ye(a)), (e = Xe(a, e)))
                : (s = -1));
              -1 !== s;

            ) {
              const t = e[1];
              if (co(i, s, t.data)) {
                const t = lo(s, e, o, r, n, l);
                if (t !== so) return t;
              }
              (a = e[s + 8]),
                a !== We && ho(n, e[1].data[s + 8] === l) && co(i, s, e)
                  ? ((r = t), (s = Ye(a)), (e = Xe(a, e)))
                  : (s = -1);
            }
          }
        }
        return ro(e, o, n, r);
      }
      const so = {};
      function ao() {
        return new fo(ge(), he());
      }
      function lo(t, e, o, n, r, i) {
        const s = e[1],
          a = s.data[t + 8],
          l = uo(
            a,
            s,
            o,
            null == n ? Bt(a) && qe : n != s && 0 != (3 & a.type),
            r & lt.Host && i === a
          );
        return null !== l ? po(e, s, l, a) : so;
      }
      function uo(t, e, o, n, r) {
        const i = t.providerIndexes,
          s = e.data,
          a = 1048575 & i,
          l = t.directiveStart,
          u = i >> 20,
          p = r ? a + u : t.directiveEnd;
        for (let c = n ? a : a + u; c < p; c++) {
          const t = s[c];
          if ((c < l && o === t) || (c >= l && t.type === o)) return c;
        }
        if (r) {
          const t = s[l];
          if (t && Ut(t) && t.type === o) return l;
        }
        return null;
      }
      function po(t, e, o, n) {
        let r = t[o];
        const i = e.data;
        if (r instanceof He) {
          const s = r;
          s.resolving &&
            (function (t, e) {
              throw new Q("200", `Circular dependency in DI detected for ${t}`);
            })(Z(i[o]));
          const a = Qe(s.canSeeViewProviders);
          s.resolving = !0;
          const l = s.injectImpl ? pt(s.injectImpl) : null;
          Re(t, n, lt.Default);
          try {
            (r = t[o] = s.factory(void 0, i, t, n)),
              e.firstCreatePass &&
                o >= n.directiveStart &&
                (function (t, e, o) {
                  const {
                    ngOnChanges: n,
                    ngOnInit: r,
                    ngDoCheck: i,
                  } = e.type.prototype;
                  if (n) {
                    const n = Xt(e);
                    (o.preOrderHooks || (o.preOrderHooks = [])).push(t, n),
                      (
                        o.preOrderCheckHooks || (o.preOrderCheckHooks = [])
                      ).push(t, n);
                  }
                  r &&
                    (o.preOrderHooks || (o.preOrderHooks = [])).push(0 - t, r),
                    i &&
                      ((o.preOrderHooks || (o.preOrderHooks = [])).push(t, i),
                      (
                        o.preOrderCheckHooks || (o.preOrderCheckHooks = [])
                      ).push(t, i));
                })(o, i[o], e);
          } finally {
            null !== l && pt(l), Qe(a), (s.resolving = !1), xe();
          }
        }
        return r;
      }
      function co(t, e, o) {
        return !!(o[e + (t >> 5)] & (1 << t));
      }
      function ho(t, e) {
        return !(t & lt.Self || (t & lt.Host && e));
      }
      class fo {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e) {
          return io(this._tNode, this._lView, t, void 0, e);
        }
      }
      function go(t) {
        return dt(() => {
          const e = t.prototype.constructor,
            o = e[Pt] || yo(e),
            n = Object.prototype;
          let r = Object.getPrototypeOf(t.prototype).constructor;
          for (; r && r !== n; ) {
            const t = r[Pt] || yo(r);
            if (t && t !== o) return t;
            r = Object.getPrototypeOf(r);
          }
          return (t) => new t();
        });
      }
      function yo(t) {
        return q(t)
          ? () => {
              const e = yo(X(t));
              return e && e();
            }
          : zt(t);
      }
      const mo = "__parameters__";
      function vo(t, e, o) {
        return dt(() => {
          const n = (function (t) {
            return function (...e) {
              if (t) {
                const o = t(...e);
                for (const t in o) this[t] = o[t];
              }
            };
          })(e);
          function r(...t) {
            if (this instanceof r) return n.apply(this, t), this;
            const e = new r(...t);
            return (o.annotation = e), o;
            function o(t, o, n) {
              const r = t.hasOwnProperty(mo)
                ? t[mo]
                : Object.defineProperty(t, mo, { value: [] })[mo];
              for (; r.length <= n; ) r.push(null);
              return (r[n] = r[n] || []).push(e), t;
            }
          }
          return (
            o && (r.prototype = Object.create(o.prototype)),
            (r.prototype.ngMetadataName = t),
            (r.annotationCls = r),
            r
          );
        });
      }
      class Co {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = J({
                  token: this,
                  providedIn: e.providedIn || "root",
                  factory: e.factory,
                }));
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const wo = new Co("AnalyzeForEntryComponents");
      function bo(t, e) {
        void 0 === e && (e = t);
        for (let o = 0; o < t.length; o++) {
          let n = t[o];
          Array.isArray(n)
            ? (e === t && (e = t.slice(0, o)), bo(n, e))
            : e !== t && e.push(n);
        }
        return e;
      }
      function Eo(t, e) {
        t.forEach((t) => (Array.isArray(t) ? Eo(t, e) : e(t)));
      }
      function So(t, e, o) {
        e >= t.length ? t.push(o) : t.splice(e, 0, o);
      }
      function Oo(t, e) {
        return e >= t.length - 1 ? t.pop() : t.splice(e, 1)[0];
      }
      const _o = {},
        Ro = /\n/gm,
        Po = "__source",
        To = j({ provide: String, useValue: j });
      let Ao;
      function Do(t) {
        const e = Ao;
        return (Ao = t), e;
      }
      function xo(t, e = lt.Default) {
        if (void 0 === Ao)
          throw new Error("inject() must be called from an injection context");
        return null === Ao
          ? ct(t, void 0, e)
          : Ao.get(t, e & lt.Optional ? null : void 0, e);
      }
      function Fo(t, e = lt.Default) {
        return (ut || xo)(X(t), e);
      }
      function No(t) {
        const e = [];
        for (let o = 0; o < t.length; o++) {
          const n = X(t[o]);
          if (Array.isArray(n)) {
            if (0 === n.length)
              throw new Error("Arguments array must have arguments.");
            let t,
              o = lt.Default;
            for (let e = 0; e < n.length; e++) {
              const r = n[e],
                i = r.__NG_DI_FLAG__;
              "number" == typeof i
                ? -1 === i
                  ? (t = r.token)
                  : (o |= i)
                : (t = r);
            }
            e.push(Fo(t, o));
          } else e.push(Fo(n));
        }
        return e;
      }
      function Mo(t, e) {
        return (t.__NG_DI_FLAG__ = e), (t.prototype.__NG_DI_FLAG__ = e), t;
      }
      const Io = Mo(
          vo("Inject", (t) => ({ token: t })),
          -1
        ),
        Lo = Mo(vo("Optional"), 8),
        Go = Mo(vo("SkipSelf"), 4);
      function ko(t) {
        return t.ngDebugContext;
      }
      function Vo(t) {
        return t.ngOriginalError;
      }
      function Wo(t, ...e) {
        t.error(...e);
      }
      class Ho {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t),
            o = this._findContext(t),
            n = (function (t) {
              return t.ngErrorLogger || Wo;
            })(t);
          n(this._console, "ERROR", t),
            e && n(this._console, "ORIGINAL ERROR", e),
            o && n(this._console, "ERROR CONTEXT", o);
        }
        _findContext(t) {
          return t ? (ko(t) ? ko(t) : this._findContext(Vo(t))) : null;
        }
        _findOriginalError(t) {
          let e = Vo(t);
          for (; e && Vo(e); ) e = Vo(e);
          return e;
        }
      }
      function Bo(t, e) {
        t.__ngContext__ = e;
      }
      const jo = (() =>
        (
          ("undefined" != typeof requestAnimationFrame &&
            requestAnimationFrame) ||
          setTimeout
        ).bind(Ct))();
      function Uo(t) {
        return t instanceof Function ? t() : t;
      }
      var zo = (function (t) {
        return (
          (t[(t.Important = 1)] = "Important"),
          (t[(t.DashCase = 2)] = "DashCase"),
          t
        );
      })({});
      function Ko(t, e) {
        return (void 0)(t, e);
      }
      function Yo(t) {
        const e = t[3];
        return Wt(e) ? e[3] : e;
      }
      function Xo(t) {
        return Qo(t[13]);
      }
      function qo(t) {
        return Qo(t[4]);
      }
      function Qo(t) {
        for (; null !== t && !Wt(t); ) t = t[4];
        return t;
      }
      function Zo(t, e, o, n, r) {
        if (null != n) {
          let i,
            s = !1;
          Wt(n) ? (i = n) : Vt(n) && ((s = !0), (n = n[0]));
          const a = ee(n);
          0 === t && null !== o
            ? null == r
              ? rn(e, o, a)
              : nn(e, o, a, r || null, !0)
            : 1 === t && null !== o
            ? nn(e, o, a, r || null, !0)
            : 2 === t
            ? (function (t, e, o) {
                const n = an(t, e);
                n &&
                  (function (t, e, o, n) {
                    Jt(t) ? t.removeChild(e, o, n) : e.removeChild(o);
                  })(t, n, e, o);
              })(e, a, s)
            : 3 === t && e.destroyNode(a),
            null != i &&
              (function (t, e, o, n, r) {
                const i = o[7];
                i !== ee(o) && Zo(e, t, n, i, r);
                for (let s = kt; s < o.length; s++) {
                  const r = o[s];
                  hn(r[1], r, t, e, n, i);
                }
              })(e, t, i, o, r);
        }
      }
      function $o(t, e, o) {
        return Jt(t)
          ? t.createElement(e, o)
          : null === o
          ? t.createElement(e)
          : t.createElementNS(o, e);
      }
      function Jo(t, e) {
        const o = t[9],
          n = o.indexOf(e),
          r = e[3];
        1024 & e[2] && ((e[2] &= -1025), pe(r, -1)), o.splice(n, 1);
      }
      function tn(t, e) {
        if (t.length <= kt) return;
        const o = kt + e,
          n = t[o];
        if (n) {
          const i = n[17];
          null !== i && i !== t && Jo(i, n), e > 0 && (t[o - 1][4] = n[4]);
          const s = Oo(t, kt + e);
          hn(n[1], (r = n), r[11], 2, null, null), (r[0] = null), (r[6] = null);
          const a = s[19];
          null !== a && a.detachView(s[1]),
            (n[3] = null),
            (n[4] = null),
            (n[2] &= -129);
        }
        var r;
        return n;
      }
      function en(t, e) {
        if (!(256 & e[2])) {
          const o = e[11];
          Jt(o) && o.destroyNode && hn(t, e, o, 3, null, null),
            (function (t) {
              let e = t[13];
              if (!e) return on(t[1], t);
              for (; e; ) {
                let o = null;
                if (Vt(e)) o = e[13];
                else {
                  const t = e[10];
                  t && (o = t);
                }
                if (!o) {
                  for (; e && !e[4] && e !== t; )
                    Vt(e) && on(e[1], e), (e = e[3]);
                  null === e && (e = t), Vt(e) && on(e[1], e), (o = e && e[4]);
                }
                e = o;
              }
            })(e);
        }
      }
      function on(t, e) {
        if (!(256 & e[2])) {
          (e[2] &= -129),
            (e[2] |= 256),
            (function (t, e) {
              let o;
              if (null != t && null != (o = t.destroyHooks))
                for (let n = 0; n < o.length; n += 2) {
                  const t = e[o[n]];
                  if (!(t instanceof He)) {
                    const e = o[n + 1];
                    if (Array.isArray(e))
                      for (let o = 0; o < e.length; o += 2)
                        e[o + 1].call(t[e[o]]);
                    else e.call(t);
                  }
                }
            })(t, e),
            (function (t, e) {
              const o = t.cleanup,
                n = e[7];
              let r = -1;
              if (null !== o)
                for (let i = 0; i < o.length - 1; i += 2)
                  if ("string" == typeof o[i]) {
                    const t = o[i + 1],
                      s = "function" == typeof t ? t(e) : ee(e[t]),
                      a = n[(r = o[i + 2])],
                      l = o[i + 3];
                    "boolean" == typeof l
                      ? s.removeEventListener(o[i], a, l)
                      : l >= 0
                      ? n[(r = l)]()
                      : n[(r = -l)].unsubscribe(),
                      (i += 2);
                  } else {
                    const t = n[(r = o[i + 1])];
                    o[i].call(t);
                  }
              if (null !== n) {
                for (let t = r + 1; t < n.length; t++) (0, n[t])();
                e[7] = null;
              }
            })(t, e),
            1 === e[1].type && Jt(e[11]) && e[11].destroy();
          const o = e[17];
          if (null !== o && Wt(e[3])) {
            o !== e[3] && Jo(o, e);
            const n = e[19];
            null !== n && n.detachView(t);
          }
        }
      }
      function nn(t, e, o, n, r) {
        Jt(t) ? t.insertBefore(e, o, n, r) : e.insertBefore(o, n, r);
      }
      function rn(t, e, o) {
        Jt(t) ? t.appendChild(e, o) : e.appendChild(o);
      }
      function sn(t, e, o, n, r) {
        null !== n ? nn(t, e, o, n, r) : rn(t, e, o);
      }
      function an(t, e) {
        return Jt(t) ? t.parentNode(e) : e.parentNode;
      }
      function ln(t, e, o, n) {
        const r = (function (t, e, o) {
            return (function (t, e, o) {
              let n = e;
              for (; null !== n && 40 & n.type; ) n = (e = n).parent;
              if (null === n) return o[0];
              if (2 & n.flags) {
                const e = t.data[n.directiveStart].encapsulation;
                if (e === ft.None || e === ft.Emulated) return null;
              }
              return oe(n, o);
            })(t, e.parent, o);
          })(t, n, e),
          i = e[11],
          s = (function (t, e, o) {
            return (function (t, e, o) {
              return 40 & t.type ? oe(t, o) : null;
            })(t, 0, o);
          })(n.parent || e[6], 0, e);
        if (null != r)
          if (Array.isArray(o))
            for (let a = 0; a < o.length; a++) sn(i, r, o[a], s, !1);
          else sn(i, r, o, s, !1);
      }
      function un(t, e) {
        if (null !== e) {
          const o = e.type;
          if (3 & o) return oe(e, t);
          if (4 & o) return cn(-1, t[e.index]);
          if (8 & o) {
            const o = e.child;
            if (null !== o) return un(t, o);
            {
              const o = t[e.index];
              return Wt(o) ? cn(-1, o) : ee(o);
            }
          }
          if (32 & o) return Ko(e, t)() || ee(t[e.index]);
          {
            const o = pn(t, e);
            return null !== o
              ? Array.isArray(o)
                ? o[0]
                : un(Yo(t[16]), o)
              : un(t, e.next);
          }
        }
        return null;
      }
      function pn(t, e) {
        return null !== e ? t[16][6].projection[e.projection] : null;
      }
      function cn(t, e) {
        const o = kt + t + 1;
        if (o < e.length) {
          const t = e[o],
            n = t[1].firstChild;
          if (null !== n) return un(t, n);
        }
        return e[7];
      }
      function dn(t, e, o, n, r, i, s) {
        for (; null != o; ) {
          const a = n[o.index],
            l = o.type;
          if (
            (s && 0 === e && (a && Bo(ee(a), n), (o.flags |= 4)),
            64 != (64 & o.flags))
          )
            if (8 & l) dn(t, e, o.child, n, r, i, !1), Zo(e, t, r, a, i);
            else if (32 & l) {
              const s = Ko(o, n);
              let l;
              for (; (l = s()); ) Zo(e, t, r, l, i);
              Zo(e, t, r, a, i);
            } else 16 & l ? fn(t, e, n, o, r, i) : Zo(e, t, r, a, i);
          o = s ? o.projectionNext : o.next;
        }
      }
      function hn(t, e, o, n, r, i) {
        dn(o, n, t.firstChild, e, r, i, !1);
      }
      function fn(t, e, o, n, r, i) {
        const s = o[16],
          a = s[6].projection[n.projection];
        if (Array.isArray(a))
          for (let l = 0; l < a.length; l++) Zo(e, t, r, a[l], i);
        else dn(t, e, a, s[3], r, i, !0);
      }
      function gn(t, e, o) {
        Jt(t) ? t.setAttribute(e, "style", o) : (e.style.cssText = o);
      }
      function yn(t, e, o) {
        Jt(t)
          ? "" === o
            ? t.removeAttribute(e, "class")
            : t.setAttribute(e, "class", o)
          : (e.className = o);
      }
      function mn(t, e, o) {
        let n = t.length;
        for (;;) {
          const r = t.indexOf(e, o);
          if (-1 === r) return r;
          if (0 === r || t.charCodeAt(r - 1) <= 32) {
            const o = e.length;
            if (r + o === n || t.charCodeAt(r + o) <= 32) return r;
          }
          o = r + 1;
        }
      }
      const vn = "ng-template";
      function Cn(t, e, o) {
        let n = 0;
        for (; n < t.length; ) {
          let r = t[n++];
          if (o && "class" === r) {
            if (((r = t[n]), -1 !== mn(r.toLowerCase(), e, 0))) return !0;
          } else if (1 === r) {
            for (; n < t.length && "string" == typeof (r = t[n++]); )
              if (r.toLowerCase() === e) return !0;
            return !1;
          }
        }
        return !1;
      }
      function wn(t) {
        return 4 === t.type && t.value !== vn;
      }
      function bn(t, e, o) {
        return e === (4 !== t.type || o ? t.value : vn);
      }
      function En(t, e, o) {
        let n = 4;
        const r = t.attrs || [],
          i = (function (t) {
            for (let o = 0; o < t.length; o++)
              if (3 === (e = t[o]) || 4 === e || 6 === e) return o;
            var e;
            return t.length;
          })(r);
        let s = !1;
        for (let a = 0; a < e.length; a++) {
          const l = e[a];
          if ("number" != typeof l) {
            if (!s)
              if (4 & n) {
                if (
                  ((n = 2 | (1 & n)),
                  ("" !== l && !bn(t, l, o)) || ("" === l && 1 === e.length))
                ) {
                  if (Sn(n)) return !1;
                  s = !0;
                }
              } else {
                const u = 8 & n ? l : e[++a];
                if (8 & n && null !== t.attrs) {
                  if (!Cn(t.attrs, u, o)) {
                    if (Sn(n)) return !1;
                    s = !0;
                  }
                  continue;
                }
                const p = On(8 & n ? "class" : l, r, wn(t), o);
                if (-1 === p) {
                  if (Sn(n)) return !1;
                  s = !0;
                  continue;
                }
                if ("" !== u) {
                  let t;
                  t = p > i ? "" : r[p + 1].toLowerCase();
                  const e = 8 & n ? t : null;
                  if ((e && -1 !== mn(e, u, 0)) || (2 & n && u !== t)) {
                    if (Sn(n)) return !1;
                    s = !0;
                  }
                }
              }
          } else {
            if (!s && !Sn(n) && !Sn(l)) return !1;
            if (s && Sn(l)) continue;
            (s = !1), (n = l | (1 & n));
          }
        }
        return Sn(n) || s;
      }
      function Sn(t) {
        return 0 == (1 & t);
      }
      function On(t, e, o, n) {
        if (null === e) return -1;
        let r = 0;
        if (n || !o) {
          let o = !1;
          for (; r < e.length; ) {
            const n = e[r];
            if (n === t) return r;
            if (3 === n || 6 === n) o = !0;
            else {
              if (1 === n || 2 === n) {
                let t = e[++r];
                for (; "string" == typeof t; ) t = e[++r];
                continue;
              }
              if (4 === n) break;
              if (0 === n) {
                r += 4;
                continue;
              }
            }
            r += o ? 1 : 2;
          }
          return -1;
        }
        return (function (t, e) {
          let o = t.indexOf(4);
          if (o > -1)
            for (o++; o < t.length; ) {
              const n = t[o];
              if ("number" == typeof n) return -1;
              if (n === e) return o;
              o++;
            }
          return -1;
        })(e, t);
      }
      function _n(t, e, o = !1) {
        for (let n = 0; n < e.length; n++) if (En(t, e[n], o)) return !0;
        return !1;
      }
      function Rn(t, e) {
        return t ? ":not(" + e.trim() + ")" : e;
      }
      function Pn(t) {
        let e = t[0],
          o = 1,
          n = 2,
          r = "",
          i = !1;
        for (; o < t.length; ) {
          let s = t[o];
          if ("string" == typeof s)
            if (2 & n) {
              const e = t[++o];
              r += "[" + s + (e.length > 0 ? '="' + e + '"' : "") + "]";
            } else 8 & n ? (r += "." + s) : 4 & n && (r += " " + s);
          else
            "" === r || Sn(s) || ((e += Rn(i, r)), (r = "")),
              (n = s),
              (i = i || !Sn(n));
          o++;
        }
        return "" !== r && (e += Rn(i, r)), e;
      }
      const Tn = {};
      function An(t, e) {
        const o = t.contentQueries;
        if (null !== o)
          for (let n = 0; n < o.length; n += 2) {
            const r = o[n],
              i = o[n + 1];
            if (-1 !== i) {
              const o = t.data[i];
              Oe(r), o.contentQueries(2, e[i], i);
            }
          }
      }
      function Dn(t, e, o, n, r, i, s, a, l, u) {
        const p = e.blueprint.slice();
        return (
          (p[0] = r),
          (p[2] = 140 | n),
          ue(p),
          (p[3] = p[15] = t),
          (p[8] = o),
          (p[10] = s || (t && t[10])),
          (p[11] = a || (t && t[11])),
          (p[12] = l || (t && t[12]) || null),
          (p[9] = u || (t && t[9]) || null),
          (p[6] = i),
          (p[16] = 2 == e.type ? t[16] : p),
          p
        );
      }
      function xn(t, e, o, n, r) {
        let i = t.data[e];
        if (null === i)
          (i = (function (t, e, o, n, r) {
            const i = ye(),
              s = ve(),
              a = (t.data[e] = (function (t, e, o, n, r, i) {
                return {
                  type: o,
                  index: n,
                  insertBeforeIndex: null,
                  injectorIndex: e ? e.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: r,
                  attrs: i,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: e,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, s ? i : i && i.parent, o, e, n, r));
            return (
              null === t.firstChild && (t.firstChild = a),
              null !== i &&
                (s
                  ? null == i.child && null !== a.parent && (i.child = a)
                  : null === i.next && (i.next = a)),
              a
            );
          })(t, e, o, n, r)),
            ce.lFrame.inI18n && (i.flags |= 64);
        else if (64 & i.type) {
          (i.type = o), (i.value = n), (i.attrs = r);
          const t = (function () {
            const t = ce.lFrame,
              e = t.currentTNode;
            return t.isParent ? e : e.parent;
          })();
          i.injectorIndex = null === t ? -1 : t.injectorIndex;
        }
        return me(i, !0), i;
      }
      function Fn(t, e, o, n) {
        if (0 === o) return -1;
        const r = e.length;
        for (let i = 0; i < o; i++)
          e.push(n), t.blueprint.push(n), t.data.push(null);
        return r;
      }
      function Nn(t, e, o) {
        Pe(e);
        try {
          const n = t.viewQuery;
          null !== n && nr(1, n, o);
          const r = t.template;
          null !== r && Ln(t, e, r, 1, o),
            t.firstCreatePass && (t.firstCreatePass = !1),
            t.staticContentQueries && An(t, e),
            t.staticViewQueries && nr(2, t.viewQuery, o);
          const i = t.components;
          null !== i &&
            (function (t, e) {
              for (let o = 0; o < e.length; o++) $n(t, e[o]);
            })(e, i);
        } catch (n) {
          throw (t.firstCreatePass && (t.incompleteFirstPass = !0), n);
        } finally {
          (e[2] &= -5), Fe();
        }
      }
      function Mn(t, e, o, n) {
        const r = e[2];
        if (256 == (256 & r)) return;
        Pe(e);
        const i = Ce();
        try {
          ue(e),
            (ce.lFrame.bindingIndex = t.bindingStartIndex),
            null !== o && Ln(t, e, o, 2, n);
          const s = 3 == (3 & r);
          if (!i)
            if (s) {
              const o = t.preOrderCheckHooks;
              null !== o && Ie(e, o, null);
            } else {
              const o = t.preOrderHooks;
              null !== o && Le(e, o, 0, null), Ge(e, 0);
            }
          if (
            ((function (t) {
              for (let e = Xo(t); null !== e; e = qo(e)) {
                if (!e[2]) continue;
                const t = e[9];
                for (let e = 0; e < t.length; e++) {
                  const o = t[e],
                    n = o[3];
                  0 == (1024 & o[2]) && pe(n, 1), (o[2] |= 1024);
                }
              }
            })(e),
            (function (t) {
              for (let e = Xo(t); null !== e; e = qo(e))
                for (let t = kt; t < e.length; t++) {
                  const o = e[t],
                    n = o[1];
                  ae(o) && Mn(n, o, n.template, o[8]);
                }
            })(e),
            null !== t.contentQueries && An(t, e),
            !i)
          )
            if (s) {
              const o = t.contentCheckHooks;
              null !== o && Ie(e, o);
            } else {
              const o = t.contentHooks;
              null !== o && Le(e, o, 1), Ge(e, 1);
            }
          !(function (t, e) {
            const o = t.hostBindingOpCodes;
            if (null !== o)
              try {
                for (let t = 0; t < o.length; t++) {
                  const n = o[t];
                  if (n < 0) Ne(~n);
                  else {
                    const r = n,
                      i = o[++t],
                      s = o[++t];
                    be(i, r), s(2, e[r]);
                  }
                }
              } finally {
                Ne(-1);
              }
          })(t, e);
          const a = t.components;
          null !== a &&
            (function (t, e) {
              for (let o = 0; o < e.length; o++) Qn(t, e[o]);
            })(e, a);
          const l = t.viewQuery;
          if ((null !== l && nr(2, l, n), !i))
            if (s) {
              const o = t.viewCheckHooks;
              null !== o && Ie(e, o);
            } else {
              const o = t.viewHooks;
              null !== o && Le(e, o, 2), Ge(e, 2);
            }
          !0 === t.firstUpdatePass && (t.firstUpdatePass = !1),
            i || (e[2] &= -73),
            1024 & e[2] && ((e[2] &= -1025), pe(e[3], -1));
        } finally {
          Fe();
        }
      }
      function In(t, e, o, n) {
        const r = e[10],
          i = !Ce(),
          s = se(e);
        try {
          i && !s && r.begin && r.begin(), s && Nn(t, e, n), Mn(t, e, o, n);
        } finally {
          i && !s && r.end && r.end();
        }
      }
      function Ln(t, e, o, n, r) {
        const i = ce.lFrame.selectedIndex,
          s = 2 & n;
        try {
          Ne(-1),
            s &&
              e.length > 20 &&
              (function (t, e, o, n) {
                if (!n)
                  if (3 == (3 & e[2])) {
                    const o = t.preOrderCheckHooks;
                    null !== o && Ie(e, o, 20);
                  } else {
                    const o = t.preOrderHooks;
                    null !== o && Le(e, o, 0, 20);
                  }
                Ne(20);
              })(t, e, 0, Ce()),
            o(n, r);
        } finally {
          Ne(i);
        }
      }
      function Gn(t) {
        const e = t.tView;
        return null === e || e.incompleteFirstPass
          ? (t.tView = kn(
              1,
              null,
              t.template,
              t.decls,
              t.vars,
              t.directiveDefs,
              t.pipeDefs,
              t.viewQuery,
              t.schemas,
              t.consts
            ))
          : e;
      }
      function kn(t, e, o, n, r, i, s, a, l, u) {
        const p = 20 + n,
          c = p + r,
          d = (function (t, e) {
            const o = [];
            for (let n = 0; n < e; n++) o.push(n < t ? null : Tn);
            return o;
          })(p, c),
          h = "function" == typeof u ? u() : u;
        return (d[1] = {
          type: t,
          blueprint: d,
          template: o,
          queries: null,
          viewQuery: a,
          declTNode: e,
          data: d.slice().fill(null, p),
          bindingStartIndex: p,
          expandoStartIndex: c,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof i ? i() : i,
          pipeRegistry: "function" == typeof s ? s() : s,
          firstChild: null,
          schemas: l,
          consts: h,
          incompleteFirstPass: !1,
        });
      }
      function Vn(t, e, o, n) {
        const r = ir(e);
        null === o
          ? r.push(n)
          : (r.push(o), t.firstCreatePass && sr(t).push(n, r.length - 1));
      }
      function Wn(t, e, o) {
        for (let n in t)
          if (t.hasOwnProperty(n)) {
            const r = t[n];
            (o = null === o ? {} : o).hasOwnProperty(n)
              ? o[n].push(e, r)
              : (o[n] = [e, r]);
          }
        return o;
      }
      function Hn(t, e, o, n, r, i) {
        const s = i.hostBindings;
        if (s) {
          let o = t.hostBindingOpCodes;
          null === o && (o = t.hostBindingOpCodes = []);
          const i = ~e.index;
          (function (t) {
            let e = t.length;
            for (; e > 0; ) {
              const o = t[--e];
              if ("number" == typeof o && o < 0) return o;
            }
            return 0;
          })(o) != i && o.push(i),
            o.push(n, r, s);
        }
      }
      function Bn(t, e) {
        null !== t.hostBindings && t.hostBindings(1, e);
      }
      function jn(t, e) {
        (e.flags |= 2), (t.components || (t.components = [])).push(e.index);
      }
      function Un(t, e, o) {
        if (o) {
          if (e.exportAs)
            for (let n = 0; n < e.exportAs.length; n++) o[e.exportAs[n]] = t;
          Ut(e) && (o[""] = t);
        }
      }
      function zn(t, e, o) {
        (t.flags |= 1),
          (t.directiveStart = e),
          (t.directiveEnd = e + o),
          (t.providerIndexes = e);
      }
      function Kn(t, e, o, n, r) {
        t.data[n] = r;
        const i = r.factory || (r.factory = zt(r.type)),
          s = new He(i, Ut(r), null);
        (t.blueprint[n] = s),
          (o[n] = s),
          Hn(t, e, 0, n, Fn(t, o, r.hostVars, Tn), r);
      }
      function Yn(t, e, o) {
        const n = oe(e, t),
          r = Gn(o),
          i = t[10],
          s = Jn(
            t,
            Dn(
              t,
              r,
              null,
              o.onPush ? 64 : 16,
              n,
              e,
              i,
              i.createRenderer(n, o),
              null,
              null
            )
          );
        t[e.index] = s;
      }
      function Xn(t, e, o, n, r, i) {
        const s = i[e];
        if (null !== s) {
          const t = n.setInput;
          for (let e = 0; e < s.length; ) {
            const r = s[e++],
              i = s[e++],
              a = s[e++];
            null !== t ? n.setInput(o, a, r, i) : (o[i] = a);
          }
        }
      }
      function qn(t, e) {
        let o = null,
          n = 0;
        for (; n < e.length; ) {
          const r = e[n];
          if (0 !== r)
            if (5 !== r) {
              if ("number" == typeof r) break;
              t.hasOwnProperty(r) &&
                (null === o && (o = []), o.push(r, t[r], e[n + 1])),
                (n += 2);
            } else n += 2;
          else n += 4;
        }
        return o;
      }
      function Qn(t, e) {
        const o = re(e, t);
        if (ae(o)) {
          const t = o[1];
          80 & o[2] ? Mn(t, o, t.template, o[8]) : o[5] > 0 && Zn(o);
        }
      }
      function Zn(t) {
        for (let o = Xo(t); null !== o; o = qo(o))
          for (let t = kt; t < o.length; t++) {
            const e = o[t];
            if (1024 & e[2]) {
              const t = e[1];
              Mn(t, e, t.template, e[8]);
            } else e[5] > 0 && Zn(e);
          }
        const e = t[1].components;
        if (null !== e)
          for (let o = 0; o < e.length; o++) {
            const n = re(e[o], t);
            ae(n) && n[5] > 0 && Zn(n);
          }
      }
      function $n(t, e) {
        const o = re(e, t),
          n = o[1];
        !(function (t, e) {
          for (let o = e.length; o < t.blueprint.length; o++)
            e.push(t.blueprint[o]);
        })(n, o),
          Nn(n, o, o[8]);
      }
      function Jn(t, e) {
        return t[13] ? (t[14][4] = e) : (t[13] = e), (t[14] = e), e;
      }
      function tr(t) {
        for (; t; ) {
          t[2] |= 64;
          const e = Yo(t);
          if (0 != (512 & t[2]) && !e) return t;
          t = e;
        }
        return null;
      }
      function er(t, e, o) {
        const n = e[10];
        n.begin && n.begin();
        try {
          Mn(t, e, t.template, o);
        } catch (r) {
          throw (ar(e, r), r);
        } finally {
          n.end && n.end();
        }
      }
      function or(t) {
        !(function (t) {
          for (let e = 0; e < t.components.length; e++) {
            const o = t.components[e],
              n = ie(o),
              r = n[1];
            In(r, n, r.template, o);
          }
        })(t[8]);
      }
      function nr(t, e, o) {
        Oe(0), e(t, o);
      }
      const rr = (() => Promise.resolve(null))();
      function ir(t) {
        return t[7] || (t[7] = []);
      }
      function sr(t) {
        return t.cleanup || (t.cleanup = []);
      }
      function ar(t, e) {
        const o = t[9],
          n = o ? o.get(Ho, null) : null;
        n && n.handleError(e);
      }
      function lr(t, e, o, n, r) {
        for (let i = 0; i < o.length; ) {
          const s = o[i++],
            a = o[i++],
            l = e[s],
            u = t.data[s];
          null !== u.setInput ? u.setInput(l, r, n, a) : (l[a] = r);
        }
      }
      function ur(t, e, o) {
        let n = o ? t.styles : null,
          r = o ? t.classes : null,
          i = 0;
        if (null !== e)
          for (let s = 0; s < e.length; s++) {
            const t = e[s];
            "number" == typeof t
              ? (i = t)
              : 1 == i
              ? (r = z(r, t))
              : 2 == i && (n = z(n, t + ": " + e[++s] + ";"));
          }
        o ? (t.styles = n) : (t.stylesWithoutHost = n),
          o ? (t.classes = r) : (t.classesWithoutHost = r);
      }
      const pr = new Co("INJECTOR", -1);
      class cr {
        get(t, e = _o) {
          if (e === _o) {
            const e = new Error(`NullInjectorError: No provider for ${U(t)}!`);
            throw ((e.name = "NullInjectorError"), e);
          }
          return e;
        }
      }
      const dr = new Co("Set Injector scope."),
        hr = {},
        fr = {},
        gr = [];
      let yr;
      function mr() {
        return void 0 === yr && (yr = new cr()), yr;
      }
      function vr(t, e = null, o = null, n) {
        return new Cr(t, o, e || mr(), n);
      }
      class Cr {
        constructor(t, e, o, n = null) {
          (this.parent = o),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const r = [];
          e && Eo(e, (o) => this.processProvider(o, t, e)),
            Eo([t], (t) => this.processInjectorType(t, [], r)),
            this.records.set(pr, Er(void 0, this));
          const i = this.records.get(dr);
          (this.scope = null != i ? i.value : null),
            (this.source = n || ("object" == typeof t ? null : U(t)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((t) => t.ngOnDestroy());
          } finally {
            this.records.clear(),
              this.onDestroy.clear(),
              this.injectorDefTypes.clear();
          }
        }
        get(t, e = _o, o = lt.Default) {
          this.assertNotDestroyed();
          const n = Do(this);
          try {
            if (!(o & lt.SkipSelf)) {
              let e = this.records.get(t);
              if (void 0 === e) {
                const o =
                  ("function" == typeof (r = t) ||
                    ("object" == typeof r && r instanceof Co)) &&
                  et(t);
                (e = o && this.injectableDefInScope(o) ? Er(wr(t), hr) : null),
                  this.records.set(t, e);
              }
              if (null != e) return this.hydrate(t, e);
            }
            return (o & lt.Self ? mr() : this.parent).get(
              t,
              (e = o & lt.Optional && e === _o ? null : e)
            );
          } catch (i) {
            if ("NullInjectorError" === i.name) {
              if (
                ((i.ngTempTokenPath = i.ngTempTokenPath || []).unshift(U(t)), n)
              )
                throw i;
              return (function (t, e, o, n) {
                const r = t.ngTempTokenPath;
                throw (
                  (e[Po] && r.unshift(e[Po]),
                  (t.message = (function (t, e, o, n = null) {
                    t =
                      t && "\n" === t.charAt(0) && "\u0275" == t.charAt(1)
                        ? t.substr(2)
                        : t;
                    let r = U(e);
                    if (Array.isArray(e)) r = e.map(U).join(" -> ");
                    else if ("object" == typeof e) {
                      let t = [];
                      for (let o in e)
                        if (e.hasOwnProperty(o)) {
                          let n = e[o];
                          t.push(
                            o +
                              ":" +
                              ("string" == typeof n ? JSON.stringify(n) : U(n))
                          );
                        }
                      r = `{${t.join(", ")}}`;
                    }
                    return `${o}${n ? "(" + n + ")" : ""}[${r}]: ${t.replace(
                      Ro,
                      "\n  "
                    )}`;
                  })("\n" + t.message, r, o, n)),
                  (t.ngTokenPath = r),
                  (t.ngTempTokenPath = null),
                  t)
                );
              })(i, t, "R3InjectorError", this.source);
            }
            throw i;
          } finally {
            Do(n);
          }
          var r;
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((t) => this.get(t));
        }
        toString() {
          const t = [];
          return (
            this.records.forEach((e, o) => t.push(U(o))),
            `R3Injector[${t.join(", ")}]`
          );
        }
        assertNotDestroyed() {
          if (this._destroyed)
            throw new Error("Injector has already been destroyed.");
        }
        processInjectorType(t, e, o) {
          if (!(t = X(t))) return !1;
          let n = nt(t);
          const r = (null == n && t.ngModule) || void 0,
            i = void 0 === r ? t : r,
            s = -1 !== o.indexOf(i);
          if ((void 0 !== r && (n = nt(r)), null == n)) return !1;
          if (null != n.imports && !s) {
            let t;
            o.push(i);
            try {
              Eo(n.imports, (n) => {
                this.processInjectorType(n, e, o) &&
                  (void 0 === t && (t = []), t.push(n));
              });
            } finally {
            }
            if (void 0 !== t)
              for (let e = 0; e < t.length; e++) {
                const { ngModule: o, providers: n } = t[e];
                Eo(n, (t) => this.processProvider(t, o, n || gr));
              }
          }
          this.injectorDefTypes.add(i);
          const a = zt(i) || (() => new i());
          this.records.set(i, Er(a, hr));
          const l = n.providers;
          if (null != l && !s) {
            const e = t;
            Eo(l, (t) => this.processProvider(t, e, l));
          }
          return void 0 !== r && void 0 !== t.providers;
        }
        processProvider(t, e, o) {
          let n = Or((t = X(t))) ? t : X(t && t.provide);
          const r = (function (t, e, o) {
            return Sr(t) ? Er(void 0, t.useValue) : Er(br(t), hr);
          })(t);
          if (Or(t) || !0 !== t.multi) this.records.get(n);
          else {
            let e = this.records.get(n);
            e ||
              ((e = Er(void 0, hr, !0)),
              (e.factory = () => No(e.multi)),
              this.records.set(n, e)),
              (n = t),
              e.multi.push(t);
          }
          this.records.set(n, r);
        }
        hydrate(t, e) {
          var o;
          return (
            e.value === hr && ((e.value = fr), (e.value = e.factory())),
            "object" == typeof e.value &&
              e.value &&
              null !== (o = e.value) &&
              "object" == typeof o &&
              "function" == typeof o.ngOnDestroy &&
              this.onDestroy.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          return (
            !!t.providedIn &&
            ("string" == typeof t.providedIn
              ? "any" === t.providedIn || t.providedIn === this.scope
              : this.injectorDefTypes.has(t.providedIn))
          );
        }
      }
      function wr(t) {
        const e = et(t),
          o = null !== e ? e.factory : zt(t);
        if (null !== o) return o;
        if (t instanceof Co)
          throw new Error(`Token ${U(t)} is missing a \u0275prov definition.`);
        if (t instanceof Function)
          return (function (t) {
            const e = t.length;
            if (e > 0) {
              const o = (function (t, e) {
                const o = [];
                for (let n = 0; n < t; n++) o.push("?");
                return o;
              })(e);
              throw new Error(
                `Can't resolve all parameters for ${U(t)}: (${o.join(", ")}).`
              );
            }
            const o = (function (t) {
              const e = t && (t[rt] || t[st]);
              if (e) {
                const o = (function (t) {
                  if (t.hasOwnProperty("name")) return t.name;
                  const e = ("" + t).match(/^function\s*([^\s(]+)/);
                  return null === e ? "" : e[1];
                })(t);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${o}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${o}" class.`
                  ),
                  e
                );
              }
              return null;
            })(t);
            return null !== o ? () => o.factory(t) : () => new t();
          })(t);
        throw new Error("unreachable");
      }
      function br(t, e, o) {
        let n;
        if (Or(t)) {
          const e = X(t);
          return zt(e) || wr(e);
        }
        if (Sr(t)) n = () => X(t.useValue);
        else if ((r = t) && r.useFactory)
          n = () => t.useFactory(...No(t.deps || []));
        else if (
          (function (t) {
            return !(!t || !t.useExisting);
          })(t)
        )
          n = () => Fo(X(t.useExisting));
        else {
          const e = X(t && (t.useClass || t.provide));
          if (
            !(function (t) {
              return !!t.deps;
            })(t)
          )
            return zt(e) || wr(e);
          n = () => new e(...No(t.deps));
        }
        var r;
        return n;
      }
      function Er(t, e, o = !1) {
        return { factory: t, value: e, multi: o ? [] : void 0 };
      }
      function Sr(t) {
        return null !== t && "object" == typeof t && To in t;
      }
      function Or(t) {
        return "function" == typeof t;
      }
      const _r = function (t, e, o) {
        return (function (t, e = null, o = null, n) {
          const r = vr(t, e, o, n);
          return r._resolveInjectorDefTypes(), r;
        })({ name: o }, e, t, o);
      };
      let Rr = (() => {
        class t {
          static create(t, e) {
            return Array.isArray(t)
              ? _r(t, e, "")
              : _r(t.providers, t.parent, t.name || "");
          }
        }
        return (
          (t.THROW_IF_NOT_FOUND = _o),
          (t.NULL = new cr()),
          (t.ɵprov = J({ token: t, providedIn: "any", factory: () => Fo(pr) })),
          (t.__NG_ELEMENT_ID__ = -1),
          t
        );
      })();
      function Pr(t, e) {
        Me(ie(t)[1], ge());
      }
      let Tr = null;
      function Ar() {
        if (!Tr) {
          const t = Ct.Symbol;
          if (t && t.iterator) Tr = t.iterator;
          else {
            const t = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < t.length; ++e) {
              const o = t[e];
              "entries" !== o &&
                "size" !== o &&
                Map.prototype[o] === Map.prototype.entries &&
                (Tr = o);
            }
          }
        }
        return Tr;
      }
      function Dr(t) {
        return (
          !!xr(t) && (Array.isArray(t) || (!(t instanceof Map) && Ar() in t))
        );
      }
      function xr(t) {
        return null !== t && ("function" == typeof t || "object" == typeof t);
      }
      function Fr(t, e = lt.Default) {
        const o = he();
        return null === o ? Fo(t, e) : io(ge(), o, X(t), e);
      }
      function Nr(t, e, o) {
        const n = he();
        return (
          (function (t, e, o) {
            return !Object.is(t[e], o) && ((t[e] = o), !0);
          })(n, ce.lFrame.bindingIndex++, e) &&
            (function (t, e, o, n, r, i, s, a) {
              const l = oe(e, o);
              let u,
                p = e.inputs;
              var c;
              null != p && (u = p[n])
                ? (lr(t, o, u, n, r),
                  Bt(e) &&
                    (function (t, e) {
                      const o = re(e, t);
                      16 & o[2] || (o[2] |= 64);
                    })(o, e.index))
                : 3 & e.type &&
                  ((n =
                    "class" === (c = n)
                      ? "className"
                      : "for" === c
                      ? "htmlFor"
                      : "formaction" === c
                      ? "formAction"
                      : "innerHtml" === c
                      ? "innerHTML"
                      : "readonly" === c
                      ? "readOnly"
                      : "tabindex" === c
                      ? "tabIndex"
                      : c),
                  (r = null != s ? s(r, e.value || "", n) : r),
                  Jt(i)
                    ? i.setProperty(l, n, r)
                    : je(n) ||
                      (l.setProperty ? l.setProperty(n, r) : (l[n] = r)));
            })(
              fe(),
              (function () {
                const t = ce.lFrame;
                return ne(t.tView, t.selectedIndex);
              })(),
              n,
              t,
              e,
              n[11],
              o
            ),
          Nr
        );
      }
      function Mr(t, e, o, n, r) {
        const i = r ? "class" : "style";
        lr(t, o, e.inputs[i], i, n);
      }
      function Ir(t, e, o, n) {
        const r = he(),
          i = fe(),
          s = 20 + t,
          a = r[11],
          l = (r[s] = $o(a, e, ce.lFrame.currentNamespace)),
          u = i.firstCreatePass
            ? (function (t, e, o, n, r, i, s) {
                const a = e.consts,
                  l = xn(e, t, 2, r, le(a, i));
                return (
                  (function (t, e, o, n) {
                    let r = !1;
                    if (de()) {
                      const i = (function (t, e, o) {
                          const n = t.directiveRegistry;
                          let r = null;
                          if (n)
                            for (let i = 0; i < n.length; i++) {
                              const s = n[i];
                              _n(o, s.selectors, !1) &&
                                (r || (r = []),
                                oo($e(o, e), t, s.type),
                                Ut(s) ? (jn(t, o), r.unshift(s)) : r.push(s));
                            }
                          return r;
                        })(t, e, o),
                        s = null === n ? null : { "": -1 };
                      if (null !== i) {
                        (r = !0), zn(o, t.data.length, i.length);
                        for (let t = 0; t < i.length; t++) {
                          const e = i[t];
                          e.providersResolver && e.providersResolver(e);
                        }
                        let n = !1,
                          a = !1,
                          l = Fn(t, e, i.length, null);
                        for (let r = 0; r < i.length; r++) {
                          const u = i[r];
                          (o.mergedAttrs = Ue(o.mergedAttrs, u.hostAttrs)),
                            Kn(t, o, e, l, u),
                            Un(l, u, s),
                            null !== u.contentQueries && (o.flags |= 8),
                            (null === u.hostBindings &&
                              null === u.hostAttrs &&
                              0 === u.hostVars) ||
                              (o.flags |= 128);
                          const p = u.type.prototype;
                          !n &&
                            (p.ngOnChanges || p.ngOnInit || p.ngDoCheck) &&
                            ((t.preOrderHooks || (t.preOrderHooks = [])).push(
                              o.index
                            ),
                            (n = !0)),
                            a ||
                              (!p.ngOnChanges && !p.ngDoCheck) ||
                              ((
                                t.preOrderCheckHooks ||
                                (t.preOrderCheckHooks = [])
                              ).push(o.index),
                              (a = !0)),
                            l++;
                        }
                        !(function (t, e) {
                          const o = e.directiveEnd,
                            n = t.data,
                            r = e.attrs,
                            i = [];
                          let s = null,
                            a = null;
                          for (let l = e.directiveStart; l < o; l++) {
                            const t = n[l],
                              o = t.inputs,
                              u = null === r || wn(e) ? null : qn(o, r);
                            i.push(u),
                              (s = Wn(o, l, s)),
                              (a = Wn(t.outputs, l, a));
                          }
                          null !== s &&
                            (s.hasOwnProperty("class") && (e.flags |= 16),
                            s.hasOwnProperty("style") && (e.flags |= 32)),
                            (e.initialInputs = i),
                            (e.inputs = s),
                            (e.outputs = a);
                        })(t, o);
                      }
                      s &&
                        (function (t, e, o) {
                          if (e) {
                            const n = (t.localNames = []);
                            for (let t = 0; t < e.length; t += 2) {
                              const r = o[e[t + 1]];
                              if (null == r)
                                throw new Q(
                                  "301",
                                  `Export of name '${e[t + 1]}' not found!`
                                );
                              n.push(e[t], r);
                            }
                          }
                        })(o, n, s);
                    }
                    o.mergedAttrs = Ue(o.mergedAttrs, o.attrs);
                  })(e, o, l, le(a, s)),
                  null !== l.attrs && ur(l, l.attrs, !1),
                  null !== l.mergedAttrs && ur(l, l.mergedAttrs, !0),
                  null !== e.queries && e.queries.elementStart(e, l),
                  l
                );
              })(s, i, r, 0, e, o, n)
            : i.data[s];
        me(u, !0);
        const p = u.mergedAttrs;
        null !== p && Be(a, l, p);
        const c = u.classes;
        null !== c && yn(a, l, c);
        const d = u.styles;
        null !== d && gn(a, l, d),
          64 != (64 & u.flags) && ln(i, r, l, u),
          0 === ce.lFrame.elementDepthCount && Bo(l, r),
          ce.lFrame.elementDepthCount++,
          jt(u) &&
            ((function (t, e, o) {
              de() &&
                ((function (t, e, o, n) {
                  const r = o.directiveStart,
                    i = o.directiveEnd;
                  t.firstCreatePass || $e(o, e), Bo(n, e);
                  const s = o.initialInputs;
                  for (let a = r; a < i; a++) {
                    const n = t.data[a],
                      i = Ut(n);
                    i && Yn(e, o, n);
                    const l = po(e, t, a, o);
                    Bo(l, e),
                      null !== s && Xn(0, a - r, l, n, 0, s),
                      i && (re(o.index, e)[8] = l);
                  }
                })(t, e, o, oe(o, e)),
                128 == (128 & o.flags) &&
                  (function (t, e, o) {
                    const n = o.directiveStart,
                      r = o.directiveEnd,
                      i = o.index,
                      s = ce.lFrame.currentDirectiveIndex;
                    try {
                      Ne(i);
                      for (let o = n; o < r; o++) {
                        const n = t.data[o],
                          r = e[o];
                        Ee(o),
                          (null === n.hostBindings &&
                            0 === n.hostVars &&
                            null === n.hostAttrs) ||
                            Bn(n, r);
                      }
                    } finally {
                      Ne(-1), Ee(s);
                    }
                  })(t, e, o));
            })(i, r, u),
            (function (t, e, o) {
              if (Ht(e)) {
                const n = e.directiveEnd;
                for (let r = e.directiveStart; r < n; r++) {
                  const e = t.data[r];
                  e.contentQueries && e.contentQueries(1, o[r], r);
                }
              }
            })(i, u, r)),
          null !== n &&
            (function (t, e, o = oe) {
              const n = e.localNames;
              if (null !== n) {
                let r = e.index + 1;
                for (let i = 0; i < n.length; i += 2) {
                  const s = n[i + 1],
                    a = -1 === s ? o(e, t) : t[s];
                  t[r++] = a;
                }
              }
            })(r, u);
      }
      function Lr() {
        let t = ge();
        ve() ? (ce.lFrame.isParent = !1) : ((t = t.parent), me(t, !1));
        const e = t;
        ce.lFrame.elementDepthCount--;
        const o = fe();
        o.firstCreatePass && (Me(o, t), Ht(t) && o.queries.elementEnd(t)),
          null != e.classesWithoutHost &&
            (function (t) {
              return 0 != (16 & t.flags);
            })(e) &&
            Mr(o, e, he(), e.classesWithoutHost, !0),
          null != e.stylesWithoutHost &&
            (function (t) {
              return 0 != (32 & t.flags);
            })(e) &&
            Mr(o, e, he(), e.stylesWithoutHost, !1);
      }
      function Gr(t) {
        return !!t && "function" == typeof t.then;
      }
      function kr(t, e, o = !1, n) {
        const r = he(),
          i = fe(),
          s = ge();
        return (
          (function (t, e, o, n, r, i, s = !1, a) {
            const l = jt(n),
              u = t.firstCreatePass && sr(t),
              p = ir(e);
            let c = !0;
            if (3 & n.type) {
              const d = oe(n, e),
                h = a ? a(d) : wt,
                f = h.target || d,
                g = p.length,
                y = a ? (t) => a(ee(t[n.index])).target : n.index;
              if (Jt(o)) {
                let s = null;
                if (
                  (!a &&
                    l &&
                    (s = (function (t, e, o, n) {
                      const r = t.cleanup;
                      if (null != r)
                        for (let i = 0; i < r.length - 1; i += 2) {
                          const t = r[i];
                          if (t === o && r[i + 1] === n) {
                            const t = e[7],
                              o = r[i + 2];
                            return t.length > o ? t[o] : null;
                          }
                          "string" == typeof t && (i += 2);
                        }
                      return null;
                    })(t, e, r, n.index)),
                  null !== s)
                )
                  ((s.__ngLastListenerFn__ || s).__ngNextListenerFn__ = i),
                    (s.__ngLastListenerFn__ = i),
                    (c = !1);
                else {
                  i = Wr(n, e, 0, i, !1);
                  const t = o.listen(h.name || f, r, i);
                  p.push(i, t), u && u.push(r, y, g, g + 1);
                }
              } else
                (i = Wr(n, e, 0, i, !0)),
                  f.addEventListener(r, i, s),
                  p.push(i),
                  u && u.push(r, y, g, s);
            } else i = Wr(n, e, 0, i, !1);
            const d = n.outputs;
            let h;
            if (c && null !== d && (h = d[r])) {
              const t = h.length;
              if (t)
                for (let o = 0; o < t; o += 2) {
                  const t = e[h[o]][h[o + 1]].subscribe(i),
                    s = p.length;
                  p.push(i, t), u && u.push(r, n.index, s, -(s + 1));
                }
            }
          })(i, r, r[11], s, t, e, o, n),
          kr
        );
      }
      function Vr(t, e, o, n) {
        try {
          return !1 !== o(n);
        } catch (r) {
          return ar(t, r), !1;
        }
      }
      function Wr(t, e, o, n, r) {
        return function o(i) {
          if (i === Function) return n;
          const s = 2 & t.flags ? re(t.index, e) : e;
          0 == (32 & e[2]) && tr(s);
          let a = Vr(e, 0, n, i),
            l = o.__ngNextListenerFn__;
          for (; l; ) (a = Vr(e, 0, l, i) && a), (l = l.__ngNextListenerFn__);
          return r && !1 === a && (i.preventDefault(), (i.returnValue = !1)), a;
        };
      }
      const Hr = void 0;
      var Br = [
        "en",
        [["a", "p"], ["AM", "PM"], Hr],
        [["AM", "PM"], Hr, Hr],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        Hr,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        Hr,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", Hr, "{1} 'at' {0}", Hr],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function (t) {
          let e = Math.floor(Math.abs(t)),
            o = t.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === e && 0 === o ? 1 : 5;
        },
      ];
      let jr = {};
      function Ur(t) {
        return (
          t in jr ||
            (jr[t] =
              Ct.ng &&
              Ct.ng.common &&
              Ct.ng.common.locales &&
              Ct.ng.common.locales[t]),
          jr[t]
        );
      }
      var zr = (function (t) {
        return (
          (t[(t.LocaleId = 0)] = "LocaleId"),
          (t[(t.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
          (t[(t.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
          (t[(t.DaysFormat = 3)] = "DaysFormat"),
          (t[(t.DaysStandalone = 4)] = "DaysStandalone"),
          (t[(t.MonthsFormat = 5)] = "MonthsFormat"),
          (t[(t.MonthsStandalone = 6)] = "MonthsStandalone"),
          (t[(t.Eras = 7)] = "Eras"),
          (t[(t.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
          (t[(t.WeekendRange = 9)] = "WeekendRange"),
          (t[(t.DateFormat = 10)] = "DateFormat"),
          (t[(t.TimeFormat = 11)] = "TimeFormat"),
          (t[(t.DateTimeFormat = 12)] = "DateTimeFormat"),
          (t[(t.NumberSymbols = 13)] = "NumberSymbols"),
          (t[(t.NumberFormats = 14)] = "NumberFormats"),
          (t[(t.CurrencyCode = 15)] = "CurrencyCode"),
          (t[(t.CurrencySymbol = 16)] = "CurrencySymbol"),
          (t[(t.CurrencyName = 17)] = "CurrencyName"),
          (t[(t.Currencies = 18)] = "Currencies"),
          (t[(t.Directionality = 19)] = "Directionality"),
          (t[(t.PluralCase = 20)] = "PluralCase"),
          (t[(t.ExtraData = 21)] = "ExtraData"),
          t
        );
      })({});
      const Kr = "en-US";
      let Yr = Kr;
      function Xr(t) {
        var e, o;
        (o = "Expected localeId to be defined"),
          null == (e = t) &&
            (function (t, e, o, n) {
              throw new Error(
                `ASSERTION ERROR: ${t} [Expected=> null != ${e} <=Actual]`
              );
            })(o, e),
          "string" == typeof t && (Yr = t.toLowerCase().replace(/_/g, "-"));
      }
      function qr(t, e, o, n, r) {
        if (((t = X(t)), Array.isArray(t)))
          for (let i = 0; i < t.length; i++) qr(t[i], e, o, n, r);
        else {
          const i = fe(),
            s = he();
          let a = Or(t) ? t : X(t.provide),
            l = br(t);
          const u = ge(),
            p = 1048575 & u.providerIndexes,
            c = u.directiveStart,
            d = u.providerIndexes >> 20;
          if (Or(t) || !t.multi) {
            const n = new He(l, r, Fr),
              h = $r(a, e, r ? p : p + d, c);
            -1 === h
              ? (oo($e(u, s), i, a),
                Qr(i, t, e.length),
                e.push(a),
                u.directiveStart++,
                u.directiveEnd++,
                r && (u.providerIndexes += 1048576),
                o.push(n),
                s.push(n))
              : ((o[h] = n), (s[h] = n));
          } else {
            const h = $r(a, e, p + d, c),
              f = $r(a, e, p, p + d),
              g = h >= 0 && o[h],
              y = f >= 0 && o[f];
            if ((r && !y) || (!r && !g)) {
              oo($e(u, s), i, a);
              const p = (function (t, e, o, n, r) {
                const i = new He(t, o, Fr);
                return (
                  (i.multi = []),
                  (i.index = e),
                  (i.componentProviders = 0),
                  Zr(i, r, n && !o),
                  i
                );
              })(r ? ti : Jr, o.length, r, n, l);
              !r && y && (o[f].providerFactory = p),
                Qr(i, t, e.length, 0),
                e.push(a),
                u.directiveStart++,
                u.directiveEnd++,
                r && (u.providerIndexes += 1048576),
                o.push(p),
                s.push(p);
            } else Qr(i, t, h > -1 ? h : f, Zr(o[r ? f : h], l, !r && n));
            !r && n && y && o[f].componentProviders++;
          }
        }
      }
      function Qr(t, e, o, n) {
        const r = Or(e);
        if (r || e.useClass) {
          const i = (e.useClass || e).prototype.ngOnDestroy;
          if (i) {
            const s = t.destroyHooks || (t.destroyHooks = []);
            if (!r && e.multi) {
              const t = s.indexOf(o);
              -1 === t ? s.push(o, [n, i]) : s[t + 1].push(n, i);
            } else s.push(o, i);
          }
        }
      }
      function Zr(t, e, o) {
        return o && t.componentProviders++, t.multi.push(e) - 1;
      }
      function $r(t, e, o, n) {
        for (let r = o; r < n; r++) if (e[r] === t) return r;
        return -1;
      }
      function Jr(t, e, o, n) {
        return ei(this.multi, []);
      }
      function ti(t, e, o, n) {
        const r = this.multi;
        let i;
        if (this.providerFactory) {
          const t = this.providerFactory.componentProviders,
            e = po(o, o[1], this.providerFactory.index, n);
          (i = e.slice(0, t)), ei(r, i);
          for (let o = t; o < e.length; o++) i.push(e[o]);
        } else (i = []), ei(r, i);
        return i;
      }
      function ei(t, e) {
        for (let o = 0; o < t.length; o++) e.push((0, t[o])());
        return e;
      }
      function oi(t, e = []) {
        return (o) => {
          o.providersResolver = (o, n) =>
            (function (t, e, o) {
              const n = fe();
              if (n.firstCreatePass) {
                const r = Ut(t);
                qr(o, n.data, n.blueprint, r, !0),
                  qr(e, n.data, n.blueprint, r, !1);
              }
            })(o, n ? n(t) : t, e);
        };
      }
      class ni {}
      class ri {
        resolveComponentFactory(t) {
          throw (function (t) {
            const e = Error(
              `No component factory found for ${U(
                t
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (e.ngComponent = t), e;
          })(t);
        }
      }
      let ii = (() => {
        class t {}
        return (t.NULL = new ri()), t;
      })();
      function si(...t) {}
      function ai(t, e) {
        return new ui(oe(t, e));
      }
      const li = function () {
        return ai(ge(), he());
      };
      let ui = (() => {
        class t {
          constructor(t) {
            this.nativeElement = t;
          }
        }
        return (t.__NG_ELEMENT_ID__ = li), t;
      })();
      function pi(t) {
        return t instanceof ui ? t.nativeElement : t;
      }
      class ci {}
      let di = (() => {
        class t {}
        return (
          (t.ɵprov = J({ token: t, providedIn: "root", factory: () => null })),
          t
        );
      })();
      class hi {
        constructor(t) {
          (this.full = t),
            (this.major = t.split(".")[0]),
            (this.minor = t.split(".")[1]),
            (this.patch = t.split(".").slice(2).join("."));
        }
      }
      const fi = new hi("11.2.10");
      class gi {
        constructor() {}
        supports(t) {
          return Dr(t);
        }
        create(t) {
          return new mi(t);
        }
      }
      const yi = (t, e) => e;
      class mi {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || yi);
        }
        forEachItem(t) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) t(e);
        }
        forEachOperation(t) {
          let e = this._itHead,
            o = this._removalsHead,
            n = 0,
            r = null;
          for (; e || o; ) {
            const i = !o || (e && e.currentIndex < bi(o, n, r)) ? e : o,
              s = bi(i, n, r),
              a = i.currentIndex;
            if (i === o) n--, (o = o._nextRemoved);
            else if (((e = e._next), null == i.previousIndex)) n++;
            else {
              r || (r = []);
              const t = s - n,
                e = a - n;
              if (t != e) {
                for (let o = 0; o < t; o++) {
                  const n = o < r.length ? r[o] : (r[o] = 0),
                    i = n + o;
                  e <= i && i < t && (r[o] = n + 1);
                }
                r[i.previousIndex] = e - t;
              }
            }
            s !== a && t(i, s, a);
          }
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachMovedItem(t) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        forEachIdentityChange(t) {
          let e;
          for (
            e = this._identityChangesHead;
            null !== e;
            e = e._nextIdentityChange
          )
            t(e);
        }
        diff(t) {
          if ((null == t && (t = []), !Dr(t)))
            throw new Error(
              `Error trying to diff '${U(
                t
              )}'. Only arrays and iterables are allowed`
            );
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e,
            o,
            n,
            r = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let e = 0; e < this.length; e++)
              (o = t[e]),
                (n = this._trackByFn(e, o)),
                null !== r && Object.is(r.trackById, n)
                  ? (i && (r = this._verifyReinsertion(r, o, n, e)),
                    Object.is(r.item, o) || this._addIdentityChange(r, o))
                  : ((r = this._mismatch(r, o, n, e)), (i = !0)),
                (r = r._next);
          } else
            (e = 0),
              (function (t, e) {
                if (Array.isArray(t))
                  for (let o = 0; o < t.length; o++) e(t[o]);
                else {
                  const o = t[Ar()]();
                  let n;
                  for (; !(n = o.next()).done; ) e(n.value);
                }
              })(t, (t) => {
                (n = this._trackByFn(e, t)),
                  null !== r && Object.is(r.trackById, n)
                    ? (i && (r = this._verifyReinsertion(r, t, n, e)),
                      Object.is(r.item, t) || this._addIdentityChange(r, t))
                    : ((r = this._mismatch(r, t, n, e)), (i = !0)),
                  (r = r._next),
                  e++;
              }),
              (this.length = e);
          return this._truncate(r), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, e, o, n) {
          let r;
          return (
            null === t ? (r = this._itTail) : ((r = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(o, null))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._reinsertAfter(t, r, n))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(o, n))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._moveAfter(t, r, n))
              : (t = this._addAfter(new vi(e, o), r, n)),
            t
          );
        }
        _verifyReinsertion(t, e, o, n) {
          let r =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(o, null);
          return (
            null !== r
              ? (t = this._reinsertAfter(r, t._prev, n))
              : t.currentIndex != n &&
                ((t.currentIndex = n), this._addToMoves(t, n)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const e = t._next;
            this._addToRemovals(this._unlink(t)), (t = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, e, o) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const n = t._prevRemoved,
            r = t._nextRemoved;
          return (
            null === n ? (this._removalsHead = r) : (n._nextRemoved = r),
            null === r ? (this._removalsTail = n) : (r._prevRemoved = n),
            this._insertAfter(t, e, o),
            this._addToMoves(t, o),
            t
          );
        }
        _moveAfter(t, e, o) {
          return (
            this._unlink(t),
            this._insertAfter(t, e, o),
            this._addToMoves(t, o),
            t
          );
        }
        _addAfter(t, e, o) {
          return (
            this._insertAfter(t, e, o),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, e, o) {
          const n = null === e ? this._itHead : e._next;
          return (
            (t._next = n),
            (t._prev = e),
            null === n ? (this._itTail = t) : (n._prev = t),
            null === e ? (this._itHead = t) : (e._next = t),
            null === this._linkedRecords && (this._linkedRecords = new wi()),
            this._linkedRecords.put(t),
            (t.currentIndex = o),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const e = t._prev,
            o = t._next;
          return (
            null === e ? (this._itHead = o) : (e._next = o),
            null === o ? (this._itTail = e) : (o._prev = e),
            t
          );
        }
        _addToMoves(t, e) {
          return (
            t.previousIndex === e ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new wi()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, e) {
          return (
            (t.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class vi {
        constructor(t, e) {
          (this.item = t),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class Ci {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, e) {
          let o;
          for (o = this._head; null !== o; o = o._nextDup)
            if (
              (null === e || e <= o.currentIndex) &&
              Object.is(o.trackById, t)
            )
              return o;
          return null;
        }
        remove(t) {
          const e = t._prevDup,
            o = t._nextDup;
          return (
            null === e ? (this._head = o) : (e._nextDup = o),
            null === o ? (this._tail = e) : (o._prevDup = e),
            null === this._head
          );
        }
      }
      class wi {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const e = t.trackById;
          let o = this.map.get(e);
          o || ((o = new Ci()), this.map.set(e, o)), o.add(t);
        }
        get(t, e) {
          const o = this.map.get(t);
          return o ? o.get(t, e) : null;
        }
        remove(t) {
          const e = t.trackById;
          return this.map.get(e).remove(t) && this.map.delete(e), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function bi(t, e, o) {
        const n = t.previousIndex;
        if (null === n) return n;
        let r = 0;
        return o && n < o.length && (r = o[n]), n + e + r;
      }
      class Ei {
        constructor() {}
        supports(t) {
          return t instanceof Map || xr(t);
        }
        create() {
          return new Si();
        }
      }
      class Si {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) t(e);
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachChangedItem(t) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || xr(t)))
              throw new Error(
                `Error trying to diff '${U(
                  t
                )}'. Only maps and objects are allowed`
              );
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (t, o) => {
              if (e && e.key === o)
                this._maybeAddToChanges(e, t),
                  (this._appendAfter = e),
                  (e = e._next);
              else {
                const n = this._getOrCreateRecordForKey(o, t);
                e = this._insertBeforeOrAppend(e, n);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let t = e; null !== t; t = t._nextRemoved)
              t === this._mapHead && (this._mapHead = null),
                this._records.delete(t.key),
                (t._nextRemoved = t._next),
                (t.previousValue = t.currentValue),
                (t.currentValue = null),
                (t._prev = null),
                (t._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, e) {
          if (t) {
            const o = t._prev;
            return (
              (e._next = t),
              (e._prev = o),
              (t._prev = e),
              o && (o._next = e),
              t === this._mapHead && (this._mapHead = e),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = e), (e._prev = this._appendAfter))
              : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(t, e) {
          if (this._records.has(t)) {
            const o = this._records.get(t);
            this._maybeAddToChanges(o, e);
            const n = o._prev,
              r = o._next;
            return (
              n && (n._next = r),
              r && (r._prev = n),
              (o._next = null),
              (o._prev = null),
              o
            );
          }
          const o = new Oi(t);
          return (
            this._records.set(t, o),
            (o.currentValue = e),
            this._addToAdditions(o),
            o
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, e) {
          Object.is(e, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = e),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, e) {
          t instanceof Map
            ? t.forEach(e)
            : Object.keys(t).forEach((o) => e(t[o], o));
        }
      }
      class Oi {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function _i() {
        return new Ri([new gi()]);
      }
      let Ri = (() => {
        class t {
          constructor(t) {
            this.factories = t;
          }
          static create(e, o) {
            if (null != o) {
              const t = o.factories.slice();
              e = e.concat(t);
            }
            return new t(e);
          }
          static extend(e) {
            return {
              provide: t,
              useFactory: (o) => t.create(e, o || _i()),
              deps: [[t, new Go(), new Lo()]],
            };
          }
          find(t) {
            const e = this.factories.find((e) => e.supports(t));
            if (null != e) return e;
            throw new Error(
              `Cannot find a differ supporting object '${t}' of type '${
                ((o = t), o.name || typeof o)
              }'`
            );
            var o;
          }
        }
        return (t.ɵprov = J({ token: t, providedIn: "root", factory: _i })), t;
      })();
      function Pi() {
        return new Ti([new Ei()]);
      }
      let Ti = (() => {
        class t {
          constructor(t) {
            this.factories = t;
          }
          static create(e, o) {
            if (o) {
              const t = o.factories.slice();
              e = e.concat(t);
            }
            return new t(e);
          }
          static extend(e) {
            return {
              provide: t,
              useFactory: (o) => t.create(e, o || Pi()),
              deps: [[t, new Go(), new Lo()]],
            };
          }
          find(t) {
            const e = this.factories.find((e) => e.supports(t));
            if (e) return e;
            throw new Error(`Cannot find a differ supporting object '${t}'`);
          }
        }
        return (t.ɵprov = J({ token: t, providedIn: "root", factory: Pi })), t;
      })();
      function Ai(t, e, o, n, r = !1) {
        for (; null !== o; ) {
          const i = e[o.index];
          if ((null !== i && n.push(ee(i)), Wt(i)))
            for (let t = kt; t < i.length; t++) {
              const e = i[t],
                o = e[1].firstChild;
              null !== o && Ai(e[1], e, o, n);
            }
          const s = o.type;
          if (8 & s) Ai(t, e, o.child, n);
          else if (32 & s) {
            const t = Ko(o, e);
            let r;
            for (; (r = t()); ) n.push(r);
          } else if (16 & s) {
            const t = pn(e, o);
            if (Array.isArray(t)) n.push(...t);
            else {
              const o = Yo(e[16]);
              Ai(o[1], o, t, n, !0);
            }
          }
          o = r ? o.projectionNext : o.next;
        }
        return n;
      }
      class Di {
        constructor(t, e) {
          (this._lView = t),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const t = this._lView,
            e = t[1];
          return Ai(e, t, e.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[3];
            if (Wt(t)) {
              const e = t[8],
                o = e ? e.indexOf(this) : -1;
              o > -1 && (tn(t, o), Oo(e, o));
            }
            this._attachedToViewContainer = !1;
          }
          en(this._lView[1], this._lView);
        }
        onDestroy(t) {
          Vn(this._lView[1], this._lView, null, t);
        }
        markForCheck() {
          tr(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          er(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function (t, e, o) {
            we(!0);
            try {
              er(t, e, o);
            } finally {
              we(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef() {
          if (this._appRef)
            throw new Error(
              "This view is already attached directly to the ApplicationRef!"
            );
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          var t;
          (this._appRef = null),
            hn(this._lView[1], (t = this._lView), t[11], 2, null, null);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer)
            throw new Error(
              "This view is already attached to a ViewContainer!"
            );
          this._appRef = t;
        }
      }
      class xi extends Di {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          or(this._view);
        }
        checkNoChanges() {
          !(function (t) {
            we(!0);
            try {
              or(t);
            } finally {
              we(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      const Fi = [new Ei()],
        Ni = new Ri([new gi()]),
        Mi = new Ti(Fi),
        Ii = function () {
          return Vi(ge(), he());
        };
      let Li = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = Ii), t;
      })();
      const Gi = Li,
        ki = class extends Gi {
          constructor(t, e, o) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = e),
              (this.elementRef = o);
          }
          createEmbeddedView(t) {
            const e = this._declarationTContainer.tViews,
              o = Dn(
                this._declarationLView,
                e,
                t,
                16,
                null,
                e.declTNode,
                null,
                null,
                null,
                null
              );
            o[17] = this._declarationLView[this._declarationTContainer.index];
            const n = this._declarationLView[19];
            return (
              null !== n && (o[19] = n.createEmbeddedView(e)),
              Nn(e, o, t),
              new Di(o)
            );
          }
        };
      function Vi(t, e) {
        return 4 & t.type ? new ki(e, t, ai(t, e)) : null;
      }
      class Wi {}
      const Hi = function () {
        return Yi(ge(), he());
      };
      let Bi = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = Hi), t;
      })();
      const ji = Bi,
        Ui = class extends ji {
          constructor(t, e, o) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = e),
              (this._hostLView = o);
          }
          get element() {
            return ai(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new fo(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = eo(this._hostTNode, this._hostLView);
            if (Ke(t)) {
              const e = Xe(t, this._hostLView),
                o = Ye(t);
              return new fo(e[1].data[o + 8], e);
            }
            return new fo(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const e = zi(this._lContainer);
            return (null !== e && e[t]) || null;
          }
          get length() {
            return this._lContainer.length - kt;
          }
          createEmbeddedView(t, e, o) {
            const n = t.createEmbeddedView(e || {});
            return this.insert(n, o), n;
          }
          createComponent(t, e, o, n, r) {
            const i = o || this.parentInjector;
            if (!r && null == t.ngModule && i) {
              const t = i.get(Wi, null);
              t && (r = t);
            }
            const s = t.create(i, n, void 0, r);
            return this.insert(s.hostView, e), s;
          }
          insert(t, e) {
            const o = t._lView,
              n = o[1];
            if (Wt(o[3])) {
              const e = this.indexOf(t);
              if (-1 !== e) this.detach(e);
              else {
                const e = o[3],
                  n = new Ui(e, e[6], e[3]);
                n.detach(n.indexOf(t));
              }
            }
            const r = this._adjustIndex(e),
              i = this._lContainer;
            !(function (t, e, o, n) {
              const r = kt + n,
                i = o.length;
              n > 0 && (o[r - 1][4] = e),
                n < i - kt
                  ? ((e[4] = o[r]), So(o, kt + n, e))
                  : (o.push(e), (e[4] = null)),
                (e[3] = o);
              const s = e[17];
              null !== s &&
                o !== s &&
                (function (t, e) {
                  const o = t[9];
                  e[16] !== e[3][3][16] && (t[2] = !0),
                    null === o ? (t[9] = [e]) : o.push(e);
                })(s, e);
              const a = e[19];
              null !== a && a.insertView(t), (e[2] |= 128);
            })(n, o, i, r);
            const s = cn(r, i),
              a = o[11],
              l = an(a, i[7]);
            return (
              null !== l &&
                (function (t, e, o, n, r, i) {
                  (n[0] = r), (n[6] = e), hn(t, n, o, 1, r, i);
                })(n, i[6], a, o, l, s),
              t.attachToViewContainerRef(),
              So(Ki(i), r, t),
              t
            );
          }
          move(t, e) {
            return this.insert(t, e);
          }
          indexOf(t) {
            const e = zi(this._lContainer);
            return null !== e ? e.indexOf(t) : -1;
          }
          remove(t) {
            const e = this._adjustIndex(t, -1),
              o = tn(this._lContainer, e);
            o && (Oo(Ki(this._lContainer), e), en(o[1], o));
          }
          detach(t) {
            const e = this._adjustIndex(t, -1),
              o = tn(this._lContainer, e);
            return o && null != Oo(Ki(this._lContainer), e) ? new Di(o) : null;
          }
          _adjustIndex(t, e = 0) {
            return null == t ? this.length + e : t;
          }
        };
      function zi(t) {
        return t[8];
      }
      function Ki(t) {
        return t[8] || (t[8] = []);
      }
      function Yi(t, e) {
        let o;
        const n = e[t.index];
        if (Wt(n)) o = n;
        else {
          let r;
          if (8 & t.type) r = ee(n);
          else {
            const o = e[11];
            r = o.createComment("");
            const n = oe(t, e);
            nn(
              o,
              an(o, n),
              r,
              (function (t, e) {
                return Jt(t) ? t.nextSibling(e) : e.nextSibling;
              })(o, n),
              !1
            );
          }
          (e[t.index] = o = new Array(n, !0, !1, e, null, 0, t, r, null, null)),
            Jn(e, o);
        }
        return new Ui(o, t, e);
      }
      const Xi = {};
      class qi extends ii {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = Lt(t);
          return new $i(e, this.ngModule);
        }
      }
      function Qi(t) {
        const e = [];
        for (let o in t)
          t.hasOwnProperty(o) && e.push({ propName: t[o], templateName: o });
        return e;
      }
      const Zi = new Co("SCHEDULER_TOKEN", {
        providedIn: "root",
        factory: () => jo,
      });
      class $i extends ni {
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = t.selectors.map(Pn).join(",")),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        get inputs() {
          return Qi(this.componentDef.inputs);
        }
        get outputs() {
          return Qi(this.componentDef.outputs);
        }
        create(t, e, o, n) {
          const r = (n = n || this.ngModule)
              ? (function (t, e) {
                  return {
                    get: (o, n, r) => {
                      const i = t.get(o, Xi, r);
                      return i !== Xi || n === Xi ? i : e.get(o, n, r);
                    },
                  };
                })(t, n.injector)
              : t,
            i = r.get(ci, te),
            s = r.get(di, null),
            a = i.createRenderer(null, this.componentDef),
            l = this.componentDef.selectors[0][0] || "div",
            u = o
              ? (function (t, e, o) {
                  if (Jt(t)) return t.selectRootElement(e, o === ft.ShadowDom);
                  let n = "string" == typeof e ? t.querySelector(e) : e;
                  return (n.textContent = ""), n;
                })(a, o, this.componentDef.encapsulation)
              : $o(
                  i.createRenderer(null, this.componentDef),
                  l,
                  (function (t) {
                    const e = t.toLowerCase();
                    return "svg" === e
                      ? "http://www.w3.org/2000/svg"
                      : "math" === e
                      ? "http://www.w3.org/1998/MathML/"
                      : null;
                  })(l)
                ),
            p = this.componentDef.onPush ? 576 : 528,
            c = {
              components: [],
              scheduler: jo,
              clean: rr,
              playerHandler: null,
              flags: 0,
            },
            d = kn(0, null, null, 1, 0, null, null, null, null, null),
            h = Dn(null, d, c, p, null, null, i, a, s, r);
          let f, g;
          Pe(h);
          try {
            const t = (function (t, e, o, n, r, i) {
              const s = o[1];
              o[20] = t;
              const a = xn(s, 20, 2, "#host", null),
                l = (a.mergedAttrs = e.hostAttrs);
              null !== l &&
                (ur(a, l, !0),
                null !== t &&
                  (Be(r, t, l),
                  null !== a.classes && yn(r, t, a.classes),
                  null !== a.styles && gn(r, t, a.styles)));
              const u = n.createRenderer(t, e),
                p = Dn(
                  o,
                  Gn(e),
                  null,
                  e.onPush ? 64 : 16,
                  o[20],
                  a,
                  n,
                  u,
                  null,
                  null
                );
              return (
                s.firstCreatePass &&
                  (oo($e(a, o), s, e.type), jn(s, a), zn(a, o.length, 1)),
                Jn(o, p),
                (o[20] = p)
              );
            })(u, this.componentDef, h, i, a);
            if (u)
              if (o) Be(a, u, ["ng-version", fi.full]);
              else {
                const { attrs: t, classes: e } = (function (t) {
                  const e = [],
                    o = [];
                  let n = 1,
                    r = 2;
                  for (; n < t.length; ) {
                    let i = t[n];
                    if ("string" == typeof i)
                      2 === r
                        ? "" !== i && e.push(i, t[++n])
                        : 8 === r && o.push(i);
                    else {
                      if (!Sn(r)) break;
                      r = i;
                    }
                    n++;
                  }
                  return { attrs: e, classes: o };
                })(this.componentDef.selectors[0]);
                t && Be(a, u, t), e && e.length > 0 && yn(a, u, e.join(" "));
              }
            if (((g = ne(d, 20)), void 0 !== e)) {
              const t = (g.projection = []);
              for (let o = 0; o < this.ngContentSelectors.length; o++) {
                const n = e[o];
                t.push(null != n ? Array.from(n) : null);
              }
            }
            (f = (function (t, e, o, n, r) {
              const i = o[1],
                s = (function (t, e, o) {
                  const n = ge();
                  t.firstCreatePass &&
                    (o.providersResolver && o.providersResolver(o),
                    Kn(t, n, e, Fn(t, e, 1, null), o));
                  const r = po(e, t, n.directiveStart, n);
                  Bo(r, e);
                  const i = oe(n, e);
                  return i && Bo(i, e), r;
                })(i, o, e);
              if (
                (n.components.push(s),
                (t[8] = s),
                r && r.forEach((t) => t(s, e)),
                e.contentQueries)
              ) {
                const t = ge();
                e.contentQueries(1, s, t.directiveStart);
              }
              const a = ge();
              return (
                !i.firstCreatePass ||
                  (null === e.hostBindings && null === e.hostAttrs) ||
                  (Ne(a.index),
                  Hn(o[1], a, 0, a.directiveStart, a.directiveEnd, e),
                  Bn(e, s)),
                s
              );
            })(t, this.componentDef, h, c, [Pr])),
              Nn(d, h, null);
          } finally {
            Fe();
          }
          return new Ji(this.componentType, f, ai(g, h), h, g);
        }
      }
      class Ji extends class {} {
        constructor(t, e, o, n, r) {
          super(),
            (this.location = o),
            (this._rootLView = n),
            (this._tNode = r),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new xi(n)),
            (this.componentType = t);
        }
        get injector() {
          return new fo(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      const ts = new Map();
      class es extends Wi {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new qi(this));
          const o = Gt(t),
            n = t[Rt] || null;
          n && Xr(n),
            (this._bootstrapComponents = Uo(o.bootstrap)),
            (this._r3Injector = vr(
              t,
              e,
              [
                { provide: Wi, useValue: this },
                { provide: ii, useValue: this.componentFactoryResolver },
              ],
              U(t)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(t));
        }
        get(t, e = Rr.THROW_IF_NOT_FOUND, o = lt.Default) {
          return t === Rr || t === Wi || t === pr
            ? this
            : this._r3Injector.get(t, e, o);
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach((t) => t()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class os extends class {} {
        constructor(t) {
          super(),
            (this.moduleType = t),
            null !== Gt(t) &&
              (function (t) {
                const e = new Set();
                !(function t(o) {
                  const n = Gt(o, !0),
                    r = n.id;
                  null !== r &&
                    ((function (t, e, o) {
                      if (e && e !== o)
                        throw new Error(
                          `Duplicate module registered for ${t} - ${U(
                            e
                          )} vs ${U(e.name)}`
                        );
                    })(r, ts.get(r), o),
                    ts.set(r, o));
                  const i = Uo(n.imports);
                  for (const s of i) e.has(s) || (e.add(s), t(s));
                })(t);
              })(t);
        }
        create(t) {
          return new es(this.moduleType, t);
        }
      }
      function ns(t) {
        return (e) => {
          setTimeout(t, void 0, e);
        };
      }
      const rs = class extends S {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, o) {
          var n, r, i;
          let s = t,
            a = e || (() => null),
            l = o;
          if (t && "object" == typeof t) {
            const e = t;
            (s = null === (n = e.next) || void 0 === n ? void 0 : n.bind(e)),
              (a = null === (r = e.error) || void 0 === r ? void 0 : r.bind(e)),
              (l =
                null === (i = e.complete) || void 0 === i ? void 0 : i.bind(e));
          }
          this.__isAsync && ((a = ns(a)), s && (s = ns(s)), l && (l = ns(l)));
          const u = super.subscribe({ next: s, error: a, complete: l });
          return t instanceof c && t.add(u), u;
        }
      };
      function is() {
        return this._results[Ar()]();
      }
      class ss {
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = Ar(),
            o = ss.prototype;
          o[e] || (o[e] = is);
        }
        get changes() {
          return this._changes || (this._changes = new rs());
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, e) {
          const o = this;
          o.dirty = !1;
          const n = bo(t);
          (this._changesDetected = !(function (t, e, o) {
            if (t.length !== e.length) return !1;
            for (let n = 0; n < t.length; n++) {
              let r = t[n],
                i = e[n];
              if ((o && ((r = o(r)), (i = o(i))), i !== r)) return !1;
            }
            return !0;
          })(o._results, n, e)) &&
            ((o._results = n),
            (o.length = n.length),
            (o.last = n[this.length - 1]),
            (o.first = n[0]));
        }
        notifyOnChanges() {
          !this._changes ||
            (!this._changesDetected && this._emitDistinctChangesOnly) ||
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      class as {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new as(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class ls {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const o =
                null !== t.contentQueries ? t.contentQueries[0] : e.length,
              n = [];
            for (let t = 0; t < o; t++) {
              const o = e.getByIndex(t);
              n.push(this.queries[o.indexInDeclarationView].clone());
            }
            return new ls(n);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++)
            null !== Cs(t, e).matches && this.queries[e].setDirty();
        }
      }
      class us {
        constructor(t, e, o = null) {
          (this.predicate = t), (this.flags = e), (this.read = o);
        }
      }
      class ps {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let o = 0; o < this.queries.length; o++)
            this.queries[o].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let o = 0; o < this.length; o++) {
            const n = null !== e ? e.length : 0,
              r = this.getByIndex(o).embeddedTView(t, n);
            r &&
              ((r.indexInDeclarationView = o),
              null !== e ? e.push(r) : (e = [r]));
          }
          return null !== e ? new ps(e) : null;
        }
        template(t, e) {
          for (let o = 0; o < this.queries.length; o++)
            this.queries[o].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class cs {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, e),
              new cs(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let o = t.parent;
            for (; null !== o && 8 & o.type && o.index !== e; ) o = o.parent;
            return e === (null !== o ? o.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          const o = this.metadata.predicate;
          if (Array.isArray(o))
            for (let n = 0; n < o.length; n++) {
              const r = o[n];
              this.matchTNodeWithReadOption(t, e, ds(e, r)),
                this.matchTNodeWithReadOption(t, e, uo(e, t, r, !1, !1));
            }
          else
            o === Li
              ? 4 & e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, uo(e, t, o, !1, !1));
        }
        matchTNodeWithReadOption(t, e, o) {
          if (null !== o) {
            const n = this.metadata.read;
            if (null !== n)
              if (n === ui || n === Bi || (n === Li && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const o = uo(e, t, n, !1, !1);
                null !== o && this.addMatch(e.index, o);
              }
            else this.addMatch(e.index, o);
          }
        }
        addMatch(t, e) {
          null === this.matches
            ? (this.matches = [t, e])
            : this.matches.push(t, e);
        }
      }
      function ds(t, e) {
        const o = t.localNames;
        if (null !== o)
          for (let n = 0; n < o.length; n += 2) if (o[n] === e) return o[n + 1];
        return null;
      }
      function hs(t, e, o, n) {
        return -1 === o
          ? (function (t, e) {
              return 11 & t.type ? ai(t, e) : 4 & t.type ? Vi(t, e) : null;
            })(e, t)
          : -2 === o
          ? (function (t, e, o) {
              return o === ui
                ? ai(e, t)
                : o === Li
                ? Vi(e, t)
                : o === Bi
                ? Yi(e, t)
                : void 0;
            })(t, e, n)
          : po(t, t[1], o, e);
      }
      function fs(t, e, o, n) {
        const r = e[19].queries[n];
        if (null === r.matches) {
          const n = t.data,
            i = o.matches,
            s = [];
          for (let t = 0; t < i.length; t += 2) {
            const r = i[t];
            s.push(r < 0 ? null : hs(e, n[r], i[t + 1], o.metadata.read));
          }
          r.matches = s;
        }
        return r.matches;
      }
      function gs(t, e, o, n) {
        const r = t.queries.getByIndex(o),
          i = r.matches;
        if (null !== i) {
          const s = fs(t, e, r, o);
          for (let t = 0; t < i.length; t += 2) {
            const o = i[t];
            if (o > 0) n.push(s[t / 2]);
            else {
              const r = i[t + 1],
                s = e[-o];
              for (let t = kt; t < s.length; t++) {
                const e = s[t];
                e[17] === e[3] && gs(e[1], e, r, n);
              }
              if (null !== s[9]) {
                const t = s[9];
                for (let e = 0; e < t.length; e++) {
                  const o = t[e];
                  gs(o[1], o, r, n);
                }
              }
            }
          }
        }
        return n;
      }
      function ys(t) {
        const e = he(),
          o = fe(),
          n = Se();
        Oe(n + 1);
        const r = Cs(o, n);
        if (t.dirty && se(e) === (2 == (2 & r.metadata.flags))) {
          if (null === r.matches) t.reset([]);
          else {
            const i = r.crossesNgTemplate ? gs(o, e, n, []) : fs(o, e, r, n);
            t.reset(i, pi), t.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function ms(t, e, o, n) {
        const r = fe();
        if (r.firstCreatePass) {
          const i = ge();
          (function (t, e, o) {
            null === t.queries && (t.queries = new ps()),
              t.queries.track(new cs(e, o));
          })(r, new us(e, o, n), i.index),
            (function (t, e) {
              const o = t.contentQueries || (t.contentQueries = []);
              e !== (o.length ? o[o.length - 1] : -1) &&
                o.push(t.queries.length - 1, e);
            })(r, t),
            2 == (2 & o) && (r.staticContentQueries = !0);
        }
        !(function (t, e, o) {
          const n = new ss(4 == (4 & o));
          Vn(t, e, n, n.destroy),
            null === e[19] && (e[19] = new ls()),
            e[19].queries.push(new as(n));
        })(r, he(), o);
      }
      function vs() {
        return (t = he()), (e = Se()), t[19].queries[e].queryList;
        var t, e;
      }
      function Cs(t, e) {
        return t.queries.getByIndex(e);
      }
      const ws = new Co("Application Initializer");
      let bs = (() => {
        class t {
          constructor(t) {
            (this.appInits = t),
              (this.resolve = si),
              (this.reject = si),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((t, e) => {
                (this.resolve = t), (this.reject = e);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const t = [],
              e = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let o = 0; o < this.appInits.length; o++) {
                const e = this.appInits[o]();
                Gr(e) && t.push(e);
              }
            Promise.all(t)
              .then(() => {
                e();
              })
              .catch((t) => {
                this.reject(t);
              }),
              0 === t.length && e(),
              (this.initialized = !0);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Fo(ws, 8));
          }),
          (t.ɵprov = J({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Es = new Co("AppId"),
        Ss = {
          provide: Es,
          useFactory: function () {
            return `${Os()}${Os()}${Os()}`;
          },
          deps: [],
        };
      function Os() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const _s = new Co("Platform Initializer"),
        Rs = new Co("Platform ID"),
        Ps = new Co("appBootstrapListener");
      let Ts = (() => {
        class t {
          log(t) {
            console.log(t);
          }
          warn(t) {
            console.warn(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = J({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const As = new Co("LocaleId"),
        Ds = new Co("DefaultCurrencyCode");
      class xs {
        constructor(t, e) {
          (this.ngModuleFactory = t), (this.componentFactories = e);
        }
      }
      const Fs = function (t) {
          return new os(t);
        },
        Ns = Fs,
        Ms = function (t) {
          return Promise.resolve(Fs(t));
        },
        Is = function (t) {
          const e = Fs(t),
            o = Uo(Gt(t).declarations).reduce((t, e) => {
              const o = Lt(e);
              return o && t.push(new $i(o)), t;
            }, []);
          return new xs(e, o);
        },
        Ls = Is,
        Gs = function (t) {
          return Promise.resolve(Is(t));
        };
      let ks = (() => {
        class t {
          constructor() {
            (this.compileModuleSync = Ns),
              (this.compileModuleAsync = Ms),
              (this.compileModuleAndAllComponentsSync = Ls),
              (this.compileModuleAndAllComponentsAsync = Gs);
          }
          clearCache() {}
          clearCacheFor(t) {}
          getModuleId(t) {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = J({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Vs = (() => Promise.resolve(0))();
      function Ws(t) {
        "undefined" == typeof Zone
          ? Vs.then(() => {
              t && t.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", t);
      }
      class Hs {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: o = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new rs(!1)),
            (this.onMicrotaskEmpty = new rs(!1)),
            (this.onStable = new rs(!1)),
            (this.onError = new rs(!1)),
            "undefined" == typeof Zone)
          )
            throw new Error("In this configuration Angular requires Zone.js");
          Zone.assertZonePatched();
          const n = this;
          (n._nesting = 0),
            (n._outer = n._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (n._inner = n._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (n._inner = n._inner.fork(Zone.longStackTraceZoneSpec)),
            (n.shouldCoalesceEventChangeDetection = !o && e),
            (n.shouldCoalesceRunChangeDetection = o),
            (n.lastRequestAnimationFrameId = -1),
            (n.nativeRequestAnimationFrame = (function () {
              let t = Ct.requestAnimationFrame,
                e = Ct.cancelAnimationFrame;
              if ("undefined" != typeof Zone && t && e) {
                const o = t[Zone.__symbol__("OriginalDelegate")];
                o && (t = o);
                const n = e[Zone.__symbol__("OriginalDelegate")];
                n && (e = n);
              }
              return {
                nativeRequestAnimationFrame: t,
                nativeCancelAnimationFrame: e,
              };
            })().nativeRequestAnimationFrame),
            (function (t) {
              const e = () => {
                !(function (t) {
                  -1 === t.lastRequestAnimationFrameId &&
                    ((t.lastRequestAnimationFrameId =
                      t.nativeRequestAnimationFrame.call(Ct, () => {
                        t.fakeTopEventTask ||
                          (t.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (t.lastRequestAnimationFrameId = -1),
                                Us(t),
                                js(t);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          t.fakeTopEventTask.invoke();
                      })),
                    Us(t));
                })(t);
              };
              t._inner = t._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (o, n, r, i, s, a) => {
                  try {
                    return zs(t), o.invokeTask(r, i, s, a);
                  } finally {
                    ((t.shouldCoalesceEventChangeDetection &&
                      "eventTask" === i.type) ||
                      t.shouldCoalesceRunChangeDetection) &&
                      e(),
                      Ks(t);
                  }
                },
                onInvoke: (o, n, r, i, s, a, l) => {
                  try {
                    return zs(t), o.invoke(r, i, s, a, l);
                  } finally {
                    t.shouldCoalesceRunChangeDetection && e(), Ks(t);
                  }
                },
                onHasTask: (e, o, n, r) => {
                  e.hasTask(n, r),
                    o === n &&
                      ("microTask" == r.change
                        ? ((t._hasPendingMicrotasks = r.microTask),
                          Us(t),
                          js(t))
                        : "macroTask" == r.change &&
                          (t.hasPendingMacrotasks = r.macroTask));
                },
                onHandleError: (e, o, n, r) => (
                  e.handleError(n, r),
                  t.runOutsideAngular(() => t.onError.emit(r)),
                  !1
                ),
              });
            })(n);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!Hs.isInAngularZone())
            throw new Error("Expected to be in Angular Zone, but it is not!");
        }
        static assertNotInAngularZone() {
          if (Hs.isInAngularZone())
            throw new Error("Expected to not be in Angular Zone, but it is!");
        }
        run(t, e, o) {
          return this._inner.run(t, e, o);
        }
        runTask(t, e, o, n) {
          const r = this._inner,
            i = r.scheduleEventTask("NgZoneEvent: " + n, t, Bs, si, si);
          try {
            return r.runTask(i, e, o);
          } finally {
            r.cancelTask(i);
          }
        }
        runGuarded(t, e, o) {
          return this._inner.runGuarded(t, e, o);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const Bs = {};
      function js(t) {
        if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable)
          try {
            t._nesting++, t.onMicrotaskEmpty.emit(null);
          } finally {
            if ((t._nesting--, !t.hasPendingMicrotasks))
              try {
                t.runOutsideAngular(() => t.onStable.emit(null));
              } finally {
                t.isStable = !0;
              }
          }
      }
      function Us(t) {
        t.hasPendingMicrotasks = !!(
          t._hasPendingMicrotasks ||
          ((t.shouldCoalesceEventChangeDetection ||
            t.shouldCoalesceRunChangeDetection) &&
            -1 !== t.lastRequestAnimationFrameId)
        );
      }
      function zs(t) {
        t._nesting++,
          t.isStable && ((t.isStable = !1), t.onUnstable.emit(null));
      }
      function Ks(t) {
        t._nesting--, js(t);
      }
      class Ys {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new rs()),
            (this.onMicrotaskEmpty = new rs()),
            (this.onStable = new rs()),
            (this.onError = new rs());
        }
        run(t, e, o) {
          return t.apply(e, o);
        }
        runGuarded(t, e, o) {
          return t.apply(e, o);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, o, n) {
          return t.apply(e, o);
        }
      }
      let Xs = (() => {
          class t {
            constructor(t) {
              (this._ngZone = t),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                t.run(() => {
                  this.taskTrackingZone =
                    "undefined" == typeof Zone
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Hs.assertNotInAngularZone(),
                        Ws(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                Ws(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let t = this._callbacks.pop();
                    clearTimeout(t.timeoutId), t.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let t = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (e) =>
                    !e.updateCb ||
                    !e.updateCb(t) ||
                    (clearTimeout(e.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((t) => ({
                    source: t.source,
                    creationLocation: t.creationLocation,
                    data: t.data,
                  }))
                : [];
            }
            addCallback(t, e, o) {
              let n = -1;
              e &&
                e > 0 &&
                (n = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (t) => t.timeoutId !== n
                  )),
                    t(this._didWork, this.getPendingTasks());
                }, e)),
                this._callbacks.push({ doneCb: t, timeoutId: n, updateCb: o });
            }
            whenStable(t, e, o) {
              if (o && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?'
                );
              this.addCallback(t, e, o), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(t, e, o) {
              return [];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Fo(Hs));
            }),
            (t.ɵprov = J({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        qs = (() => {
          class t {
            constructor() {
              (this._applications = new Map()), $s.addToWindow(this);
            }
            registerApplication(t, e) {
              this._applications.set(t, e);
            }
            unregisterApplication(t) {
              this._applications.delete(t);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(t) {
              return this._applications.get(t) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(t, e = !0) {
              return $s.findTestabilityInTree(this, t, e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = J({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      class Qs {
        addToWindow(t) {}
        findTestabilityInTree(t, e, o) {
          return null;
        }
      }
      let Zs,
        $s = new Qs(),
        Js = !0,
        ta = !1;
      const ea = new Co("AllowMultipleToken");
      function oa(t, e, o = []) {
        const n = `Platform: ${e}`,
          r = new Co(n);
        return (e = []) => {
          let i = na();
          if (!i || i.injector.get(ea, !1))
            if (t) t(o.concat(e).concat({ provide: r, useValue: !0 }));
            else {
              const t = o
                .concat(e)
                .concat(
                  { provide: r, useValue: !0 },
                  { provide: dr, useValue: "platform" }
                );
              !(function (t) {
                if (Zs && !Zs.destroyed && !Zs.injector.get(ea, !1))
                  throw new Error(
                    "There can be only one platform. Destroy the previous one to create a new one."
                  );
                Zs = t.get(ra);
                const e = t.get(_s, null);
                e && e.forEach((t) => t());
              })(Rr.create({ providers: t, name: n }));
            }
          return (function (t) {
            const e = na();
            if (!e) throw new Error("No platform exists!");
            if (!e.injector.get(t, null))
              throw new Error(
                "A platform with a different configuration has been created. Please destroy it first."
              );
            return e;
          })(r);
        };
      }
      function na() {
        return Zs && !Zs.destroyed ? Zs : null;
      }
      let ra = (() => {
        class t {
          constructor(t) {
            (this._injector = t),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(t, e) {
            const o = (function (t, e) {
                let o;
                return (
                  (o =
                    "noop" === t
                      ? new Ys()
                      : ("zone.js" === t ? void 0 : t) ||
                        new Hs({
                          enableLongStackTrace: ((ta = !0), Js),
                          shouldCoalesceEventChangeDetection: !!(null == e
                            ? void 0
                            : e.ngZoneEventCoalescing),
                          shouldCoalesceRunChangeDetection: !!(null == e
                            ? void 0
                            : e.ngZoneRunCoalescing),
                        })),
                  o
                );
              })(e ? e.ngZone : void 0, {
                ngZoneEventCoalescing: (e && e.ngZoneEventCoalescing) || !1,
                ngZoneRunCoalescing: (e && e.ngZoneRunCoalescing) || !1,
              }),
              n = [{ provide: Hs, useValue: o }];
            return o.run(() => {
              const e = Rr.create({
                  providers: n,
                  parent: this.injector,
                  name: t.moduleType.name,
                }),
                r = t.create(e),
                i = r.injector.get(Ho, null);
              if (!i)
                throw new Error(
                  "No ErrorHandler. Is platform module (BrowserModule) included?"
                );
              return (
                o.runOutsideAngular(() => {
                  const t = o.onError.subscribe({
                    next: (t) => {
                      i.handleError(t);
                    },
                  });
                  r.onDestroy(() => {
                    aa(this._modules, r), t.unsubscribe();
                  });
                }),
                (function (t, e, o) {
                  try {
                    const n = o();
                    return Gr(n)
                      ? n.catch((o) => {
                          throw (
                            (e.runOutsideAngular(() => t.handleError(o)), o)
                          );
                        })
                      : n;
                  } catch (n) {
                    throw (e.runOutsideAngular(() => t.handleError(n)), n);
                  }
                })(i, o, () => {
                  const t = r.injector.get(bs);
                  return (
                    t.runInitializers(),
                    t.donePromise.then(
                      () => (
                        Xr(r.injector.get(As, Kr) || Kr),
                        this._moduleDoBootstrap(r),
                        r
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(t, e = []) {
            const o = ia({}, e);
            return (function (t, e, o) {
              const n = new os(o);
              return Promise.resolve(n);
            })(0, 0, t).then((t) => this.bootstrapModuleFactory(t, o));
          }
          _moduleDoBootstrap(t) {
            const e = t.injector.get(sa);
            if (t._bootstrapComponents.length > 0)
              t._bootstrapComponents.forEach((t) => e.bootstrap(t));
            else {
              if (!t.instance.ngDoBootstrap)
                throw new Error(
                  `The module ${U(
                    t.instance.constructor
                  )} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`
                );
              t.instance.ngDoBootstrap(e);
            }
            this._modules.push(t);
          }
          onDestroy(t) {
            this._destroyListeners.push(t);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed)
              throw new Error("The platform has already been destroyed!");
            this._modules.slice().forEach((t) => t.destroy()),
              this._destroyListeners.forEach((t) => t()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Fo(Rr));
          }),
          (t.ɵprov = J({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function ia(t, e) {
        return Array.isArray(e)
          ? e.reduce(ia, t)
          : Object.assign(Object.assign({}, t), e);
      }
      let sa = (() => {
        class t {
          constructor(t, e, o, n, r) {
            (this._zone = t),
              (this._injector = e),
              (this._exceptionHandler = o),
              (this._componentFactoryResolver = n),
              (this._initStatus = r),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const i = new v((t) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    t.next(this._stable), t.complete();
                  });
              }),
              s = new v((t) => {
                let e;
                this._zone.runOutsideAngular(() => {
                  e = this._zone.onStable.subscribe(() => {
                    Hs.assertNotInAngularZone(),
                      Ws(() => {
                        this._stable ||
                          this._zone.hasPendingMacrotasks ||
                          this._zone.hasPendingMicrotasks ||
                          ((this._stable = !0), t.next(!0));
                      });
                  });
                });
                const o = this._zone.onUnstable.subscribe(() => {
                  Hs.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        t.next(!1);
                      }));
                });
                return () => {
                  e.unsubscribe(), o.unsubscribe();
                };
              });
            this.isStable = (function (...t) {
              let e = Number.POSITIVE_INFINITY,
                o = null,
                n = t[t.length - 1];
              var r;
              return (
                (r = n) && "function" == typeof r.schedule
                  ? ((o = t.pop()),
                    t.length > 1 &&
                      "number" == typeof t[t.length - 1] &&
                      (e = t.pop()))
                  : "number" == typeof n && (e = t.pop()),
                null === o && 1 === t.length && t[0] instanceof v
                  ? t[0]
                  : (function (t = Number.POSITIVE_INFINITY) {
                      return N(m, t);
                    })(e)(
                      (function (t, e) {
                        return e
                          ? (function (t, e) {
                              return new v((o) => {
                                const n = new c();
                                let r = 0;
                                return (
                                  n.add(
                                    e.schedule(function () {
                                      r !== t.length
                                        ? (o.next(t[r++]),
                                          o.closed || n.add(this.schedule()))
                                        : o.complete();
                                    })
                                  ),
                                  n
                                );
                              });
                            })(t, e)
                          : new v(P(t));
                      })(t, o)
                    )
              );
            })(
              i,
              s.pipe((t) => {
                return L()(
                  ((e = B),
                  function (t) {
                    let o;
                    o =
                      "function" == typeof e
                        ? e
                        : function () {
                            return e;
                          };
                    const n = Object.create(t, W);
                    return (n.source = t), (n.subjectFactory = o), n;
                  })(t)
                );
                var e;
              })
            );
          }
          bootstrap(t, e) {
            if (!this._initStatus.done)
              throw new Error(
                "Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module."
              );
            let o;
            (o =
              t instanceof ni
                ? t
                : this._componentFactoryResolver.resolveComponentFactory(t)),
              this.componentTypes.push(o.componentType);
            const n = o.isBoundToModule ? void 0 : this._injector.get(Wi),
              r = o.create(Rr.NULL, [], e || o.selector, n),
              i = r.location.nativeElement,
              s = r.injector.get(Xs, null),
              a = s && r.injector.get(qs);
            return (
              s && a && a.registerApplication(i, s),
              r.onDestroy(() => {
                this.detachView(r.hostView),
                  aa(this.components, r),
                  a && a.unregisterApplication(i);
              }),
              this._loadComponent(r),
              r
            );
          }
          tick() {
            if (this._runningTick)
              throw new Error("ApplicationRef.tick is called recursively");
            try {
              this._runningTick = !0;
              for (let t of this._views) t.detectChanges();
            } catch (t) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(t)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(t) {
            const e = t;
            this._views.push(e), e.attachToAppRef(this);
          }
          detachView(t) {
            const e = t;
            aa(this._views, e), e.detachFromAppRef();
          }
          _loadComponent(t) {
            this.attachView(t.hostView),
              this.tick(),
              this.components.push(t),
              this._injector
                .get(Ps, [])
                .concat(this._bootstrapListeners)
                .forEach((e) => e(t));
          }
          ngOnDestroy() {
            this._views.slice().forEach((t) => t.destroy()),
              this._onMicrotaskEmptySubscription.unsubscribe();
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Fo(Hs), Fo(Rr), Fo(Ho), Fo(ii), Fo(bs));
          }),
          (t.ɵprov = J({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function aa(t, e) {
        const o = t.indexOf(e);
        o > -1 && t.splice(o, 1);
      }
      const la = oa(null, "core", [
          { provide: Rs, useValue: "unknown" },
          { provide: ra, deps: [Rr] },
          { provide: qs, deps: [] },
          { provide: Ts, deps: [] },
        ]),
        ua = [
          { provide: sa, useClass: sa, deps: [Hs, Rr, Ho, ii, bs] },
          {
            provide: Zi,
            deps: [Hs],
            useFactory: function (t) {
              let e = [];
              return (
                t.onStable.subscribe(() => {
                  for (; e.length; ) e.pop()();
                }),
                function (t) {
                  e.push(t);
                }
              );
            },
          },
          { provide: bs, useClass: bs, deps: [[new Lo(), ws]] },
          { provide: ks, useClass: ks, deps: [] },
          Ss,
          {
            provide: Ri,
            useFactory: function () {
              return Ni;
            },
            deps: [],
          },
          {
            provide: Ti,
            useFactory: function () {
              return Mi;
            },
            deps: [],
          },
          {
            provide: As,
            useFactory: function (t) {
              return (
                Xr(
                  (t =
                    t ||
                    ("undefined" != typeof $localize && $localize.locale) ||
                    Kr)
                ),
                t
              );
            },
            deps: [[new Io(As), new Lo(), new Go()]],
          },
          { provide: Ds, useValue: "USD" },
        ];
      let pa = (() => {
          class t {
            constructor(t) {}
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Fo(sa));
            }),
            (t.ɵmod = Mt({ type: t })),
            (t.ɵinj = tt({ providers: ua })),
            t
          );
        })(),
        ca = null;
      function da() {
        return ca;
      }
      const ha = new Co("DocumentToken");
      var fa = (function (t) {
        return (
          (t[(t.Zero = 0)] = "Zero"),
          (t[(t.One = 1)] = "One"),
          (t[(t.Two = 2)] = "Two"),
          (t[(t.Few = 3)] = "Few"),
          (t[(t.Many = 4)] = "Many"),
          (t[(t.Other = 5)] = "Other"),
          t
        );
      })({});
      class ga {}
      let ya = (() => {
          class t extends ga {
            constructor(t) {
              super(), (this.locale = t);
            }
            getPluralCategory(t, e) {
              switch (
                (function (t) {
                  return (function (t) {
                    const e = (function (t) {
                      return t.toLowerCase().replace(/_/g, "-");
                    })(t);
                    let o = Ur(e);
                    if (o) return o;
                    const n = e.split("-")[0];
                    if (((o = Ur(n)), o)) return o;
                    if ("en" === n) return Br;
                    throw new Error(
                      `Missing locale data for the locale "${t}".`
                    );
                  })(t)[zr.PluralCase];
                })(e || this.locale)(t)
              ) {
                case fa.Zero:
                  return "zero";
                case fa.One:
                  return "one";
                case fa.Two:
                  return "two";
                case fa.Few:
                  return "few";
                case fa.Many:
                  return "many";
                default:
                  return "other";
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Fo(As));
            }),
            (t.ɵprov = J({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        ma = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Mt({ type: t })),
            (t.ɵinj = tt({ providers: [{ provide: ga, useClass: ya }] })),
            t
          );
        })();
      class va extends class extends class {} {
        constructor() {
          super();
        }
        supportsDOMEvents() {
          return !0;
        }
      } {
        static makeCurrent() {
          var t;
          (t = new va()), ca || (ca = t);
        }
        getProperty(t, e) {
          return t[e];
        }
        log(t) {
          window.console && window.console.log && window.console.log(t);
        }
        logGroup(t) {
          window.console && window.console.group && window.console.group(t);
        }
        logGroupEnd() {
          window.console &&
            window.console.groupEnd &&
            window.console.groupEnd();
        }
        onAndCancel(t, e, o) {
          return (
            t.addEventListener(e, o, !1),
            () => {
              t.removeEventListener(e, o, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          return t.parentNode && t.parentNode.removeChild(t), t;
        }
        getValue(t) {
          return t.value;
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return "window" === e
            ? window
            : "document" === e
            ? t
            : "body" === e
            ? t.body
            : null;
        }
        getHistory() {
          return window.history;
        }
        getLocation() {
          return window.location;
        }
        getBaseHref(t) {
          const e =
            wa || ((wa = document.querySelector("base")), wa)
              ? wa.getAttribute("href")
              : null;
          return null == e
            ? null
            : ((o = e),
              Ca || (Ca = document.createElement("a")),
              Ca.setAttribute("href", o),
              "/" === Ca.pathname.charAt(0) ? Ca.pathname : "/" + Ca.pathname);
          var o;
        }
        resetBaseElement() {
          wa = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        performanceNow() {
          return window.performance && window.performance.now
            ? window.performance.now()
            : new Date().getTime();
        }
        supportsCookies() {
          return !0;
        }
        getCookie(t) {
          return (function (t, e) {
            e = encodeURIComponent(e);
            for (const o of t.split(";")) {
              const t = o.indexOf("="),
                [n, r] = -1 == t ? [o, ""] : [o.slice(0, t), o.slice(t + 1)];
              if (n.trim() === e) return decodeURIComponent(r);
            }
            return null;
          })(document.cookie, t);
        }
      }
      let Ca,
        wa = null;
      const ba = new Co("TRANSITION_ID"),
        Ea = [
          {
            provide: ws,
            useFactory: function (t, e, o) {
              return () => {
                o.get(bs).donePromise.then(() => {
                  const o = da();
                  Array.prototype.slice
                    .apply(e.querySelectorAll("style[ng-transition]"))
                    .filter((e) => e.getAttribute("ng-transition") === t)
                    .forEach((t) => o.remove(t));
                });
              };
            },
            deps: [ba, ha, Rr],
            multi: !0,
          },
        ];
      class Sa {
        static init() {
          var t;
          (t = new Sa()), ($s = t);
        }
        addToWindow(t) {
          (Ct.getAngularTestability = (e, o = !0) => {
            const n = t.findTestabilityInTree(e, o);
            if (null == n)
              throw new Error("Could not find testability for element.");
            return n;
          }),
            (Ct.getAllAngularTestabilities = () => t.getAllTestabilities()),
            (Ct.getAllAngularRootElements = () => t.getAllRootElements()),
            Ct.frameworkStabilizers || (Ct.frameworkStabilizers = []),
            Ct.frameworkStabilizers.push((t) => {
              const e = Ct.getAllAngularTestabilities();
              let o = e.length,
                n = !1;
              const r = function (e) {
                (n = n || e), o--, 0 == o && t(n);
              };
              e.forEach(function (t) {
                t.whenStable(r);
              });
            });
        }
        findTestabilityInTree(t, e, o) {
          if (null == e) return null;
          const n = t.getTestability(e);
          return null != n
            ? n
            : o
            ? da().isShadowRoot(e)
              ? this.findTestabilityInTree(t, e.host, !0)
              : this.findTestabilityInTree(t, e.parentElement, !0)
            : null;
        }
      }
      const Oa = new Co("EventManagerPlugins");
      let _a = (() => {
        class t {
          constructor(t, e) {
            (this._zone = e),
              (this._eventNameToPlugin = new Map()),
              t.forEach((t) => (t.manager = this)),
              (this._plugins = t.slice().reverse());
          }
          addEventListener(t, e, o) {
            return this._findPluginFor(e).addEventListener(t, e, o);
          }
          addGlobalEventListener(t, e, o) {
            return this._findPluginFor(e).addGlobalEventListener(t, e, o);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(t) {
            const e = this._eventNameToPlugin.get(t);
            if (e) return e;
            const o = this._plugins;
            for (let n = 0; n < o.length; n++) {
              const e = o[n];
              if (e.supports(t)) return this._eventNameToPlugin.set(t, e), e;
            }
            throw new Error(`No event manager plugin found for event ${t}`);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Fo(Oa), Fo(Hs));
          }),
          (t.ɵprov = J({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class Ra {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, o) {
          const n = da().getGlobalEventTarget(this._doc, t);
          if (!n)
            throw new Error(`Unsupported event target ${n} for event ${e}`);
          return this.addEventListener(n, e, o);
        }
      }
      let Pa = (() => {
          class t {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(t) {
              const e = new Set();
              t.forEach((t) => {
                this._stylesSet.has(t) || (this._stylesSet.add(t), e.add(t));
              }),
                this.onStylesAdded(e);
            }
            onStylesAdded(t) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = J({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Ta = (() => {
          class t extends Pa {
            constructor(t) {
              super(),
                (this._doc = t),
                (this._hostNodes = new Set()),
                (this._styleNodes = new Set()),
                this._hostNodes.add(t.head);
            }
            _addStylesToHost(t, e) {
              t.forEach((t) => {
                const o = this._doc.createElement("style");
                (o.textContent = t), this._styleNodes.add(e.appendChild(o));
              });
            }
            addHost(t) {
              this._addStylesToHost(this._stylesSet, t), this._hostNodes.add(t);
            }
            removeHost(t) {
              this._hostNodes.delete(t);
            }
            onStylesAdded(t) {
              this._hostNodes.forEach((e) => this._addStylesToHost(t, e));
            }
            ngOnDestroy() {
              this._styleNodes.forEach((t) => da().remove(t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Fo(ha));
            }),
            (t.ɵprov = J({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const Aa = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        },
        Da = /%COMP%/g;
      function xa(t, e, o) {
        for (let n = 0; n < e.length; n++) {
          let r = e[n];
          Array.isArray(r) ? xa(t, r, o) : ((r = r.replace(Da, t)), o.push(r));
        }
        return o;
      }
      function Fa(t) {
        return (e) => {
          if ("__ngUnwrap__" === e) return t;
          !1 === t(e) && (e.preventDefault(), (e.returnValue = !1));
        };
      }
      let Na = (() => {
        class t {
          constructor(t, e, o) {
            (this.eventManager = t),
              (this.sharedStylesHost = e),
              (this.appId = o),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Ma(t));
          }
          createRenderer(t, e) {
            if (!t || !e) return this.defaultRenderer;
            switch (e.encapsulation) {
              case ft.Emulated: {
                let o = this.rendererByCompId.get(e.id);
                return (
                  o ||
                    ((o = new Ia(
                      this.eventManager,
                      this.sharedStylesHost,
                      e,
                      this.appId
                    )),
                    this.rendererByCompId.set(e.id, o)),
                  o.applyToHost(t),
                  o
                );
              }
              case 1:
              case ft.ShadowDom:
                return new La(this.eventManager, this.sharedStylesHost, t, e);
              default:
                if (!this.rendererByCompId.has(e.id)) {
                  const t = xa(e.id, e.styles, []);
                  this.sharedStylesHost.addStyles(t),
                    this.rendererByCompId.set(e.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Fo(_a), Fo(Ta), Fo(Es));
          }),
          (t.ɵprov = J({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class Ma {
        constructor(t) {
          (this.eventManager = t), (this.data = Object.create(null));
        }
        destroy() {}
        createElement(t, e) {
          return e
            ? document.createElementNS(Aa[e] || e, t)
            : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          t.appendChild(e);
        }
        insertBefore(t, e, o) {
          t && t.insertBefore(e, o);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let o = "string" == typeof t ? document.querySelector(t) : t;
          if (!o)
            throw new Error(`The selector "${t}" did not match any elements`);
          return e || (o.textContent = ""), o;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, o, n) {
          if (n) {
            e = n + ":" + e;
            const r = Aa[n];
            r ? t.setAttributeNS(r, e, o) : t.setAttribute(e, o);
          } else t.setAttribute(e, o);
        }
        removeAttribute(t, e, o) {
          if (o) {
            const n = Aa[o];
            n ? t.removeAttributeNS(n, e) : t.removeAttribute(`${o}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, o, n) {
          n & (zo.DashCase | zo.Important)
            ? t.style.setProperty(e, o, n & zo.Important ? "important" : "")
            : (t.style[e] = o);
        }
        removeStyle(t, e, o) {
          o & zo.DashCase ? t.style.removeProperty(e) : (t.style[e] = "");
        }
        setProperty(t, e, o) {
          t[e] = o;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, o) {
          return "string" == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, Fa(o))
            : this.eventManager.addEventListener(t, e, Fa(o));
        }
      }
      class Ia extends Ma {
        constructor(t, e, o, n) {
          super(t), (this.component = o);
          const r = xa(n + "-" + o.id, o.styles, []);
          e.addStyles(r),
            (this.contentAttr = "_ngcontent-%COMP%".replace(
              Da,
              n + "-" + o.id
            )),
            (this.hostAttr = "_nghost-%COMP%".replace(Da, n + "-" + o.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, "");
        }
        createElement(t, e) {
          const o = super.createElement(t, e);
          return super.setAttribute(o, this.contentAttr, ""), o;
        }
      }
      class La extends Ma {
        constructor(t, e, o, n) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = o),
            (this.shadowRoot = o.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const r = xa(n.id, n.styles, []);
          for (let i = 0; i < r.length; i++) {
            const t = document.createElement("style");
            (t.textContent = r[i]), this.shadowRoot.appendChild(t);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, o) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, o);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(t))
          );
        }
      }
      let Ga = (() => {
        class t extends Ra {
          constructor(t) {
            super(t);
          }
          supports(t) {
            return !0;
          }
          addEventListener(t, e, o) {
            return (
              t.addEventListener(e, o, !1),
              () => this.removeEventListener(t, e, o)
            );
          }
          removeEventListener(t, e, o) {
            return t.removeEventListener(e, o);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Fo(ha));
          }),
          (t.ɵprov = J({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const ka = ["alt", "control", "meta", "shift"],
        Va = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        Wa = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        Ha = {
          alt: (t) => t.altKey,
          control: (t) => t.ctrlKey,
          meta: (t) => t.metaKey,
          shift: (t) => t.shiftKey,
        };
      let Ba = (() => {
        class t extends Ra {
          constructor(t) {
            super(t);
          }
          supports(e) {
            return null != t.parseEventName(e);
          }
          addEventListener(e, o, n) {
            const r = t.parseEventName(o),
              i = t.eventCallback(r.fullKey, n, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => da().onAndCancel(e, r.domEventName, i));
          }
          static parseEventName(e) {
            const o = e.toLowerCase().split("."),
              n = o.shift();
            if (0 === o.length || ("keydown" !== n && "keyup" !== n))
              return null;
            const r = t._normalizeKey(o.pop());
            let i = "";
            if (
              (ka.forEach((t) => {
                const e = o.indexOf(t);
                e > -1 && (o.splice(e, 1), (i += t + "."));
              }),
              (i += r),
              0 != o.length || 0 === r.length)
            )
              return null;
            const s = {};
            return (s.domEventName = n), (s.fullKey = i), s;
          }
          static getEventFullKey(t) {
            let e = "",
              o = (function (t) {
                let e = t.key;
                if (null == e) {
                  if (((e = t.keyIdentifier), null == e)) return "Unidentified";
                  e.startsWith("U+") &&
                    ((e = String.fromCharCode(parseInt(e.substring(2), 16))),
                    3 === t.location && Wa.hasOwnProperty(e) && (e = Wa[e]));
                }
                return Va[e] || e;
              })(t);
            return (
              (o = o.toLowerCase()),
              " " === o ? (o = "space") : "." === o && (o = "dot"),
              ka.forEach((n) => {
                n != o && (0, Ha[n])(t) && (e += n + ".");
              }),
              (e += o),
              e
            );
          }
          static eventCallback(e, o, n) {
            return (r) => {
              t.getEventFullKey(r) === e && n.runGuarded(() => o(r));
            };
          }
          static _normalizeKey(t) {
            switch (t) {
              case "esc":
                return "escape";
              default:
                return t;
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Fo(ha));
          }),
          (t.ɵprov = J({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const ja = oa(la, "browser", [
          { provide: Rs, useValue: "browser" },
          {
            provide: _s,
            useValue: function () {
              va.makeCurrent(), Sa.init();
            },
            multi: !0,
          },
          {
            provide: ha,
            useFactory: function () {
              return (
                (function (t) {
                  $t = t;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        Ua = [
          [],
          { provide: dr, useValue: "root" },
          {
            provide: Ho,
            useFactory: function () {
              return new Ho();
            },
            deps: [],
          },
          { provide: Oa, useClass: Ga, multi: !0, deps: [ha, Hs, Rs] },
          { provide: Oa, useClass: Ba, multi: !0, deps: [ha] },
          [],
          { provide: Na, useClass: Na, deps: [_a, Ta, Es] },
          { provide: ci, useExisting: Na },
          { provide: Pa, useExisting: Ta },
          { provide: Ta, useClass: Ta, deps: [ha] },
          { provide: Xs, useClass: Xs, deps: [Hs] },
          { provide: _a, useClass: _a, deps: [Oa, Hs] },
          [],
        ];
      let za = (() => {
        class t {
          constructor(t) {
            if (t)
              throw new Error(
                "BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead."
              );
          }
          static withServerTransition(e) {
            return {
              ngModule: t,
              providers: [
                { provide: Es, useValue: e.appId },
                { provide: ba, useExisting: Es },
                Ea,
              ],
            };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Fo(t, 12));
          }),
          (t.ɵmod = Mt({ type: t })),
          (t.ɵinj = tt({ providers: Ua, imports: [ma, pa] })),
          t
        );
      })();
      "undefined" != typeof window && window;
      var Ka,
        Ya = o("f7ga"),
        Xa = o("FyW3");
      function qa(t, e, o, n) {
        var r,
          i = arguments.length,
          s =
            i < 3
              ? e
              : null === n
              ? (n = Object.getOwnPropertyDescriptor(e, o))
              : n;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          s = Reflect.decorate(t, e, o, n);
        else
          for (var a = t.length - 1; a >= 0; a--)
            (r = t[a]) &&
              (s = (i < 3 ? r(s) : i > 3 ? r(e, o, s) : r(e, o)) || s);
        return i > 3 && s && Object.defineProperty(e, o, s), s;
      }
      function Qa(t, e) {
        if ("object" == typeof Reflect && "function" == typeof Reflect.metadata)
          return Reflect.metadata(t, e);
      }
      let Za = (() => {
          let t = (Ka = class {
            hasChildColumns() {
              return !(
                !(this.childColumns && this.childColumns.length > 0) ||
                (1 === this.childColumns.length &&
                  this.childColumns.first === this)
              );
            }
            toColDef() {
              let t = this.createColDefFromGridColumn(this);
              return (
                this.hasChildColumns() &&
                  (t.children = this.getChildColDefs(this.childColumns)),
                t
              );
            }
            getChildColDefs(t) {
              return t
                .filter((t) => !t.hasChildColumns())
                .map((t) => t.toColDef());
            }
            createColDefFromGridColumn(t) {
              return (function (t, e) {
                var o = {};
                for (var n in t)
                  Object.prototype.hasOwnProperty.call(t, n) &&
                    e.indexOf(n) < 0 &&
                    (o[n] = t[n]);
                if (
                  null != t &&
                  "function" == typeof Object.getOwnPropertySymbols
                ) {
                  var r = 0;
                  for (n = Object.getOwnPropertySymbols(t); r < n.length; r++)
                    e.indexOf(n[r]) < 0 &&
                      Object.prototype.propertyIsEnumerable.call(t, n[r]) &&
                      (o[n[r]] = t[n[r]]);
                }
                return o;
              })(t, ["childColumns"]);
            }
          });
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = Dt({
              type: t,
              selectors: [["ag-grid-column"]],
              contentQueries: function (t, e, o) {
                if ((1 & t && ms(o, Ka, 0), 2 & t)) {
                  let t;
                  ys((t = vs())) && (e.childColumns = t);
                }
              },
              inputs: {
                children: "children",
                sortingOrder: "sortingOrder",
                allowedAggFuncs: "allowedAggFuncs",
                menuTabs: "menuTabs",
                cellClassRules: "cellClassRules",
                icons: "icons",
                headerGroupComponent: "headerGroupComponent",
                headerGroupComponentFramework: "headerGroupComponentFramework",
                headerGroupComponentParams: "headerGroupComponentParams",
                cellStyle: "cellStyle",
                cellRendererParams: "cellRendererParams",
                cellEditorFramework: "cellEditorFramework",
                cellEditorParams: "cellEditorParams",
                pinnedRowCellRendererFramework:
                  "pinnedRowCellRendererFramework",
                pinnedRowCellRendererParams: "pinnedRowCellRendererParams",
                filterFramework: "filterFramework",
                filterParams: "filterParams",
                headerComponent: "headerComponent",
                headerComponentFramework: "headerComponentFramework",
                headerComponentParams: "headerComponentParams",
                floatingFilterComponent: "floatingFilterComponent",
                floatingFilterComponentParams: "floatingFilterComponentParams",
                floatingFilterComponentFramework:
                  "floatingFilterComponentFramework",
                tooltipComponent: "tooltipComponent",
                tooltipComponentParams: "tooltipComponentParams",
                tooltipComponentFramework: "tooltipComponentFramework",
                refData: "refData",
                columnsMenuParams: "columnsMenuParams",
                headerName: "headerName",
                columnGroupShow: "columnGroupShow",
                headerClass: "headerClass",
                toolPanelClass: "toolPanelClass",
                headerValueGetter: "headerValueGetter",
                groupId: "groupId",
                colId: "colId",
                sort: "sort",
                initialSort: "initialSort",
                field: "field",
                type: "type",
                tooltipField: "tooltipField",
                headerTooltip: "headerTooltip",
                cellClass: "cellClass",
                showRowGroup: "showRowGroup",
                filter: "filter",
                initialAggFunc: "initialAggFunc",
                aggFunc: "aggFunc",
                cellRenderer: "cellRenderer",
                cellEditor: "cellEditor",
                pinned: "pinned",
                initialPinned: "initialPinned",
                chartDataType: "chartDataType",
                sortedAt: "sortedAt",
                sortIndex: "sortIndex",
                initialSortIndex: "initialSortIndex",
                flex: "flex",
                initialFlex: "initialFlex",
                width: "width",
                initialWidth: "initialWidth",
                minWidth: "minWidth",
                maxWidth: "maxWidth",
                rowGroupIndex: "rowGroupIndex",
                initialRowGroupIndex: "initialRowGroupIndex",
                pivotIndex: "pivotIndex",
                initialPivotIndex: "initialPivotIndex",
                dndSourceOnRowDrag: "dndSourceOnRowDrag",
                valueGetter: "valueGetter",
                valueSetter: "valueSetter",
                filterValueGetter: "filterValueGetter",
                keyCreator: "keyCreator",
                cellRendererFramework: "cellRendererFramework",
                pinnedRowCellRenderer: "pinnedRowCellRenderer",
                valueFormatter: "valueFormatter",
                pinnedRowValueFormatter: "pinnedRowValueFormatter",
                valueParser: "valueParser",
                comparator: "comparator",
                equals: "equals",
                pivotComparator: "pivotComparator",
                suppressKeyboardEvent: "suppressKeyboardEvent",
                suppressHeaderKeyboardEvent: "suppressHeaderKeyboardEvent",
                colSpan: "colSpan",
                rowSpan: "rowSpan",
                getQuickFilterText: "getQuickFilterText",
                newValueHandler: "newValueHandler",
                onCellValueChanged: "onCellValueChanged",
                onCellClicked: "onCellClicked",
                onCellDoubleClicked: "onCellDoubleClicked",
                onCellContextMenu: "onCellContextMenu",
                rowDragText: "rowDragText",
                tooltipValueGetter: "tooltipValueGetter",
                cellRendererSelector: "cellRendererSelector",
                cellEditorSelector: "cellEditorSelector",
                suppressCellFlash: "suppressCellFlash",
                suppressColumnsToolPanel: "suppressColumnsToolPanel",
                suppressFiltersToolPanel: "suppressFiltersToolPanel",
                openByDefault: "openByDefault",
                marryChildren: "marryChildren",
                hide: "hide",
                initialHide: "initialHide",
                rowGroup: "rowGroup",
                initialRowGroup: "initialRowGroup",
                pivot: "pivot",
                initialPivot: "initialPivot",
                checkboxSelection: "checkboxSelection",
                headerCheckboxSelection: "headerCheckboxSelection",
                headerCheckboxSelectionFilteredOnly:
                  "headerCheckboxSelectionFilteredOnly",
                suppressMenu: "suppressMenu",
                suppressMovable: "suppressMovable",
                lockPosition: "lockPosition",
                lockVisible: "lockVisible",
                lockPinned: "lockPinned",
                unSortIcon: "unSortIcon",
                suppressSizeToFit: "suppressSizeToFit",
                suppressAutoSize: "suppressAutoSize",
                enableRowGroup: "enableRowGroup",
                enablePivot: "enablePivot",
                enableValue: "enableValue",
                editable: "editable",
                suppressPaste: "suppressPaste",
                suppressNavigable: "suppressNavigable",
                enableCellChangeFlash: "enableCellChangeFlash",
                rowDrag: "rowDrag",
                dndSource: "dndSource",
                autoHeight: "autoHeight",
                wrapText: "wrapText",
                sortable: "sortable",
                resizable: "resizable",
                singleClickEdit: "singleClickEdit",
                floatingFilter: "floatingFilter",
              },
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              encapsulation: 2,
            })),
            t
          );
        })(),
        $a = (() => {
          let t = class extends Ya.VanillaFrameworkOverrides {
            constructor(t) {
              super(), (this._ngZone = t);
            }
            setEmitterUsedCallback(t) {
              this.isEmitterUsed = t;
            }
            setTimeout(t, e) {
              this._ngZone.runOutsideAngular(() => {
                window.setTimeout(() => {
                  t();
                }, e);
              });
            }
            addEventListener(t, e, o, n) {
              this.isOutsideAngular(e)
                ? this._ngZone.runOutsideAngular(() => {
                    t.addEventListener(e, o, n);
                  })
                : t.addEventListener(e, o, n);
            }
            dispatchEvent(t, e) {
              this.isOutsideAngular(t)
                ? this._ngZone.runOutsideAngular(e)
                : this.isEmitterUsed(t) &&
                  (Hs.isInAngularZone() ? e() : this._ngZone.run(e));
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Fo(Hs));
            }),
            (t.ɵprov = J({
              token: t,
              factory: function (e) {
                return t.ɵfac(e);
              },
            })),
            (t = qa([Qa("design:paramtypes", [Hs])], t)),
            t
          );
        })(),
        Ja = (() => {
          let t = class extends Ya.BaseComponentWrapper {
            setViewContainerRef(t) {
              this.viewContainerRef = t;
            }
            setComponentFactoryResolver(t) {
              this.componentFactoryResolver = t;
            }
            createWrapper(t) {
              let e = this,
                o = new (class extends class {
                  init(t) {
                    (this._params = t),
                      (this._componentRef = this.createComponent()),
                      (this._agAwareComponent = this._componentRef.instance),
                      (this._frameworkComponentInstance =
                        this._componentRef.instance),
                      (this._eGui = this._componentRef.location.nativeElement),
                      this._agAwareComponent.agInit(this._params);
                  }
                  getGui() {
                    return this._eGui;
                  }
                  destroy() {
                    this._componentRef && this._componentRef.destroy();
                  }
                  getFrameworkComponentInstance() {
                    return this._frameworkComponentInstance;
                  }
                } {
                  init(t) {
                    super.init(t),
                      this._componentRef.changeDetectorRef.detectChanges();
                  }
                  createComponent() {
                    return e.createComponent(t);
                  }
                  hasMethod(t) {
                    return null != o.getFrameworkComponentInstance()[t];
                  }
                  callMethod(t, e) {
                    const n = this.getFrameworkComponentInstance();
                    return o.getFrameworkComponentInstance()[t].apply(n, e);
                  }
                  addMethod(t, e) {
                    o[t] = e;
                  }
                })();
              return o;
            }
            createComponent(t) {
              let e = this.componentFactoryResolver.resolveComponentFactory(t);
              return this.viewContainerRef.createComponent(e);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return nl(e || t);
            }),
            (t.ɵprov = J({
              token: t,
              factory: function (e) {
                return t.ɵfac(e);
              },
            })),
            t
          );
        })(),
        tl = (() => {
          let t = class {
            constructor(t, e, o, n, r) {
              (this.viewContainerRef = e),
                (this.angularFrameworkOverrides = o),
                (this.frameworkComponentWrapper = n),
                (this.componentFactoryResolver = r),
                (this._initialised = !1),
                (this._destroyed = !1),
                (this._fullyReady = Ya.AgPromise.resolve(!0)),
                (this.alignedGrids = void 0),
                (this.rowData = void 0),
                (this.columnDefs = void 0),
                (this.excelStyles = void 0),
                (this.pinnedTopRowData = void 0),
                (this.pinnedBottomRowData = void 0),
                (this.chartThemes = void 0),
                (this.components = void 0),
                (this.frameworkComponents = void 0),
                (this.rowStyle = void 0),
                (this.context = void 0),
                (this.autoGroupColumnDef = void 0),
                (this.localeText = void 0),
                (this.icons = void 0),
                (this.datasource = void 0),
                (this.serverSideDatasource = void 0),
                (this.viewportDatasource = void 0),
                (this.groupRowRendererParams = void 0),
                (this.aggFuncs = void 0),
                (this.fullWidthCellRendererParams = void 0),
                (this.defaultColGroupDef = void 0),
                (this.defaultColDef = void 0),
                (this.defaultExportParams = void 0),
                (this.columnTypes = void 0),
                (this.rowClassRules = void 0),
                (this.detailGridOptions = void 0),
                (this.detailCellRendererParams = void 0),
                (this.loadingCellRendererParams = void 0),
                (this.loadingOverlayComponentParams = void 0),
                (this.noRowsOverlayComponentParams = void 0),
                (this.popupParent = void 0),
                (this.colResizeDefault = void 0),
                (this.reduxStore = void 0),
                (this.statusBar = void 0),
                (this.sideBar = void 0),
                (this.chartThemeOverrides = void 0),
                (this.customChartThemes = void 0),
                (this.sortingOrder = void 0),
                (this.rowClass = void 0),
                (this.rowSelection = void 0),
                (this.overlayLoadingTemplate = void 0),
                (this.overlayNoRowsTemplate = void 0),
                (this.quickFilterText = void 0),
                (this.rowModelType = void 0),
                (this.editType = void 0),
                (this.domLayout = void 0),
                (this.clipboardDeliminator = void 0),
                (this.rowGroupPanelShow = void 0),
                (this.multiSortKey = void 0),
                (this.pivotColumnGroupTotals = void 0),
                (this.pivotRowTotals = void 0),
                (this.pivotPanelShow = void 0),
                (this.fillHandleDirection = void 0),
                (this.serverSideStoreType = void 0),
                (this.rowHeight = void 0),
                (this.detailRowHeight = void 0),
                (this.rowBuffer = void 0),
                (this.colWidth = void 0),
                (this.headerHeight = void 0),
                (this.groupHeaderHeight = void 0),
                (this.floatingFiltersHeight = void 0),
                (this.pivotHeaderHeight = void 0),
                (this.pivotGroupHeaderHeight = void 0),
                (this.groupDefaultExpanded = void 0),
                (this.minColWidth = void 0),
                (this.maxColWidth = void 0),
                (this.viewportRowModelPageSize = void 0),
                (this.viewportRowModelBufferSize = void 0),
                (this.autoSizePadding = void 0),
                (this.maxBlocksInCache = void 0),
                (this.maxConcurrentDatasourceRequests = void 0),
                (this.tooltipShowDelay = void 0),
                (this.cacheOverflowSize = void 0),
                (this.paginationPageSize = void 0),
                (this.cacheBlockSize = void 0),
                (this.infiniteInitialRowCount = void 0),
                (this.scrollbarWidth = void 0),
                (this.batchUpdateWaitMillis = void 0),
                (this.asyncTransactionWaitMillis = void 0),
                (this.blockLoadDebounceMillis = void 0),
                (this.keepDetailRowsCount = void 0),
                (this.undoRedoCellEditingLimit = void 0),
                (this.cellFlashDelay = void 0),
                (this.cellFadeDelay = void 0),
                (this.localeTextFunc = void 0),
                (this.groupRowInnerRenderer = void 0),
                (this.groupRowInnerRendererFramework = void 0),
                (this.dateComponent = void 0),
                (this.dateComponentFramework = void 0),
                (this.groupRowRenderer = void 0),
                (this.groupRowRendererFramework = void 0),
                (this.isExternalFilterPresent = void 0),
                (this.getRowHeight = void 0),
                (this.doesExternalFilterPass = void 0),
                (this.getRowClass = void 0),
                (this.getRowStyle = void 0),
                (this.getRowClassRules = void 0),
                (this.traverseNode = void 0),
                (this.getContextMenuItems = void 0),
                (this.getMainMenuItems = void 0),
                (this.processRowPostCreate = void 0),
                (this.processCellForClipboard = void 0),
                (this.groupRowAggNodes = void 0),
                (this.getRowNodeId = void 0),
                (this.isFullWidthCell = void 0),
                (this.fullWidthCellRenderer = void 0),
                (this.fullWidthCellRendererFramework = void 0),
                (this.processSecondaryColDef = void 0),
                (this.processSecondaryColGroupDef = void 0),
                (this.getBusinessKeyForNode = void 0),
                (this.sendToClipboard = void 0),
                (this.navigateToNextHeader = void 0),
                (this.tabToNextHeader = void 0),
                (this.navigateToNextCell = void 0),
                (this.tabToNextCell = void 0),
                (this.getDetailRowData = void 0),
                (this.processCellFromClipboard = void 0),
                (this.getDocument = void 0),
                (this.postProcessPopup = void 0),
                (this.getChildCount = void 0),
                (this.getDataPath = void 0),
                (this.loadingCellRenderer = void 0),
                (this.loadingCellRendererFramework = void 0),
                (this.loadingOverlayComponent = void 0),
                (this.loadingOverlayComponentFramework = void 0),
                (this.noRowsOverlayComponent = void 0),
                (this.noRowsOverlayComponentFramework = void 0),
                (this.detailCellRenderer = void 0),
                (this.detailCellRendererFramework = void 0),
                (this.defaultGroupSortComparator = void 0),
                (this.isRowMaster = void 0),
                (this.isRowSelectable = void 0),
                (this.postSort = void 0),
                (this.processHeaderForClipboard = void 0),
                (this.paginationNumberFormatter = void 0),
                (this.processDataFromClipboard = void 0),
                (this.getServerSideGroupKey = void 0),
                (this.isServerSideGroup = void 0),
                (this.suppressKeyboardEvent = void 0),
                (this.createChartContainer = void 0),
                (this.processChartOptions = void 0),
                (this.getChartToolbarItems = void 0),
                (this.fillOperation = void 0),
                (this.isApplyServerSideTransaction = void 0),
                (this.getServerSideStoreParams = void 0),
                (this.isServerSideGroupOpenByDefault = void 0),
                (this.suppressMakeColumnVisibleAfterUnGroup = void 0),
                (this.suppressRowClickSelection = void 0),
                (this.suppressCellSelection = void 0),
                (this.suppressHorizontalScroll = void 0),
                (this.alwaysShowHorizontalScroll = void 0),
                (this.alwaysShowVerticalScroll = void 0),
                (this.debug = void 0),
                (this.enableBrowserTooltips = void 0),
                (this.enableCellExpressions = void 0),
                (this.angularCompileRows = void 0),
                (this.angularCompileFilters = void 0),
                (this.groupSuppressAutoColumn = void 0),
                (this.groupSelectsChildren = void 0),
                (this.groupIncludeFooter = void 0),
                (this.groupIncludeTotalFooter = void 0),
                (this.groupUseEntireRow = void 0),
                (this.groupSuppressBlankHeader = void 0),
                (this.suppressMenuHide = void 0),
                (this.suppressRowDeselection = void 0),
                (this.unSortIcon = void 0),
                (this.suppressMultiSort = void 0),
                (this.singleClickEdit = void 0),
                (this.suppressLoadingOverlay = void 0),
                (this.suppressNoRowsOverlay = void 0),
                (this.suppressAutoSize = void 0),
                (this.skipHeaderOnAutoSize = void 0),
                (this.suppressParentsInRowNodes = void 0),
                (this.suppressColumnMoveAnimation = void 0),
                (this.suppressMovableColumns = void 0),
                (this.suppressFieldDotNotation = void 0),
                (this.enableRangeSelection = void 0),
                (this.enableRangeHandle = void 0),
                (this.enableFillHandle = void 0),
                (this.suppressClearOnFillReduction = void 0),
                (this.deltaSort = void 0),
                (this.suppressTouch = void 0),
                (this.suppressAsyncEvents = void 0),
                (this.allowContextMenuWithControlKey = void 0),
                (this.suppressContextMenu = void 0),
                (this.rememberGroupStateWhenNewData = void 0),
                (this.enableCellChangeFlash = void 0),
                (this.suppressDragLeaveHidesColumns = void 0),
                (this.suppressMiddleClickScrolls = void 0),
                (this.suppressPreventDefaultOnMouseWheel = void 0),
                (this.suppressCopyRowsToClipboard = void 0),
                (this.copyHeadersToClipboard = void 0),
                (this.pivotMode = void 0),
                (this.suppressAggFuncInHeader = void 0),
                (this.suppressColumnVirtualisation = void 0),
                (this.suppressAggAtRootLevel = void 0),
                (this.suppressFocusAfterRefresh = void 0),
                (this.functionsPassive = void 0),
                (this.functionsReadOnly = void 0),
                (this.animateRows = void 0),
                (this.groupSelectsFiltered = void 0),
                (this.groupRemoveSingleChildren = void 0),
                (this.groupRemoveLowestSingleChildren = void 0),
                (this.enableRtl = void 0),
                (this.suppressClickEdit = void 0),
                (this.rowDragManaged = void 0),
                (this.suppressRowDrag = void 0),
                (this.suppressMoveWhenRowDragging = void 0),
                (this.enableMultiRowDragging = void 0),
                (this.enableGroupEdit = void 0),
                (this.embedFullWidthRows = void 0),
                (this.deprecatedEmbedFullWidthRows = void 0),
                (this.suppressPaginationPanel = void 0),
                (this.floatingFilter = void 0),
                (this.groupHideOpenParents = void 0),
                (this.groupMultiAutoColumn = void 0),
                (this.pagination = void 0),
                (this.stopEditingWhenGridLosesFocus = void 0),
                (this.paginationAutoPageSize = void 0),
                (this.suppressScrollOnNewData = void 0),
                (this.purgeClosedRowNodes = void 0),
                (this.cacheQuickFilter = void 0),
                (this.deltaRowDataMode = void 0),
                (this.ensureDomOrder = void 0),
                (this.accentedSort = void 0),
                (this.suppressChangeDetection = void 0),
                (this.valueCache = void 0),
                (this.valueCacheNeverExpires = void 0),
                (this.aggregateOnlyChangedColumns = void 0),
                (this.suppressAnimationFrame = void 0),
                (this.suppressExcelExport = void 0),
                (this.suppressCsvExport = void 0),
                (this.treeData = void 0),
                (this.masterDetail = void 0),
                (this.suppressMultiRangeSelection = void 0),
                (this.enterMovesDownAfterEdit = void 0),
                (this.enterMovesDown = void 0),
                (this.suppressPropertyNamesCheck = void 0),
                (this.rowMultiSelectWithClick = void 0),
                (this.suppressEnterpriseResetOnNewColumns = void 0),
                (this.enableOldSetFilterModel = void 0),
                (this.suppressRowHoverHighlight = void 0),
                (this.suppressRowTransform = void 0),
                (this.suppressClipboardPaste = void 0),
                (this.suppressLastEmptyLineOnPaste = void 0),
                (this.serverSideSortingAlwaysResets = void 0),
                (this.reactNext = void 0),
                (this.suppressSetColumnStateEvents = void 0),
                (this.suppressColumnStateEvents = void 0),
                (this.enableCharts = void 0),
                (this.deltaColumnMode = void 0),
                (this.suppressMaintainUnsortedOrder = void 0),
                (this.enableCellTextSelection = void 0),
                (this.suppressBrowserResizeObserver = void 0),
                (this.suppressMaxRenderedRowRestriction = void 0),
                (this.excludeChildrenWhenTreeDataFiltering = void 0),
                (this.tooltipMouseTrack = void 0),
                (this.keepDetailRows = void 0),
                (this.paginateChildRows = void 0),
                (this.preventDefaultOnContextMenu = void 0),
                (this.undoRedoCellEditing = void 0),
                (this.allowDragFromColumnsToolPanel = void 0),
                (this.immutableData = void 0),
                (this.immutableColumns = void 0),
                (this.pivotSuppressAutoColumn = void 0),
                (this.suppressExpandablePivotGroups = void 0),
                (this.applyColumnDefOrder = void 0),
                (this.debounceVerticalScrollbar = void 0),
                (this.detailRowAutoHeight = void 0),
                (this.serverSideFilteringAlwaysResets = void 0),
                (this.suppressAggFilteredOnly = void 0),
                (this.showOpenedGroup = void 0),
                (this.suppressClipboardApi = void 0),
                (this.suppressModelUpdateAfterUpdateTransaction = void 0),
                (this.columnEverythingChanged = new rs()),
                (this.newColumnsLoaded = new rs()),
                (this.columnPivotModeChanged = new rs()),
                (this.columnRowGroupChanged = new rs()),
                (this.expandOrCollapseAll = new rs()),
                (this.columnPivotChanged = new rs()),
                (this.gridColumnsChanged = new rs()),
                (this.columnValueChanged = new rs()),
                (this.columnMoved = new rs()),
                (this.columnVisible = new rs()),
                (this.columnPinned = new rs()),
                (this.columnGroupOpened = new rs()),
                (this.columnResized = new rs()),
                (this.displayedColumnsChanged = new rs()),
                (this.virtualColumnsChanged = new rs()),
                (this.asyncTransactionsFlushed = new rs()),
                (this.rowGroupOpened = new rs()),
                (this.rowDataChanged = new rs()),
                (this.rowDataUpdated = new rs()),
                (this.pinnedRowDataChanged = new rs()),
                (this.rangeSelectionChanged = new rs()),
                (this.chartCreated = new rs()),
                (this.chartRangeSelectionChanged = new rs()),
                (this.chartOptionsChanged = new rs()),
                (this.chartDestroyed = new rs()),
                (this.toolPanelVisibleChanged = new rs()),
                (this.modelUpdated = new rs()),
                (this.pasteStart = new rs()),
                (this.pasteEnd = new rs()),
                (this.fillStart = new rs()),
                (this.fillEnd = new rs()),
                (this.cellClicked = new rs()),
                (this.cellDoubleClicked = new rs()),
                (this.cellMouseDown = new rs()),
                (this.cellContextMenu = new rs()),
                (this.cellValueChanged = new rs()),
                (this.rowValueChanged = new rs()),
                (this.cellFocused = new rs()),
                (this.rowSelected = new rs()),
                (this.selectionChanged = new rs()),
                (this.cellKeyDown = new rs()),
                (this.cellKeyPress = new rs()),
                (this.cellMouseOver = new rs()),
                (this.cellMouseOut = new rs()),
                (this.filterChanged = new rs()),
                (this.filterModified = new rs()),
                (this.filterOpened = new rs()),
                (this.sortChanged = new rs()),
                (this.virtualRowRemoved = new rs()),
                (this.rowClicked = new rs()),
                (this.rowDoubleClicked = new rs()),
                (this.gridReady = new rs()),
                (this.gridSizeChanged = new rs()),
                (this.viewportChanged = new rs()),
                (this.scrollbarWidthChanged = new rs()),
                (this.firstDataRendered = new rs()),
                (this.dragStarted = new rs()),
                (this.dragStopped = new rs()),
                (this.checkboxChanged = new rs()),
                (this.rowEditingStarted = new rs()),
                (this.rowEditingStopped = new rs()),
                (this.cellEditingStarted = new rs()),
                (this.cellEditingStopped = new rs()),
                (this.bodyScroll = new rs()),
                (this.animationQueueEmpty = new rs()),
                (this.heightScaleChanged = new rs()),
                (this.paginationChanged = new rs()),
                (this.componentStateChanged = new rs()),
                (this.bodyHeightChanged = new rs()),
                (this.displayedColumnsWidthChanged = new rs()),
                (this.scrollVisibilityChanged = new rs()),
                (this.columnHoverChanged = new rs()),
                (this.flashCells = new rs()),
                (this.paginationPixelOffsetChanged = new rs()),
                (this.rowDragEnter = new rs()),
                (this.rowDragMove = new rs()),
                (this.rowDragLeave = new rs()),
                (this.rowDragEnd = new rs()),
                (this.popupToFront = new rs()),
                (this.columnRowGroupChangeRequest = new rs()),
                (this.columnPivotChangeRequest = new rs()),
                (this.columnValueChangeRequest = new rs()),
                (this.columnAggFuncChangeRequest = new rs()),
                (this.keyboardFocus = new rs()),
                (this.mouseFocus = new rs()),
                (this.storeUpdated = new rs()),
                (this._nativeElement = t.nativeElement);
            }
            ngAfterViewInit() {
              this.frameworkComponentWrapper.setViewContainerRef(
                this.viewContainerRef
              ),
                this.frameworkComponentWrapper.setComponentFactoryResolver(
                  this.componentFactoryResolver
                ),
                this.angularFrameworkOverrides.setEmitterUsedCallback(
                  this.isEmitterUsed.bind(this)
                ),
                (this.gridOptions =
                  Ya.ComponentUtil.copyAttributesToGridOptions(
                    this.gridOptions,
                    this,
                    !0
                  )),
                (this.gridParams = {
                  globalEventListener: this.globalEventListener.bind(this),
                  frameworkOverrides: this.angularFrameworkOverrides,
                  providedBeanInstances: {
                    frameworkComponentWrapper: this.frameworkComponentWrapper,
                  },
                  modules: this.modules || [],
                }),
                this.columns &&
                  this.columns.length > 0 &&
                  (this.gridOptions.columnDefs = this.columns.map((t) =>
                    t.toColDef()
                  )),
                new Ya.Grid(
                  this._nativeElement,
                  this.gridOptions,
                  this.gridParams
                ),
                this.gridOptions.api && (this.api = this.gridOptions.api),
                this.gridOptions.columnApi &&
                  (this.columnApi = this.gridOptions.columnApi),
                (this._initialised = !0),
                this._fullyReady.resolveNow(null, (t) => t);
            }
            ngOnChanges(t) {
              this._initialised &&
                Ya.ComponentUtil.processOnChange(
                  t,
                  this.gridOptions,
                  this.api,
                  this.columnApi
                );
            }
            ngOnDestroy() {
              this._initialised &&
                ((this._destroyed = !0), this.api && this.api.destroy());
            }
            isEmitterUsed(t) {
              const e = this[t],
                o = !!e && e.observers && e.observers.length > 0,
                n = `on${t.charAt(0).toUpperCase()}${t.substring(1)}`;
              return o || (!!this.gridOptions && !!this.gridOptions[n]);
            }
            globalEventListener(t, e) {
              if (this._destroyed) return;
              const o = this[t];
              o && this.isEmitterUsed(t)
                ? "gridReady" === t
                  ? this._fullyReady.then((t) => {
                      o.emit(e);
                    })
                  : o.emit(e)
                : console.log(
                    "AG Grid Angular: could not find EventEmitter: " + t
                  );
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Fr(ui), Fr(Bi), Fr($a), Fr(Ja), Fr(ii));
            }),
            (t.ɵcmp = Dt({
              type: t,
              selectors: [["ag-grid-angular"]],
              contentQueries: function (t, e, o) {
                if ((1 & t && ms(o, Za, 0), 2 & t)) {
                  let t;
                  ys((t = vs())) && (e.columns = t);
                }
              },
              inputs: {
                alignedGrids: "alignedGrids",
                rowData: "rowData",
                columnDefs: "columnDefs",
                excelStyles: "excelStyles",
                pinnedTopRowData: "pinnedTopRowData",
                pinnedBottomRowData: "pinnedBottomRowData",
                chartThemes: "chartThemes",
                components: "components",
                frameworkComponents: "frameworkComponents",
                rowStyle: "rowStyle",
                context: "context",
                autoGroupColumnDef: "autoGroupColumnDef",
                localeText: "localeText",
                icons: "icons",
                datasource: "datasource",
                serverSideDatasource: "serverSideDatasource",
                viewportDatasource: "viewportDatasource",
                groupRowRendererParams: "groupRowRendererParams",
                aggFuncs: "aggFuncs",
                fullWidthCellRendererParams: "fullWidthCellRendererParams",
                defaultColGroupDef: "defaultColGroupDef",
                defaultColDef: "defaultColDef",
                defaultExportParams: "defaultExportParams",
                columnTypes: "columnTypes",
                rowClassRules: "rowClassRules",
                detailGridOptions: "detailGridOptions",
                detailCellRendererParams: "detailCellRendererParams",
                loadingCellRendererParams: "loadingCellRendererParams",
                loadingOverlayComponentParams: "loadingOverlayComponentParams",
                noRowsOverlayComponentParams: "noRowsOverlayComponentParams",
                popupParent: "popupParent",
                colResizeDefault: "colResizeDefault",
                reduxStore: "reduxStore",
                statusBar: "statusBar",
                sideBar: "sideBar",
                chartThemeOverrides: "chartThemeOverrides",
                customChartThemes: "customChartThemes",
                sortingOrder: "sortingOrder",
                rowClass: "rowClass",
                rowSelection: "rowSelection",
                overlayLoadingTemplate: "overlayLoadingTemplate",
                overlayNoRowsTemplate: "overlayNoRowsTemplate",
                quickFilterText: "quickFilterText",
                rowModelType: "rowModelType",
                editType: "editType",
                domLayout: "domLayout",
                clipboardDeliminator: "clipboardDeliminator",
                rowGroupPanelShow: "rowGroupPanelShow",
                multiSortKey: "multiSortKey",
                pivotColumnGroupTotals: "pivotColumnGroupTotals",
                pivotRowTotals: "pivotRowTotals",
                pivotPanelShow: "pivotPanelShow",
                fillHandleDirection: "fillHandleDirection",
                serverSideStoreType: "serverSideStoreType",
                rowHeight: "rowHeight",
                detailRowHeight: "detailRowHeight",
                rowBuffer: "rowBuffer",
                colWidth: "colWidth",
                headerHeight: "headerHeight",
                groupHeaderHeight: "groupHeaderHeight",
                floatingFiltersHeight: "floatingFiltersHeight",
                pivotHeaderHeight: "pivotHeaderHeight",
                pivotGroupHeaderHeight: "pivotGroupHeaderHeight",
                groupDefaultExpanded: "groupDefaultExpanded",
                minColWidth: "minColWidth",
                maxColWidth: "maxColWidth",
                viewportRowModelPageSize: "viewportRowModelPageSize",
                viewportRowModelBufferSize: "viewportRowModelBufferSize",
                autoSizePadding: "autoSizePadding",
                maxBlocksInCache: "maxBlocksInCache",
                maxConcurrentDatasourceRequests:
                  "maxConcurrentDatasourceRequests",
                tooltipShowDelay: "tooltipShowDelay",
                cacheOverflowSize: "cacheOverflowSize",
                paginationPageSize: "paginationPageSize",
                cacheBlockSize: "cacheBlockSize",
                infiniteInitialRowCount: "infiniteInitialRowCount",
                scrollbarWidth: "scrollbarWidth",
                batchUpdateWaitMillis: "batchUpdateWaitMillis",
                asyncTransactionWaitMillis: "asyncTransactionWaitMillis",
                blockLoadDebounceMillis: "blockLoadDebounceMillis",
                keepDetailRowsCount: "keepDetailRowsCount",
                undoRedoCellEditingLimit: "undoRedoCellEditingLimit",
                cellFlashDelay: "cellFlashDelay",
                cellFadeDelay: "cellFadeDelay",
                localeTextFunc: "localeTextFunc",
                groupRowInnerRenderer: "groupRowInnerRenderer",
                groupRowInnerRendererFramework:
                  "groupRowInnerRendererFramework",
                dateComponent: "dateComponent",
                dateComponentFramework: "dateComponentFramework",
                groupRowRenderer: "groupRowRenderer",
                groupRowRendererFramework: "groupRowRendererFramework",
                isExternalFilterPresent: "isExternalFilterPresent",
                getRowHeight: "getRowHeight",
                doesExternalFilterPass: "doesExternalFilterPass",
                getRowClass: "getRowClass",
                getRowStyle: "getRowStyle",
                getRowClassRules: "getRowClassRules",
                traverseNode: "traverseNode",
                getContextMenuItems: "getContextMenuItems",
                getMainMenuItems: "getMainMenuItems",
                processRowPostCreate: "processRowPostCreate",
                processCellForClipboard: "processCellForClipboard",
                groupRowAggNodes: "groupRowAggNodes",
                getRowNodeId: "getRowNodeId",
                isFullWidthCell: "isFullWidthCell",
                fullWidthCellRenderer: "fullWidthCellRenderer",
                fullWidthCellRendererFramework:
                  "fullWidthCellRendererFramework",
                processSecondaryColDef: "processSecondaryColDef",
                processSecondaryColGroupDef: "processSecondaryColGroupDef",
                getBusinessKeyForNode: "getBusinessKeyForNode",
                sendToClipboard: "sendToClipboard",
                navigateToNextHeader: "navigateToNextHeader",
                tabToNextHeader: "tabToNextHeader",
                navigateToNextCell: "navigateToNextCell",
                tabToNextCell: "tabToNextCell",
                getDetailRowData: "getDetailRowData",
                processCellFromClipboard: "processCellFromClipboard",
                getDocument: "getDocument",
                postProcessPopup: "postProcessPopup",
                getChildCount: "getChildCount",
                getDataPath: "getDataPath",
                loadingCellRenderer: "loadingCellRenderer",
                loadingCellRendererFramework: "loadingCellRendererFramework",
                loadingOverlayComponent: "loadingOverlayComponent",
                loadingOverlayComponentFramework:
                  "loadingOverlayComponentFramework",
                noRowsOverlayComponent: "noRowsOverlayComponent",
                noRowsOverlayComponentFramework:
                  "noRowsOverlayComponentFramework",
                detailCellRenderer: "detailCellRenderer",
                detailCellRendererFramework: "detailCellRendererFramework",
                defaultGroupSortComparator: "defaultGroupSortComparator",
                isRowMaster: "isRowMaster",
                isRowSelectable: "isRowSelectable",
                postSort: "postSort",
                processHeaderForClipboard: "processHeaderForClipboard",
                paginationNumberFormatter: "paginationNumberFormatter",
                processDataFromClipboard: "processDataFromClipboard",
                getServerSideGroupKey: "getServerSideGroupKey",
                isServerSideGroup: "isServerSideGroup",
                suppressKeyboardEvent: "suppressKeyboardEvent",
                createChartContainer: "createChartContainer",
                processChartOptions: "processChartOptions",
                getChartToolbarItems: "getChartToolbarItems",
                fillOperation: "fillOperation",
                isApplyServerSideTransaction: "isApplyServerSideTransaction",
                getServerSideStoreParams: "getServerSideStoreParams",
                isServerSideGroupOpenByDefault:
                  "isServerSideGroupOpenByDefault",
                suppressMakeColumnVisibleAfterUnGroup:
                  "suppressMakeColumnVisibleAfterUnGroup",
                suppressRowClickSelection: "suppressRowClickSelection",
                suppressCellSelection: "suppressCellSelection",
                suppressHorizontalScroll: "suppressHorizontalScroll",
                alwaysShowHorizontalScroll: "alwaysShowHorizontalScroll",
                alwaysShowVerticalScroll: "alwaysShowVerticalScroll",
                debug: "debug",
                enableBrowserTooltips: "enableBrowserTooltips",
                enableCellExpressions: "enableCellExpressions",
                angularCompileRows: "angularCompileRows",
                angularCompileFilters: "angularCompileFilters",
                groupSuppressAutoColumn: "groupSuppressAutoColumn",
                groupSelectsChildren: "groupSelectsChildren",
                groupIncludeFooter: "groupIncludeFooter",
                groupIncludeTotalFooter: "groupIncludeTotalFooter",
                groupUseEntireRow: "groupUseEntireRow",
                groupSuppressBlankHeader: "groupSuppressBlankHeader",
                suppressMenuHide: "suppressMenuHide",
                suppressRowDeselection: "suppressRowDeselection",
                unSortIcon: "unSortIcon",
                suppressMultiSort: "suppressMultiSort",
                singleClickEdit: "singleClickEdit",
                suppressLoadingOverlay: "suppressLoadingOverlay",
                suppressNoRowsOverlay: "suppressNoRowsOverlay",
                suppressAutoSize: "suppressAutoSize",
                skipHeaderOnAutoSize: "skipHeaderOnAutoSize",
                suppressParentsInRowNodes: "suppressParentsInRowNodes",
                suppressColumnMoveAnimation: "suppressColumnMoveAnimation",
                suppressMovableColumns: "suppressMovableColumns",
                suppressFieldDotNotation: "suppressFieldDotNotation",
                enableRangeSelection: "enableRangeSelection",
                enableRangeHandle: "enableRangeHandle",
                enableFillHandle: "enableFillHandle",
                suppressClearOnFillReduction: "suppressClearOnFillReduction",
                deltaSort: "deltaSort",
                suppressTouch: "suppressTouch",
                suppressAsyncEvents: "suppressAsyncEvents",
                allowContextMenuWithControlKey:
                  "allowContextMenuWithControlKey",
                suppressContextMenu: "suppressContextMenu",
                rememberGroupStateWhenNewData: "rememberGroupStateWhenNewData",
                enableCellChangeFlash: "enableCellChangeFlash",
                suppressDragLeaveHidesColumns: "suppressDragLeaveHidesColumns",
                suppressMiddleClickScrolls: "suppressMiddleClickScrolls",
                suppressPreventDefaultOnMouseWheel:
                  "suppressPreventDefaultOnMouseWheel",
                suppressCopyRowsToClipboard: "suppressCopyRowsToClipboard",
                copyHeadersToClipboard: "copyHeadersToClipboard",
                pivotMode: "pivotMode",
                suppressAggFuncInHeader: "suppressAggFuncInHeader",
                suppressColumnVirtualisation: "suppressColumnVirtualisation",
                suppressAggAtRootLevel: "suppressAggAtRootLevel",
                suppressFocusAfterRefresh: "suppressFocusAfterRefresh",
                functionsPassive: "functionsPassive",
                functionsReadOnly: "functionsReadOnly",
                animateRows: "animateRows",
                groupSelectsFiltered: "groupSelectsFiltered",
                groupRemoveSingleChildren: "groupRemoveSingleChildren",
                groupRemoveLowestSingleChildren:
                  "groupRemoveLowestSingleChildren",
                enableRtl: "enableRtl",
                suppressClickEdit: "suppressClickEdit",
                rowDragManaged: "rowDragManaged",
                suppressRowDrag: "suppressRowDrag",
                suppressMoveWhenRowDragging: "suppressMoveWhenRowDragging",
                enableMultiRowDragging: "enableMultiRowDragging",
                enableGroupEdit: "enableGroupEdit",
                embedFullWidthRows: "embedFullWidthRows",
                deprecatedEmbedFullWidthRows: "deprecatedEmbedFullWidthRows",
                suppressPaginationPanel: "suppressPaginationPanel",
                floatingFilter: "floatingFilter",
                groupHideOpenParents: "groupHideOpenParents",
                groupMultiAutoColumn: "groupMultiAutoColumn",
                pagination: "pagination",
                stopEditingWhenGridLosesFocus: "stopEditingWhenGridLosesFocus",
                paginationAutoPageSize: "paginationAutoPageSize",
                suppressScrollOnNewData: "suppressScrollOnNewData",
                purgeClosedRowNodes: "purgeClosedRowNodes",
                cacheQuickFilter: "cacheQuickFilter",
                deltaRowDataMode: "deltaRowDataMode",
                ensureDomOrder: "ensureDomOrder",
                accentedSort: "accentedSort",
                suppressChangeDetection: "suppressChangeDetection",
                valueCache: "valueCache",
                valueCacheNeverExpires: "valueCacheNeverExpires",
                aggregateOnlyChangedColumns: "aggregateOnlyChangedColumns",
                suppressAnimationFrame: "suppressAnimationFrame",
                suppressExcelExport: "suppressExcelExport",
                suppressCsvExport: "suppressCsvExport",
                treeData: "treeData",
                masterDetail: "masterDetail",
                suppressMultiRangeSelection: "suppressMultiRangeSelection",
                enterMovesDownAfterEdit: "enterMovesDownAfterEdit",
                enterMovesDown: "enterMovesDown",
                suppressPropertyNamesCheck: "suppressPropertyNamesCheck",
                rowMultiSelectWithClick: "rowMultiSelectWithClick",
                suppressEnterpriseResetOnNewColumns:
                  "suppressEnterpriseResetOnNewColumns",
                enableOldSetFilterModel: "enableOldSetFilterModel",
                suppressRowHoverHighlight: "suppressRowHoverHighlight",
                suppressRowTransform: "suppressRowTransform",
                suppressClipboardPaste: "suppressClipboardPaste",
                suppressLastEmptyLineOnPaste: "suppressLastEmptyLineOnPaste",
                serverSideSortingAlwaysResets: "serverSideSortingAlwaysResets",
                reactNext: "reactNext",
                suppressSetColumnStateEvents: "suppressSetColumnStateEvents",
                suppressColumnStateEvents: "suppressColumnStateEvents",
                enableCharts: "enableCharts",
                deltaColumnMode: "deltaColumnMode",
                suppressMaintainUnsortedOrder: "suppressMaintainUnsortedOrder",
                enableCellTextSelection: "enableCellTextSelection",
                suppressBrowserResizeObserver: "suppressBrowserResizeObserver",
                suppressMaxRenderedRowRestriction:
                  "suppressMaxRenderedRowRestriction",
                excludeChildrenWhenTreeDataFiltering:
                  "excludeChildrenWhenTreeDataFiltering",
                tooltipMouseTrack: "tooltipMouseTrack",
                keepDetailRows: "keepDetailRows",
                paginateChildRows: "paginateChildRows",
                preventDefaultOnContextMenu: "preventDefaultOnContextMenu",
                undoRedoCellEditing: "undoRedoCellEditing",
                allowDragFromColumnsToolPanel: "allowDragFromColumnsToolPanel",
                immutableData: "immutableData",
                immutableColumns: "immutableColumns",
                pivotSuppressAutoColumn: "pivotSuppressAutoColumn",
                suppressExpandablePivotGroups: "suppressExpandablePivotGroups",
                applyColumnDefOrder: "applyColumnDefOrder",
                debounceVerticalScrollbar: "debounceVerticalScrollbar",
                detailRowAutoHeight: "detailRowAutoHeight",
                serverSideFilteringAlwaysResets:
                  "serverSideFilteringAlwaysResets",
                suppressAggFilteredOnly: "suppressAggFilteredOnly",
                showOpenedGroup: "showOpenedGroup",
                suppressClipboardApi: "suppressClipboardApi",
                suppressModelUpdateAfterUpdateTransaction:
                  "suppressModelUpdateAfterUpdateTransaction",
                gridOptions: "gridOptions",
                modules: "modules",
              },
              outputs: {
                columnEverythingChanged: "columnEverythingChanged",
                newColumnsLoaded: "newColumnsLoaded",
                columnPivotModeChanged: "columnPivotModeChanged",
                columnRowGroupChanged: "columnRowGroupChanged",
                expandOrCollapseAll: "expandOrCollapseAll",
                columnPivotChanged: "columnPivotChanged",
                gridColumnsChanged: "gridColumnsChanged",
                columnValueChanged: "columnValueChanged",
                columnMoved: "columnMoved",
                columnVisible: "columnVisible",
                columnPinned: "columnPinned",
                columnGroupOpened: "columnGroupOpened",
                columnResized: "columnResized",
                displayedColumnsChanged: "displayedColumnsChanged",
                virtualColumnsChanged: "virtualColumnsChanged",
                asyncTransactionsFlushed: "asyncTransactionsFlushed",
                rowGroupOpened: "rowGroupOpened",
                rowDataChanged: "rowDataChanged",
                rowDataUpdated: "rowDataUpdated",
                pinnedRowDataChanged: "pinnedRowDataChanged",
                rangeSelectionChanged: "rangeSelectionChanged",
                chartCreated: "chartCreated",
                chartRangeSelectionChanged: "chartRangeSelectionChanged",
                chartOptionsChanged: "chartOptionsChanged",
                chartDestroyed: "chartDestroyed",
                toolPanelVisibleChanged: "toolPanelVisibleChanged",
                modelUpdated: "modelUpdated",
                pasteStart: "pasteStart",
                pasteEnd: "pasteEnd",
                fillStart: "fillStart",
                fillEnd: "fillEnd",
                cellClicked: "cellClicked",
                cellDoubleClicked: "cellDoubleClicked",
                cellMouseDown: "cellMouseDown",
                cellContextMenu: "cellContextMenu",
                cellValueChanged: "cellValueChanged",
                rowValueChanged: "rowValueChanged",
                cellFocused: "cellFocused",
                rowSelected: "rowSelected",
                selectionChanged: "selectionChanged",
                cellKeyDown: "cellKeyDown",
                cellKeyPress: "cellKeyPress",
                cellMouseOver: "cellMouseOver",
                cellMouseOut: "cellMouseOut",
                filterChanged: "filterChanged",
                filterModified: "filterModified",
                filterOpened: "filterOpened",
                sortChanged: "sortChanged",
                virtualRowRemoved: "virtualRowRemoved",
                rowClicked: "rowClicked",
                rowDoubleClicked: "rowDoubleClicked",
                gridReady: "gridReady",
                gridSizeChanged: "gridSizeChanged",
                viewportChanged: "viewportChanged",
                scrollbarWidthChanged: "scrollbarWidthChanged",
                firstDataRendered: "firstDataRendered",
                dragStarted: "dragStarted",
                dragStopped: "dragStopped",
                checkboxChanged: "checkboxChanged",
                rowEditingStarted: "rowEditingStarted",
                rowEditingStopped: "rowEditingStopped",
                cellEditingStarted: "cellEditingStarted",
                cellEditingStopped: "cellEditingStopped",
                bodyScroll: "bodyScroll",
                animationQueueEmpty: "animationQueueEmpty",
                heightScaleChanged: "heightScaleChanged",
                paginationChanged: "paginationChanged",
                componentStateChanged: "componentStateChanged",
                bodyHeightChanged: "bodyHeightChanged",
                displayedColumnsWidthChanged: "displayedColumnsWidthChanged",
                scrollVisibilityChanged: "scrollVisibilityChanged",
                columnHoverChanged: "columnHoverChanged",
                flashCells: "flashCells",
                paginationPixelOffsetChanged: "paginationPixelOffsetChanged",
                rowDragEnter: "rowDragEnter",
                rowDragMove: "rowDragMove",
                rowDragLeave: "rowDragLeave",
                rowDragEnd: "rowDragEnd",
                popupToFront: "popupToFront",
                columnRowGroupChangeRequest: "columnRowGroupChangeRequest",
                columnPivotChangeRequest: "columnPivotChangeRequest",
                columnValueChangeRequest: "columnValueChangeRequest",
                columnAggFuncChangeRequest: "columnAggFuncChangeRequest",
                keyboardFocus: "keyboardFocus",
                mouseFocus: "mouseFocus",
                storeUpdated: "storeUpdated",
              },
              features: [oi([$a, Ja]), Yt],
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              encapsulation: 2,
            })),
            (t = qa([Qa("design:paramtypes", [ui, Bi, $a, Ja, ii])], t)),
            t
          );
        })();
      var el;
      let ol = (() => {
        let t = (el = class {
          static withComponents(t) {
            return {
              ngModule: el,
              providers: [{ provide: wo, useValue: t, multi: !0 }],
            };
          }
          static forRoot(t) {
            return {
              ngModule: el,
              providers: [{ provide: wo, useValue: t, multi: !0 }],
            };
          }
        });
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Mt({ type: t })),
          (t.ɵinj = tt({ imports: [[]] })),
          t
        );
      })();
      const nl = go(Ja);
      let rl = (() => {
        class t {
          constructor() {
            (this.title = "angular-tabular-reporting"),
              (this.results = []),
              (this.myColumnDefs =  {column.headers} ),
              (this.defaultColDef = {
                sortable: !0,
                filter: "agMultiColumnFilter",
                filterParams: {
                  buttons: ["clear", "apply"],
                  showTooltips: !0,
                  applyMiniFilterWhileTyping: !0,
                },
                floatingFilter: !0,
                menuTabs: ["generalMenuTab", "filterMenuTab", "columnsMenuTab"],
                animateRows: !0,
                resizable: !0,
                minWidth: 90,
                enableValue: !0,
                enableRowGroup: !0,
                enablePivot: !0,
                cellStyle: (t) =>
                  1 === t.value || "1" === t.value
                    ? { color: "white", backgroundColor: "#660000" }
                    : String(t.value).startsWith("United")
                    ? { color: "white", backgroundColor: "#006600" }
                    : String(t.value).startsWith("FAIL")
                    ? { color: "white", backgroundColor: "#660000" }                    
                    : null,
              }),
              (this.gridOptions = {
                rowData: this.results,
                colWidth: 120,
                columnDefs: this.myColumnDefs,
                defaultColDef: this.defaultColDef,
              }),
              (this.gridApi = Ya.GridApi),
              this.generate_json(),
              (this.tooltipShowDelay = 100),
              (this.statusBar = {
                statusPanels: [
                  {
                    statusPanel: "agTotalAndFilteredRowCountComponent",
                    align: "left",
                  },
                  { statusPanel: "agTotalRowCountComponent", align: "left" },
                  {
                    statusPanel: "agAggregationComponent",
                    align: "left",
                    statusPanelParams: { aggFuncs: ["count", "sum", "avg"] },
                  },
                ],
              }),
              (this.sideBar = {
                hiddenByDefault: !1,
                defaultToolPanel: "columns",
                toolPanels: ["columns", "filters"],
              });
          }
          onGridReady(t) {
            (this.gridApi = t.api),
              (this.gridColumnApi = t.gridColumnApi),
              t.api.sizeColumnsToFit();
          }
          onFirstDataRendered(t) {
            t.api.sizeColumnsToFit();
          }
          generate_json() {
            let t = String(Xa).split("|"),
              e = t[0].split(",");
            for (let o = 1; o < t.length; o++) {
              let n = {},
                r = t[o].split(",");
              for (let t = 0; t < e.length; t++) n[e[t].trim()] = r[t].trim();
              this.results.push(n);
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = Dt({
            type: t,
            selectors: [["app-root"]],
            decls: 2,
            vars: 7,
            consts: [
              [
                "rowSelection",
                "multiple",
                1,
                "ag-theme-balham-dark",
                2,
                "width",
                "100%",
                "height",
                "660px",
                3,
                "gridOptions",
                "statusBar",
                "enableRangeSelection",
                "sideBar",
                "tooltipShowDelay",
                "enableCharts",
                "onFirstDataRendered",
                "gridReady",
              ],
              ["id", "myChart", 1, "ag-theme-alpine", "my-chart"],
            ],
            template: function (t, e) {
              1 & t &&
                (Ir(0, "ag-grid-angular", 0),
                kr("onFirstDataRendered", function () {
                  return e.onFirstDataRendered;
                })("gridReady", function (t) {
                  return e.onGridReady(t);
                }),
                Lr(),
                Ir(1, "div", 1, undefined),
                Lr()),
                2 & t &&
                  Nr("gridOptions", e.gridOptions)("statusBar", e.statusBar)(
                    "enableRangeSelection",
                    !0
                  )("sideBar", !0)("tooltipShowDelay", e.tooltipShowDelay)(
                    "sideBar",
                    e.sideBar
                  )("enableCharts", !0);
            },
            directives: [tl],
            styles: [""],
          })),
          t
        );
      })();
      o("WZ4y");
      let il = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Mt({ type: t, bootstrap: [rl] })),
          (t.ɵinj = tt({
            providers: [],
            imports: [[za, ol.withComponents([])]],
          })),
          t
        );
      })();
      (function () {
        if (ta)
          throw new Error("Cannot enable prod mode after platform setup.");
        Js = !1;
      })(),
        ja()
          .bootstrapModule(il)
          .catch((t) => console.error(t));
    },
    zn8P: function (t, e) {
      function o(t) {
        return Promise.resolve().then(function () {
          var e = new Error("Cannot find module '" + t + "'");
          throw ((e.code = "MODULE_NOT_FOUND"), e);
        });
      }
      (o.keys = function () {
        return [];
      }),
        (o.resolve = o),
        (t.exports = o),
        (o.id = "zn8P");
    },
  },
  [[0, 0]],
]);
